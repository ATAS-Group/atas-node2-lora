
;; Function calcRxWindow (calcRxWindow, funcdef_no=46, decl_uid=3576, cgraph_uid=46, symbol_order=53)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 70: def dominates all uses has unique first use
Reg 72: def dominates all uses has unique first use
Reg 74 uninteresting
Reg 78 uninteresting
Reg 46 uninteresting
Reg 49 uninteresting
Reg 50 uninteresting
Reg 52 uninteresting
Reg 82 uninteresting
Reg 53: local to bb 5 def dominates all uses has unique first use
Reg 85 uninteresting
Reg 55 uninteresting
Reg 57 uninteresting
Reg 58: local to bb 5 def dominates all uses has unique first use
Reg 87 uninteresting
Ignoring reg 68, has equiv memory
Reg 60 uninteresting
Reg 90 uninteresting
Reg 65 uninteresting
Reg 92 uninteresting
Reg 93 uninteresting
Found def insn 45 for 53 to be not moveable
Examining insn 51, def for 58
  all ok
Reg 70 not local to one basic block
Reg 72 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 68: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 78: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 82: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 85: (insn_list:REG_DEP_TRUE 48 (nil))
init_insns for 87: (insn_list:REG_DEP_TRUE 57 (nil))

Pass 0 for finding pseudo/allocno costs

    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r93,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r92,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r90,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r87,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r85,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r82,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r78,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r74,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r72,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r70,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r67,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r65,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r49,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r46,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r93,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r92,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r65,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a4(r67,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a5(r82,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a6(r90,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a9(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r87,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a11(r72,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a13(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a14(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a15(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r85,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r52,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a18(r70,l0) costs: ACC_REG:9660,9660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:51520,51520 MEM:12880,12880
  a19(r50,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a20(r78,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:2440,2440
  a21(r49,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a22(r46,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a23(r74,l0) costs: ACC_REG:3510,3510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18720,18720 MEM:1560,1560

   Insn 78(l0): point = 0
   Insn 77(l0): point = 2
   Insn 70(l0): point = 4
   Insn 69(l0): point = 6
   Insn 67(l0): point = 8
   Insn 64(l0): point = 10
   Insn 63(l0): point = 12
   Insn 60(l0): point = 14
   Insn 59(l0): point = 16
   Insn 58(l0): point = 18
   Insn 57(l0): point = 20
   Insn 51(l0): point = 22
   Insn 50(l0): point = 24
   Insn 49(l0): point = 26
   Insn 48(l0): point = 28
   Insn 45(l0): point = 30
   Insn 43(l0): point = 32
   Insn 36(l0): point = 35
   Insn 35(l0): point = 37
   Insn 34(l0): point = 39
   Insn 30(l0): point = 41
   Insn 29(l0): point = 43
   Insn 27(l0): point = 45
   Insn 25(l0): point = 47
   Insn 81(l0): point = 50
   Insn 18(l0): point = 52
   Insn 13(l0): point = 54
   Insn 11(l0): point = 56
   Insn 9(l0): point = 59
   Insn 5(l0): point = 61
   Insn 3(l0): point = 63
 a0(r93): [3..4]
 a1(r42): [50..54] [3..41]
 a2(r92): [5..6]
 a3(r65): [5..8]
 a4(r67): [9..18]
 a5(r82): [11..32]
 a6(r90): [11..12]
 a7(r60): [13..14]
 a8(r68): [15..16]
 a9(r58): [15..22]
 a10(r87): [19..20]
 a11(r72): [19..61]
 a12(r57): [23..24]
 a13(r43): [50..52] [23..35]
 a14(r53): [25..30]
 a15(r55): [25..26]
 a16(r85): [27..28]
 a17(r52): [36..37]
 a18(r70): [59..63] [38..49]
 a19(r50): [38..39]
 a20(r78): [40..47]
 a21(r49): [42..43]
 a22(r46): [44..45]
 a23(r74): [53..56]
Compressing live ranges: from 66 to 34 - 51%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r42): [28..31] [0..23]
 a2(r92): [2..3]
 a3(r65): [2..3]
 a4(r67): [4..9]
 a5(r82): [4..17]
 a6(r90): [4..5]
 a7(r60): [6..7]
 a8(r68): [8..9]
 a9(r58): [8..11]
 a10(r87): [10..11]
 a11(r72): [10..33]
 a12(r57): [12..13]
 a13(r43): [28..29] [12..17]
 a14(r53): [14..17]
 a15(r55): [14..15]
 a16(r85): [16..17]
 a17(r52): [18..19]
 a18(r70): [32..33] [20..27]
 a19(r50): [20..21]
 a20(r78): [22..27]
 a21(r49): [24..25]
 a22(r46): [26..27]
 a23(r74): [30..31]
+++Allocating 192 bytes for conflict table (uncompressed size 192)
;; a0(r93,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r42,l0) conflicts: a0(r93,l0) a2(r92,l0) a3(r65,l0) a6(r90,l0) a4(r67,l0) a5(r82,l0) a7(r60,l0) a8(r68,l0) a9(r58,l0) a10(r87,l0) a11(r72,l0) a12(r57,l0) a13(r43,l0) a15(r55,l0) a14(r53,l0) a16(r85,l0) a17(r52,l0) a19(r50,l0) a18(r70,l0) a20(r78,l0) a23(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r92,l0) conflicts: a1(r42,l0) a3(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r65,l0) conflicts: a1(r42,l0) a2(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r67,l0) conflicts: a1(r42,l0) a6(r90,l0) a5(r82,l0) a7(r60,l0) a8(r68,l0) a9(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r82,l0) conflicts: a1(r42,l0) a6(r90,l0) a4(r67,l0) a7(r60,l0) a8(r68,l0) a9(r58,l0) a10(r87,l0) a11(r72,l0) a12(r57,l0) a13(r43,l0) a15(r55,l0) a14(r53,l0) a16(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r90,l0) conflicts: a1(r42,l0) a4(r67,l0) a5(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r60,l0) conflicts: a1(r42,l0) a4(r67,l0) a5(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r68,l0) conflicts: a1(r42,l0) a4(r67,l0) a5(r82,l0) a9(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r58,l0) conflicts: a1(r42,l0) a4(r67,l0) a5(r82,l0) a8(r68,l0) a10(r87,l0) a11(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r87,l0) conflicts: a1(r42,l0) a5(r82,l0) a9(r58,l0) a11(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r72,l0) conflicts: a1(r42,l0) a5(r82,l0) a9(r58,l0) a10(r87,l0) a12(r57,l0) a13(r43,l0) a15(r55,l0) a14(r53,l0) a16(r85,l0) a17(r52,l0) a19(r50,l0) a18(r70,l0) a20(r78,l0) a21(r49,l0) a22(r46,l0) a23(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r57,l0) conflicts: a1(r42,l0) a5(r82,l0) a11(r72,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r43,l0) conflicts: a1(r42,l0) a5(r82,l0) a11(r72,l0) a12(r57,l0) a15(r55,l0) a14(r53,l0) a16(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r53,l0) conflicts: a1(r42,l0) a5(r82,l0) a11(r72,l0) a13(r43,l0) a15(r55,l0) a16(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r55,l0) conflicts: a1(r42,l0) a5(r82,l0) a11(r72,l0) a13(r43,l0) a14(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r85,l0) conflicts: a1(r42,l0) a5(r82,l0) a11(r72,l0) a13(r43,l0) a14(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r52,l0) conflicts: a1(r42,l0) a11(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r70,l0) conflicts: a1(r42,l0) a11(r72,l0) a19(r50,l0) a20(r78,l0) a21(r49,l0) a22(r46,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a19(r50,l0) conflicts: a1(r42,l0) a11(r72,l0) a18(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r78,l0) conflicts: a1(r42,l0) a11(r72,l0) a18(r70,l0) a21(r49,l0) a22(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r49,l0) conflicts: a11(r72,l0) a18(r70,l0) a20(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r46,l0) conflicts: a11(r72,l0) a18(r70,l0) a20(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r74,l0) conflicts: a1(r42,l0) a11(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a12(r57)<->a14(r53)@125:shuffle
  cp1:a12(r57)<->a15(r55)@125:shuffle
  cp2:a9(r58)<->a12(r57)@125:shuffle
  cp3:a9(r58)<->a13(r43)@125:shuffle
  cp4:a4(r67)<->a11(r72)@125:shuffle
  cp5:a4(r67)<->a10(r87)@125:shuffle
  cp6:a7(r60)<->a9(r58)@125:shuffle
  cp7:a7(r60)<->a8(r68)@125:shuffle
  cp8:a6(r90)<->a7(r60)@125:shuffle
  cp9:a0(r93)<->a3(r65)@125:shuffle
  cp10:a0(r93)<->a2(r92)@125:shuffle
  cp11:a21(r49)<->a22(r46)@76:shuffle
  cp12:a1(r42)<->a21(r49)@76:shuffle
  cp13:a17(r52)<->a18(r70)@76:shuffle
  cp14:a17(r52)<->a19(r50)@76:shuffle
  cp15:a13(r43)<->a17(r52)@76:shuffle
  pref0:a18(r70)<-hr2@2000
  pref1:a11(r72)<-hr3@2000
  pref2:a0(r93)<-hr2@125
  pref3:a1(r42)<-hr2@125
  regions=1, blocks=6, points=34
    allocnos=24 (big 0), copies=16, conflicts=0, ranges=27

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r93 1r42 2r92 3r65 4r67 5r82 6r90 7r60 8r68 9r58 10r87 11r72 12r57 13r43 14r53 15r55 16r85 17r52 18r70 19r50 20r78 21r49 22r46 23r74
    modified regnos: 42 43 46 49 50 52 53 55 57 58 60 65 67 68 70 72 74 78 82 85 87 90 92 93
    border:
    Pressure: AR_REGS=6
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@320040
          2:( 2 4-15)@33760
      Allocno a0r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r70 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a19r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a12r57-a14r53 (freq=125):
        Result (freq=4000): a12r57(2000) a14r53(2000)
      Forming thread by copy 2:a9r58-a12r57 (freq=125):
        Result (freq=6000): a9r58(2000) a12r57(2000) a14r53(2000)
      Forming thread by copy 4:a4r67-a11r72 (freq=125):
        Result (freq=5000): a4r67(3000) a11r72(2000)
      Forming thread by copy 6:a7r60-a9r58 (freq=125):
        Result (freq=8000): a7r60(2000) a9r58(2000) a12r57(2000) a14r53(2000)
      Forming thread by copy 8:a6r90-a7r60 (freq=125):
        Result (freq=10000): a6r90(2000) a7r60(2000) a9r58(2000) a12r57(2000) a14r53(2000)
      Forming thread by copy 9:a0r93-a3r65 (freq=125):
        Result (freq=5000): a0r93(2000) a3r65(3000)
      Forming thread by copy 11:a21r49-a22r46 (freq=76):
        Result (freq=2440): a21r49(1220) a22r46(1220)
      Forming thread by copy 13:a17r52-a18r70 (freq=76):
        Result (freq=4440): a17r52(1220) a18r70(3220)
      Forming thread by copy 15:a13r43-a17r52 (freq=76):
        Result (freq=6440): a13r43(2000) a17r52(1220) a18r70(3220)
      Pushing a23(r74,l0)(cost 0)
      Pushing a19(r50,l0)(cost 0)
      Pushing a20(r78,l0)(cost 0)
        Making a11(r72,l0) colorable
      Pushing a16(r85,l0)(cost 0)
      Pushing a15(r55,l0)(cost 0)
      Pushing a10(r87,l0)(cost 0)
      Pushing a8(r68,l0)(cost 0)
      Pushing a2(r92,l0)(cost 0)
      Forming thread by copy 12:a1r42-a21r49 (freq=76):
        Result (freq=4440): a1r42(2000) a21r49(1220) a22r46(1220)
        Making a1(r42,l0) colorable
      Pushing a22(r46,l0)(cost 0)
      Pushing a21(r49,l0)(cost 0)
      Pushing a5(r82,l0)(cost 0)
      Pushing a1(r42,l0)(cost 8250)
      Pushing a11(r72,l0)(cost 12000)
      Pushing a4(r67,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a3(r65,l0)(cost 0)
      Pushing a17(r52,l0)(cost 0)
      Pushing a13(r43,l0)(cost 0)
      Pushing a18(r70,l0)(cost 0)
      Pushing a14(r53,l0)(cost 0)
      Pushing a12(r57,l0)(cost 0)
      Pushing a9(r58,l0)(cost 0)
      Pushing a7(r60,l0)(cost 0)
      Pushing a6(r90,l0)(cost 0)
      Popping a6(r90,l0)  -- assign reg 8
      Popping a7(r60,l0)  -- assign reg 8
      Popping a9(r58,l0)  -- assign reg 8
      Popping a12(r57,l0)  -- assign reg 8
      Popping a14(r53,l0)  -- assign reg 9
      Popping a18(r70,l0)  -- assign reg 2
      Popping a13(r43,l0)  -- assign reg 10
      Popping a17(r52,l0)  -- assign reg 8
      Popping a3(r65,l0)  -- assign reg 8
      Popping a0(r93,l0)  -- assign reg 8
      Popping a4(r67,l0)  -- assign reg 3
      Popping a11(r72,l0)  -- assign reg 3
      Popping a1(r42,l0)  -- assign reg 11
      Popping a5(r82,l0)  -- assign reg 2
      Popping a21(r49,l0)  -- assign reg 11
      Popping a22(r46,l0)  -- assign reg 11
      Popping a2(r92,l0)  -- assign reg 2
      Popping a8(r68,l0)  -- assign reg 9
      Popping a10(r87,l0)  -- assign reg 9
      Popping a15(r55,l0)  -- assign reg 8
      Popping a16(r85,l0)  -- assign reg 8
      Popping a20(r78,l0)  -- assign reg 8
      Popping a19(r50,l0)  -- assign reg 8
      Popping a23(r74,l0)  -- assign reg 2
Assigning 2 to a0r93
Disposition:
    1:r42  l0    11   13:r43  l0    10   22:r46  l0    11   21:r49  l0    11
   19:r50  l0     8   17:r52  l0     8   14:r53  l0     9   15:r55  l0     8
   12:r57  l0     8    9:r58  l0     8    7:r60  l0     8    3:r65  l0     8
    4:r67  l0     3    8:r68  l0     9   18:r70  l0     2   11:r72  l0     3
   23:r74  l0     2   20:r78  l0     8    5:r82  l0     2   16:r85  l0     8
   10:r87  l0     9    6:r90  l0     8    2:r92  l0     2    0:r93  l0     2
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


calcRxWindow

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,5u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,4u} r43={2d,4u} r46={1d,1u} r49={1d,1u} r50={1d,1u} r52={1d,1u} r53={1d,1u} r55={1d,1u} r57={1d,1u} r58={1d,2u} r60={1d,1u} r65={1d,2u} r67={1d,2u,1e} r68={1d,1u} r70={1d,3u} r72={1d,3u} r74={1d,2u} r78={1d,2u} r82={1d,3u} r85={1d,1u} r87={1d,1u} r90={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 102{37d,64u,1e} in 44{44 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 70 72
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 70 [ secs ])
        (reg:SI 2 a2 [ secs ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:392 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ secs ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 72 [ dr ])
        (reg:SI 3 a3 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:392 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ dr ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 9 6 10 2 (set (pc)
        (if_then_else (ne (reg/v:SI 70 [ secs ])
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:394 56 {*btrue}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 23)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 70 72

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(1){ }u10(7){ }u11(16){ }u12(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 43 74
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 74)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC0") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:396 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 12 11 13 3 NOTE_INSN_DELETED)
(insn 13 12 15 3 (set (reg/v:SI 42 [ rxoff ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 74)
                    (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:396 35 {extendhisi2_internal}
     (nil))
(debug_insn 15 13 17 3 (var_location:SI rxoff (reg/v:SI 42 [ rxoff ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:396 -1
     (nil))
(note 17 15 18 3 NOTE_INSN_DELETED)
(insn 18 17 20 3 (set (reg/v:SI 43 [ err ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 74)
                    (const_int 182 [0xb6])) [0 LMIC.lastDriftDiff+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:397 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg/f:SI 74)
        (nil)))
(debug_insn 20 18 81 3 (var_location:SI err (reg/v:SI 43 [ err ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:397 -1
     (nil))
(jump_insn 81 20 82 3 (set (pc)
        (label_ref 38)) 78 {jump}
     (nil)
 -> 38)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 72

(barrier 82 81 23)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(1){ }u20(7){ }u21(16){ }u22(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 70 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 70
;; lr  def 	 42 43 46 49 50 52 78
(code_label 23 82 24 4 2 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:SI 78)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC0") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:400 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 26 25 27 4 NOTE_INSN_DELETED)
(insn 27 26 29 4 (set (reg:SI 46 [ D.5944 ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 78)
                    (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:400 35 {extendhisi2_internal}
     (nil))
(insn 29 27 30 4 (set (reg:SI 49 [ D.5945 ])
        (mult:SI (reg:SI 46 [ D.5944 ])
            (reg/v:SI 70 [ secs ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:400 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.5944 ])
        (nil)))
(insn 30 29 31 4 (set (reg/v:SI 42 [ rxoff ])
        (ashiftrt:SI (reg:SI 49 [ D.5945 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:400 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 49 [ D.5945 ])
        (nil)))
(debug_insn 31 30 33 4 (var_location:SI rxoff (reg/v:SI 42 [ rxoff ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:400 -1
     (nil))
(note 33 31 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (set (reg:SI 50 [ D.5944 ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 78)
                    (const_int 182 [0xb6])) [0 LMIC.lastDriftDiff+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:401 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg/f:SI 78)
        (nil)))
(insn 35 34 36 4 (set (reg:SI 52 [ D.5945 ])
        (mult:SI (reg:SI 50 [ D.5944 ])
            (reg/v:SI 70 [ secs ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:401 9 {mulsi3}
     (expr_list:REG_DEAD (reg/v:SI 70 [ secs ])
        (expr_list:REG_DEAD (reg:SI 50 [ D.5944 ])
            (nil))))
(insn 36 35 37 4 (set (reg/v:SI 43 [ err ])
        (ashiftrt:SI (reg:SI 52 [ D.5945 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:401 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 52 [ D.5945 ])
        (nil)))
(debug_insn 37 36 38 4 (var_location:SI err (reg/v:SI 43 [ err ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:401 -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 72

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 72
;; lr  def 	 2 [a2] 53 55 57 58 60 65 67 68 82 85 87 90 92 93
(code_label 38 37 39 5 3 "" [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 40 39 41 5 (var_location:SI err (reg/v:SI 43 [ err ])) -1
     (nil))
(debug_insn 41 40 42 5 (var_location:SI rxoff (reg/v:SI 42 [ rxoff ])) -1
     (nil))
(debug_insn 42 41 43 5 (var_location:QI rxsyms (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:403 -1
     (nil))
(insn 43 42 44 5 (set (reg/f:SI 82)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC0") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 44 43 45 5 NOTE_INSN_DELETED)
(insn 45 44 48 5 (set (reg:SI 53 [ D.5944 ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 82)
                    (const_int 184 [0xb8])) [0 LMIC.maxDriftDiff+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 35 {extendhisi2_internal}
     (nil))
(insn 48 45 49 5 (set:SI (reg/f:SI 85)
        (plus:SI (reg/f:SI 82)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 49 48 50 5 (set (reg:SI 55 [ D.5946 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 85)
                    (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (nil)))
(insn 50 49 51 5 (set (reg:SI 57 [ D.5945 ])
        (mult:SI (reg:SI 55 [ D.5946 ])
            (reg:SI 53 [ D.5944 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 55 [ D.5946 ])
        (expr_list:REG_DEAD (reg:SI 53 [ D.5944 ])
            (nil))))
(insn 51 50 52 5 (set (reg/v:SI 58 [ err ])
        (plus:SI (reg/v:SI 43 [ err ])
            (reg:SI 57 [ D.5945 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.5945 ])
        (expr_list:REG_DEAD (reg/v:SI 43 [ err ])
            (nil))))
(debug_insn 52 51 80 5 (var_location:SI err (reg/v:SI 58 [ err ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:404 -1
     (nil))
(debug_insn 80 52 54 5 (var_location:SI D#4 (reg/v:SI 72 [ dr ])) -1
     (nil))
(debug_insn 54 80 55 5 (var_location:SI table (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:405 -1
     (nil))
(debug_insn 55 54 56 5 (var_location:SI index (reg/v:SI 72 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:405 -1
     (nil))
(note 56 55 57 5 NOTE_INSN_DELETED)
(insn 57 56 58 5 (set (reg/f:SI 87)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC1") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)
        (nil)))
(insn 58 57 59 5 (set (reg/f:SI 67 [ D.5949 ])
        (plus:SI (mult:SI (reg/v:SI 72 [ dr ])
                (const_int 4 [0x4]))
            (reg/f:SI 87))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 2 {*addx}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_DEAD (reg/v:SI 72 [ dr ])
            (nil))))
(insn 59 58 60 5 (set (reg:SI 68 [ D.5948 ])
        (mem:SI (reg/f:SI 67 [ D.5949 ]) [0 *_34+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/f:SI 67 [ D.5949 ]) [0 *_34+0 S4 A32])
        (nil)))
(insn 60 59 63 5 (set (reg:SI 60 [ D.5945 ])
        (div:SI (reg/v:SI 58 [ err ])
            (reg:SI 68 [ D.5948 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:405 17 {divsi3}
     (expr_list:REG_DEAD (reg:SI 68 [ D.5948 ])
        (expr_list:REG_DEAD (reg/v:SI 58 [ err ])
            (nil))))
(insn 63 60 64 5 (set (reg:SI 90)
        (plus:SI (reg:SI 60 [ D.5945 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:405 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 60 [ D.5945 ])
        (nil)))
(insn 64 63 65 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (subreg:QI (reg:SI 90) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:405 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_DEAD (reg/f:SI 82)
            (nil))))
(debug_insn 65 64 66 5 (var_location:SI table (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:407 -1
     (nil))
(debug_insn 66 65 67 5 (var_location:SI index (debug_expr:SI D#4)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:407 -1
     (nil))
(insn 67 66 69 5 (set (reg:SI 65 [ D.5948 ])
        (mem:SI (reg/f:SI 67 [ D.5949 ]) [0 *_34+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 67 [ D.5949 ])
        (nil)))
(insn 69 67 70 5 (set (reg:SI 92)
        (ashift:SI (reg:SI 65 [ D.5948 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:407 51 {ashlsi3_internal}
     (nil))
(insn 70 69 72 5 (set (reg:SI 93)
        (minus:SI (reg:SI 65 [ D.5948 ])
            (reg:SI 92))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:407 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg:SI 65 [ D.5948 ])
            (nil))))
(note 72 70 77 5 NOTE_INSN_DELETED)
(insn 77 72 78 5 (set (reg/i:SI 2 a2)
        (plus:SI (reg/v:SI 42 [ rxoff ])
            (reg:SI 93))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:408 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_DEAD (reg/v:SI 42 [ rxoff ])
            (nil))))
(insn 78 77 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:408 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function calcBcnRxWindowFromMillis (calcBcnRxWindowFromMillis, funcdef_no=47, decl_uid=3583, cgraph_uid=47, symbol_order=54)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
scanning new insn with uid = 101.
verify found no changes in insn with uid = 101.
deleting insn with uid = 97.
scanning new insn with uid = 102.
verify found no changes in insn with uid = 102.
deleting insn with uid = 25.
deleting insn with uid = 100.
deleting insn with uid = 98.
Deleted 2 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 58: def dominates all uses has unique first use
Reg 62: local to bb 3 def dominates all uses has unique first use
Reg 63 uninteresting
Reg 67 uninteresting
Reg 73 uninteresting
Reg 75 uninteresting
Reg 77 uninteresting
Reg 106: def dominates all uses has unique first use
Reg 113 uninteresting
Reg 111: def dominates all uses has unique first use
Reg 115 uninteresting
Reg 93 uninteresting
Reg 94 uninteresting
Reg 96 uninteresting
Reg 98 uninteresting
Ignoring reg 52, has equiv memory
Reg 100 uninteresting
Reg 53: local to bb 6 def dominates all uses has unique first use
Reg 101 uninteresting
Reg 55 uninteresting
Reg 56 uninteresting
Ignoring reg 57, has equiv memory
Examining insn 79, def for 53
  found unusable input reg 52.
Reg 58 not local to one basic block
Ignoring reg 62 with equiv init insn
Reg 106 not local to one basic block
Reg 111 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 63: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 73: (insn_list:REG_DEP_TRUE 102 (nil))
init_insns for 77: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 97: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 80 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 114: (insn_list:REG_DEP_TRUE 98 (nil))

Pass 0 for finding pseudo/allocno costs

    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r115,l0) best AR_REGS, allocno AR_REGS
    r113: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r113,l0) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r111,l0) best AR_REGS, allocno AR_REGS
    r106: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r106,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r101,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r100,l0) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r98,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r97,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r96,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r94,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r93,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r92,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r86,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r82,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r77,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r73,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r67,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r62,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r51,l0) best AR_REGS, allocno AR_REGS

  a0(r97,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a1(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r51,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a6(r101,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r100,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a8(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a9(r98,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r96,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r94,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r92,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a13(r115,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a14(r93,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a15(r106,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r86,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a17(r111,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a18(r82,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a19(r113,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a20(r77,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a21(r58,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a22(r67,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:9760,9760
  a23(r75,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a24(r73,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a25(r74,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a26(r63,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:9760,9760
  a27(r62,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:4880,4880

   Insn 85(l0): point = 0
   Insn 83(l0): point = 2
   Insn 82(l0): point = 4
   Insn 81(l0): point = 6
   Insn 80(l0): point = 8
   Insn 79(l0): point = 10
   Insn 78(l0): point = 12
   Insn 77(l0): point = 14
   Insn 75(l0): point = 16
   Insn 74(l0): point = 18
   Insn 73(l0): point = 20
   Insn 72(l0): point = 22
   Insn 71(l0): point = 24
   Insn 68(l0): point = 26
   Insn 67(l0): point = 28
   Insn 66(l0): point = 30
   Insn 65(l0): point = 32
   Insn 99(l0): point = 34
   Insn 61(l0): point = 36
   Insn 94(l0): point = 38
   Insn 93(l0): point = 40
   Insn 59(l0): point = 42
   Insn 53(l0): point = 45
   Insn 52(l0): point = 48
   Insn 51(l0): point = 50
   Insn 50(l0): point = 52
   Insn 101(l0): point = 54
   Insn 43(l0): point = 56
   Insn 42(l0): point = 58
   Insn 36(l0): point = 60
   Insn 28(l0): point = 63
   Insn 27(l0): point = 65
   Insn 102(l0): point = 67
   Insn 26(l0): point = 69
   Insn 20(l0): point = 71
   Insn 18(l0): point = 73
   Insn 16(l0): point = 75
   Insn 13(l0): point = 77
   Insn 12(l0): point = 79
   Insn 11(l0): point = 81
   Insn 9(l0): point = 84
   Insn 3(l0): point = 86
 a0(r97): [1..20]
 a1(r57): [1..2]
 a2(r56): [3..4]
 a3(r53): [3..10]
 a4(r55): [5..6]
 a5(r51): [7..22]
 a6(r101): [7..8]
 a7(r100): [11..12]
 a8(r52): [11..14]
 a9(r98): [17..18]
 a10(r96): [23..24]
 a11(r94): [25..26]
 a12(r92): [32..32] [27..28]
 a13(r115): [29..34]
 a14(r93): [29..30]
 a15(r106): [39..56]
 a16(r86): [48..50] [39..45]
 a17(r111): [41..52]
 a18(r82): [49..58]
 a19(r113): [53..54]
 a20(r77): [57..60]
 a21(r58): [57..86]
 a22(r67): [64..73]
 a23(r75): [64..65]
 a24(r73): [66..67]
 a25(r74): [66..69]
 a26(r63): [72..79]
 a27(r62): [74..81]
Compressing live ranges: from 89 to 38 - 42%
Ranges after the compression:
 a0(r97): [0..11]
 a1(r57): [0..1]
 a2(r56): [2..3]
 a3(r53): [2..7]
 a4(r55): [4..5]
 a5(r51): [6..11]
 a6(r101): [6..7]
 a7(r100): [8..9]
 a8(r52): [8..9]
 a9(r98): [10..11]
 a10(r96): [12..13]
 a11(r94): [14..15]
 a12(r92): [20..20] [16..17]
 a13(r115): [18..21]
 a14(r93): [18..19]
 a15(r106): [22..27]
 a16(r86): [22..25]
 a17(r111): [22..25]
 a18(r82): [24..29]
 a19(r113): [26..27]
 a20(r77): [28..29]
 a21(r58): [28..37]
 a22(r67): [30..35]
 a23(r75): [30..31]
 a24(r73): [32..33]
 a25(r74): [32..33]
 a26(r63): [34..37]
 a27(r62): [36..37]
+++Allocating 208 bytes for conflict table (uncompressed size 224)
;; a0(r97,l0) conflicts: a1(r57,l0) a2(r56,l0) a3(r53,l0) a4(r55,l0) a6(r101,l0) a5(r51,l0) a7(r100,l0) a8(r52,l0) a9(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r57,l0) conflicts: a0(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r56,l0) conflicts: a0(r97,l0) a3(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r53,l0) conflicts: a0(r97,l0) a2(r56,l0) a4(r55,l0) a6(r101,l0) a5(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r55,l0) conflicts: a0(r97,l0) a3(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r51,l0) conflicts: a0(r97,l0) a3(r53,l0) a6(r101,l0) a7(r100,l0) a8(r52,l0) a9(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r101,l0) conflicts: a0(r97,l0) a3(r53,l0) a5(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r100,l0) conflicts: a0(r97,l0) a5(r51,l0) a8(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r52,l0) conflicts: a0(r97,l0) a5(r51,l0) a7(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r98,l0) conflicts: a0(r97,l0) a5(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r96,l0) conflicts:;; a11(r94,l0) conflicts:;; a12(r92,l0) conflicts: a13(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r115,l0) conflicts: a12(r92,l0) a14(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r93,l0) conflicts: a13(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r106,l0) conflicts: a16(r86,l0) a17(r111,l0) a18(r82,l0) a19(r113,l0)
;;     total conflict hard regs: 10 12 13
;;     conflict hard regs: 10 12 13

;; a16(r86,l0) conflicts: a17(r111,l0) a15(r106,l0) a18(r82,l0)
;;     total conflict hard regs: 10 12 13
;;     conflict hard regs: 10 12 13

;; a17(r111,l0) conflicts: a16(r86,l0) a15(r106,l0) a18(r82,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a18(r82,l0) conflicts: a16(r86,l0) a17(r111,l0) a15(r106,l0) a19(r113,l0) a20(r77,l0) a21(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r113,l0) conflicts: a15(r106,l0) a18(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r77,l0) conflicts: a18(r82,l0) a21(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r58,l0) conflicts: a18(r82,l0) a20(r77,l0) a23(r75,l0) a22(r67,l0) a24(r73,l0) a25(r74,l0) a26(r63,l0) a27(r62,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a22(r67,l0) conflicts: a21(r58,l0) a23(r75,l0) a24(r73,l0) a25(r74,l0) a26(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r75,l0) conflicts: a21(r58,l0) a22(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r73,l0) conflicts: a21(r58,l0) a22(r67,l0) a25(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r74,l0) conflicts: a21(r58,l0) a22(r67,l0) a24(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r63,l0) conflicts: a21(r58,l0) a22(r67,l0) a27(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r62,l0) conflicts: a21(r58,l0) a26(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a12(r92)<->a14(r93)@125:shuffle
  cp1:a11(r94)<->a12(r92)@125:shuffle
  cp2:a10(r96)<->a11(r94)@125:shuffle
  cp3:a5(r51)<->a10(r96)@125:shuffle
  cp4:a3(r53)<->a7(r100)@125:shuffle
  cp5:a3(r53)<->a8(r52)@125:shuffle
  cp6:a4(r55)<->a6(r101)@125:shuffle
  cp7:a4(r55)<->a5(r51)@125:shuffle
  cp8:a2(r56)<->a4(r55)@125:shuffle
  cp9:a1(r57)<->a2(r56)@125:shuffle
  cp10:a1(r57)<->a3(r53)@125:shuffle
  cp11:a15(r106)<->a20(r77)@125:shuffle
  cp12:a15(r106)<->a21(r58)@125:shuffle
  cp13:a17(r111)<->a19(r113)@125:shuffle
  cp14:a22(r67)<->a27(r62)@76:shuffle
  cp15:a23(r75)<->a24(r73)@76:shuffle
  cp16:a23(r75)<->a25(r74)@76:shuffle
  pref0:a17(r111)<-hr10@2000
  pref1:a13(r115)<-hr10@2000
  pref2:a21(r58)<-hr2@2000
  pref3:a15(r106)<-hr11@125
  pref4:a16(r86)<-hr11@125
  regions=1, blocks=7, points=38
    allocnos=28 (big 0), copies=17, conflicts=0, ranges=29

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r97 1r57 2r56 3r53 4r55 5r51 6r101 7r100 8r52 9r98 10r96 11r94 12r92 13r115 14r93 15r106 16r86 17r111 18r82 19r113 20r77 21r58 22r67 23r75 24r73 25r74 26r63 27r62
    modified regnos: 51 52 53 55 56 57 58 62 63 67 73 74 75 77 82 86 92 93 94 96 97 98 100 101 106 111 113 115
    border:
    Pressure: AR_REGS=5
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@390080
          2:( 2-11 14 15)@32000
            3:( 2-9 11 14 15)@37000
      Allocno a0r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r98 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r106 of AR_REGS(14) has 11 avail. regs  2-9 11 14 15, node:  2-9 11 14 15 (confl regs =  0 1 10 12 13 16-34)
      Allocno a16r86 of AR_REGS(14) has 11 avail. regs  2-9 11 14 15, node:  2-9 11 14 15 (confl regs =  0 1 10 12 13 16-34)
      Allocno a17r111 of AR_REGS(14) has 12 avail. regs  2-11 14 15, node:  2-11 14 15 (confl regs =  0 1 12 13 16-34)
      Allocno a18r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r113 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r58 of AR_REGS(14) has 13 avail. regs  2 4-15, ^node:  2-15 (confl regs =  0 1 3 16-34)
      Allocno a22r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a12r92-a14r93 (freq=125):
        Result (freq=5000): a12r92(3000) a14r93(2000)
      Forming thread by copy 1:a11r94-a12r92 (freq=125):
        Result (freq=7000): a11r94(2000) a12r92(3000) a14r93(2000)
      Forming thread by copy 2:a10r96-a11r94 (freq=125):
        Result (freq=9000): a10r96(2000) a11r94(2000) a12r92(3000) a14r93(2000)
      Forming thread by copy 3:a5r51-a10r96 (freq=125):
        Result (freq=12000): a5r51(3000) a10r96(2000) a11r94(2000) a12r92(3000) a14r93(2000)
      Forming thread by copy 4:a3r53-a7r100 (freq=125):
        Result (freq=4000): a3r53(2000) a7r100(2000)
      Forming thread by copy 6:a4r55-a6r101 (freq=125):
        Result (freq=4000): a4r55(2000) a6r101(2000)
      Forming thread by copy 8:a2r56-a4r55 (freq=125):
        Result (freq=6000): a2r56(2000) a4r55(2000) a6r101(2000)
      Forming thread by copy 9:a1r57-a2r56 (freq=125):
        Result (freq=8000): a1r57(2000) a2r56(2000) a4r55(2000) a6r101(2000)
      Forming thread by copy 11:a15r106-a20r77 (freq=125):
        Result (freq=5000): a15r106(2000) a20r77(3000)
      Forming thread by copy 13:a17r111-a19r113 (freq=125):
        Result (freq=5000): a17r111(3000) a19r113(2000)
      Forming thread by copy 14:a22r67-a27r62 (freq=76):
        Result (freq=4880): a22r67(2440) a27r62(2440)
      Forming thread by copy 15:a23r75-a24r73 (freq=76):
        Result (freq=2440): a23r75(1220) a24r73(1220)
      Pushing a25(r74,l0)(cost 0)
      Pushing a9(r98,l0)(cost 0)
      Pushing a8(r52,l0)(cost 0)
      Pushing a26(r63,l0)(cost 0)
      Pushing a24(r73,l0)(cost 0)
      Pushing a23(r75,l0)(cost 0)
      Pushing a16(r86,l0)(cost 0)
      Pushing a21(r58,l0)(cost 0)
      Pushing a18(r82,l0)(cost 0)
      Pushing a7(r100,l0)(cost 0)
      Pushing a3(r53,l0)(cost 0)
      Pushing a0(r97,l0)(cost 0)
      Pushing a27(r62,l0)(cost 0)
      Pushing a22(r67,l0)(cost 0)
      Pushing a19(r113,l0)(cost 0)
      Pushing a17(r111,l0)(cost 0)
      Pushing a15(r106,l0)(cost 0)
      Pushing a20(r77,l0)(cost 0)
      Pushing a13(r115,l0)(cost 0)
      Pushing a6(r101,l0)(cost 0)
      Pushing a4(r55,l0)(cost 0)
      Pushing a2(r56,l0)(cost 0)
      Pushing a1(r57,l0)(cost 0)
      Pushing a14(r93,l0)(cost 0)
      Pushing a11(r94,l0)(cost 0)
      Pushing a10(r96,l0)(cost 0)
      Pushing a12(r92,l0)(cost 0)
      Pushing a5(r51,l0)(cost 0)
      Popping a5(r51,l0)  -- assign reg 8
      Popping a12(r92,l0)  -- assign reg 8
      Popping a10(r96,l0)  -- assign reg 8
      Popping a11(r94,l0)  -- assign reg 8
      Popping a14(r93,l0)  -- assign reg 8
      Popping a1(r57,l0)  -- assign reg 8
      Popping a2(r56,l0)  -- assign reg 8
      Popping a4(r55,l0)  -- assign reg 8
      Popping a6(r101,l0)  -- assign reg 9
      Popping a13(r115,l0)  -- assign reg 10
      Popping a20(r77,l0)  -- assign reg 8
      Popping a15(r106,l0)  -- assign reg 8
      Popping a17(r111,l0)  -- assign reg 10
      Popping a19(r113,l0)  -- assign reg 10
      Popping a22(r67,l0)  -- assign reg 9
      Popping a27(r62,l0)  -- assign reg 9
      Popping a0(r97,l0)  -- assign reg 10
      Popping a3(r53,l0)  -- assign reg 11
      Popping a7(r100,l0)  -- assign reg 9
      Popping a18(r82,l0)  -- assign reg 9
      Popping a21(r58,l0)  -- assign reg 2
      Popping a16(r86,l0)  -- assign reg 11
      Popping a23(r75,l0)  -- assign reg 8
      Popping a24(r73,l0)  -- assign reg 8
      Popping a26(r63,l0)  -- assign reg 8
      Popping a8(r52,l0)  -- assign reg 11
      Popping a9(r98,l0)  -- assign reg 2
      Popping a25(r74,l0)  -- assign reg 10
Disposition:
    5:r51  l0     8    8:r52  l0    11    3:r53  l0    11    4:r55  l0     8
    2:r56  l0     8    1:r57  l0     8   21:r58  l0     2   27:r62  l0     9
   26:r63  l0     8   22:r67  l0     9   24:r73  l0     8   25:r74  l0    10
   23:r75  l0     8   20:r77  l0     8   18:r82  l0     9   16:r86  l0    11
   12:r92  l0     8   14:r93  l0     8   11:r94  l0     8   10:r96  l0     8
    0:r97  l0    10    9:r98  l0     2    7:r100 l0     9    6:r101 l0     9
   15:r106 l0     8   17:r111 l0    10   19:r113 l0    10   13:r115 l0    10
New iteration of spill/restore move
+++Costs: overall -12250, reg -12250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


calcBcnRxWindowFromMillis

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={2d} r1={1d,7u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,6u} r8={1d} r9={1d} r10={2d,2u} r11={3d,1u} r12={2d,1u} r13={2d,1u} r14={1d} r15={1d} r16={1d,6u} r17={1d,5u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r51={1d,2u,1e} r52={1d,1u} r53={1d,1u} r55={1d,1u} r56={1d,1u} r57={1d,1u} r58={1d,2u} r62={1d,3u} r63={1d,3u} r67={1d,3u} r73={1d,1u} r74={1d,1u,1e} r75={1d,1u} r77={1d,2u} r82={1d,2u,1e} r86={2d,1u} r92={2d,1u} r93={1d,1u} r94={1d,1u} r96={1d,1u} r97={1d,3u,2e} r98={1d,1u} r100={1d,1u} r101={1d,1u} r106={1d,1u} r111={1d,2u} r113={1d,1u} r115={1d,4u} 
;;    total ref usage 152{72d,75u,5e} in 45{44 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 58
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 58 [ ms ])
        (reg:SI 2 a2 [ ms ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:412 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ ms ])
        (nil)))
(note 5 3 6 2 NOTE_INSN_DELETED)
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 9 6 10 2 (set (pc)
        (if_then_else (eq (reg:SI 3 a3 [ ini ])
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:413 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ ini ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 29)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              4 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(1){ }u10(7){ }u11(16){ }u12(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 62 63 67 73 74 75
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 62)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC2") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:414 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 12 11 13 3 (set (reg:HI 63)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:414 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 13 12 16 3 (set (mem/j/c:HI (plus:SI (reg/f:SI 62)
                (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32])
        (reg:HI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:414 45 {movhi_internal}
     (nil))
(insn 16 13 18 3 (set (mem/j/c:HI (plus:SI (reg/f:SI 62)
                (const_int 184 [0xb8])) [0 LMIC.maxDriftDiff+0 S2 A32])
        (reg:HI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:415 45 {movhi_internal}
     (nil))
(insn 18 16 20 3 (set:SI (reg/f:SI 67)
        (plus:SI (reg/f:SI 62)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:416 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 62)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 20 18 26 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 67)
                (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8])
        (subreg:QI (reg:HI 63) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:416 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:HI 63)
        (nil)))
(insn 26 20 102 3 (set (reg:QI 74 [ LMIC.bcninfo.flags ])
        (mem/j/c:QI (plus:SI (reg/f:SI 67)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:417 46 {movqi_internal}
     (nil))
(insn 102 26 27 3 (set (reg:QI 73)
        (const_int 12 [0xc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:417 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 12 [0xc])
        (nil)))
(insn 27 102 28 3 (set (reg:SI 75)
        (ior:SI (subreg:SI (reg:QI 74 [ LMIC.bcninfo.flags ]) 0)
            (subreg:SI (reg:QI 73) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:417 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 74 [ LMIC.bcninfo.flags ])
        (expr_list:REG_DEAD (reg:QI 73)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:QI 74 [ LMIC.bcninfo.flags ]) 0)
                    (const_int 12 [0xc]))
                (nil)))))
(insn 28 27 29 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 67)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg:QI (reg:SI 75) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:417 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 75)
        (expr_list:REG_DEAD (reg/f:SI 67)
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58
;; lr  def 	 77 82 86 106 111 113
(code_label 29 28 30 4 5 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (var_location:SI table (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)) -1
     (nil))
(debug_insn 32 31 33 4 (var_location:SI index (const_int 3 [0x3])) -1
     (nil))
(debug_insn 33 32 36 4 (var_location:SI hsym (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:419 -1
     (nil))
(insn 36 33 42 4 (set (reg:SI 77)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC3") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 42 36 43 4 (set (reg:SI 82)
        (mult:SI (reg/v:SI 58 [ ms ])
            (reg:SI 77))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 9 {mulsi3}
     (nil))
(insn 43 42 101 4 (set (reg:SI 106 [ D.5953+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 58 [ ms ]))
                    (zero_extend:DI (reg:SI 77)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 8 {umulsi3_highpart}
     (expr_list:REG_DEAD (reg:SI 77)
        (expr_list:REG_DEAD (reg/v:SI 58 [ ms ])
            (nil))))
(insn 101 43 50 4 (set (reg:SI 113)
        (const_int 999 [0x3e7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 999 [0x3e7])
        (nil)))
(insn 50 101 51 4 (set (reg:SI 111)
        (plus:SI (reg:SI 82)
            (reg:SI 113))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 82)
                (const_int 999 [0x3e7]))
            (nil))))
(insn 51 50 52 4 (set (reg:SI 86)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 52 51 88 4 (set (pc)
        (if_then_else (ltu (reg:SI 111)
                (reg:SI 82))
            (label_ref 54)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 82)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 54)
;;  succ:       6 [50.0%] 
;;              5 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 86 106 111

;; basic block 5, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(1){ }u40(7){ }u41(16){ }u42(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 106 111
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 86
(note 88 52 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 88 54 5 (set (reg:SI 86)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 86 106 111

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(1){ }u44(7){ }u45(16){ }u46(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 86 106 111
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 86 106 111
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 51 52 53 55 56 57 92 93 94 96 97 98 100 101 115
(code_label 54 53 89 6 6 "" [1 uses])
(note 89 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 56 89 59 6 NOTE_INSN_DELETED)
(insn 59 56 93 6 (set (reg:DI 12 a12)
        (const_int 1000 [0x3e8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 43 {movdi_internal}
     (expr_list:REG_EQUAL (const_int 1000 [0x3e8])
        (nil)))
(insn 93 59 94 6 (set (reg:SI 10 a10)
        (reg:SI 111)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 94 93 61 6 (set (reg:SI 11 a11 [+4 ])
        (plus:SI (reg:SI 86)
            (reg:SI 106 [ D.5953+4 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 106 [ D.5953+4 ])
        (expr_list:REG_DEAD (reg:SI 86)
            (nil))))
(call_insn/u 61 94 99 6 (set (reg:DI 10 a10)
        (call (mem:SI (symbol_ref:SI ("__divdi3") [flags 0x41]) [0  S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a12)
        (expr_list:REG_UNUSED (reg:SI 11 a11)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (use (reg:DI 12 a12))
        (expr_list (use (reg:DI 10 a10))
            (nil))))
(insn 99 61 65 6 (set (reg:SI 115)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 65 99 66 6 (set (reg:SI 92 [ D.5954 ])
        (reg:SI 115)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_UNUSED (reg:SI 92 [ D.5954 ])
        (nil)))
(insn 66 65 67 6 (set (reg:SI 93)
        (plus:SI (reg:SI 115)
            (const_int 127 [0x7f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 1 {addsi3}
     (nil))
(insn 67 66 68 6 (set (reg:SI 92 [ D.5954 ])
        (if_then_else:SI (lt (reg:SI 115)
                (const_int 0 [0]))
            (reg:SI 93)
            (reg:SI 115))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_DEAD (reg:SI 93)
            (nil))))
(insn 68 67 71 6 (set (reg:SI 94)
        (ashiftrt:SI (reg:SI 92 [ D.5954 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 92 [ D.5954 ])
        (nil)))
(insn 71 68 72 6 (set (reg:SI 96)
        (plus:SI (reg:SI 94)
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 72 71 73 6 (set (reg:SI 51 [ D.5952 ])
        (zero_extend:SI (subreg:QI (reg:SI 96) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 73 72 74 6 (set (reg/f:SI 97)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC2") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 74 73 75 6 (set:SI (reg/f:SI 98)
        (plus:SI (reg/f:SI 97)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 75 74 77 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 98)
                (const_int 141 [0x8d])) [0 LMIC.bcnRxsyms+0 S1 A8])
        (subreg/s/v:QI (reg:SI 51 [ D.5952 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:420 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 77 75 78 6 (set (reg:SI 52 [ D.5954 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 97)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 97)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (nil)))
(insn 78 77 79 6 (set (reg:SI 100)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC6") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 8000000 [0x7a1200])
        (nil)))
(insn 79 78 80 6 (set (reg:SI 53 [ D.5954 ])
        (plus:SI (reg:SI 52 [ D.5954 ])
            (reg:SI 100))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_DEAD (reg:SI 52 [ D.5954 ])
            (nil))))
(insn 80 79 81 6 (set (reg:SI 101)
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))
(insn 81 80 82 6 (set (reg:SI 55 [ D.5954 ])
        (minus:SI (reg:SI 101)
            (reg:SI 51 [ D.5952 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg:SI 51 [ D.5952 ])
            (expr_list:REG_EQUAL (minus:SI (const_int 8 [0x8])
                    (reg:SI 51 [ D.5952 ]))
                (nil)))))
(insn 82 81 83 6 (set (reg:SI 56 [ D.5954 ])
        (ashift:SI (reg:SI 55 [ D.5954 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 55 [ D.5954 ])
        (nil)))
(insn 83 82 85 6 (set (reg:SI 57 [ D.5954 ])
        (plus:SI (reg:SI 53 [ D.5954 ])
            (reg:SI 56 [ D.5954 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 56 [ D.5954 ])
        (expr_list:REG_DEAD (reg:SI 53 [ D.5954 ])
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 97)
                        (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])
                (nil)))))
(insn 85 83 0 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 97)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])
        (reg:SI 57 [ D.5954 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:421 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (expr_list:REG_DEAD (reg:SI 57 [ D.5954 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function rxschedNext (rxschedNext, funcdef_no=49, decl_uid=3593, cgraph_uid=49, symbol_order=56)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 68: def dominates all uses has unique first use
Ignoring reg 43, has equiv memory
Reg 44 uninteresting
Reg 45 uninteresting
Reg 69 uninteresting
Reg 70 uninteresting
Reg 49 uninteresting
Reg 50 uninteresting
Reg 71 uninteresting
Reg 51 uninteresting
Reg 72 uninteresting
Ignoring reg 53, has equiv memory
Reg 73 uninteresting
Reg 55 uninteresting
Reg 56 uninteresting
Reg 57: local to bb 6 def dominates all uses has unique first use
Reg 74 uninteresting
Reg 76: local to bb 6 def dominates all uses has unique first use
Ignoring reg 64, has equiv memory
Reg 78 uninteresting
Reg 65 uninteresting
Examining insn 40, def for 57
  found unusable input reg 53.
Reg 68 not local to one basic block
Examining insn 44, def for 76
  all ok
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6 5 4
;; 2 succs { 3 }
;; 3 succs { 7 4 }
;; 4 succs { 8 5 }
;; 5 succs { 9 6 }
;; 6 succs { 3 }
;; 7 succs { 10 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 64: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 73: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 78: (insn_list:REG_DEP_TRUE 52 (nil))

Pass 0 for finding pseudo/allocno costs

    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r78,l1) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r76,l1) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r74,l1) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r73,l1) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r72,l1) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r71,l1) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r70,l1) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r69,l1) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r68,l1) best AR_REGS, allocno AR_REGS
    a1 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r67,l1) best AR_REGS, allocno AR_REGS
    a2 (r67,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r65,l1) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r64,l1) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r57,l1) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r56,l1) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r55,l1) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r53,l1) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r51,l1) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r50,l1) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r49,l1) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r47,l1) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r45,l1) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r44,l1) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r43,l1) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:522,522 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2784,2784 MEM:696,696
  a1(r68,l0) costs: ACC_REG:261,3261 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1392,17392 MEM:348,4348
  a2(r67,l0) costs: ACC_REG:261,28491 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1392,151952 MEM:348,37988
  a3(r67,l1) costs: ACC_REG:28230,28230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:150560,150560 MEM:37640,37640
  a4(r68,l1) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a5(r65,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a6(r78,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:0,0
  a7(r64,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a8(r57,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a9(r76,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a10(r74,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a11(r51,l1) costs: ACC_REG:13932,13932 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:74304,74304 MEM:18576,18576
  a12(r50,l1) costs: ACC_REG:8376,8376 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:44672,44672 MEM:11168,11168
  a13(r56,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a14(r53,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:0,0
  a15(r55,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:7296,7296
  a16(r73,l1) costs: ACC_REG:5472,5472 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29184,29184 MEM:0,0
  a17(r72,l1) costs: ACC_REG:5640,5640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30080,30080 MEM:7520,7520
  a18(r71,l1) costs: ACC_REG:5640,5640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30080,30080 MEM:7520,7520
  a19(r45,l1) costs: ACC_REG:8640,8640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:46080,46080 MEM:11520,11520
  a20(r49,l1) costs: ACC_REG:5640,5640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30080,30080 MEM:7520,7520
  a21(r47,l1) costs: ACC_REG:5640,5640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30080,30080 MEM:7520,7520
  a22(r70,l1) costs: ACC_REG:5640,5640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30080,30080 MEM:7520,7520
  a23(r69,l1) costs: ACC_REG:5820,5820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31040,31040 MEM:7760,7760
  a24(r44,l1) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a25(r43,l1) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 65(l0): point = 0
   Insn 64(l0): point = 2
   Insn 7(l0): point = 5
   Insn 81(l0): point = 8
   Insn 6(l0): point = 10
   Insn 79(l0): point = 13
   Insn 5(l0): point = 15
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
   Insn 14(l1): point = 23
   Insn 13(l1): point = 25
   Insn 12(l1): point = 27
   Insn 77(l1): point = 30
   Insn 54(l1): point = 32
   Insn 53(l1): point = 34
   Insn 52(l1): point = 36
   Insn 51(l1): point = 38
   Insn 50(l1): point = 40
   Insn 48(l1): point = 42
   Insn 47(l1): point = 44
   Insn 46(l1): point = 46
   Insn 44(l1): point = 48
   Insn 42(l1): point = 50
   Insn 40(l1): point = 52
   Insn 39(l1): point = 54
   Insn 38(l1): point = 56
   Insn 37(l1): point = 58
   Insn 35(l1): point = 60
   Insn 33(l1): point = 63
   Insn 32(l1): point = 65
   Insn 30(l1): point = 67
   Insn 28(l1): point = 69
   Insn 27(l1): point = 71
   Insn 25(l1): point = 73
   Insn 24(l1): point = 75
   Insn 23(l1): point = 77
   Insn 22(l1): point = 79
   Insn 20(l1): point = 82
   Insn 19(l1): point = 84
   Insn 16(l1): point = 86
 a0(r42): [13..15] [8..10] [3..5]
 a1(r68): [18..18]
 a2(r67): [18..20]
 a3(r67): [23..88]
 a4(r68): [23..88]
 a5(r65): [33..34]
 a6(r78): [35..36]
 a7(r64): [39..40]
 a8(r57): [41..52]
 a9(r76): [45..48]
 a10(r74): [49..50]
 a11(r51): [51..69]
 a12(r50): [51..73]
 a13(r56): [53..54]
 a14(r53): [53..60]
 a15(r55): [55..56]
 a16(r73): [57..58]
 a17(r72): [64..65]
 a18(r71): [70..71]
 a19(r45): [72..86]
 a20(r49): [74..75]
 a21(r47): [76..79]
 a22(r70): [76..77]
 a23(r69): [83..84]
 a24(r44): [24..25]
 a25(r43): [26..27]
 Rebuilding regno allocno list for 78
 Rebuilding regno allocno list for 76
 Rebuilding regno allocno list for 74
 Rebuilding regno allocno list for 73
 Rebuilding regno allocno list for 72
 Rebuilding regno allocno list for 71
 Rebuilding regno allocno list for 70
 Rebuilding regno allocno list for 69
      Moving ranges of a4r68 to a1r68:  [23..88]
      Moving ranges of a3r67 to a2r67:  [23..88]
 Rebuilding regno allocno list for 65
 Rebuilding regno allocno list for 64
 Rebuilding regno allocno list for 57
 Rebuilding regno allocno list for 56
 Rebuilding regno allocno list for 55
 Rebuilding regno allocno list for 53
 Rebuilding regno allocno list for 51
 Rebuilding regno allocno list for 50
 Rebuilding regno allocno list for 49
 Rebuilding regno allocno list for 47
 Rebuilding regno allocno list for 45
 Rebuilding regno allocno list for 44
 Rebuilding regno allocno list for 43
Compressing live ranges: from 89 to 42 - 47%
Ranges after the compression:
 a0(r42): [0..5]
 a1(r68): [8..41] [6..6]
 a2(r67): [6..41]
 a5(r65): [12..13]
 a6(r78): [14..15]
 a7(r64): [16..17]
 a8(r57): [18..23]
 a9(r76): [18..19]
 a10(r74): [20..21]
 a11(r51): [22..31]
 a12(r50): [22..35]
 a13(r56): [24..25]
 a14(r53): [24..29]
 a15(r55): [26..27]
 a16(r73): [28..29]
 a17(r72): [30..31]
 a18(r71): [32..33]
 a19(r45): [34..41]
 a20(r49): [36..37]
 a21(r47): [38..39]
 a22(r70): [38..39]
 a23(r69): [40..41]
 a24(r44): [8..9]
 a25(r43): [10..11]
+++Allocating 184 bytes for conflict table (uncompressed size 208)
;; a0(r42,l0) conflicts:;; a1(r68,l0) conflicts: a2(r67,l0) a24(r44,l0) a25(r43,l0) a5(r65,l0) a6(r78,l0) a7(r64,l0) a9(r76,l0) a8(r57,l0) a10(r74,l0) a11(r51,l0) a12(r50,l0) a13(r56,l0) a14(r53,l0) a15(r55,l0) a16(r73,l0) a17(r72,l0) a18(r71,l0) a19(r45,l0) a20(r49,l0) a21(r47,l0) a22(r70,l0) a23(r69,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r67,l0) conflicts: a1(r68,l0) a24(r44,l0) a25(r43,l0) a5(r65,l0) a6(r78,l0) a7(r64,l0) a9(r76,l0) a8(r57,l0) a10(r74,l0) a11(r51,l0) a12(r50,l0) a13(r56,l0) a14(r53,l0) a15(r55,l0) a16(r73,l0) a17(r72,l0) a18(r71,l0) a19(r45,l0) a20(r49,l0) a21(r47,l0) a22(r70,l0) a23(r69,l0)
;;     total conflict hard regs: 3 8-15
;;     conflict hard regs: 3 8-15

;; a5(r65,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r78,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r64,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r57,l0) conflicts: a1(r68,l0) a2(r67,l0) a9(r76,l0) a10(r74,l0) a11(r51,l0) a12(r50,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a9(r76,l0) conflicts: a1(r68,l0) a2(r67,l0) a8(r57,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a10(r74,l0) conflicts: a1(r68,l0) a2(r67,l0) a8(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r51,l0) conflicts: a1(r68,l0) a2(r67,l0) a8(r57,l0) a12(r50,l0) a13(r56,l0) a14(r53,l0) a15(r55,l0) a16(r73,l0) a17(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r50,l0) conflicts: a1(r68,l0) a2(r67,l0) a8(r57,l0) a11(r51,l0) a13(r56,l0) a14(r53,l0) a15(r55,l0) a16(r73,l0) a17(r72,l0) a18(r71,l0) a19(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r56,l0) conflicts: a1(r68,l0) a2(r67,l0) a11(r51,l0) a12(r50,l0) a14(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r53,l0) conflicts: a1(r68,l0) a2(r67,l0) a11(r51,l0) a12(r50,l0) a13(r56,l0) a15(r55,l0) a16(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r55,l0) conflicts: a1(r68,l0) a2(r67,l0) a11(r51,l0) a12(r50,l0) a14(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r73,l0) conflicts: a1(r68,l0) a2(r67,l0) a11(r51,l0) a12(r50,l0) a14(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r72,l0) conflicts: a1(r68,l0) a2(r67,l0) a11(r51,l0) a12(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r71,l0) conflicts: a1(r68,l0) a2(r67,l0) a12(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r45,l0) conflicts: a1(r68,l0) a2(r67,l0) a12(r50,l0) a20(r49,l0) a21(r47,l0) a22(r70,l0) a23(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r49,l0) conflicts: a1(r68,l0) a2(r67,l0) a19(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r47,l0) conflicts: a1(r68,l0) a2(r67,l0) a19(r45,l0) a22(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r70,l0) conflicts: a1(r68,l0) a2(r67,l0) a19(r45,l0) a21(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r69,l0) conflicts: a1(r68,l0) a2(r67,l0) a19(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r44,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r43,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a15(r55)<->a16(r73)@114:shuffle
  cp1:a13(r56)<->a15(r55)@114:shuffle
  cp2:a8(r57)<->a13(r56)@114:shuffle
  cp3:a8(r57)<->a14(r53)@114:shuffle
  cp4:a10(r74)<->a11(r51)@114:shuffle
  cp5:a10(r74)<->a12(r50)@114:shuffle
  cp6:a9(r76)<->a10(r74)@114:shuffle
  cp7:a7(r64)<->a8(r57)@114:shuffle
  cp8:a20(r49)<->a22(r70)@117:shuffle
  cp9:a20(r49)<->a21(r47)@117:shuffle
  cp10:a12(r50)<->a20(r49)@117:shuffle
  cp11:a18(r71)<->a19(r45)@117:shuffle
  cp12:a11(r51)<->a18(r71)@117:shuffle
  cp13:a24(r44)<->a25(r43)@125:shuffle
  pref0:a0(r42)<-hr2@174
  pref1:a2(r67)<-hr2@174
  pref2:a1(r68)<-hr3@174
  pref3:a9(r76)<-hr10@114
  pref4:a7(r64)<-hr10@114
  regions=2, blocks=11, points=42
    allocnos=26 (big 0), copies=14, conflicts=0, ranges=25

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r42 1r68 2r67 5r65 6r78 7r64 8r57 9r76 10r74 11r51 12r50 13r56 14r53 15r55 16r73 17r72 18r71 19r45 20r49 21r47 22r70 23r69 24r44 25r43
    modified regnos: 42 43 44 45 47 49 50 51 53 55 56 57 64 65 67 68 69 70 71 72 73 74 76 78
    border:
    Pressure: AR_REGS=6
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@264752
          2:( 2-10 12-15)@15048
            3:( 2-7)@23984
              4:( 2 4-7)@76672
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r68 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r67 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Allocno a5r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r57 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a9r76 of AR_REGS(14) has 13 avail. regs  2-10 12-15, node:  2-10 12-15 (confl regs =  0 1 11 16-34)
      Allocno a10r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 13:a24r44-a25r43 (freq=125):
        Result (freq=4000): a24r44(2000) a25r43(2000)
      Forming thread by copy 8:a20r49-a22r70 (freq=117):
        Result (freq=3760): a20r49(1880) a22r70(1880)
      Forming thread by copy 10:a12r50-a20r49 (freq=117):
        Result (freq=6552): a12r50(2792) a20r49(1880) a22r70(1880)
      Forming thread by copy 11:a18r71-a19r45 (freq=117):
        Result (freq=4760): a18r71(1880) a19r45(2880)
      Forming thread by copy 12:a11r51-a18r71 (freq=117):
        Result (freq=9404): a11r51(4644) a18r71(1880) a19r45(2880)
      Forming thread by copy 0:a15r55-a16r73 (freq=114):
        Result (freq=3648): a15r55(1824) a16r73(1824)
      Forming thread by copy 1:a13r56-a15r55 (freq=114):
        Result (freq=5472): a13r56(1824) a15r55(1824) a16r73(1824)
      Forming thread by copy 4:a10r74-a11r51 (freq=114):
        Result (freq=11228): a10r74(1824) a11r51(4644) a18r71(1880) a19r45(2880)
      Forming thread by copy 6:a9r76-a10r74 (freq=114):
        Result (freq=13052): a9r76(1824) a10r74(1824) a11r51(4644) a18r71(1880) a19r45(2880)
      Forming thread by copy 7:a7r64-a8r57 (freq=114):
        Result (freq=3648): a7r64(1824) a8r57(1824)
      Pushing a0(r42,l0)(cost 0)
      Pushing a14(r53,l0)(cost 0)
      Pushing a6(r78,l0)(cost 0)
      Pushing a5(r65,l0)(cost 0)
      Pushing a21(r47,l0)(cost 0)
      Pushing a17(r72,l0)(cost 0)
      Pushing a23(r69,l0)(cost 0)
      Pushing a7(r64,l0)(cost 0)
      Pushing a25(r43,l0)(cost 0)
      Pushing a24(r44,l0)(cost 0)
      Pushing a16(r73,l0)(cost 0)
      Pushing a15(r55,l0)(cost 0)
      Pushing a13(r56,l0)(cost 0)
      Pushing a22(r70,l0)(cost 0)
      Pushing a20(r49,l0)(cost 0)
      Pushing a12(r50,l0)(cost 0)
      Forming thread by copy 2:a8r57-a13r56 (freq=114):
        Result (freq=9120): a7r64(1824) a13r56(1824) a15r55(1824) a16r73(1824) a8r57(1824)
        Making a8(r57,l0) colorable
      Pushing a8(r57,l0)(cost 7296)
      Pushing a10(r74,l0)(cost 0)
        Making a1(r68,l0) colorable
      Pushing a1(r68,l0)(cost 4696)
        Making a2(r67,l0) colorable
      Pushing a2(r67,l0)(cost 38336)
      Pushing a9(r76,l0)(cost 0)
      Pushing a18(r71,l0)(cost 0)
      Pushing a19(r45,l0)(cost 0)
      Pushing a11(r51,l0)(cost 0)
      Popping a11(r51,l0)  -- assign reg 8
      Popping a19(r45,l0)  -- assign reg 9
      Popping a18(r71,l0)  -- assign reg 9
      Popping a9(r76,l0)  -- assign reg 10
      Popping a2(r67,l0)  -- assign reg 2
      Popping a1(r68,l0)  -- assign reg 3
      Popping a10(r74,l0)  -- assign reg 10
      Popping a8(r57,l0)  -- assign reg 4
      Popping a12(r50,l0)  -- assign reg 10
      Popping a20(r49,l0)  -- assign reg 10
      Popping a22(r70,l0)  -- assign reg 4
      Popping a13(r56,l0)  -- assign reg 4
      Popping a15(r55,l0)  -- assign reg 4
      Popping a16(r73,l0)  -- assign reg 4
      Popping a24(r44,l0)  -- assign reg 4
      Popping a25(r43,l0)  -- assign reg 4
      Popping a7(r64,l0)  -- assign reg 10
      Popping a23(r69,l0)  -- assign reg 4
      Popping a17(r72,l0)  -- assign reg 4
      Popping a21(r47,l0)  -- assign reg 10
      Popping a5(r65,l0)  -- assign reg 4
      Popping a6(r78,l0)  -- assign reg 4
      Popping a14(r53,l0)  -- assign reg 9
      Popping a0(r42,l0)  -- assign reg 2
Disposition:
    0:r42  l0     2   25:r43  l0     4   24:r44  l0     4   19:r45  l0     9
   21:r47  l0    10   20:r49  l0    10   12:r50  l0    10   11:r51  l0     8
   14:r53  l0     9   15:r55  l0     4   13:r56  l0     4    8:r57  l0     4
    7:r64  l0    10    5:r65  l0     4    2:r67  l0     2    1:r68  l0     3
   23:r69  l0     4   22:r70  l0     4   18:r71  l0     9   17:r72  l0     4
   16:r73  l0     4   10:r74  l0    10    9:r76  l0    10    6:r78  l0     4
New iteration of spill/restore move
+++Costs: overall -1500, reg -1500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rxschedNext

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11]
;;  ref usage 	r0={2d} r1={1d,11u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,10u} r8={1d} r9={1d} r10={2d,2u} r11={2d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,10u} r17={1d,9u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={3d,1u} r43={1d,1u} r44={1d,1u} r45={1d,3u} r47={1d,1u,1e} r49={1d,1u} r50={1d,3u} r51={1d,5u} r53={1d,1u} r55={1d,1u} r56={1d,1u} r57={1d,1u} r64={1d,1u} r65={1d,1u} r67={1d,8u,3e} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r76={1d,1u} r78={1d,1u} 
;;    total ref usage 156{66d,86u,4e} in 43{42 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 873, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 67 68
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:SI 67 [ rxsched ])
        (reg:SI 2 a2 [ rxsched ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:445 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ rxsched ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 68 [ cando ])
        (reg:SI 3 a3 [ cando ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:445 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ cando ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68

(note 9 4 55 ("again") NOTE_INSN_DELETED_LABEL 8)
;; basic block 3, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(1){ }u7(7){ }u8(16){ }u9(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68
;; lr  def 	 43 44
(code_label 55 9 11 3 10 "" [1 uses])
(note 11 55 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 43 [ D.5959 ])
        (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 8 [0x8])) [0 rxsched_5(D)->rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:447 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 8 [0x8])) [0 rxsched_5(D)->rxtime+0 S4 A32])
        (nil)))
(insn 13 12 14 3 (set (reg:SI 44 [ D.5959 ])
        (minus:SI (reg:SI 43 [ D.5959 ])
            (reg/v:SI 68 [ cando ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:447 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 43 [ D.5959 ])
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ge (reg:SI 44 [ D.5959 ])
                (const_int 0 [0]))
            (label_ref:SI 68)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:447 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 44 [ D.5959 ])
        (int_list:REG_BR_PROB 300 (nil)))
 -> 68)
;;  succ:       7 [3.0%] 
;;              4 [97.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68

;; basic block 4, loop depth 1, count 0, freq 9700, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [97.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67
;; lr  def 	 45 69
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/v:SI 45 [ slot ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                    (const_int 2 [0x2])) [0 rxsched_5(D)->slot+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:450 34 {zero_extendqisi2}
     (nil))
(debug_insn 17 16 18 4 (var_location:QI slot (subreg:QI (reg/v:SI 45 [ slot ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:450 -1
     (nil))
(note 18 17 19 4 NOTE_INSN_DELETED)
(insn 19 18 20 4 (set (reg:SI 69 [ D.5960 ])
        (sign_extend:SI (subreg:QI (reg/v:SI 45 [ slot ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:450 36 {extendqisi2_internal}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (lt (reg:SI 69 [ D.5960 ])
                (const_int 0 [0]))
            (label_ref:SI 72)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:450 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 69 [ D.5960 ])
        (int_list:REG_BR_PROB 300 (nil)))
 -> 72)
;;  succ:       8 [3.0%] 
;;              5 [97.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 67 68

;; basic block 5, loop depth 1, count 0, freq 9409, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [97.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(1){ }u24(7){ }u25(16){ }u26(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 67 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 67
;; lr  def 	 47 49 50 51 70 71 72
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:SI 47 [ D.5961 ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                    (const_int 1 [0x1])) [0 rxsched_5(D)->intvExp+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:452 34 {zero_extendqisi2}
     (nil))
(insn 23 22 24 5 (set (reg:SI 70)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:452 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 24 23 25 5 (set (reg:SI 49 [ D.5959 ])
        (ashift:SI (reg:SI 70)
            (reg:SI 47 [ D.5961 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:452 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 70)
        (expr_list:REG_DEAD (reg:SI 47 [ D.5961 ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 47 [ D.5961 ]))
                (nil)))))
(insn 25 24 26 5 (set (reg/v:SI 50 [ intv ])
        (zero_extend:SI (subreg:QI (reg:SI 49 [ D.5959 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:452 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 49 [ D.5959 ])
        (nil)))
(debug_insn 26 25 27 5 (var_location:QI intv (subreg:QI (reg/v:SI 50 [ intv ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:452 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 71)
        (plus:SI (reg/v:SI 45 [ slot ])
            (reg/v:SI 50 [ intv ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 45 [ slot ])
        (nil)))
(insn 28 27 29 5 (set (reg/v:SI 51 [ slot ])
        (zero_extend:SI (subreg:QI (reg:SI 71) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(debug_insn 29 28 30 5 (var_location:QI slot (subreg:QI (reg/v:SI 51 [ slot ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 -1
     (nil))
(insn 30 29 31 5 (set (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 2 [0x2])) [0 rxsched_5(D)->slot+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 51 [ slot ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 46 {movqi_internal}
     (nil))
(note 31 30 32 5 NOTE_INSN_DELETED)
(insn 32 31 33 5 (set (reg:SI 72 [ D.5960 ])
        (sign_extend:SI (subreg:QI (reg/v:SI 51 [ slot ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 36 {extendqisi2_internal}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (lt (reg:SI 72 [ D.5960 ])
                (const_int 0 [0]))
            (label_ref:SI 76)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:453 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 72 [ D.5960 ])
        (int_list:REG_BR_PROB 300 (nil)))
 -> 76)
;;  succ:       9 [3.0%] 
;;              6 [97.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50 51 67 68

;; basic block 6, loop depth 1, count 0, freq 9127, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [97.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(1){ }u43(7){ }u44(16){ }u45(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50 51 67 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50 51 67
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 53 55 56 57 64 65 73 74 76 78
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 37 6 (set (reg:SI 53 [ D.5959 ])
        (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 4 [0x4])) [0 rxsched_5(D)->rxbase+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:455 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 4 [0x4])) [0 rxsched_5(D)->rxbase+0 S4 A32])
        (nil)))
(insn 37 35 38 6 (set (reg:SI 73)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC7") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:456 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 7680000 [0x753000])
        (nil)))
(insn 38 37 39 6 (set (reg:SI 55 [ D.5959 ])
        (mult:SI (reg/v:SI 51 [ slot ])
            (reg:SI 73))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:456 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 39 38 40 6 (set (reg:SI 56 [ D.5959 ])
        (ashiftrt:SI (reg:SI 55 [ D.5959 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:456 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 55 [ D.5959 ])
        (nil)))
(insn 40 39 41 6 (set (reg:SI 57 [ D.5959 ])
        (plus:SI (reg:SI 53 [ D.5959 ])
            (reg:SI 56 [ D.5959 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:456 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 56 [ D.5959 ])
        (expr_list:REG_DEAD (reg:SI 53 [ D.5959 ])
            (nil))))
(note 41 40 42 6 NOTE_INSN_DELETED)
(insn 42 41 44 6 (set (reg:SI 74)
        (plus:SI (reg/v:SI 50 [ intv ])
            (reg/v:SI 51 [ slot ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 51 [ slot ])
        (expr_list:REG_DEAD (reg/v:SI 50 [ intv ])
            (nil))))
(insn 44 42 45 6 (set (reg:SI 76)
        (plus:SI (reg:SI 74)
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(note 45 44 46 6 NOTE_INSN_DELETED)
(insn 46 45 47 6 (set (reg:SI 11 a11)
        (zero_extend:SI (mem/j:QI (reg/v/f:SI 67 [ rxsched ]) [0 rxsched_5(D)->dr+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 34 {zero_extendqisi2}
     (nil))
(insn 47 46 48 6 (set (reg:SI 10 a10)
        (zero_extend:SI (subreg:QI (reg:SI 76) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(call_insn 48 47 49 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("calcRxWindow") [flags 0x3]  <function_decl 0x100b66798 calcRxWindow>) [0 calcRxWindow S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 49 48 50 6 NOTE_INSN_DELETED)
(insn 50 49 51 6 (set (reg:SI 64 [ D.5959 ])
        (minus:SI (reg:SI 57 [ D.5959 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:457 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.5959 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EQUIV (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                        (const_int 8 [0x8])) [0 rxsched_5(D)->rxtime+0 S4 A32])
                (nil)))))
(insn 51 50 52 6 (set (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 8 [0x8])) [0 rxsched_5(D)->rxtime+0 S4 A32])
        (reg:SI 64 [ D.5959 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:455 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 64 [ D.5959 ])
        (nil)))
(insn 52 51 53 6 (set (reg/f:SI 78)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC8") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:458 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 53 52 54 6 (set (reg:SI 65 [ D.5961 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 78)
                    (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:458 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 78)
        (nil)))
(insn 54 53 77 6 (set (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 3 [0x3])) [0 rxsched_5(D)->rxsyms+0 S1 A8])
        (subreg/s/v:QI (reg:SI 65 [ D.5961 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:458 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ D.5961 ])
        (nil)))
(jump_insn 77 54 78 6 (set (pc)
        (label_ref 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:459 78 {jump}
     (nil)
 -> 55)
;;  succ:       3 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67 68

(barrier 78 77 68)
;; basic block 7, loop depth 0, count 0, freq 300, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3 [3.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u70(1){ }u71(7){ }u72(16){ }u73(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 68 78 67 7 11 "" [1 uses])
(note 67 68 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 67 79 7 (set (reg:SI 42 [ D.5958 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:448 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 79 5 80 7 (set (pc)
        (label_ref 58)) 78 {jump}
     (nil)
 -> 58)
;;  succ:       10 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 80 79 72)
;; basic block 8, loop depth 0, count 0, freq 291, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       4 [3.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u74(1){ }u75(7){ }u76(16){ }u77(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 72 80 71 8 12 "" [1 uses])
(note 71 72 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 71 81 8 (set (reg:SI 42 [ D.5958 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:451 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 81 6 82 8 (set (pc)
        (label_ref 58)) 78 {jump}
     (nil)
 -> 58)
;;  succ:       10 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 82 81 76)
;; basic block 9, loop depth 0, count 0, freq 282, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       5 [3.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(1){ }u79(7){ }u80(16){ }u81(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 76 82 75 9 13 "" [1 uses])
(note 75 76 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 75 58 9 (set (reg:SI 42 [ D.5958 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:454 44 {movsi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 10, loop depth 0, count 0, freq 873, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(1){ }u83(7){ }u84(16){ }u85(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 58 7 59 10 9 "" [2 uses])
(note 59 58 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 59 65 10 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.5958 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:460 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.5958 ])
        (nil)))
(insn 65 64 0 10 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:460 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setDrJoin (setDrJoin, funcdef_no=52, decl_uid=3609, cgraph_uid=52, symbol_order=59)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 46 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 46: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r46,l0) best AR_REGS, allocno AR_REGS

  a0(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
 a0(r46): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r46): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r46,l0) conflicts:  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r46
    modified regnos: 46
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2 4-15)@0
      Allocno a0r46 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Pushing a0(r46,l0)(cost 0)
      Popping a0(r46,l0)  -- assign reg 8
Disposition:
    0:r46  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setDrJoin

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r46={1d,1u} 
;;    total ref usage 20{11d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 7 5 2 NOTE_INSN_DELETED)
(note 5 4 6 2 NOTE_INSN_DELETED)
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 46)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC9") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:491 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 10 9 0 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 46)
                (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32])
        (reg:QI 3 a3 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:491 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (expr_list:REG_DEAD (reg:QI 3 a3 [ dr ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setDrTxpow (setDrTxpow, funcdef_no=53, decl_uid=3614, cgraph_uid=53, symbol_order=60)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 47: def dominates all uses has unique first use
Reg 49 uninteresting
Reg 52: local to bb 2 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 54 uninteresting
Reg 55 uninteresting
Reg 42 uninteresting
Reg 56 uninteresting
Reg 59: local to bb 5 def dominates all uses has unique first use
Reg 61 uninteresting
Reg 60 uninteresting
Reg 47 not local to one basic block
Examining insn 12, def for 52
  all ok
Found def insn 28 for 59 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 61: (insn_list:REG_DEP_TRUE 29 (nil))

Pass 0 for finding pseudo/allocno costs

    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r61,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r59,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r52,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r47,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r56,l0) costs: ACC_REG:9600,9600 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:51200,51200 MEM:6400,6400
  a1(r60,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:6400,6400
  a2(r61,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:0,0
  a3(r59,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:6400,6400
  a4(r47,l0) costs: ACC_REG:8400,8400 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:44800,44800 MEM:11200,11200
  a5(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a7(r54,l0) costs: ACC_REG:4320,4320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23040,23040 MEM:0,0
  a8(r49,l0) costs: ACC_REG:8160,8160 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:43520,43520 MEM:10880,10880
  a9(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 31(l0): point = 1
   Insn 30(l0): point = 3
   Insn 29(l0): point = 5
   Insn 28(l0): point = 7
   Insn 25(l0): point = 9
   Insn 24(l0): point = 11
   Insn 22(l0): point = 14
   Insn 21(l0): point = 16
   Insn 20(l0): point = 18
   Insn 17(l0): point = 21
   Insn 16(l0): point = 23
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 7(l0): point = 32
   Insn 5(l0): point = 34
 a0(r56): [2..11]
 a1(r60): [2..3]
 a2(r61): [4..5]
 a3(r59): [4..7]
 a4(r47): [10..34]
 a5(r42): [15..16]
 a6(r55): [17..18]
 a7(r54): [22..23]
 a8(r49): [22..32]
 a9(r53): [27..28]
 a10(r52): [27..30]
Compressing live ranges: from 37 to 14 - 37%
Ranges after the compression:
 a0(r56): [0..5]
 a1(r60): [0..1]
 a2(r61): [2..3]
 a3(r59): [2..3]
 a4(r47): [4..13]
 a5(r42): [6..7]
 a6(r55): [8..9]
 a7(r54): [10..11]
 a8(r49): [10..13]
 a9(r53): [12..13]
 a10(r52): [12..13]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r56,l0) conflicts: a1(r60,l0) a2(r61,l0) a3(r59,l0) a4(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r60,l0) conflicts: a0(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r61,l0) conflicts: a0(r56,l0) a3(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r59,l0) conflicts: a0(r56,l0) a2(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r47,l0) conflicts: a0(r56,l0) a5(r42,l0) a6(r55,l0) a7(r54,l0) a8(r49,l0) a9(r53,l0) a10(r52,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a5(r42,l0) conflicts: a4(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r55,l0) conflicts: a4(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r54,l0) conflicts: a4(r47,l0) a8(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r49,l0) conflicts: a4(r47,l0) a7(r54,l0) a9(r53,l0) a10(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r53,l0) conflicts: a4(r47,l0) a8(r49,l0) a10(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r52,l0) conflicts: a4(r47,l0) a8(r49,l0) a9(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r60)<->a2(r61)@100:shuffle
  cp1:a1(r60)<->a3(r59)@100:shuffle
  pref0:a4(r47)<-hr3@2000
  pref1:a8(r49)<-hr4@125
  regions=1, blocks=7, points=14
    allocnos=11 (big 0), copies=2, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r56 1r60 2r61 3r59 4r47 5r42 6r55 7r54 8r49 9r53 10r52
    modified regnos: 42 47 49 52 53 54 55 56 59 60 61
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@108660
          2:( 2 3 5-15)@30400
      Allocno a0r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r47 of AR_REGS(14) has 13 avail. regs  2 3 5-15, node:  2 3 5-15 (confl regs =  0 1 4 16-34)
      Allocno a5r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r60-a2r61 (freq=100):
        Result (freq=3200): a1r60(1600) a2r61(1600)
      Pushing a7(r54,l0)(cost 0)
      Pushing a3(r59,l0)(cost 0)
      Pushing a10(r52,l0)(cost 0)
      Pushing a9(r53,l0)(cost 0)
      Pushing a6(r55,l0)(cost 0)
      Pushing a5(r42,l0)(cost 0)
      Pushing a8(r49,l0)(cost 0)
      Pushing a4(r47,l0)(cost 0)
      Pushing a2(r61,l0)(cost 0)
      Pushing a1(r60,l0)(cost 0)
      Pushing a0(r56,l0)(cost 0)
      Popping a0(r56,l0)  -- assign reg 8
      Popping a1(r60,l0)  -- assign reg 9
      Popping a2(r61,l0)  -- assign reg 9
      Popping a4(r47,l0)  -- assign reg 3
      Popping a8(r49,l0)  -- assign reg 4
      Popping a5(r42,l0)  -- assign reg 4
      Popping a6(r55,l0)  -- assign reg 4
      Popping a9(r53,l0)  -- assign reg 8
      Popping a10(r52,l0)  -- assign reg 9
      Popping a3(r59,l0)  -- assign reg 3
      Popping a7(r54,l0)  -- assign reg 8
Disposition:
    5:r42  l0     4    4:r47  l0     3    8:r49  l0     4   10:r52  l0     9
    9:r53  l0     8    7:r54  l0     8    6:r55  l0     4    0:r56  l0     8
    3:r59  l0     3    1:r60  l0     9    2:r61  l0     9
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setDrTxpow

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 3[a3] 4[a4]
;;  ref usage 	r0={1d} r1={1d,6u} r2={1d} r3={1d,1u} r4={1d,1u} r5={1d} r6={1d} r7={1d,6u} r16={1d,6u} r17={1d,5u} r42={1d,1u} r47={1d,2u} r49={1d,2u} r52={1d,1u} r53={1d,1u} r54={1d,1u} r55={1d,1u} r56={1d,3u} r59={1d,1u} r60={1d,1u} r61={1d,1u} 
;;    total ref usage 61{21d,40u,0e} in 16{16 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47 49 52 53
(note 9 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 9 6 2 NOTE_INSN_DELETED)
(note 6 4 5 2 NOTE_INSN_DELETED)
(insn 5 6 7 2 (set (reg/v:SI 47 [ dr ])
        (reg:SI 3 a3 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:496 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ dr ])
        (nil)))
(insn 7 5 8 2 (set (reg/v:SI 49 [ pow ])
        (zero_extend:SI (reg:QI 4 a4 [ pow ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:496 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 4 a4 [ pow ])
        (nil)))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:SI 52 [ pow ])
        (sign_extend:SI (subreg/s/v:QI (reg/v:SI 49 [ pow ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:504 36 {extendqisi2_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 53)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:504 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:SI 52 [ pow ])
                (reg:SI 53))
            (label_ref 18)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:504 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 53)
        (expr_list:REG_DEAD (reg:SI 52 [ pow ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 18)
;;  succ:       3 [72.0%]  (FALLTHRU)
;;              4 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 49

;; basic block 3, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [72.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(1){ }u12(7){ }u13(16){ }u14(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 54
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC10") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:505 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 17 16 18 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 54)
                (const_int 175 [0xaf])) [0 LMIC.adrTxPow+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 49 [ pow ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:505 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (expr_list:REG_DEAD (reg/v:SI 49 [ pow ])
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [28.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(1){ }u18(7){ }u19(16){ }u20(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 42 55
(code_label 18 17 19 4 16 "" [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 55)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC10") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:506 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 21 20 22 4 (set (reg:SI 42 [ D.5964 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 55)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:506 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 55)
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:SI 42 [ D.5964 ])
                (reg/v:SI 47 [ dr ]))
            (label_ref:SI 34)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:506 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.5964 ])
        (int_list:REG_BR_PROB 1991 (nil)))
 -> 34)
;;  succ:       5 [80.1%]  (FALLTHRU)
;;              6 [19.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47

;; basic block 5, loop depth 0, count 0, freq 8009, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [80.1%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 56 59 60 61
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 56)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC10") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:507 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 25 24 28 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 56)
                (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32])
        (subreg/s/v:QI (reg/v:SI 47 [ dr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:507 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 47 [ dr ])
        (nil)))
(insn 28 25 29 5 (set (reg:HI 59 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 56)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:509 45 {movhi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 61)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC11") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:509 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 2048 [0x800])
        (nil)))
(insn 30 29 31 5 (set (reg:SI 60)
        (ior:SI (subreg:SI (reg:HI 59 [ LMIC.opmode ]) 0)
            (reg:SI 61))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:509 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 61)
        (expr_list:REG_DEAD (reg:HI 59 [ LMIC.opmode ])
            (nil))))
(insn 31 30 34 5 (set (mem/j/c:HI (plus:SI (reg/f:SI 56)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 60) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:509 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 60)
        (expr_list:REG_DEAD (reg/f:SI 56)
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [19.9%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 34 31 35 6 15 "" [1 uses])
(note 35 34 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function mapChannels (mapChannels, funcdef_no=61, decl_uid=3654, cgraph_uid=61, symbol_order=69)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 18 (  1.3)
scanning new insn with uid = 100.
verify found no changes in insn with uid = 100.
deleting insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 18 (  1.3)
Reg 69: local to bb 2 def dominates all uses has unique first use
Reg 70 uninteresting
Reg 68: local to bb 2 def dominates all uses has unique first use
Reg 72 uninteresting
Reg 46 uninteresting
Reg 76 uninteresting
Reg 77 uninteresting
Reg 50 uninteresting
Reg 80: local to bb 6 def dominates all uses has unique first use
Reg 79 uninteresting
Reg 82 uninteresting
Reg 56 uninteresting
Reg 83 uninteresting
Reg 86 uninteresting
Reg 85 uninteresting
Reg 90 uninteresting
Reg 92 uninteresting
Reg 93 uninteresting
Examining insn 15, def for 68
  all ok
Ignoring reg 69 with equiv init insn
Examining insn 43, def for 80
  all ok and transp
      Creating newreg=95 from oldreg=80
rescanning insn with uid = 43.
scanning new insn with uid = 101.
    New r95: setting preferred AR_REGS, alternative ALL_REGS
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 5 6 7
;; 2 succs { 11 3 }
;; 3 succs { 12 4 }
;; 4 succs { 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 5 10 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 18 (  1.3)
init_insns for 69: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 76: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 77: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 79: (insn_list:REG_DEP_TRUE 100 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 49 (nil))
init_insns for 86: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 75 (nil))

Pass 0 for finding pseudo/allocno costs

    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r95,l1) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r93,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r92,l1) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r90,l1) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r86,l1) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r85,l1) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r83,l1) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r82,l1) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r80,l1) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r79,l1) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r77,l0) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r76,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r72,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r68,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r65,l1) best AR_REGS, allocno AR_REGS
    a2 (r65,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r63,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r57,l1) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r56,l1) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r53,l1) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r48,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r46,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r42,l1) best AR_REGS, allocno AR_REGS
    a3 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:942,942 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5024,5024 MEM:1256,1256
  a1(r93,l0) costs: ACC_REG:348,348 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1856,1856 MEM:0,0
  a2(r65,l0) costs: ACC_REG:1410,5643 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,30096 MEM:1880,7524
  a3(r42,l0) costs: ACC_REG:174,15876 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:928,84672 MEM:232,21168
  a4(r50,l0) costs: ACC_REG:576,576 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3072,3072 MEM:768,768
  a5(r48,l0) costs: ACC_REG:576,576 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3072,3072 MEM:768,768
  a6(r77,l0) costs: ACC_REG:576,576 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3072,3072 MEM:768,768
  a7(r76,l0) costs: ACC_REG:576,576 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3072,3072 MEM:0,0
  a8(r46,l0) costs: ACC_REG:948,948 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5056,5056 MEM:1264,1264
  a9(r68,l0) costs: ACC_REG:1264,1264 RL_REGS:316,316 AR_REGS:316,316 ALL_REGS:5372,5372 MEM:1580,1580
  a10(r72,l0) costs: ACC_REG:948,948 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5056,5056 MEM:1264,1264
  a11(r70,l0) costs: ACC_REG:1738,1738 RL_REGS:316,316 AR_REGS:316,316 ALL_REGS:7900,7900 MEM:2212,2212
  a12(r69,l0) costs: ACC_REG:1738,1738 RL_REGS:316,316 AR_REGS:316,316 ALL_REGS:7900,7900 MEM:2212,2212
  a13(r63,l0) costs: ACC_REG:1264,1264 RL_REGS:316,316 AR_REGS:316,316 ALL_REGS:5372,5372 MEM:1580,1580
  a14(r42,l1) costs: ACC_REG:15702,15702 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:83744,83744 MEM:20936,20936
  a15(r65,l1) costs: ACC_REG:4233,4233 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22576,22576 MEM:5644,5644
  a16(r92,l1) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r90,l1) costs: ACC_REG:5646,5646 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30112,30112 MEM:7528,7528
  a18(r85,l1) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a19(r57,l1) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a20(r86,l1) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a21(r53,l1) costs: ACC_REG:3528,3528 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18816,18816 MEM:4704,4704
  a22(r83,l1) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a23(r56,l1) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a24(r82,l1) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a25(r79,l1) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:0,0
  a26(r80,l1) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a27(r95,l1) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760

   Insn 84(l0): point = 0
   Insn 83(l0): point = 2
   Insn 8(l0): point = 5
   Insn 98(l0): point = 8
   Insn 10(l0): point = 10
   Insn 96(l0): point = 13
   Insn 9(l0): point = 15
   Insn 76(l0): point = 17
   Insn 75(l0): point = 19
   Insn 94(l0): point = 22
   Insn 7(l0): point = 24
   Insn 32(l0): point = 27
   Insn 30(l0): point = 29
   Insn 29(l0): point = 31
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 25(l0): point = 38
   Insn 24(l0): point = 40
   Insn 20(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 5(l0): point = 50
   Insn 3(l0): point = 52
   Insn 40(l1): point = 55
   Insn 37(l1): point = 57
   Insn 73(l1): point = 60
   Insn 72(l1): point = 62
   Insn 64(l1): point = 65
   Insn 63(l1): point = 67
   Insn 47(l1): point = 70
   Insn 46(l1): point = 72
   Insn 45(l1): point = 74
   Insn 101(l1): point = 76
   Insn 100(l1): point = 78
   Insn 43(l1): point = 80
   Insn 58(l1): point = 83
   Insn 53(l1): point = 85
   Insn 52(l1): point = 87
   Insn 50(l1): point = 89
   Insn 49(l1): point = 91
 a0(r43): [13..15] [8..10] [3..5]
 a1(r93): [18..19]
 a2(r65): [18..50]
 a3(r42): [22..24]
 a4(r50): [28..29]
 a5(r48): [30..33]
 a6(r77): [30..31]
 a7(r76): [34..35]
 a8(r46): [39..40]
 a9(r68): [41..44]
 a10(r72): [41..42]
 a11(r70): [43..46]
 a12(r69): [43..48]
 a13(r63): [45..52]
 a14(r42): [68..93] [55..65]
 a15(r65): [55..93]
 a16(r92): [61..62]
 a17(r90): [66..67]
 a18(r85): [84..85]
 a19(r57): [86..89]
 a20(r86): [86..87]
 a21(r53): [90..93] [70..82] [55..57]
 a22(r83): [90..91]
 a23(r56): [71..72]
 a24(r82): [73..74]
 a25(r79): [75..78]
 a26(r80): [75..76]
 a27(r95): [77..80]
 Rebuilding regno allocno list for 95
 Rebuilding regno allocno list for 92
 Rebuilding regno allocno list for 90
 Rebuilding regno allocno list for 86
 Rebuilding regno allocno list for 85
 Rebuilding regno allocno list for 83
 Rebuilding regno allocno list for 82
 Rebuilding regno allocno list for 80
 Rebuilding regno allocno list for 79
      Moving ranges of a15r65 to a2r65:  [55..93]
 Rebuilding regno allocno list for 57
 Rebuilding regno allocno list for 56
 Rebuilding regno allocno list for 53
      Moving ranges of a14r42 to a3r42:  [68..93] [55..65]
Compressing live ranges: from 94 to 44 - 46%
Ranges after the compression:
 a0(r43): [0..5]
 a1(r93): [6..7]
 a2(r65): [6..43]
 a3(r42): [30..43] [24..27] [8..9]
 a4(r50): [10..11]
 a5(r48): [12..13]
 a6(r77): [12..13]
 a7(r76): [14..15]
 a8(r46): [16..17]
 a9(r68): [18..21]
 a10(r72): [18..19]
 a11(r70): [20..23]
 a12(r69): [20..23]
 a13(r63): [22..23]
 a16(r92): [26..27]
 a17(r90): [28..29]
 a18(r85): [38..39]
 a19(r57): [40..41]
 a20(r86): [40..41]
 a21(r53): [42..43] [30..37] [24..25]
 a22(r83): [42..43]
 a23(r56): [30..31]
 a24(r82): [32..33]
 a25(r79): [34..37]
 a26(r80): [34..35]
 a27(r95): [36..37]
+++Allocating 200 bytes for conflict table (uncompressed size 224)
;; a0(r43,l0) conflicts:;; a1(r93,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r65,l0) conflicts: a1(r93,l0) a3(r42,l0) a4(r50,l0) a5(r48,l0) a6(r77,l0) a7(r76,l0) a8(r46,l0) a10(r72,l0) a9(r68,l0) a11(r70,l0) a12(r69,l0) a13(r63,l0) a21(r53,l0) a16(r92,l0) a17(r90,l0) a23(r56,l0) a24(r82,l0) a26(r80,l0) a25(r79,l0) a27(r95,l0) a18(r85,l0) a19(r57,l0) a20(r86,l0) a22(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r42,l0) conflicts: a2(r65,l0) a21(r53,l0) a16(r92,l0) a23(r56,l0) a24(r82,l0) a26(r80,l0) a25(r79,l0) a27(r95,l0) a18(r85,l0) a19(r57,l0) a20(r86,l0) a22(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r50,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r48,l0) conflicts: a2(r65,l0) a6(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r77,l0) conflicts: a2(r65,l0) a5(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r76,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r46,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r68,l0) conflicts: a2(r65,l0) a10(r72,l0) a11(r70,l0) a12(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r72,l0) conflicts: a2(r65,l0) a9(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r70,l0) conflicts: a2(r65,l0) a9(r68,l0) a12(r69,l0) a13(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r69,l0) conflicts: a2(r65,l0) a9(r68,l0) a11(r70,l0) a13(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r63,l0) conflicts: a2(r65,l0) a11(r70,l0) a12(r69,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a16(r92,l0) conflicts: a2(r65,l0) a3(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r90,l0) conflicts: a2(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r85,l0) conflicts: a2(r65,l0) a3(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r57,l0) conflicts: a2(r65,l0) a3(r42,l0) a20(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r86,l0) conflicts: a2(r65,l0) a3(r42,l0) a19(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r53,l0) conflicts: a2(r65,l0) a3(r42,l0) a23(r56,l0) a24(r82,l0) a26(r80,l0) a25(r79,l0) a27(r95,l0) a22(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r83,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r56,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r82,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r79,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0) a26(r80,l0) a27(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r80,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0) a25(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r95,l0) conflicts: a2(r65,l0) a3(r42,l0) a21(r53,l0) a25(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a3(r42)<->a17(r90)@234:shuffle
  cp1:a19(r57)<->a22(r83)@29:shuffle
  cp2:a19(r57)<->a21(r53)@29:shuffle
  cp3:a18(r85)<->a19(r57)@29:shuffle
  cp4:a18(r85)<->a20(r86)@29:shuffle
  cp5:a26(r80)<->a27(r95)@470:move
  cp6:a24(r82)<->a26(r80)@58:shuffle
  cp7:a24(r82)<->a25(r79)@58:shuffle
  cp8:a4(r50)<->a5(r48)@12:shuffle
  cp9:a4(r50)<->a6(r77)@12:shuffle
  cp10:a9(r68)<->a13(r63)@19:shuffle
  cp11:a10(r72)<->a12(r69)@19:shuffle
  cp12:a10(r72)<->a11(r70)@19:shuffle
  cp13:a8(r46)<->a9(r68)@19:shuffle
  cp14:a8(r46)<->a10(r72)@19:shuffle
  pref0:a0(r43)<-hr2@316
  pref1:a13(r63)<-hr2@316
  pref2:a2(r65)<-hr3@316
  regions=2, blocks=14, points=44
    allocnos=28 (big 0), copies=15, conflicts=0, ranges=30

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r43 1r93 2r65 3r42 4r50 5r48 6r77 7r76 8r46 9r68 10r72 11r70 12r69 13r63 16r92 17r90 18r85 19r57 20r86 21r53 22r83 23r56 24r82 25r79 26r80 27r95
    modified regnos: 42 43 46 48 50 53 56 57 63 65 68 69 70 72 76 77 79 80 82 83 85 86 90 92 93 95
    border:
    Pressure: AR_REGS=5
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@167784
          2:( 2 4-15)@3792
      Allocno a0r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r63 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a16r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 5:a26r80-a27r95 (freq=470):
        Result (freq=1880): a26r80(940) a27r95(940)
      Forming thread by copy 0:a3r42-a17r90 (freq=234):
        Result (freq=7174): a3r42(5292) a17r90(1882)
      Forming thread by copy 6:a24r82-a26r80 (freq=58):
        Result (freq=2820): a24r82(940) a26r80(940) a27r95(940)
      Forming thread by copy 1:a19r57-a22r83 (freq=29):
        Result (freq=940): a19r57(470) a22r83(470)
      Forming thread by copy 3:a18r85-a19r57 (freq=29):
        Result (freq=1410): a18r85(470) a19r57(470) a22r83(470)
      Forming thread by copy 10:a9r68-a13r63 (freq=19):
        Result (freq=632): a9r68(316) a13r63(316)
      Forming thread by copy 11:a10r72-a12r69 (freq=19):
        Result (freq=790): a10r72(316) a12r69(474)
      Forming thread by copy 13:a8r46-a9r68 (freq=19):
        Result (freq=948): a8r46(316) a9r68(316) a13r63(316)
      Forming thread by copy 8:a4r50-a5r48 (freq=12):
        Result (freq=384): a4r50(192) a5r48(192)
      Pushing a1(r93,l0)(cost 0)
      Pushing a7(r76,l0)(cost 0)
      Pushing a6(r77,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Pushing a5(r48,l0)(cost 0)
      Pushing a4(r50,l0)(cost 0)
      Pushing a20(r86,l0)(cost 0)
      Pushing a11(r70,l0)(cost 0)
      Pushing a10(r72,l0)(cost 0)
      Pushing a12(r69,l0)(cost 0)
      Pushing a25(r79,l0)(cost 0)
      Pushing a23(r56,l0)(cost 0)
        Making a2(r65,l0) colorable
      Pushing a9(r68,l0)(cost 0)
      Pushing a8(r46,l0)(cost 0)
      Pushing a13(r63,l0)(cost 0)
      Pushing a21(r53,l0)(cost 0)
      Pushing a22(r83,l0)(cost 0)
      Pushing a19(r57,l0)(cost 0)
      Pushing a18(r85,l0)(cost 0)
      Pushing a2(r65,l0)(cost 8156)
      Pushing a16(r92,l0)(cost 0)
      Pushing a27(r95,l0)(cost 0)
      Pushing a26(r80,l0)(cost 0)
      Pushing a24(r82,l0)(cost 0)
      Pushing a17(r90,l0)(cost 0)
      Pushing a3(r42,l0)(cost 0)
      Popping a3(r42,l0)  -- assign reg 8
      Popping a17(r90,l0)  -- assign reg 8
      Popping a24(r82,l0)  -- assign reg 9
      Popping a26(r80,l0)  -- assign reg 9
      Popping a27(r95,l0)  -- assign reg 9
      Popping a16(r92,l0)  -- assign reg 9
      Popping a2(r65,l0)  -- assign reg 3
      Popping a18(r85,l0)  -- assign reg 9
      Popping a19(r57,l0)  -- assign reg 9
      Popping a22(r83,l0)  -- assign reg 9
      Popping a21(r53,l0)  -- assign reg 10
      Popping a13(r63,l0)  -- assign reg 2
      Popping a8(r46,l0)  -- assign reg 2
      Popping a9(r68,l0)  -- assign reg 2
      Popping a23(r56,l0)  -- assign reg 2
      Popping a25(r79,l0)  -- assign reg 2
      Popping a12(r69,l0)  -- assign reg 8
      Popping a10(r72,l0)  -- assign reg 8
      Popping a11(r70,l0)  -- assign reg 9
      Popping a20(r86,l0)  -- assign reg 2
      Popping a4(r50,l0)  -- assign reg 2
      Popping a5(r48,l0)  -- assign reg 2
      Popping a0(r43,l0)  -- assign reg 2
      Popping a6(r77,l0)  -- assign reg 8
      Popping a7(r76,l0)  -- assign reg 2
      Popping a1(r93,l0)  -- assign reg 2
Disposition:
    3:r42  l0     8    0:r43  l0     2    8:r46  l0     2    5:r48  l0     2
    4:r50  l0     2   21:r53  l0    10   23:r56  l0     2   19:r57  l0     9
   13:r63  l0     2    2:r65  l0     3    9:r68  l0     2   12:r69  l0     8
   11:r70  l0     9   10:r72  l0     8    7:r76  l0     2    6:r77  l0     8
   25:r79  l0     2   26:r80  l0     9   24:r82  l0     9   22:r83  l0     9
   18:r85  l0     9   20:r86  l0     2   17:r90  l0     8   16:r92  l0     9
    1:r93  l0     2   27:r95  l0     9
New iteration of spill/restore move
+++Costs: overall -632, reg -632, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mapChannels

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,13u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,13u} r16={1d,13u} r17={1d,12u} r42={2d,7u} r43={3d,1u} r46={1d,1u} r48={1d,1u,1e} r50={1d,1u} r53={1d,1u,1e} r56={1d,1u} r57={1d,1u,1e} r63={1d,1u,1e} r65={2d,8u,1e} r68={1d,1u} r69={1d,2u} r70={1d,2u} r72={1d,1u} r76={1d,1u} r77={1d,1u} r79={1d,1u} r80={1d,1u} r82={1d,1u} r83={1d,1u} r85={1d,1u} r86={1d,1u} r90={1d,1u} r92={1d,1u} r93={1d,1u} r95={1d,1u} 
;;    total ref usage 142{41d,96u,5e} in 46{46 regular + 0 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 1580, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46 63 65 68 69 70 72
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 11 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 63 [ chpage ])
        (reg:SI 2 a2 [ chpage ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:615 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ chpage ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 65 [ chmap ])
        (reg:SI 3 a3 [ chmap ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:615 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ chmap ])
        (nil)))
(note 6 5 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 6 14 2 (set (reg:SI 69)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 70)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 15 14 17 2 (set (reg:SI 68)
        (if_then_else:SI (ne (reg/v:SI 63 [ chpage ])
                (const_int 0 [0]))
            (reg:SI 69)
            (reg:SI 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg/v:SI 63 [ chpage ])
        (expr_list:REG_EQUAL (ne:SI (reg/v:SI 63 [ chpage ])
                (const_int 0 [0]))
            (nil))))
(note 17 15 20 2 NOTE_INSN_DELETED)
(insn 20 17 22 2 (set (reg:SI 72)
        (if_then_else:SI (eq (reg/v:SI 65 [ chmap ])
                (const_int 0 [0]))
            (reg:SI 69)
            (reg:SI 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 70)
        (expr_list:REG_DEAD (reg:SI 69)
            (expr_list:REG_EQUAL (eq:SI (reg/v:SI 65 [ chmap ])
                    (const_int 0 [0]))
                (nil)))))
(note 22 20 23 2 NOTE_INSN_DELETED)
(note 23 22 24 2 NOTE_INSN_DELETED)
(insn 24 23 25 2 (set (reg:SI 46 [ D.5970 ])
        (ior:SI (reg:SI 72)
            (reg:SI 68))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg:SI 68)
            (nil))))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:SI 46 [ D.5970 ])
                (const_int 0 [0]))
            (label_ref:SI 89)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 46 [ D.5970 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 89)
;;  succ:       11 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65

;; basic block 3, loop depth 0, count 0, freq 964, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(1){ }u23(7){ }u24(16){ }u25(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  def 	 48 50 76 77
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg/f:SI 76)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC12") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 28 27 29 3 (set (reg:SI 48 [ D.5972 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 76)
                    (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 76)
        (nil)))
(insn 29 28 30 3 (set (reg:SI 77)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 30 29 31 3 (set (reg:SI 50 [ D.5971 ])
        (xor:SI (reg:SI 77)
            (reg:SI 48 [ D.5972 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 77)
        (expr_list:REG_DEAD (reg:SI 48 [ D.5972 ])
            (expr_list:REG_EQUAL (not:SI (reg:SI 48 [ D.5972 ]))
                (nil)))))
(note 31 30 32 3 NOTE_INSN_DELETED)
(jump_insn 32 31 35 3 (set (pc)
        (if_then_else (ne (and:SI (reg/v:SI 65 [ chmap ])
                    (reg:SI 50 [ D.5971 ]))
                (const_int 0 [0]))
            (label_ref:SI 93)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:617 62 {*masktrue}
     (expr_list:REG_DEAD (reg:SI 50 [ D.5971 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 93)
;;  succ:       12 [39.0%] 
;;              4 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65

;; basic block 4, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [61.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(1){ }u34(7){ }u35(16){ }u36(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 35 32 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 7 35 94 4 (set (reg/v:SI 42 [ chnl ])
        (const_int 0 [0])) 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 94 7 95 4 (set (pc)
        (label_ref 66)) 78 {jump}
     (nil)
 -> 66)
;;  succ:       9 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65

(barrier 95 94 70)
;; basic block 5, loop depth 1, count 0, freq 9412, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       9 [94.1%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(1){ }u38(7){ }u39(16){ }u40(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65
;; lr  def 	 53
(code_label 70 95 36 5 22 "" [1 uses])
(note 36 70 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:SI 53 [ D.5971 ])
        (reg/v:SI 42 [ chnl ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 44 {movsi_internal}
     (nil))
(note 38 37 39 5 NOTE_INSN_DELETED)
(note 39 38 40 5 NOTE_INSN_DELETED)
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg/v:SI 65 [ chmap ])
                    (const_int 1 [0x1])
                    (reg/v:SI 42 [ chnl ]))
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 60)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 53 65

;; basic block 6, loop depth 1, count 0, freq 4706, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(1){ }u47(7){ }u48(16){ }u49(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 53 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 56 79 80 82 95
(note 41 40 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 44 6 (set (reg:SI 95 [80])
        (plus:SI (reg/v:SI 42 [ chnl ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 1 {addsi3}
     (nil))
(note 44 43 100 6 NOTE_INSN_DELETED)
(insn 100 44 101 6 (set (reg/f:SI 79)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC12") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 101 100 45 6 (set (reg:SI 80)
        (reg:SI 95 [80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [80])
        (nil)))
(insn 45 101 46 6 (set (reg/f:SI 82)
        (plus:SI (mult:SI (reg:SI 80)
                (const_int 4 [0x4]))
            (reg/f:SI 79))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 80)
        (expr_list:REG_DEAD (reg/f:SI 79)
            (nil))))
(insn 46 45 47 6 (set (reg:SI 56 [ D.5973 ])
        (mem/j:SI (reg/f:SI 82) [0 LMIC.channelFreq S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 82)
        (nil)))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:SI 56 [ D.5973 ])
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:620 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 56 [ D.5973 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 60)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 53 65

;; basic block 7, loop depth 1, count 0, freq 2353, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(1){ }u57(7){ }u58(16){ }u59(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 53 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 65
;; lr  def 	 57 65 83 85 86
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg:SI 83)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 50 49 52 7 (set (reg:SI 57 [ D.5971 ])
        (ashift:SI (reg:SI 83)
            (reg:SI 53 [ D.5971 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (expr_list:REG_DEAD (reg:SI 53 [ D.5971 ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 53 [ D.5971 ]))
                (nil)))))
(insn 52 50 53 7 (set (reg:SI 86)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 53 52 56 7 (set (reg:SI 85)
        (xor:SI (reg:SI 86)
            (reg:SI 57 [ D.5971 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 86)
        (expr_list:REG_DEAD (reg:SI 57 [ D.5971 ])
            (expr_list:REG_EQUAL (not:SI (reg:SI 57 [ D.5971 ]))
                (nil)))))
(note 56 53 57 7 NOTE_INSN_DELETED)
(note 57 56 58 7 NOTE_INSN_DELETED)
(insn 58 57 59 7 (set (reg/v:SI 65 [ chmap ])
        (and:SI (reg:SI 85)
            (reg/v:SI 65 [ chmap ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(debug_insn 59 58 60 7 (var_location:HI chmap (subreg:HI (reg/v:SI 65 [ chmap ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:621 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65

;; basic block 8, loop depth 1, count 0, freq 9412, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       5 [50.0%] 
;;              6 [50.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u71(1){ }u72(7){ }u73(16){ }u74(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 42 90
(code_label 60 59 61 8 21 "" [2 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 61 63 8 (var_location:HI chmap (subreg:HI (reg/v:SI 65 [ chmap ]) 0)) -1
     (nil))
(insn 63 62 64 8 (set (reg:SI 90)
        (plus:SI (reg/v:SI 42 [ chnl ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:619 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 42 [ chnl ])
        (nil)))
(insn 64 63 65 8 (set (reg/v:SI 42 [ chnl ])
        (zero_extend:SI (subreg:QI (reg:SI 90) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:619 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(debug_insn 65 64 66 8 (var_location:QI chnl (subreg:QI (reg/v:SI 42 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:619 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65

;; basic block 9, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [100.0%]  (FALLTHRU,DFS_BACK)
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u79(1){ }u80(7){ }u81(16){ }u82(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 92
(code_label 66 65 67 9 20 "" [1 uses])
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 68 67 69 9 (var_location:QI chnl (subreg:QI (reg/v:SI 42 [ chnl ]) 0)) -1
     (nil))
(debug_insn 69 68 72 9 (var_location:HI chmap (subreg:HI (reg/v:SI 65 [ chmap ]) 0)) -1
     (nil))
(insn 72 69 73 9 (set (reg:SI 92)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:619 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (geu (reg:SI 92)
                (reg/v:SI 42 [ chnl ]))
            (label_ref 70)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:619 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 92)
        (int_list:REG_BR_PROB 9412 (nil)))
 -> 70)
;;  succ:       5 [94.1%] 
;;              10 [5.9%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 65

;; basic block 10, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [5.9%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(1){ }u88(7){ }u89(16){ }u90(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  def 	 43 93
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:SI 93)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC12") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:623 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 76 75 9 10 (set (mem/j/c:HI (plus:SI (reg/f:SI 93)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])
        (subreg/s/v:HI (reg/v:SI 65 [ chmap ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:623 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_DEAD (reg/v:SI 65 [ chmap ])
            (nil))))
(insn 9 76 96 10 (set (reg:SI 43 [ D.5969 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:624 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 96 9 97 10 (set (pc)
        (label_ref 77)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:624 78 {jump}
     (nil)
 -> 77)
;;  succ:       13 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

(barrier 97 96 89)
;; basic block 11, loop depth 0, count 0, freq 616, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u93(1){ }u94(7){ }u95(16){ }u96(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 89 97 88 11 23 "" [1 uses])
(note 88 89 10 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 10 88 98 11 (set (reg:SI 43 [ D.5969 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:618 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 98 10 99 11 (set (pc)
        (label_ref 77)) 78 {jump}
     (nil)
 -> 77)
;;  succ:       13 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

(barrier 99 98 93)
;; basic block 12, loop depth 0, count 0, freq 376, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       3 [39.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(1){ }u98(7){ }u99(16){ }u100(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 93 99 92 12 24 "" [1 uses])
(note 92 93 8 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 8 92 77 12 (set (reg:SI 43 [ D.5969 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:618 44 {movsi_internal}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

;; basic block 13, loop depth 0, count 0, freq 1580, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;;              10 [100.0%] 
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(1){ }u102(7){ }u103(16){ }u104(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 2 [a2]
(code_label 77 8 78 13 19 "" [2 uses])
(note 78 77 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 78 84 13 (set (reg/i:SI 2 a2)
        (reg:SI 43 [ D.5969 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:625 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 [ D.5969 ])
        (nil)))
(insn 84 83 0 13 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:625 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setBcnRxParams (setBcnRxParams, funcdef_no=64, decl_uid=3683, cgraph_uid=64, symbol_order=72)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
rescanning insn with uid = 33.
deleting insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 48 uninteresting
Reg 42 uninteresting
Reg 52 uninteresting
Reg 54 uninteresting
Reg 55 uninteresting
Ignoring reg 45, has equiv memory
Ignoring reg 47 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 17 (nil))

Pass 0 for finding pseudo/allocno costs

    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r52,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r46,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a1(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r47,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a8(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 33(l0): point = 0
   Insn 20(l0): point = 2
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 13(l0): point = 12
   Insn 11(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 5(l0): point = 22
 a0(r46): [1..22]
 a1(r45): [3..4]
 a2(r55): [5..6]
 a3(r44): [5..8]
 a4(r54): [9..10]
 a5(r52): [11..12]
 a6(r42): [13..14]
 a7(r47): [15..20]
 a8(r48): [17..18]
Compressing live ranges: from 25 to 12 - 48%
Ranges after the compression:
 a0(r46): [0..11]
 a1(r45): [0..1]
 a2(r55): [2..3]
 a3(r44): [2..3]
 a4(r54): [4..5]
 a5(r52): [6..7]
 a6(r42): [8..9]
 a7(r47): [10..11]
 a8(r48): [10..11]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r46,l0) conflicts: a1(r45,l0) a2(r55,l0) a3(r44,l0) a4(r54,l0) a5(r52,l0) a6(r42,l0) a7(r47,l0) a8(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r45,l0) conflicts: a0(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r55,l0) conflicts: a0(r46,l0) a3(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r44,l0) conflicts: a0(r46,l0) a2(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r54,l0) conflicts: a0(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r52,l0) conflicts: a0(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r42,l0) conflicts: a0(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r47,l0) conflicts: a0(r46,l0) a8(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r48,l0) conflicts: a0(r46,l0) a7(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r52)<->a6(r42)@125:shuffle
  cp1:a4(r54)<->a5(r52)@125:shuffle
  cp2:a1(r45)<->a2(r55)@125:shuffle
  cp3:a1(r45)<->a3(r44)@125:shuffle
  regions=1, blocks=3, points=12
    allocnos=9 (big 0), copies=4, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r46 1r45 2r55 3r44 4r54 5r52 6r42 7r47 8r48
    modified regnos: 42 44 45 46 47 48 52 54 55
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@160000
      Allocno a0r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a5r52-a6r42 (freq=125):
        Result (freq=4000): a5r52(2000) a6r42(2000)
      Forming thread by copy 1:a4r54-a5r52 (freq=125):
        Result (freq=6000): a4r54(2000) a5r52(2000) a6r42(2000)
      Forming thread by copy 2:a1r45-a2r55 (freq=125):
        Result (freq=4000): a1r45(2000) a2r55(2000)
      Pushing a8(r48,l0)(cost 0)
      Pushing a3(r44,l0)(cost 0)
      Pushing a7(r47,l0)(cost 0)
      Pushing a2(r55,l0)(cost 0)
      Pushing a1(r45,l0)(cost 0)
      Pushing a0(r46,l0)(cost 0)
      Pushing a6(r42,l0)(cost 0)
      Pushing a5(r52,l0)(cost 0)
      Pushing a4(r54,l0)(cost 0)
      Popping a4(r54,l0)  -- assign reg 8
      Popping a5(r52,l0)  -- assign reg 8
      Popping a6(r42,l0)  -- assign reg 8
      Popping a0(r46,l0)  -- assign reg 9
      Popping a1(r45,l0)  -- assign reg 8
      Popping a2(r55,l0)  -- assign reg 8
      Popping a7(r47,l0)  -- assign reg 8
      Popping a3(r44,l0)  -- assign reg 10
      Popping a8(r48,l0)  -- assign reg 10
Disposition:
    6:r42  l0     8    3:r44  l0    10    1:r45  l0     8    0:r46  l0     9
    7:r47  l0     8    8:r48  l0    10    5:r52  l0     8    4:r54  l0     8
    2:r55  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setBcnRxParams

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r44={1d,1u,1e} r45={1d,1u} r46={1d,4u,1e} r47={1d,2u} r48={1d,1u} r52={1d,1u} r54={1d,1u} r55={1d,1u} 
;;    total ref usage 41{19d,20u,2e} in 22{22 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 44 45 46 47 48 52 54 55
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 46)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC13") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:684 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 6 5 7 2 (set:SI (reg/f:SI 47)
        (plus:SI (reg/f:SI 46)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:684 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 7 6 8 2 (set (reg:QI 48)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:684 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 8 7 11 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 47)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 48)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:684 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 48)
        (nil)))
(insn 11 8 13 2 (set (reg:SI 42 [ D.5977 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 47)
                    (const_int 140 [0x8c])) [0 LMIC.bcnChnl+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 47)
        (nil)))
(insn 13 11 14 2 (set (reg:SI 52)
        (plus:SI (reg:SI 42 [ D.5977 ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 42 [ D.5977 ])
        (nil)))
(note 14 13 15 2 NOTE_INSN_DELETED)
(insn 15 14 16 2 (set (reg/f:SI 54)
        (plus:SI (mult:SI (reg:SI 52)
                (const_int 4 [0x4]))
            (reg/f:SI 46))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 52)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 44 [ D.5979 ])
        (mem/j:SI (reg/f:SI 54) [0 LMIC.channelFreq S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 55)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 18 17 20 2 (set (reg:SI 45 [ D.5979 ])
        (and:SI (reg:SI 44 [ D.5979 ])
            (reg:SI 55))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_DEAD (reg:SI 44 [ D.5979 ])
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 46)
                        (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
                (expr_list:REG_EQUAL (and:SI (reg:SI 44 [ D.5979 ])
                        (const_int -4 [0xfffffffffffffffc]))
                    (nil))))))
(insn 20 18 21 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 46)
                (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
        (reg:SI 45 [ D.5979 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 45 [ D.5979 ])
        (nil)))
(debug_insn 21 20 22 2 (var_location:QI dr (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:685 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:QI dr (const_int 3 [0x3])) -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI index (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:HI params (const_int 3 [0x3])) -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 27 26 28 2 (var_location:HI params (const_int 131 [0x83])) -1
     (nil))
(debug_insn 28 27 29 2 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(debug_insn 29 28 30 2 (var_location:HI params (const_int 131 [0x83])) -1
     (nil))
(debug_insn 30 29 33 2 (var_location:SI ih (const_int 17 [0x11])) -1
     (nil))
(insn 33 30 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 46)
                (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16])
        (subreg:HI (mem/u/c:SI (symbol_ref/u:SI ("*.LC14") [flags 0x2]) [0  S4 A32]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:686 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function stateJustJoined (stateJustJoined, funcdef_no=70, decl_uid=3703, cgraph_uid=70, symbol_order=78)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 43 uninteresting
Reg 49 uninteresting
Reg 79 uninteresting
Reg 84 uninteresting
Reg 87 uninteresting
Reg 92 uninteresting
Ignoring reg 42 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 42: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 43: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 79: (insn_list:REG_DEP_TRUE 55 (nil))
init_insns for 84: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 87: (insn_list:REG_DEP_TRUE 66 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 73 (nil))

Pass 0 for finding pseudo/allocno costs

    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r92,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r87,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r84,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r79,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:42000,42000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224000,224000 MEM:56000,56000
  a1(r92,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r42,l0) costs: ACC_REG:24000,24000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128000,128000 MEM:24000,24000
  a3(r84,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a4(r87,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r43,l0) costs: ACC_REG:45000,45000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:240000,240000 MEM:60000,60000
  a6(r79,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 74(l0): point = 0
   Insn 73(l0): point = 2
   Insn 70(l0): point = 4
   Insn 67(l0): point = 6
   Insn 66(l0): point = 8
   Insn 63(l0): point = 10
   Insn 62(l0): point = 12
   Insn 60(l0): point = 14
   Insn 56(l0): point = 16
   Insn 55(l0): point = 18
   Insn 52(l0): point = 20
   Insn 49(l0): point = 22
   Insn 45(l0): point = 24
   Insn 41(l0): point = 26
   Insn 37(l0): point = 28
   Insn 33(l0): point = 30
   Insn 29(l0): point = 32
   Insn 25(l0): point = 34
   Insn 21(l0): point = 36
   Insn 17(l0): point = 38
   Insn 15(l0): point = 40
   Insn 13(l0): point = 42
   Insn 10(l0): point = 44
   Insn 7(l0): point = 46
   Insn 6(l0): point = 48
   Insn 5(l0): point = 50
 a0(r49): [1..40]
 a1(r92): [1..2]
 a2(r42): [5..50]
 a3(r84): [5..12]
 a4(r87): [7..8]
 a5(r43): [15..48]
 a6(r79): [17..18]
Compressing live ranges: from 53 to 6 - 11%
Ranges after the compression:
 a0(r49): [0..5]
 a1(r92): [0..1]
 a2(r42): [2..5]
 a3(r84): [2..3]
 a4(r87): [2..3]
 a5(r43): [4..5]
 a6(r79): [4..5]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r49,l0) conflicts: a1(r92,l0) a3(r84,l0) a4(r87,l0) a2(r42,l0) a5(r43,l0) a6(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r92,l0) conflicts: a0(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r42,l0) conflicts: a0(r49,l0) a3(r84,l0) a4(r87,l0) a5(r43,l0) a6(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r84,l0) conflicts: a0(r49,l0) a4(r87,l0) a2(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r87,l0) conflicts: a0(r49,l0) a3(r84,l0) a2(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r43,l0) conflicts: a0(r49,l0) a2(r42,l0) a6(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r79,l0) conflicts: a0(r49,l0) a2(r42,l0) a5(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=6
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r49 1r92 2r42 3r84 4r87 5r43 6r79
    modified regnos: 42 43 49 79 84 87 92
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@336000
      Allocno a0r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a6(r79,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a3(r84,l0)(cost 0)
      Pushing a2(r42,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Pushing a5(r43,l0)(cost 0)
      Popping a5(r43,l0)  -- assign reg 8
      Popping a0(r49,l0)  -- assign reg 9
      Popping a2(r42,l0)  -- assign reg 10
      Popping a3(r84,l0)  -- assign reg 8
      Popping a1(r92,l0)  -- assign reg 8
      Popping a4(r87,l0)  -- assign reg 11
      Popping a6(r79,l0)  -- assign reg 11
Disposition:
    2:r42  l0    10    5:r43  l0     8    0:r49  l0     9    6:r79  l0    11
    3:r84  l0     8    4:r87  l0    11    1:r92  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


stateJustJoined

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,7u} r43={1d,14u} r49={1d,13u} r79={1d,1u} r84={1d,2u} r87={1d,1u} r92={1d,1u} 
;;    total ref usage 63{17d,46u,0e} in 26{26 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 43 49 79 84 87 92
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 42)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC15") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:962 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 6 5 7 2 (set (reg:SI 43)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:962 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 7 6 10 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 42)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (reg:SI 43)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:962 44 {movsi_internal}
     (nil))
(insn 10 7 13 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 42)
                (const_int 284 [0x11c])) [0 LMIC.seqnoDn+0 S4 A32])
        (reg:SI 43)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:962 44 {movsi_internal}
     (nil))
(insn 13 10 15 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 42)
                (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:963 46 {movqi_internal}
     (nil))
(insn 15 13 17 2 (set:SI (reg/f:SI 49)
        (plus:SI (reg/f:SI 42)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:964 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 17 15 21 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 42 [0x2a])) [0 LMIC.devsAns+0 S1 A16])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:964 46 {movqi_internal}
     (nil))
(insn 21 17 25 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:964 46 {movqi_internal}
     (nil))
(insn 25 21 29 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:964 46 {movqi_internal}
     (nil))
(insn 29 25 33 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:964 46 {movqi_internal}
     (nil))
(insn 33 29 37 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:966 46 {movqi_internal}
     (nil))
(insn 37 33 41 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:969 46 {movqi_internal}
     (nil))
(insn 41 37 45 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 44 [0x2c])) [0 LMIC.moreData+0 S1 A32])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:971 46 {movqi_internal}
     (nil))
(insn 45 41 49 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 45 [0x2d])) [0 LMIC.dutyCapAns+0 S1 A8])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:973 46 {movqi_internal}
     (nil))
(insn 49 45 52 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 55 [0x37])) [0 LMIC.pingSetAns+0 S1 A8])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:976 46 {movqi_internal}
     (nil))
(insn 52 49 55 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 42)
                (const_int 174 [0xae])) [0 LMIC.upRepeat+0 S1 A16])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:978 46 {movqi_internal}
     (nil))
(insn 55 52 56 2 (set (reg:QI 79)
        (const_int -12 [0xfffffffffffffff4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:979 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -12 [0xfffffffffffffff4])
        (nil)))
(insn 56 55 60 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (reg:QI 79)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:979 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 79)
        (nil)))
(insn 60 56 62 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8])
        (subreg:QI (reg:SI 43) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:980 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 43)
        (nil)))
(insn 62 60 63 2 (set (reg:SI 84)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC16") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:981 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 869525000 [0x33d3e608])
        (nil)))
(insn 63 62 66 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 42)
                (const_int 304 [0x130])) [0 LMIC.dn2Freq+0 S4 A32])
        (reg:SI 84)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:981 44 {movsi_internal}
     (nil))
(insn 66 63 67 2 (set (reg:QI 87)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:983 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))
(insn 67 66 70 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 140 [0x8c])) [0 LMIC.bcnChnl+0 S1 A32])
        (reg:QI 87)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:983 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87)
        (nil)))
(insn 70 67 73 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 42)
                (const_int 324 [0x144])) [0 LMIC.ping.freq+0 S4 A32])
        (reg:SI 84)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:986 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (expr_list:REG_DEAD (reg/f:SI 42)
            (nil))))
(insn 73 70 74 2 (set (reg:QI 92)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:987 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 74 73 0 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 56 [0x38])) [0 LMIC.ping.dr+0 S1 A32])
        (reg:QI 92)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:987 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92)
        (expr_list:REG_DEAD (reg/f:SI 49)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function rndDelay (rndDelay, funcdef_no=50, decl_uid=3599, cgraph_uid=50, symbol_order=57)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 57: def dominates all uses has unique first use
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 63 uninteresting
Reg 49 uninteresting
Reg 64 uninteresting
Reg 67 uninteresting
Reg 77 uninteresting
Reg 65: local to bb 3 def dominates all uses has unique first use
Reg 70 uninteresting
Reg 69 uninteresting
Reg 71 uninteresting
Reg 52 uninteresting
Reg 54: local to bb 5 def dominates all uses has unique first use
Reg 74 uninteresting
Reg 55 uninteresting
Found def insn 10 for 45 to be not moveable
Examining insn 43, def for 54
  all ok
Reg 57 not local to one basic block
Examining insn 29, def for 65
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 64: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 44 (nil))

Pass 0 for finding pseudo/allocno costs

    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r77,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r74,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r71,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r69,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r67,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r65,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r63,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r49,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:11160,11160 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:59520,59520 MEM:14880,14880
  a1(r55,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a2(r74,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a3(r54,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a4(r57,l0) costs: ACC_REG:7830,7830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:41760,41760 MEM:10440,10440
  a5(r52,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a6(r49,l0) costs: ACC_REG:7830,7830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:41760,41760 MEM:10440,10440
  a7(r71,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a8(r69,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a9(r50,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a10(r70,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a11(r65,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a12(r77,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a13(r67,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a14(r64,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a15(r63,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 56(l0): point = 0
   Insn 55(l0): point = 2
   Insn 46(l0): point = 5
   Insn 45(l0): point = 7
   Insn 44(l0): point = 9
   Insn 43(l0): point = 11
   Insn 41(l0): point = 13
   Insn 39(l0): point = 16
   Insn 33(l0): point = 19
   Insn 32(l0): point = 21
   Insn 31(l0): point = 23
   Insn 30(l0): point = 25
   Insn 29(l0): point = 27
   Insn 27(l0): point = 29
   Insn 25(l0): point = 31
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 20(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 11(l0): point = 46
   Insn 10(l0): point = 48
   Insn 7(l0): point = 50
   Insn 3(l0): point = 52
 a0(r42): [34..38] [3..19]
 a1(r55): [6..7]
 a2(r74): [8..9]
 a3(r54): [8..11]
 a4(r57): [12..52]
 a5(r52): [12..13]
 a6(r49): [14..42]
 a7(r71): [20..21]
 a8(r69): [22..23]
 a9(r50): [22..40]
 a10(r70): [24..25]
 a11(r65): [24..27]
 a12(r77): [28..29]
 a13(r67): [30..31]
 a14(r64): [35..36]
 a15(r63): [43..44]
 a16(r45): [45..48]
Compressing live ranges: from 55 to 24 - 43%
Ranges after the compression:
 a0(r42): [18..19] [0..7]
 a1(r55): [0..1]
 a2(r74): [2..3]
 a3(r54): [2..3]
 a4(r57): [4..23]
 a5(r52): [4..5]
 a6(r49): [6..19]
 a7(r71): [8..9]
 a8(r69): [10..11]
 a9(r50): [10..19]
 a10(r70): [12..13]
 a11(r65): [12..13]
 a12(r77): [14..15]
 a13(r67): [16..17]
 a14(r64): [18..19]
 a15(r63): [20..21]
 a16(r45): [22..23]
+++Allocating 136 bytes for conflict table (uncompressed size 136)
;; a0(r42,l0) conflicts: a1(r55,l0) a2(r74,l0) a3(r54,l0) a5(r52,l0) a4(r57,l0) a6(r49,l0) a9(r50,l0) a14(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r55,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r74,l0) conflicts: a0(r42,l0) a3(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r54,l0) conflicts: a0(r42,l0) a2(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r57,l0) conflicts: a0(r42,l0) a5(r52,l0) a6(r49,l0) a7(r71,l0) a8(r69,l0) a9(r50,l0) a10(r70,l0) a11(r65,l0) a12(r77,l0) a13(r67,l0) a14(r64,l0) a15(r63,l0) a16(r45,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r52,l0) conflicts: a0(r42,l0) a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r49,l0) conflicts: a0(r42,l0) a4(r57,l0) a7(r71,l0) a8(r69,l0) a9(r50,l0) a10(r70,l0) a11(r65,l0) a12(r77,l0) a13(r67,l0) a14(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r71,l0) conflicts: a4(r57,l0) a6(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r69,l0) conflicts: a4(r57,l0) a6(r49,l0) a9(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r50,l0) conflicts: a0(r42,l0) a4(r57,l0) a6(r49,l0) a8(r69,l0) a10(r70,l0) a11(r65,l0) a12(r77,l0) a13(r67,l0) a14(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r70,l0) conflicts: a4(r57,l0) a6(r49,l0) a9(r50,l0) a11(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r65,l0) conflicts: a4(r57,l0) a6(r49,l0) a9(r50,l0) a10(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r77,l0) conflicts: a4(r57,l0) a6(r49,l0) a9(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r67,l0) conflicts: a4(r57,l0) a6(r49,l0) a9(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r64,l0) conflicts: a0(r42,l0) a4(r57,l0) a6(r49,l0) a9(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r63,l0) conflicts: a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r45,l0) conflicts: a4(r57,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

  cp0:a5(r52)<->a6(r49)@76:shuffle
  cp1:a3(r54)<->a5(r52)@76:shuffle
  cp2:a3(r54)<->a4(r57)@76:shuffle
  cp3:a1(r55)<->a2(r74)@76:shuffle
  cp4:a1(r55)<->a3(r54)@76:shuffle
  cp5:a12(r77)<->a13(r67)@62:shuffle
  cp6:a11(r65)<->a12(r77)@62:shuffle
  cp7:a8(r69)<->a10(r70)@62:shuffle
  cp8:a8(r69)<->a11(r65)@62:shuffle
  cp9:a7(r71)<->a9(r50)@62:shuffle
  cp10:a7(r71)<->a8(r69)@62:shuffle
  cp11:a0(r42)<->a7(r71)@62:shuffle
  cp12:a15(r63)<->a16(r45)@125:shuffle
  cp13:a6(r49)<->a15(r63)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a4(r57)<-hr2@2000
  pref2:a16(r45)<-hr10@125
  pref3:a15(r63)<-hr10@125
  regions=1, blocks=7, points=24
    allocnos=17 (big 0), copies=14, conflicts=0, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r42 1r55 2r74 3r54 4r57 5r52 6r49 7r71 8r69 9r50 10r70 11r65 12r77 13r67 14r64 15r63 16r45
    modified regnos: 42 45 49 50 52 54 55 57 63 64 65 67 69 70 71 74 77
    border:
    Pressure: AR_REGS=5
 Removing pref2:hr10@125
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@168420
          2:( 2-7)@45380
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r57 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Forming thread by copy 12:a15r63-a16r45 (freq=125):
        Result (freq=4000): a15r63(2000) a16r45(2000)
      Forming thread by copy 13:a6r49-a15r63 (freq=125):
        Result (freq=6610): a6r49(2610) a15r63(2000) a16r45(2000)
      Forming thread by copy 0:a5r52-a6r49 (freq=76):
        Result (freq=7830): a5r52(1220) a6r49(2610) a15r63(2000) a16r45(2000)
      Forming thread by copy 1:a3r54-a5r52 (freq=76):
        Result (freq=9050): a3r54(1220) a5r52(1220) a6r49(2610) a15r63(2000) a16r45(2000)
      Forming thread by copy 3:a1r55-a2r74 (freq=76):
        Result (freq=2440): a1r55(1220) a2r74(1220)
      Forming thread by copy 5:a12r77-a13r67 (freq=62):
        Result (freq=2000): a12r77(1000) a13r67(1000)
      Forming thread by copy 6:a11r65-a12r77 (freq=62):
        Result (freq=3000): a11r65(1000) a12r77(1000) a13r67(1000)
      Forming thread by copy 7:a8r69-a10r70 (freq=62):
        Result (freq=2000): a8r69(1000) a10r70(1000)
      Forming thread by copy 9:a7r71-a9r50 (freq=62):
        Result (freq=5000): a7r71(1000) a9r50(4000)
      Pushing a14(r64,l0)(cost 0)
      Pushing a10(r70,l0)(cost 0)
      Pushing a8(r69,l0)(cost 0)
      Pushing a2(r74,l0)(cost 0)
      Pushing a1(r55,l0)(cost 0)
      Pushing a13(r67,l0)(cost 0)
      Pushing a12(r77,l0)(cost 0)
      Pushing a11(r65,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a7(r71,l0)(cost 0)
        Making a4(r57,l0) colorable
      Pushing a4(r57,l0)(cost 14440)
      Pushing a9(r50,l0)(cost 0)
      Pushing a5(r52,l0)(cost 0)
      Pushing a3(r54,l0)(cost 0)
      Pushing a15(r63,l0)(cost 0)
      Pushing a16(r45,l0)(cost 0)
      Pushing a6(r49,l0)(cost 0)
      Popping a6(r49,l0)  -- assign reg 10
      Popping a16(r45,l0)  -- assign reg 3
      Popping a15(r63,l0)  -- assign reg 10
      Popping a3(r54,l0)  -- assign reg 10
      Popping a5(r52,l0)  -- assign reg 10
      Popping a9(r50,l0)  -- assign reg 3
      Popping a4(r57,l0)  -- assign reg 4
      Popping a7(r71,l0)  -- assign reg 3
      Popping a0(r42,l0)  -- assign reg 2
      Popping a11(r65,l0)  -- assign reg 2
      Popping a12(r77,l0)  -- assign reg 2
      Popping a13(r67,l0)  -- assign reg 2
      Popping a1(r55,l0)  -- assign reg 10
      Popping a2(r74,l0)  -- assign reg 3
      Popping a8(r69,l0)  -- assign reg 2
      Popping a10(r70,l0)  -- assign reg 8
      Popping a14(r64,l0)  -- assign reg 8
Disposition:
    0:r42  l0     2   16:r45  l0     3    6:r49  l0    10    9:r50  l0     3
    5:r52  l0    10    3:r54  l0    10    1:r55  l0    10    4:r57  l0     4
   15:r63  l0    10   14:r64  l0     8   11:r65  l0     2   13:r67  l0     2
    8:r69  l0     2   10:r70  l0     8    7:r71  l0     3    2:r74  l0     3
   12:r77  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rndDelay

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10]
;;  ref usage 	r0={3d} r1={1d,8u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,6u} r8={2d} r9={2d} r10={2d,2u} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,6u} r17={1d,5u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r42={3d,6u} r45={1d,1u} r49={1d,2u} r50={1d,6u,1e} r52={1d,1u} r54={1d,1u} r55={1d,1u} r57={1d,2u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r67={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r74={1d,1u} r77={1d,1u} 
;;    total ref usage 144{84d,59u,1e} in 31{29 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 45 49 50 57 63 64
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 57 [ secSpan ])
        (reg:SI 2 a2 [ secSpan ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:464 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ secSpan ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 82 {call_value_internal}
     (nil)
    (nil))
(note 8 7 10 2 NOTE_INSN_DELETED)
(insn 10 8 11 2 (set (reg:SI 45 [ D.5981 ])
        (ashift:SI (reg:SI 10 a10)
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(call_insn 11 10 12 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 82 {call_value_internal}
     (nil)
    (nil))
(note 12 11 16 2 NOTE_INSN_DELETED)
(insn 16 12 17 2 (set (reg:SI 63)
        (ior:SI (reg:SI 45 [ D.5981 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 45 [ D.5981 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 17 16 18 2 (set (reg:SI 49 [ D.5982 ])
        (sign_extend:SI (subreg:HI (reg:SI 63) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 18 17 19 2 (set (reg/v:SI 50 [ r ])
        (zero_extend:SI (subreg/u:HI (reg:SI 49 [ D.5982 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 33 {zero_extendhisi2}
     (nil))
(debug_insn 19 18 20 2 (var_location:HI r (subreg:HI (reg/v:SI 50 [ r ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:465 -1
     (nil))
(insn 20 19 21 2 (set (reg/v:SI 42 [ delay ])
        (reg/v:SI 50 [ r ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:466 44 {movsi_internal}
     (nil))
(debug_insn 21 20 22 2 (var_location:SI delay (reg/v:SI 50 [ r ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:466 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 64)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC17") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:467 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ge (reg:SI 64)
                (reg/v:SI 50 [ r ]))
            (label_ref 36)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:467 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 64)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 36)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              4 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 50 57

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	 42 65 67 69 70 71 77
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 27 3 (set (reg:SI 67)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC18") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1125899907 [0x431bde83])
        (nil)))
(insn 27 25 29 3 (set (reg:SI 77 [+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 50 [ r ]))
                    (zero_extend:DI (reg:SI 67)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 8 {umulsi3_highpart}
     (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
(insn 29 27 30 3 (set (reg:SI 65)
        (lshiftrt:SI (reg:SI 77 [+4 ])
            (const_int 14 [0xe]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 53 {lshrsi3}
     (expr_list:REG_DEAD (reg:SI 77 [+4 ])
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 50 [ r ])
                (const_int 62500 [0xf424]))
            (nil))))
(insn 30 29 31 3 (set (reg:SI 70)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC17") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 31 30 32 3 (set (reg:SI 69)
        (mult:SI (reg:SI 65)
            (reg:SI 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 70)
        (expr_list:REG_DEAD (reg:SI 65)
            (nil))))
(insn 32 31 33 3 (set (reg:SI 71)
        (minus:SI (reg/v:SI 50 [ r ])
            (reg:SI 69))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 69)
        (expr_list:REG_DEAD (reg/v:SI 50 [ r ])
            (nil))))
(insn 33 32 35 3 (set (reg/v:SI 42 [ delay ])
        (zero_extend:SI (subreg:HI (reg:SI 71) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(debug_insn 35 33 36 3 (var_location:SI delay (reg/v:SI 42 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:468 -1
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 57

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [50.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(1){ }u35(7){ }u36(16){ }u37(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  def 	
(code_label 36 35 37 4 28 "" [1 uses])
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 38 37 39 4 (var_location:SI delay (reg/v:SI 42 [ delay ])) -1
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (eq (reg/v:SI 57 [ secSpan ])
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:469 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 48)
;;  succ:       5 [61.0%]  (FALLTHRU)
;;              6 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 57

;; basic block 5, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [61.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(1){ }u41(7){ }u42(16){ }u43(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 57
;; lr  def 	 42 52 54 55 74
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:SI 52 [ D.5980 ])
        (zero_extend:SI (subreg:QI (reg:SI 49 [ D.5982 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 49 [ D.5982 ])
        (nil)))
(note 42 41 43 5 NOTE_INSN_DELETED)
(insn 43 42 44 5 (set (reg:SI 54 [ D.5981 ])
        (umod:SI (reg:SI 52 [ D.5980 ])
            (reg/v:SI 57 [ secSpan ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 20 {umodsi3}
     (expr_list:REG_DEAD (reg/v:SI 57 [ secSpan ])
        (expr_list:REG_DEAD (reg:SI 52 [ D.5980 ])
            (nil))))
(insn 44 43 45 5 (set (reg:SI 74)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC17") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 45 44 46 5 (set (reg:SI 55 [ D.5981 ])
        (mult:SI (reg:SI 54 [ D.5981 ])
            (reg:SI 74))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 74)
        (expr_list:REG_DEAD (reg:SI 54 [ D.5981 ])
            (nil))))
(insn 46 45 47 5 (set (reg/v:SI 42 [ delay ])
        (plus:SI (reg/v:SI 42 [ delay ])
            (reg:SI 55 [ D.5981 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 55 [ D.5981 ])
        (nil)))
(debug_insn 47 46 48 5 (var_location:SI delay (reg/v:SI 42 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:470 -1
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4 [39.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(1){ }u54(7){ }u55(16){ }u56(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 48 47 49 6 29 "" [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 55 6 (var_location:SI delay (reg/v:SI 42 [ delay ])) -1
     (nil))
(insn 55 50 56 6 (set (reg/i:SI 2 a2)
        (reg/v:SI 42 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:472 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ delay ])
        (nil)))
(insn 56 55 0 6 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:472 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function txDelay (txDelay, funcdef_no=51, decl_uid=3605, cgraph_uid=51, symbol_order=58)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
scanning new insn with uid = 35.
verify found no changes in insn with uid = 35.
deleting insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 44 uninteresting (no unique first use)
Reg 53 uninteresting
Reg 45 uninteresting
Reg 54 uninteresting
Reg 46 uninteresting
Reg 47 uninteresting
Reg 55 uninteresting
Reg 58 uninteresting
Reg 60 uninteresting
Found def insn 2 for 50 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 35 (nil))

Pass 0 for finding pseudo/allocno costs

    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r59,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r58,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r53,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r50,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r55,l0) costs: ACC_REG:10848,10848 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:57856,57856 MEM:7232,7232
  a1(r60,l0) costs: ACC_REG:5424,5424 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28928,28928 MEM:7232,7232
  a2(r58,l0) costs: ACC_REG:5424,5424 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28928,28928 MEM:7232,7232
  a3(r59,l0) costs: ACC_REG:5424,5424 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28928,28928 MEM:7232,7232
  a4(r44,l0) costs: ACC_REG:7212,7212 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38464,38464 MEM:9616,9616
  a5(r47,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a6(r46,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a7(r54,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a8(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a10(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 30(l0): point = 1
   Insn 29(l0): point = 3
   Insn 35(l0): point = 5
   Insn 28(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 15(l0): point = 23
   Insn 14(l0): point = 25
   Insn 13(l0): point = 27
   Insn 11(l0): point = 29
   Insn 9(l0): point = 31
   Insn 8(l0): point = 33
   Insn 2(l0): point = 35
 a0(r55): [2..11]
 a1(r60): [2..3]
 a2(r58): [4..5]
 a3(r59): [4..7]
 a4(r44): [10..29]
 a5(r47): [15..16]
 a6(r46): [17..18]
 a7(r54): [19..20]
 a8(r45): [24..25]
 a9(r53): [26..27]
 a10(r50): [30..35]
Compressing live ranges: from 38 to 18 - 47%
Ranges after the compression:
 a0(r55): [0..5]
 a1(r60): [0..1]
 a2(r58): [2..3]
 a3(r59): [2..3]
 a4(r44): [4..15]
 a5(r47): [6..7]
 a6(r46): [8..9]
 a7(r54): [10..11]
 a8(r45): [12..13]
 a9(r53): [14..15]
 a10(r50): [16..17]
+++Allocating 80 bytes for conflict table (uncompressed size 88)
;; a0(r55,l0) conflicts: a1(r60,l0) a2(r58,l0) a3(r59,l0) a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r60,l0) conflicts: a0(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r58,l0) conflicts: a0(r55,l0) a3(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r59,l0) conflicts: a0(r55,l0) a2(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r44,l0) conflicts: a0(r55,l0) a5(r47,l0) a6(r46,l0) a7(r54,l0) a8(r45,l0) a9(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r47,l0) conflicts: a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r46,l0) conflicts: a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r54,l0) conflicts: a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r45,l0) conflicts: a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r53,l0) conflicts: a4(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r50,l0) conflicts:  cp0:a1(r60)<->a2(r58)@113:shuffle
  cp1:a1(r60)<->a3(r59)@113:shuffle
  cp2:a5(r47)<->a6(r46)@62:shuffle
  cp3:a4(r44)<->a10(r50)@125:shuffle
  pref0:a10(r50)<-hr2@2000
  pref1:a4(r44)<-hr10@125
  regions=1, blocks=6, points=18
    allocnos=11 (big 0), copies=4, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r55 1r60 2r58 3r59 4r44 5r47 6r46 7r54 8r45 9r53 10r50
    modified regnos: 44 45 46 47 50 53 54 55 58 59 60
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@109588
          2:( 2 4-7)@24000
      Allocno a0r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r50 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Forming thread by copy 3:a4r44-a10r50 (freq=125):
        Result (freq=4404): a4r44(2404) a10r50(2000)
      Forming thread by copy 0:a1r60-a2r58 (freq=113):
        Result (freq=3616): a1r60(1808) a2r58(1808)
      Forming thread by copy 2:a5r47-a6r46 (freq=62):
        Result (freq=2000): a5r47(1000) a6r46(1000)
      Pushing a7(r54,l0)(cost 0)
      Pushing a3(r59,l0)(cost 0)
      Pushing a9(r53,l0)(cost 0)
      Pushing a8(r45,l0)(cost 0)
      Pushing a6(r46,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Pushing a2(r58,l0)(cost 0)
      Pushing a1(r60,l0)(cost 0)
      Pushing a0(r55,l0)(cost 0)
      Pushing a10(r50,l0)(cost 0)
      Pushing a4(r44,l0)(cost 0)
      Popping a4(r44,l0)  -- assign reg 10
      Popping a10(r50,l0)  -- assign reg 2
      Popping a0(r55,l0)  -- assign reg 2
      Popping a1(r60,l0)  -- assign reg 8
      Popping a2(r58,l0)  -- assign reg 8
      Popping a5(r47,l0)  -- assign reg 2
      Popping a6(r46,l0)  -- assign reg 2
      Popping a8(r45,l0)  -- assign reg 2
      Popping a9(r53,l0)  -- assign reg 2
      Popping a3(r59,l0)  -- assign reg 9
      Popping a7(r54,l0)  -- assign reg 2
Disposition:
    4:r44  l0    10    8:r45  l0     2    6:r46  l0     2    5:r47  l0     2
   10:r50  l0     2    9:r53  l0     2    7:r54  l0     2    0:r55  l0     2
    2:r58  l0     8    3:r59  l0     9    1:r60  l0     8
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


txDelay

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10]
;;  ref usage 	r0={2d} r1={1d,6u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,5u} r8={1d} r9={1d} r10={2d,2u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d,4u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,3u} r45={1d,1u} r46={1d,1u} r47={1d,1u} r50={1d,1u} r53={1d,1u} r54={1d,1u} r55={1d,3u} r58={1d,1u} r59={1d,1u,1e} r60={1d,1u} 
;;    total ref usage 89{49d,39u,1e} in 18{17 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 45 50 53
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:SI 50 [ reftime ])
        (reg:SI 2 a2 [ reftime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:475 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ reftime ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 10 a10)
        (reg:SI 3 a3 [ secSpan ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:476 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ secSpan ])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("rndDelay") [flags 0x3]  <function_decl 0x100b66ca8 rndDelay>) [0 rndDelay S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:476 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg/v:SI 44 [ reftime ])
        (plus:SI (reg:SI 10 a10)
            (reg/v:SI 50 [ reftime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:476 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 50 [ reftime ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(debug_insn 12 11 13 2 (var_location:SI reftime (reg/v:SI 44 [ reftime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:476 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 53)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC19") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 45 [ D.5986 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 53)
                    (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 53)
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:SI 45 [ D.5986 ])
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 45 [ D.5986 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 21)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 46 47 54
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC19") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 46 [ D.5985 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 54)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (nil)))
(insn 19 18 20 3 (set (reg:SI 47 [ D.5985 ])
        (minus:SI (reg/v:SI 44 [ reftime ])
            (reg:SI 46 [ D.5985 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.5985 ])
        (nil)))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (ge (reg:SI 47 [ D.5985 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref:SI 33))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:477 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 47 [ D.5985 ])
        (int_list:REG_BR_PROB 1912 (nil)))
 -> 33)
;;  succ:       4 [80.9%]  (FALLTHRU)
;;              5 [19.1%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

;; basic block 4, loop depth 0, count 0, freq 9044, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [80.9%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 55 58 59 60
(code_label 21 20 22 4 31 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 55)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC19") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:478 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 24 23 28 4 (set (mem/j/c:SI (plus:SI (reg/f:SI 55)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])
        (reg/v:SI 44 [ reftime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:478 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 [ reftime ])
        (nil)))
(insn 28 24 35 4 (set (reg:HI 59 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 55)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:479 45 {movhi_internal}
     (nil))
(insn 35 28 29 4 (set (reg:HI 58)
        (const_int 256 [0x100])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:479 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 256 [0x100])
        (nil)))
(insn 29 35 30 4 (set (reg:SI 60)
        (ior:SI (subreg:SI (reg:HI 59 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 58) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:479 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 59 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 58)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 59 [ LMIC.opmode ]) 0)
                    (const_int 256 [0x100]))
                (nil)))))
(insn 30 29 33 4 (set (mem/j/c:HI (plus:SI (reg/f:SI 55)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 60) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:479 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 60)
        (expr_list:REG_DEAD (reg/f:SI 55)
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [19.1%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(1){ }u37(7){ }u38(16){ }u39(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 33 30 34 5 30 "" [1 uses])
(note 34 33 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function schedRx12 (schedRx12, funcdef_no=74, decl_uid=3761, cgraph_uid=74, symbol_order=82)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 124.
verify found no changes in insn with uid = 124.
deleting insn with uid = 92.
scanning new insn with uid = 125.
verify found no changes in insn with uid = 125.
deleting insn with uid = 84.
deleting insn with uid = 65.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 65 uninteresting (no unique first use)
Reg 66: def dominates all uses has unique first use
Reg 70 uninteresting
Reg 63 uninteresting
Reg 71: local to bb 2 def dominates all uses has unique first use
Reg 72 uninteresting
Reg 44 uninteresting
Reg 74 uninteresting
Reg 77: local to bb 3 def dominates all uses has unique first use
Reg 79: local to bb 3 def dominates all uses has unique first use
Reg 88 uninteresting
Reg 124 uninteresting
Reg 126: def dominates all uses has unique first use
Reg 95 uninteresting
Reg 97: local to bb 5 def dominates all uses has unique first use
Reg 99 uninteresting
Reg 100 uninteresting
Reg 103 uninteresting
Reg 105: local to bb 6 def dominates all uses has unique first use
Reg 104 uninteresting
Reg 51 uninteresting
Reg 108: local to bb 7 def dominates all uses has unique first use
Reg 106 uninteresting
Ignoring reg 54, has equiv memory
Reg 55 uninteresting
Reg 57: local to bb 8 def dominates all uses has unique first use
Reg 58 uninteresting
Reg 60 uninteresting
Reg 61 uninteresting
Examining insn 102, def for 57
  all ok
Reg 66 not local to one basic block
Ignoring reg 71 with equiv init insn
Examining insn 30, def for 77
  all ok
Examining insn 32, def for 79
  all ok
Examining insn 67, def for 97
  all ok
Ignoring reg 105 with equiv init insn
Examining insn 94, def for 108
  all ok
Reg 126 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 8 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 54: (insn_list:REG_DEP_TRUE 99 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 71: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 125 (nil))
init_insns for 105: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 106: (insn_list:REG_DEP_TRUE 124 (nil))
init_insns for 109: (insn_list:REG_DEP_TRUE 98 (nil))

Pass 0 for finding pseudo/allocno costs

    r128: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r128,l0) best AR_REGS, allocno AR_REGS
    r126: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r126,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r124,l0) best AR_REGS, allocno AR_REGS
    r117: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r117,l0) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r109,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r108,l0) best AR_REGS, allocno AR_REGS
    r106: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r106,l0) best AR_REGS, allocno AR_REGS
    r105: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r105,l0) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r104,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r103,l0) best AR_REGS, allocno AR_REGS
    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r102,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r100,l0) best AR_REGS, allocno AR_REGS
    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r99,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r97,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r95,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r93,l0) best AR_REGS, allocno AR_REGS
    r88: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r88,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r79,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r77,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r74,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r72,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r71,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r70,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r65,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r63,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r61,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r54,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r51,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r61,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a1(r66,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r109,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a3(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r64,l0) costs: ACC_REG:15606,15606 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:83232,83232 MEM:20808,20808
  a6(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a9(r65,l0) costs: ACC_REG:11490,11490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:61280,61280 MEM:15320,15320
  a10(r106,l0) costs: ACC_REG:2232,2232 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11904,11904 MEM:0,0
  a11(r108,l0) costs: ACC_REG:2232,2232 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11904,11904 MEM:2976,2976
  a12(r51,l0) costs: ACC_REG:2232,2232 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11904,11904 MEM:2976,2976
  a13(r128,l0) costs: ACC_REG:8436,8436 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:44992,44992 MEM:11248,11248
  a14(r104,l0) costs: ACC_REG:1422,1422 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7584,7584 MEM:0,0
  a15(r105,l0) costs: ACC_REG:1422,1422 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7584,7584 MEM:1896,1896
  a16(r103,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a17(r102,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a18(r100,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a19(r99,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a20(r97,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a21(r126,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a22(r95,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a23(r117,l0) costs: ACC_REG:9150,9150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48800,48800 MEM:12200,12200
  a24(r93,l0) costs: ACC_REG:4575,4575 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24400,24400 MEM:6100,6100
  a25(r124,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a26(r79,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a27(r88,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a28(r77,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a29(r44,l0) costs: ACC_REG:11490,11490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:61280,61280 MEM:15320,15320
  a30(r74,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a31(r71,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a32(r72,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a33(r63,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a34(r70,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 114(l0): point = 0
   Insn 113(l0): point = 2
   Insn 112(l0): point = 4
   Insn 111(l0): point = 6
   Insn 108(l0): point = 8
   Insn 106(l0): point = 10
   Insn 105(l0): point = 12
   Insn 104(l0): point = 14
   Insn 102(l0): point = 16
   Insn 100(l0): point = 18
   Insn 99(l0): point = 20
   Insn 98(l0): point = 22
   Insn 95(l0): point = 25
   Insn 124(l0): point = 27
   Insn 94(l0): point = 29
   Insn 91(l0): point = 31
   Insn 122(l0): point = 34
   Insn 86(l0): point = 36
   Insn 125(l0): point = 38
   Insn 85(l0): point = 40
   Insn 82(l0): point = 43
   Insn 80(l0): point = 45
   Insn 79(l0): point = 47
   Insn 78(l0): point = 49
   Insn 76(l0): point = 51
   Insn 75(l0): point = 53
   Insn 69(l0): point = 55
   Insn 68(l0): point = 57
   Insn 67(l0): point = 59
   Insn 64(l0): point = 61
   Insn 61(l0): point = 64
   Insn 60(l0): point = 67
   Insn 59(l0): point = 69
   Insn 58(l0): point = 71
   Insn 54(l0): point = 73
   Insn 50(l0): point = 75
   Insn 35(l0): point = 77
   Insn 33(l0): point = 79
   Insn 32(l0): point = 81
   Insn 30(l0): point = 83
   Insn 25(l0): point = 85
   Insn 22(l0): point = 88
   Insn 21(l0): point = 90
   Insn 19(l0): point = 92
   Insn 18(l0): point = 94
   Insn 17(l0): point = 96
   Insn 15(l0): point = 98
   Insn 14(l0): point = 100
   Insn 13(l0): point = 102
   Insn 3(l0): point = 104
   Insn 2(l0): point = 106
 a0(r61): [5..10]
 a1(r66): [7..104]
 a2(r109): [9..22]
 a3(r60): [11..12]
 a4(r57): [11..16]
 a5(r64): [13..98]
 a6(r58): [13..14]
 a7(r55): [17..18]
 a8(r54): [19..20]
 a9(r65): [19..106]
 a10(r106): [26..27]
 a11(r108): [26..29]
 a12(r51): [30..31]
 a13(r128): [43..57] [32..33]
 a14(r104): [37..38]
 a15(r105): [37..40]
 a16(r103): [44..47]
 a17(r102): [48..49] [45..45]
 a18(r100): [50..51]
 a19(r99): [52..53]
 a20(r97): [56..59]
 a21(r126): [58..71]
 a22(r95): [60..61]
 a23(r117): [62..79]
 a24(r93): [67..69] [62..64]
 a25(r124): [68..73]
 a26(r79): [72..81]
 a27(r88): [74..75]
 a28(r77): [78..83]
 a29(r44): [80..90]
 a30(r74): [84..85]
 a31(r71): [91..96]
 a32(r72): [93..94]
 a33(r63): [99..100]
 a34(r70): [101..102]
Compressing live ranges: from 109 to 53 - 48%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r66): [0..52]
 a2(r109): [0..9]
 a3(r60): [2..3]
 a4(r57): [2..5]
 a5(r64): [4..48]
 a6(r58): [4..5]
 a7(r55): [6..7]
 a8(r54): [8..9]
 a9(r65): [8..52]
 a10(r106): [10..11]
 a11(r108): [10..11]
 a12(r51): [12..13]
 a13(r128): [18..28] [14..15]
 a14(r104): [16..17]
 a15(r105): [16..17]
 a16(r103): [18..20]
 a17(r102): [21..22] [19..19]
 a18(r100): [23..24]
 a19(r99): [25..26]
 a20(r97): [27..30]
 a21(r126): [29..36]
 a22(r95): [31..32]
 a23(r117): [33..42]
 a24(r93): [33..36]
 a25(r124): [35..38]
 a26(r79): [37..44]
 a27(r88): [39..40]
 a28(r77): [41..44]
 a29(r44): [43..46]
 a30(r74): [45..46]
 a31(r71): [47..48]
 a32(r72): [47..48]
 a33(r63): [49..50]
 a34(r70): [51..52]
+++Allocating 280 bytes for conflict table (uncompressed size 280)
;; a0(r61,l0) conflicts: a2(r109,l0) a1(r66,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a1(r66,l0) conflicts: a0(r61,l0) a2(r109,l0) a3(r60,l0) a4(r57,l0) a6(r58,l0) a5(r64,l0) a7(r55,l0) a8(r54,l0) a9(r65,l0) a10(r106,l0) a11(r108,l0) a12(r51,l0) a13(r128,l0) a14(r104,l0) a15(r105,l0) a16(r103,l0) a17(r102,l0) a18(r100,l0) a19(r99,l0) a20(r97,l0) a21(r126,l0) a22(r95,l0) a24(r93,l0) a23(r117,l0) a25(r124,l0) a26(r79,l0) a27(r88,l0) a28(r77,l0) a29(r44,l0) a30(r74,l0) a31(r71,l0) a32(r72,l0) a33(r63,l0) a34(r70,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r109,l0) conflicts: a0(r61,l0) a1(r66,l0) a3(r60,l0) a4(r57,l0) a6(r58,l0) a5(r64,l0) a7(r55,l0) a8(r54,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r60,l0) conflicts: a2(r109,l0) a1(r66,l0) a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r57,l0) conflicts: a2(r109,l0) a1(r66,l0) a3(r60,l0) a6(r58,l0) a5(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r64,l0) conflicts: a2(r109,l0) a1(r66,l0) a4(r57,l0) a6(r58,l0) a7(r55,l0) a8(r54,l0) a9(r65,l0) a10(r106,l0) a11(r108,l0) a12(r51,l0) a13(r128,l0) a14(r104,l0) a15(r105,l0) a16(r103,l0) a17(r102,l0) a18(r100,l0) a19(r99,l0) a20(r97,l0) a21(r126,l0) a22(r95,l0) a24(r93,l0) a23(r117,l0) a25(r124,l0) a26(r79,l0) a27(r88,l0) a28(r77,l0) a29(r44,l0) a30(r74,l0) a31(r71,l0) a32(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r58,l0) conflicts: a2(r109,l0) a1(r66,l0) a4(r57,l0) a5(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r55,l0) conflicts: a2(r109,l0) a1(r66,l0) a5(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r54,l0) conflicts: a2(r109,l0) a1(r66,l0) a5(r64,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r65,l0) conflicts: a2(r109,l0) a1(r66,l0) a5(r64,l0) a8(r54,l0) a10(r106,l0) a11(r108,l0) a12(r51,l0) a13(r128,l0) a14(r104,l0) a15(r105,l0) a16(r103,l0) a17(r102,l0) a18(r100,l0) a19(r99,l0) a20(r97,l0) a21(r126,l0) a22(r95,l0) a24(r93,l0) a23(r117,l0) a25(r124,l0) a26(r79,l0) a27(r88,l0) a28(r77,l0) a29(r44,l0) a30(r74,l0) a31(r71,l0) a32(r72,l0) a33(r63,l0) a34(r70,l0)
;;     total conflict hard regs: 3 4
;;     conflict hard regs: 3 4

;; a10(r106,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a11(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r108,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a10(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r51,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r128,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a16(r103,l0) a17(r102,l0) a18(r100,l0) a19(r99,l0) a20(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r104,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a15(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r105,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a14(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r103,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a13(r128,l0) a17(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r102,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a13(r128,l0) a16(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r100,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a13(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r99,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a13(r128,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r97,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a13(r128,l0) a21(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r126,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a20(r97,l0) a22(r95,l0) a24(r93,l0) a23(r117,l0) a25(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r95,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a21(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r117,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a21(r126,l0) a24(r93,l0) a25(r124,l0) a26(r79,l0) a27(r88,l0) a28(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r93,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a21(r126,l0) a23(r117,l0) a25(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r124,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a21(r126,l0) a24(r93,l0) a23(r117,l0) a26(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r79,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a23(r117,l0) a25(r124,l0) a27(r88,l0) a28(r77,l0) a29(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r88,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a23(r117,l0) a26(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r77,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a23(r117,l0) a26(r79,l0) a29(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r44,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a26(r79,l0) a28(r77,l0) a30(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r74,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a29(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r71,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a32(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r72,l0) conflicts: a1(r66,l0) a5(r64,l0) a9(r65,l0) a31(r71,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r63,l0) conflicts: a1(r66,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r70,l0) conflicts: a1(r66,l0) a9(r65,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  cp0:a7(r55)<->a8(r54)@125:shuffle
  cp1:a7(r55)<->a9(r65)@125:shuffle
  cp2:a4(r57)<->a7(r55)@125:shuffle
  cp3:a3(r60)<->a5(r64)@125:shuffle
  cp4:a3(r60)<->a6(r58)@125:shuffle
  cp5:a0(r61)<->a4(r57)@125:shuffle
  cp6:a0(r61)<->a3(r60)@125:shuffle
  cp7:a12(r51)<->a13(r128)@46:shuffle
  cp8:a11(r108)<->a12(r51)@46:shuffle
  cp9:a22(r95)<->a23(r117)@76:shuffle
  cp10:a22(r95)<->a24(r93)@76:shuffle
  cp11:a20(r97)<->a22(r95)@76:shuffle
  cp12:a13(r128)<->a21(r126)@76:shuffle
  cp13:a18(r100)<->a19(r99)@76:shuffle
  cp14:a17(r102)<->a18(r100)@76:shuffle
  cp15:a28(r77)<->a30(r74)@76:shuffle
  cp16:a23(r117)<->a29(r44)@76:shuffle
  cp17:a25(r124)<->a27(r88)@76:shuffle
  cp18:a21(r126)<->a26(r79)@76:shuffle
  cp19:a33(r63)<->a34(r70)@125:shuffle
  pref0:a1(r66)<-hr12@2000
  pref1:a9(r65)<-hr2@2000
  pref2:a1(r66)<-hr3@2000
  pref3:a0(r61)<-hr11@125
  pref4:a33(r63)<-hr4@125
  regions=1, blocks=9, points=53
    allocnos=35 (big 0), copies=20, conflicts=0, ranges=37

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r61 1r66 2r109 3r60 4r57 5r64 6r58 7r55 8r54 9r65 10r106 11r108 12r51 13r128 14r104 15r105 16r103 17r102 18r100 19r99 20r97 21r126 22r95 23r117 24r93 25r124 26r79 27r88 28r77 29r44 30r74 31r71 32r72 33r63 34r70
    modified regnos: 44 51 54 55 57 58 60 61 63 64 65 66 70 71 72 74 77 79 88 93 95 97 99 100 102 103 104 105 106 108 109 117 124 126 128
    border:
    Pressure: AR_REGS=7
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@412188
          2:( 2 5-15)@38640
      Allocno a0r61 of AR_REGS(14) has 13 avail. regs  2-11 13-15, ^node:  2-15 (confl regs =  0 1 12 16-34)
      Allocno a1r66 of AR_REGS(14) has 13 avail. regs  2 3 5-15, ^node:  2-15 (confl regs =  0 1 4 16-34)
      Allocno a2r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r65 of AR_REGS(14) has 12 avail. regs  2 5-15, node:  2 5-15 (confl regs =  0 1 3 4 16-34)
      Allocno a10r106 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r128 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r104 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r105 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r99 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r126 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r117 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r88 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r70 of AR_REGS(14) has 13 avail. regs  2 3 5-15, ^node:  2-15 (confl regs =  0 1 4 16-34)
      Forming thread by copy 0:a7r55-a8r54 (freq=125):
        Result (freq=4000): a7r55(2000) a8r54(2000)
      Forming thread by copy 2:a4r57-a7r55 (freq=125):
        Result (freq=6000): a4r57(2000) a7r55(2000) a8r54(2000)
      Forming thread by copy 3:a3r60-a5r64 (freq=125):
        Result (freq=7202): a3r60(2000) a5r64(5202)
      Forming thread by copy 5:a0r61-a4r57 (freq=125):
        Result (freq=9000): a0r61(3000) a4r57(2000) a7r55(2000) a8r54(2000)
      Forming thread by copy 19:a33r63-a34r70 (freq=125):
        Result (freq=4000): a33r63(2000) a34r70(2000)
      Forming thread by copy 9:a22r95-a23r117 (freq=76):
        Result (freq=4270): a22r95(1220) a23r117(3050)
      Forming thread by copy 11:a20r97-a22r95 (freq=76):
        Result (freq=5490): a20r97(1220) a22r95(1220) a23r117(3050)
      Forming thread by copy 12:a13r128-a21r126 (freq=76):
        Result (freq=4642): a13r128(2812) a21r126(1830)
      Forming thread by copy 13:a18r100-a19r99 (freq=76):
        Result (freq=2440): a18r100(1220) a19r99(1220)
      Forming thread by copy 14:a17r102-a18r100 (freq=76):
        Result (freq=4270): a17r102(1830) a18r100(1220) a19r99(1220)
      Forming thread by copy 15:a28r77-a30r74 (freq=76):
        Result (freq=2440): a28r77(1220) a30r74(1220)
      Forming thread by copy 16:a23r117-a29r44 (freq=76):
        Result (freq=9320): a20r97(1220) a29r44(3830) a22r95(1220) a23r117(3050)
      Forming thread by copy 17:a25r124-a27r88 (freq=76):
        Result (freq=3050): a25r124(1830) a27r88(1220)
      Forming thread by copy 18:a21r126-a26r79 (freq=76):
        Result (freq=5862): a13r128(2812) a26r79(1220) a21r126(1830)
      Forming thread by copy 7:a12r51-a13r128 (freq=46):
        Result (freq=6606): a12r51(744) a13r128(2812) a26r79(1220) a21r126(1830)
      Forming thread by copy 8:a11r108-a12r51 (freq=46):
        Result (freq=7350): a11r108(744) a12r51(744) a13r128(2812) a26r79(1220) a21r126(1830)
      Pushing a15(r105,l0)(cost 0)
      Pushing a14(r104,l0)(cost 0)
      Pushing a10(r106,l0)(cost 0)
      Pushing a24(r93,l0)(cost 0)
      Pushing a16(r103,l0)(cost 0)
      Pushing a32(r72,l0)(cost 0)
      Pushing a6(r58,l0)(cost 0)
      Pushing a30(r74,l0)(cost 0)
      Pushing a28(r77,l0)(cost 0)
      Pushing a31(r71,l0)(cost 0)
      Pushing a27(r88,l0)(cost 0)
      Pushing a25(r124,l0)(cost 0)
      Pushing a33(r63,l0)(cost 0)
      Pushing a34(r70,l0)(cost 0)
      Pushing a2(r109,l0)(cost 0)
      Pushing a19(r99,l0)(cost 0)
      Pushing a18(r100,l0)(cost 0)
      Pushing a17(r102,l0)(cost 0)
      Pushing a3(r60,l0)(cost 0)
      Pushing a12(r51,l0)(cost 0)
        Making a5(r64,l0) colorable
        Making a9(r65,l0) colorable
      Pushing a9(r65,l0)(cost 19320)
      Pushing a5(r64,l0)(cost 20808)
        Making a1(r66,l0) colorable
      Pushing a1(r66,l0)(cost 12000)
      Pushing a11(r108,l0)(cost 0)
      Pushing a26(r79,l0)(cost 0)
      Pushing a21(r126,l0)(cost 0)
      Pushing a13(r128,l0)(cost 0)
      Pushing a8(r54,l0)(cost 0)
      Pushing a7(r55,l0)(cost 0)
      Pushing a4(r57,l0)(cost 0)
      Pushing a0(r61,l0)(cost 0)
      Pushing a22(r95,l0)(cost 0)
      Pushing a20(r97,l0)(cost 0)
      Pushing a23(r117,l0)(cost 0)
      Pushing a29(r44,l0)(cost 0)
      Popping a29(r44,l0)  -- assign reg 8
      Popping a23(r117,l0)  -- assign reg 8
      Popping a20(r97,l0)  -- assign reg 8
      Popping a22(r95,l0)  -- assign reg 8
      Popping a0(r61,l0)  -- assign reg 11
      Popping a4(r57,l0)  -- assign reg 2
      Popping a7(r55,l0)  -- assign reg 2
      Popping a8(r54,l0)  -- assign reg 8
      Popping a13(r128,l0)  -- assign reg 9
      Popping a21(r126,l0)  -- assign reg 9
      Popping a26(r79,l0)  -- assign reg 9
      Popping a11(r108,l0)  -- assign reg 9
      Popping a1(r66,l0)  -- assign reg 12
      Popping a5(r64,l0)  -- assign reg 10
      Popping a9(r65,l0)  -- assign reg 2
      Popping a12(r51,l0)  -- assign reg 9
      Popping a3(r60,l0)  -- assign reg 11
      Popping a17(r102,l0)  -- assign reg 8
      Popping a18(r100,l0)  -- assign reg 8
      Popping a19(r99,l0)  -- assign reg 8
      Popping a2(r109,l0)  -- assign reg 9
      Popping a34(r70,l0)  -- assign reg 8
      Popping a33(r63,l0)  -- assign reg 4
      Popping a25(r124,l0)  -- assign reg 4
      Popping a27(r88,l0)  -- assign reg 4
      Popping a31(r71,l0)  -- assign reg 4
      Popping a28(r77,l0)  -- assign reg 4
      Popping a30(r74,l0)  -- assign reg 4
      Popping a6(r58,l0)  -- assign reg 11
      Popping a32(r72,l0)  -- assign reg 8
      Popping a16(r103,l0)  -- assign reg 4
      Popping a24(r93,l0)  -- assign reg 11
      Popping a10(r106,l0)  -- assign reg 4
      Popping a14(r104,l0)  -- assign reg 4
      Popping a15(r105,l0)  -- assign reg 8
Disposition:
   29:r44  l0     8   12:r51  l0     9    8:r54  l0     8    7:r55  l0     2
    4:r57  l0     2    6:r58  l0    11    3:r60  l0    11    0:r61  l0    11
   33:r63  l0     4    5:r64  l0    10    9:r65  l0     2    1:r66  l0    12
   34:r70  l0     8   31:r71  l0     4   32:r72  l0     8   30:r74  l0     4
   28:r77  l0     4   26:r79  l0     9   27:r88  l0     4   24:r93  l0    11
   22:r95  l0     8   20:r97  l0     8   19:r99  l0     8   18:r100 l0     8
   17:r102 l0     8   16:r103 l0     4   14:r104 l0     4   15:r105 l0     8
   10:r106 l0     4   11:r108 l0     9    2:r109 l0     9   23:r117 l0     8
   25:r124 l0     4   21:r126 l0     9   13:r128 l0     9
New iteration of spill/restore move
+++Costs: overall -8500, reg -8500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


schedRx12

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={2d} r1={1d,9u} r2={1d,1u} r3={1d,1u} r4={1d,2u} r5={1d} r6={1d} r7={1d,8u} r8={1d} r9={1d} r10={2d,1u} r11={2d,1u} r12={2d,1u} r13={1d} r14={1d} r15={1d} r16={1d,8u} r17={1d,7u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,4u} r51={1d,1u} r54={1d,1u} r55={1d,1u} r57={1d,1u} r58={1d,1u} r60={1d,1u} r61={1d,2u} r63={1d,1u} r64={1d,6u,2e} r65={1d,4u} r66={1d,1u} r70={1d,1u} r71={1d,2u} r72={1d,1u} r74={1d,1u} r77={1d,1u} r79={1d,1u} r88={1d,1u} r93={2d,1u} r95={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} r102={2d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r108={1d,1u} r109={1d,3u,1e} r117={2d,3u} r124={1d,2u} r126={1d,2u} r128={2d,4u} 
;;    total ref usage 179{79d,97u,3e} in 55{54 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 63 64 65 66 70 71 72
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:SI 65 [ delay ])
        (reg:SI 2 a2 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1353 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ delay ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 66 [ func ])
        (reg:SI 3 a3 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1353 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ func ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 6 2 NOTE_INSN_DELETED)
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 10 6 11 2 (var_location:SI table (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1354 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI index (reg:SI 4 a4 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1354 -1
     (nil))
(note 12 11 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg/f:SI 70)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC20") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_DR2HSYM_osticks") [flags 0x2]  <var_decl 0x100b69240 constant_table_DR2HSYM_osticks>)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 63 [ D.5994 ])
        (plus:SI (mult:SI (reg:SI 4 a4 [ dr ])
                (const_int 4 [0x4]))
            (reg/f:SI 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 2 {*addx}
     (expr_list:REG_DEAD (reg/f:SI 70)
        (expr_list:REG_DEAD (reg:SI 4 a4 [ dr ])
            (nil))))
(insn 15 14 16 2 (set (reg:SI 64 [ D.5995 ])
        (mem:SI (reg/f:SI 63 [ D.5994 ]) [0 *_32+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:258 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 63 [ D.5994 ])
        (nil)))
(debug_insn 16 15 17 2 (var_location:SI hsym (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1354 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 71)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1356 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 18 17 19 2 (set (reg:QI 72)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1356 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))
(insn 19 18 21 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 71)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (reg:QI 72)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1356 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 72)
        (nil)))
(insn 21 19 22 2 (set (reg:SI 44 [ D.5990 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 71)
                    (const_int 186 [0xba])) [0 LMIC.clockError+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1360 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 71)
        (nil)))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:SI 44 [ D.5990 ])
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1360 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 96)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              8 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 64 65 66

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(1){ }u18(7){ }u19(16){ }u20(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 64 65 66
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 65
;; lr  def 	 74 77 79 88 93 117 124 126
(note 23 22 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 23 30 3 (set (reg:SI 74)
        (ashiftrt:SI (reg/v:SI 65 [ delay ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 52 {ashrsi3}
     (nil))
(insn 30 25 32 3 (set (reg:SI 77)
        (mult:SI (reg:SI 74)
            (reg:SI 44 [ D.5990 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(insn 32 30 33 3 (set (reg:SI 79)
        (mult:SI (reg:SI 44 [ D.5990 ])
            (reg/v:SI 65 [ delay ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 9 {mulsi3}
     (nil))
(insn 33 32 35 3 (set (reg:SI 117 [ D.5991+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 44 [ D.5990 ]))
                    (zero_extend:DI (reg/v:SI 65 [ delay ])))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 8 {umulsi3_highpart}
     (expr_list:REG_DEAD (reg:SI 44 [ D.5990 ])
        (nil)))
(insn 35 33 50 3 (set (reg:SI 117 [ D.5991+4 ])
        (plus:SI (reg:SI 77)
            (reg:SI 117 [ D.5991+4 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 77)
        (nil)))
(insn 50 35 54 3 (set (reg:SI 88)
        (ashiftrt:SI (reg:SI 117 [ D.5991+4 ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 52 {ashrsi3}
     (nil))
(insn 54 50 58 3 (set (reg:SI 124)
        (and:SI (reg:SI 88)
            (const_int 65535 [0xffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 58 54 59 3 (set (reg:SI 126)
        (plus:SI (reg:SI 124)
            (reg:SI 79))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 59 58 60 3 (set (reg:SI 93)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 60 59 117 3 (set (pc)
        (if_then_else (ltu (reg:SI 126)
                (reg:SI 124))
            (label_ref 62)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 124)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 62)
;;  succ:       5 [50.0%] 
;;              4 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 93 117 126

;; basic block 4, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(1){ }u37(7){ }u38(16){ }u39(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 117 126
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 93
(note 117 60 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 61 117 62 4 (set (reg:SI 93)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 93 117 126

;; basic block 5, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 [50.0%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(1){ }u41(7){ }u42(16){ }u43(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 93 117 126
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 93 117 126
;; lr  def 	 95 97 99 100 102 103 128
(code_label 62 61 118 5 36 "" [1 uses])
(note 118 62 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 63 118 64 5 NOTE_INSN_DELETED)
(insn 64 63 67 5 (set (reg:SI 95)
        (plus:SI (reg:SI 93)
            (reg:SI 117 [ D.5991+4 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 117 [ D.5991+4 ])
        (expr_list:REG_DEAD (reg:SI 93)
            (nil))))
(insn 67 64 68 5 (set (reg:SI 97)
        (ashift:SI (reg:SI 95)
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 68 67 69 5 (set (reg:SI 128)
        (lshiftrt:SI (reg:SI 126)
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 53 {lshrsi3}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 69 68 72 5 (set (reg:SI 128)
        (ior:SI (reg:SI 97)
            (reg:SI 128))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(note 72 69 73 5 NOTE_INSN_DELETED)
(debug_insn 73 72 75 5 (var_location:SI drift (reg:SI 128)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1364 -1
     (nil))
(insn 75 73 76 5 (set (reg:SI 99)
        (ashift:SI (reg:SI 64 [ D.5995 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 51 {ashlsi3_internal}
     (nil))
(insn 76 75 77 5 (set (reg:SI 100)
        (minus:SI (reg:SI 99)
            (reg:SI 64 [ D.5995 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 64 [ D.5995 ])
                (const_int 31 [0x1f]))
            (nil))))
(note 77 76 78 5 NOTE_INSN_DELETED)
(insn 78 77 79 5 (set (reg:SI 102)
        (plus:SI (mult:SI (reg:SI 100)
                (const_int 4 [0x4]))
            (reg:SI 64 [ D.5995 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 79 78 80 5 (set (reg:SI 103)
        (ashift:SI (reg:SI 102)
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 80 79 82 5 (set (reg:SI 102)
        (reg:SI 103)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 44 {movsi_internal}
     (expr_list:REG_UNUSED (reg:SI 102)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 64 [ D.5995 ])
                (const_int 250 [0xfa]))
            (nil))))
(jump_insn 82 80 83 5 (set (pc)
        (if_then_else (ge (reg:SI 103)
                (reg:SI 128))
            (label_ref 89)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1372 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 103)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 89)
;;  succ:       6 [39.0%]  (FALLTHRU)
;;              7 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 128

;; basic block 6, loop depth 0, count 0, freq 2379, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [39.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u67(1){ }u68(7){ }u69(16){ }u70(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 104 105
(note 83 82 85 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 125 6 (set (reg:QI 105)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1373 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 125 85 86 6 (set (reg/f:SI 104)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1373 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 86 125 122 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 104)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (reg:QI 105)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1373 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 105)
        (expr_list:REG_DEAD (reg/f:SI 104)
            (nil))))
(jump_insn 122 86 123 6 (set (pc)
        (label_ref 96)) 78 {jump}
     (nil)
 -> 96)
;;  succ:       8 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66

(barrier 123 122 89)
;; basic block 7, loop depth 0, count 0, freq 3721, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 [61.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(1){ }u74(7){ }u75(16){ }u76(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66 128
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 128
;; lr  def 	 51 106 108
(code_label 89 123 90 7 37 "" [1 uses])
(note 90 89 91 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 94 7 (set (reg:SI 51 [ D.5992 ])
        (div:SI (reg:SI 128)
            (reg:SI 64 [ D.5995 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1375 17 {divsi3}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 94 91 124 7 (set (reg:SI 108)
        (plus:SI (reg:SI 51 [ D.5992 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1375 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 51 [ D.5992 ])
        (nil)))
(insn 124 94 95 7 (set (reg/f:SI 106)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1375 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 95 124 96 7 (set (mem/j/c:QI (plus:SI (reg/f:SI 106)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (subreg:QI (reg:SI 108) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1375 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg/f:SI 106)
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;;              7 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u82(1){ }u83(7){ }u84(16){ }u85(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64 65 66
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 54 55 57 58 60 61 109
(code_label 96 95 97 8 34 "" [2 uses])
(note 97 96 98 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 8 (set (reg/f:SI 109)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 99 98 100 8 (set (reg:SI 54 [ D.5992 ])
        (mem/j/c:SI (reg/f:SI 109) [0 LMIC.txend+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (reg/f:SI 109) [0 LMIC.txend+0 S4 A32])
        (nil)))
(insn 100 99 101 8 (set (reg:SI 55 [ D.5992 ])
        (plus:SI (reg/v:SI 65 [ delay ])
            (reg:SI 54 [ D.5992 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 65 [ delay ])
        (expr_list:REG_DEAD (reg:SI 54 [ D.5992 ])
            (nil))))
(note 101 100 102 8 NOTE_INSN_DELETED)
(insn 102 101 104 8 (set (reg:SI 57 [ D.5992 ])
        (plus:SI (mult:SI (reg:SI 64 [ D.5995 ])
                (const_int 8 [0x8]))
            (reg:SI 55 [ D.5992 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 55 [ D.5992 ])
        (nil)))
(insn 104 102 105 8 (set (reg:SI 58 [ D.5993 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 109)
                    (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 34 {zero_extendqisi2}
     (nil))
(insn 105 104 106 8 (set (reg:SI 60 [ D.5992 ])
        (mult:SI (reg:SI 58 [ D.5993 ])
            (reg:SI 64 [ D.5995 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 64 [ D.5995 ])
        (expr_list:REG_DEAD (reg:SI 58 [ D.5993 ])
            (nil))))
(insn 106 105 108 8 (set (reg:SI 61 [ D.5992 ])
        (minus:SI (reg:SI 57 [ D.5992 ])
            (reg:SI 60 [ D.5992 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 60 [ D.5992 ])
        (expr_list:REG_DEAD (reg:SI 57 [ D.5992 ])
            (nil))))
(insn 108 106 109 8 (set (mem/j/c:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (reg:SI 61 [ D.5992 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1381 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(note 109 108 110 8 NOTE_INSN_DELETED)
(note 110 109 111 8 NOTE_INSN_DELETED)
(insn 111 110 112 8 (set (reg:SI 12 a12)
        (reg/v/f:SI 66 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1383 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 66 [ func ])
        (nil)))
(insn 112 111 113 8 (set (reg:SI 11 a11)
        (plus:SI (reg:SI 61 [ D.5992 ])
            (const_int -125 [0xffffffffffffff83]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1383 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 61 [ D.5992 ])
        (nil)))
(insn 113 112 114 8 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC23") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1383 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 114 113 0 8 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1383 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function startRxBcn (startRxBcn, funcdef_no=100, decl_uid=3869, cgraph_uid=100, symbol_order=108)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 13.
verify found no changes in insn with uid = 13.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 43 uninteresting
Ignoring reg 44 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 44: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 13(l0): point = 6
   Insn 7(l0): point = 8
 a0(r43): [5..6]
 a1(r44): [5..8]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r44): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r43,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r44
    modified regnos: 43 44
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@0
      Allocno a0r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Popping a0(r43,l0)  -- assign reg 8
      Popping a1(r44,l0)  -- assign reg 9
Disposition:
    0:r43  l0     8    1:r44  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


startRxBcn

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r43={1d,1u} r44={1d,1u} 
;;    total ref usage 51{40d,11u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 13 2 (set (reg:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC25") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2019 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("processBeacon") [flags 0x3]  <function_decl 0x100bc3e58 processBeacon>)
        (nil)))
(insn 13 7 8 2 (set (reg/f:SI 43)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC24") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2019 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 13 9 2 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 43)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 44)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2019 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44)
        (expr_list:REG_DEAD (reg/f:SI 43)
            (nil))))
(insn 9 8 10 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2020 44 {movsi_internal}
     (nil))
(call_insn 10 9 0 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2020 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function startRxPing (startRxPing, funcdef_no=101, decl_uid=3872, cgraph_uid=101, symbol_order=109)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 13.
verify found no changes in insn with uid = 13.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 43 uninteresting
Ignoring reg 44 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 44: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 13(l0): point = 6
   Insn 7(l0): point = 8
 a0(r43): [5..6]
 a1(r44): [5..8]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r44): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r43,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r44
    modified regnos: 43 44
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@0
      Allocno a0r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Popping a0(r43,l0)  -- assign reg 8
      Popping a1(r44,l0)  -- assign reg 9
Disposition:
    0:r43  l0     8    1:r44  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


startRxPing

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r43={1d,1u} r44={1d,1u} 
;;    total ref usage 51{40d,11u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 13 2 (set (reg:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC27") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2027 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("processPingRx") [flags 0x3]  <function_decl 0x100bc3bd0 processPingRx>)
        (nil)))
(insn 13 7 8 2 (set (reg/f:SI 43)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC26") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2027 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 13 9 2 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 43)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 44)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2027 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44)
        (expr_list:REG_DEAD (reg/f:SI 43)
            (nil))))
(insn 9 8 10 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2028 44 {movsi_internal}
     (nil))
(call_insn 10 9 0 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2028 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx1 (setupRx1, funcdef_no=75, decl_uid=3766, cgraph_uid=75, symbol_order=83)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 48 uninteresting
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 50 uninteresting
Reg 52 uninteresting
Reg 55 uninteresting
Reg 57 uninteresting
Reg 61 uninteresting
Ignoring reg 49 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 48: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 61: (insn_list:REG_DEP_TRUE 25 (nil))

Pass 0 for finding pseudo/allocno costs

    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r61,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r48,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r48,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a1(r49,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a2(r61,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 28(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 22(l0): point = 10
   Insn 19(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 14(l0): point = 18
   Insn 11(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 6(l0): point = 28
 a0(r48): [5..28]
 a1(r49): [7..26]
 a2(r61): [7..8]
 a3(r57): [11..12]
 a4(r55): [13..14]
 a5(r54): [13..16]
 a6(r52): [17..18]
 a7(r42): [17..20]
 a8(r50): [23..24]
Compressing live ranges: from 31 to 10 - 32%
Ranges after the compression:
 a0(r48): [0..9]
 a1(r49): [0..9]
 a2(r61): [0..1]
 a3(r57): [2..3]
 a4(r55): [4..5]
 a5(r54): [4..5]
 a6(r52): [6..7]
 a7(r42): [6..7]
 a8(r50): [8..9]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r48,l0) conflicts: a2(r61,l0) a1(r49,l0) a3(r57,l0) a4(r55,l0) a5(r54,l0) a6(r52,l0) a7(r42,l0) a8(r50,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a1(r49,l0) conflicts: a2(r61,l0) a0(r48,l0) a3(r57,l0) a4(r55,l0) a5(r54,l0) a6(r52,l0) a7(r42,l0) a8(r50,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a2(r61,l0) conflicts: a0(r48,l0) a1(r49,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a3(r57,l0) conflicts: a0(r48,l0) a1(r49,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a4(r55,l0) conflicts: a0(r48,l0) a1(r49,l0) a5(r54,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a5(r54,l0) conflicts: a0(r48,l0) a1(r49,l0) a4(r55,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a6(r52,l0) conflicts: a0(r48,l0) a1(r49,l0) a7(r42,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a7(r42,l0) conflicts: a0(r48,l0) a1(r49,l0) a6(r52,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a8(r50,l0) conflicts: a0(r48,l0) a1(r49,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

  cp0:a5(r54)<->a6(r52)@125:shuffle
  cp1:a5(r54)<->a7(r42)@125:shuffle
  cp2:a3(r57)<->a4(r55)@125:shuffle
  cp3:a3(r57)<->a5(r54)@125:shuffle
  regions=1, blocks=3, points=10
    allocnos=9 (big 0), copies=4, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r48 1r49 2r61 3r57 4r55 5r54 6r52 7r42 8r50
    modified regnos: 42 48 49 50 52 54 55 57 61
    border:
    Pressure: AR_REGS=5
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 3-15)@160000
      Allocno a0r48 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a1r49 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a2r61 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a3r57 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a4r55 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a5r54 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a6r52 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a7r42 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a8r50 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Forming thread by copy 0:a5r54-a6r52 (freq=125):
        Result (freq=4000): a5r54(2000) a6r52(2000)
      Forming thread by copy 2:a3r57-a4r55 (freq=125):
        Result (freq=4000): a3r57(2000) a4r55(2000)
      Pushing a8(r50,l0)(cost 0)
      Pushing a7(r42,l0)(cost 0)
      Pushing a2(r61,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Pushing a6(r52,l0)(cost 0)
      Pushing a5(r54,l0)(cost 0)
      Pushing a4(r55,l0)(cost 0)
      Pushing a3(r57,l0)(cost 0)
      Pushing a0(r48,l0)(cost 0)
      Popping a0(r48,l0)  -- assign reg 8
      Popping a3(r57,l0)  -- assign reg 9
      Popping a4(r55,l0)  -- assign reg 9
      Popping a5(r54,l0)  -- assign reg 10
      Popping a6(r52,l0)  -- assign reg 9
      Popping a1(r49,l0)  -- assign reg 11
      Popping a2(r61,l0)  -- assign reg 9
      Popping a7(r42,l0)  -- assign reg 10
      Popping a8(r50,l0)  -- assign reg 9
Disposition:
    7:r42  l0    10    0:r48  l0     8    1:r49  l0    11    8:r50  l0     9
    6:r52  l0     9    5:r54  l0    10    4:r55  l0     9    3:r57  l0     9
    2:r61  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx1

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={1d,2u,1e} r48={1d,4u} r49={1d,2u} r50={1d,1u} r52={1d,1u} r54={1d,1u,1e} r55={1d,1u} r57={1d,1u} r61={1d,1u} 
;;    total ref usage 73{47d,24u,2e} in 17{16 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 48 49 50 52 54 55 57 61
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_DELETED)
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 48)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC28") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1387 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 49)
        (plus:SI (reg/f:SI 48)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1387 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 8 7 9 2 (set (reg:QI 50)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1387 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 9 8 11 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1387 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 50)
        (nil)))
(insn 11 9 12 2 (set (reg:SI 42 [ D.5998 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 48)
                    (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1389 33 {zero_extendhisi2}
     (nil))
(debug_insn 12 11 13 2 (var_location:HI params (subreg:HI (reg:SI 42 [ D.5998 ]) 0)) -1
     (nil))
(debug_insn 13 12 14 2 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(insn 14 13 16 2 (set (reg:HI 52)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(insn 16 14 17 2 (set (reg:SI 54)
        (and:SI (reg:SI 42 [ D.5998 ])
            (subreg:SI (reg:HI 52) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 52)
        (expr_list:REG_DEAD (reg:SI 42 [ D.5998 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 42 [ D.5998 ])
                    (const_int -129 [0xffffffffffffff7f]))
                (nil)))))
(insn 17 16 19 2 (set (reg:HI 55)
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 19 17 20 2 (set (reg:SI 57)
        (ior:SI (reg:SI 54)
            (subreg:SI (reg:HI 55) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 55)
        (expr_list:REG_DEAD (reg:SI 54)
            (expr_list:REG_EQUAL (ior:SI (reg:SI 54)
                    (const_int 128 [0x80]))
                (nil)))))
(note 20 19 22 2 NOTE_INSN_DELETED)
(insn 22 20 25 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 48)
                (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16])
        (subreg:HI (reg:SI 57) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1389 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 57)
        (nil)))
(insn 25 22 26 2 (set (reg:QI 61)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1390 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 26 25 28 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 61)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1390 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 61)
        (expr_list:REG_DEAD (reg/f:SI 49)
            (nil))))
(insn 28 26 29 2 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 48)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 2 a2 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1391 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (expr_list:REG_DEAD (reg:SI 2 a2 [ func ])
            (nil))))
(insn 29 28 30 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1392 44 {movsi_internal}
     (nil))
(call_insn 30 29 0 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1392 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx1DnData (setupRx1DnData, funcdef_no=87, decl_uid=3817, cgraph_uid=87, symbol_order=95)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx1DnData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 47{38d,9u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(note 6 3 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC29") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1604 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("processRx1DnData") [flags 0x3]  <function_decl 0x100bc3000 processRx1DnData>)
        (nil)))
(call_insn 8 7 0 2 (call (mem:SI (symbol_ref:SI ("setupRx1") [flags 0x3]  <function_decl 0x100bb20d8 setupRx1>) [0 setupRx1 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1604 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx1Jacc (setupRx1Jacc, funcdef_no=82, decl_uid=3800, cgraph_uid=82, symbol_order=90)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx1Jacc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 47{38d,9u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(note 6 3 7 2 NOTE_INSN_DELETED)
(insn 7 6 8 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC30") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1562 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("processRx1Jacc") [flags 0x3]  <function_decl 0x100bb2a20 processRx1Jacc>)
        (nil)))
(call_insn 8 7 0 2 (call (mem:SI (symbol_ref:SI ("setupRx1") [flags 0x3]  <function_decl 0x100bb20d8 setupRx1>) [0 setupRx1 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1562 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx2 (setupRx2, funcdef_no=73, decl_uid=3756, cgraph_uid=73, symbol_order=81)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 54: local to bb 2 def dominates all uses has unique first use
Reg 55 uninteresting
Reg 42 uninteresting
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 58 uninteresting
Reg 47 uninteresting
Reg 48 uninteresting
Reg 62 uninteresting
Reg 64 uninteresting
Ignoring reg 43, has equiv memory
Reg 70 uninteresting
Examining insn 14, def for 45
  all ok
Ignoring reg 54 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 38 (nil))

Pass 0 for finding pseudo/allocno costs

    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r70,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r64,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r62,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r61,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r58,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r53,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r54,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a1(r70,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r53,l0) costs: ACC_REG:18000,18000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:96000,96000 MEM:16000,16000
  a3(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a4(r64,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r62,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r61,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a10(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 39(l0): point = 4
   Insn 38(l0): point = 6
   Insn 35(l0): point = 8
   Insn 33(l0): point = 10
   Insn 31(l0): point = 12
   Insn 28(l0): point = 14
   Insn 26(l0): point = 16
   Insn 25(l0): point = 18
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 18(l0): point = 24
   Insn 14(l0): point = 26
   Insn 11(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 6(l0): point = 34
   Insn 5(l0): point = 36
 a0(r54): [5..34]
 a1(r70): [5..6]
 a2(r53): [9..36]
 a3(r43): [9..10]
 a4(r64): [13..14]
 a5(r62): [15..16]
 a6(r61): [15..18]
 a7(r48): [19..20]
 a8(r47): [21..22]
 a9(r58): [23..24]
 a10(r45): [23..26]
 a11(r42): [27..28]
 a12(r55): [31..32]
Compressing live ranges: from 39 to 18 - 46%
Ranges after the compression:
 a0(r54): [0..17]
 a1(r70): [0..1]
 a2(r53): [2..17]
 a3(r43): [2..3]
 a4(r64): [4..5]
 a5(r62): [6..7]
 a6(r61): [6..7]
 a7(r48): [8..9]
 a8(r47): [10..11]
 a9(r58): [12..13]
 a10(r45): [12..13]
 a11(r42): [14..15]
 a12(r55): [16..17]
+++Allocating 104 bytes for conflict table (uncompressed size 104)
;; a0(r54,l0) conflicts: a1(r70,l0) a3(r43,l0) a2(r53,l0) a4(r64,l0) a5(r62,l0) a6(r61,l0) a7(r48,l0) a8(r47,l0) a9(r58,l0) a10(r45,l0) a11(r42,l0) a12(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r70,l0) conflicts: a0(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r53,l0) conflicts: a0(r54,l0) a3(r43,l0) a4(r64,l0) a5(r62,l0) a6(r61,l0) a7(r48,l0) a8(r47,l0) a9(r58,l0) a10(r45,l0) a11(r42,l0) a12(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r43,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r64,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r62,l0) conflicts: a0(r54,l0) a2(r53,l0) a6(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r61,l0) conflicts: a0(r54,l0) a2(r53,l0) a5(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r48,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r47,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r58,l0) conflicts: a0(r54,l0) a2(r53,l0) a10(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r45,l0) conflicts: a0(r54,l0) a2(r53,l0) a9(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r42,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r55,l0) conflicts: a0(r54,l0) a2(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a10(r45)<->a11(r42)@125:shuffle
  cp1:a8(r47)<->a9(r58)@125:shuffle
  cp2:a8(r47)<->a10(r45)@125:shuffle
  cp3:a6(r61)<->a7(r48)@125:shuffle
  cp4:a4(r64)<->a5(r62)@125:shuffle
  cp5:a4(r64)<->a6(r61)@125:shuffle
  regions=1, blocks=3, points=18
    allocnos=13 (big 0), copies=6, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r54 1r70 2r53 3r43 4r64 5r62 6r61 7r48 8r47 9r58 10r45 11r42 12r55
    modified regnos: 42 43 45 47 48 53 54 55 58 61 62 64 70
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@208000
      Allocno a0r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a10r45-a11r42 (freq=125):
        Result (freq=4000): a10r45(2000) a11r42(2000)
      Forming thread by copy 1:a8r47-a9r58 (freq=125):
        Result (freq=4000): a8r47(2000) a9r58(2000)
      Forming thread by copy 3:a6r61-a7r48 (freq=125):
        Result (freq=4000): a6r61(2000) a7r48(2000)
      Forming thread by copy 4:a4r64-a5r62 (freq=125):
        Result (freq=4000): a4r64(2000) a5r62(2000)
      Pushing a12(r55,l0)(cost 0)
      Pushing a3(r43,l0)(cost 0)
      Pushing a1(r70,l0)(cost 0)
      Pushing a11(r42,l0)(cost 0)
      Pushing a10(r45,l0)(cost 0)
      Pushing a9(r58,l0)(cost 0)
      Pushing a8(r47,l0)(cost 0)
      Pushing a7(r48,l0)(cost 0)
      Pushing a6(r61,l0)(cost 0)
      Pushing a5(r62,l0)(cost 0)
      Pushing a4(r64,l0)(cost 0)
      Pushing a0(r54,l0)(cost 0)
      Pushing a2(r53,l0)(cost 0)
      Popping a2(r53,l0)  -- assign reg 8
      Popping a0(r54,l0)  -- assign reg 9
      Popping a4(r64,l0)  -- assign reg 10
      Popping a5(r62,l0)  -- assign reg 10
      Popping a6(r61,l0)  -- assign reg 11
      Popping a7(r48,l0)  -- assign reg 10
      Popping a8(r47,l0)  -- assign reg 10
      Popping a9(r58,l0)  -- assign reg 10
      Popping a10(r45,l0)  -- assign reg 11
      Popping a11(r42,l0)  -- assign reg 10
      Popping a1(r70,l0)  -- assign reg 8
      Popping a3(r43,l0)  -- assign reg 10
      Popping a12(r55,l0)  -- assign reg 10
Disposition:
   11:r42  l0    10    3:r43  l0    10   10:r45  l0    11    8:r47  l0    10
    7:r48  l0    10    2:r53  l0     8    0:r54  l0     9   12:r55  l0    10
    9:r58  l0    10    6:r61  l0    11    5:r62  l0    10    4:r64  l0    10
    1:r70  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx2

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={1d,3u} r43={1d,1u} r45={1d,2u} r47={1d,1u} r48={1d,2u} r53={1d,4u,1e} r54={1d,3u} r55={1d,1u} r58={1d,1u} r61={1d,1u,1e} r62={1d,1u} r64={1d,1u} r70={1d,1u} 
;;    total ref usage 84{51d,31u,2e} in 25{24 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 43 45 47 48 53 54 55 58 61 62 64 70
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 53)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC31") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1345 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 6 5 7 2 (set:SI (reg/f:SI 54)
        (plus:SI (reg/f:SI 53)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1345 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 7 6 8 2 (set (reg:QI 55)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1345 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 8 7 11 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 54)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1345 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 55)
        (nil)))
(insn 11 8 12 2 (set (reg:SI 42 [ D.6001 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 54)
                    (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1346 34 {zero_extendqisi2}
     (nil))
(debug_insn 12 11 13 2 (var_location:QI dr (subreg:QI (reg:SI 42 [ D.6001 ]) 0)) -1
     (nil))
(debug_insn 13 12 14 2 (var_location:QI dr (subreg:QI (reg:SI 42 [ D.6001 ]) 0)) -1
     (nil))
(insn 14 13 16 2 (set (reg:SI 45 [ D.6003 ])
        (plus:SI (reg:SI 42 [ D.6001 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6001 ])
        (nil)))
(debug_insn 16 14 17 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI index (reg:SI 45 [ D.6003 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 58)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC32") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 19 18 20 2 (set (reg/f:SI 47 [ D.6004 ])
        (plus:SI (reg:SI 45 [ D.6003 ])
            (reg/f:SI 58))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 58)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6003 ])
            (nil))))
(insn 20 19 21 2 (set (reg:SI 48 [ D.6005 ])
        (zero_extend:SI (mem:QI (reg/f:SI 47 [ D.6004 ]) [0 *_12+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 47 [ D.6004 ])
        (nil)))
(debug_insn 21 20 22 2 (var_location:HI params (zero_extend:HI (subreg:QI (reg:SI 48 [ D.6005 ]) 0))) -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(note 23 22 25 2 NOTE_INSN_DELETED)
(insn 25 23 26 2 (set (reg:SI 61)
        (and:SI (reg:SI 48 [ D.6005 ])
            (const_int 127 [0x7f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6005 ])
        (nil)))
(insn 26 25 28 2 (set (reg:HI 62)
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 28 26 29 2 (set (reg:SI 64)
        (ior:SI (reg:SI 61)
            (subreg:SI (reg:HI 62) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 62)
        (expr_list:REG_DEAD (reg:SI 61)
            (expr_list:REG_EQUAL (ior:SI (reg:SI 61)
                    (const_int 128 [0x80]))
                (nil)))))
(note 29 28 31 2 NOTE_INSN_DELETED)
(insn 31 29 33 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 53)
                (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16])
        (subreg:HI (reg:SI 64) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1346 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 64)
        (nil)))
(insn 33 31 35 2 (set (reg:SI 43 [ D.6002 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 53)
                (const_int 304 [0x130])) [0 LMIC.dn2Freq+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1347 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 53)
                (const_int 304 [0x130])) [0 LMIC.dn2Freq+0 S4 A32])
        (nil)))
(insn 35 33 38 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 53)
                (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
        (reg:SI 43 [ D.6002 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1347 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 53)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6002 ])
            (nil))))
(insn 38 35 39 2 (set (reg:QI 70)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1348 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 39 38 40 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 54)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 70)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1348 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 70)
        (expr_list:REG_DEAD (reg/f:SI 54)
            (nil))))
(insn 40 39 41 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1349 44 {movsi_internal}
     (nil))
(call_insn 41 40 0 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1349 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx2DnData (setupRx2DnData, funcdef_no=85, decl_uid=3811, cgraph_uid=85, symbol_order=93)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 12.
verify found no changes in insn with uid = 12.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 43 uninteresting
Ignoring reg 44 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 44: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 12(l0): point = 4
   Insn 7(l0): point = 6
 a0(r43): [3..4]
 a1(r44): [3..6]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r44): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r43,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r44
    modified regnos: 43 44
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@0
      Allocno a0r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Popping a0(r43,l0)  -- assign reg 8
      Popping a1(r44,l0)  -- assign reg 9
Disposition:
    0:r43  l0     8    1:r44  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx2DnData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r43={1d,1u} r44={1d,1u} 
;;    total ref usage 49{39d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 12 2 (set (reg:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC34") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1592 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("processRx2DnData") [flags 0x3]  <function_decl 0x100bb2d80 processRx2DnData>)
        (nil)))
(insn 12 7 8 2 (set (reg/f:SI 43)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC33") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1592 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 12 9 2 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 43)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 44)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1592 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44)
        (expr_list:REG_DEAD (reg/f:SI 43)
            (nil))))
(call_insn 9 8 0 2 (call (mem:SI (symbol_ref:SI ("setupRx2") [flags 0x3]  <function_decl 0x100b7c510 setupRx2>) [0 setupRx2 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1593 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function setupRx2Jacc (setupRx2Jacc, funcdef_no=80, decl_uid=3794, cgraph_uid=80, symbol_order=88)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 12.
verify found no changes in insn with uid = 12.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 43 uninteresting
Ignoring reg 44 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 43: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 44: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 12(l0): point = 4
   Insn 7(l0): point = 6
 a0(r43): [3..4]
 a1(r44): [3..6]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r44): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r43,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r44
    modified regnos: 43 44
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@0
      Allocno a0r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Popping a0(r43,l0)  -- assign reg 8
      Popping a1(r44,l0)  -- assign reg 9
Disposition:
    0:r43  l0     8    1:r44  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setupRx2Jacc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r43={1d,1u} r44={1d,1u} 
;;    total ref usage 49{39d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 12 2 (set (reg:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC36") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1550 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("processRx2Jacc") [flags 0x3]  <function_decl 0x100bb2870 processRx2Jacc>)
        (nil)))
(insn 12 7 8 2 (set (reg/f:SI 43)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC35") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1550 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 12 9 2 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 43)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 44)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1550 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44)
        (expr_list:REG_DEAD (reg/f:SI 43)
            (nil))))
(call_insn 9 8 0 2 (call (mem:SI (symbol_ref:SI ("setupRx2") [flags 0x3]  <function_decl 0x100b7c510 setupRx2>) [0 setupRx2 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1551 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function startScan (startScan, funcdef_no=91, decl_uid=3379, cgraph_uid=91, symbol_order=99)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 8 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 51 uninteresting
Reg 42 uninteresting
Reg 52 uninteresting
Reg 43 uninteresting
Reg 58 uninteresting
Reg 63 uninteresting
Reg 64: local to bb 6 def dominates all uses has unique first use
Reg 65 uninteresting
Reg 73 uninteresting
Reg 75 uninteresting
Reg 77 uninteresting
Reg 78 uninteresting
Reg 49 uninteresting
Ignoring reg 64 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 63: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 64: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 65: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 73: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 75: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 78: (insn_list:REG_DEP_TRUE 54 (nil))

Pass 0 for finding pseudo/allocno costs

    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r78,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r77,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r73,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r65,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r63,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r58,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:4668,4668 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24896,24896 MEM:6224,6224
  a1(r63,l0) costs: ACC_REG:5835,5835 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31120,31120 MEM:4668,4668
  a2(r78,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:0,0
  a3(r77,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a4(r75,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a5(r74,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a6(r73,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a7(r45,l0) costs: ACC_REG:7167,7167 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38224,38224 MEM:9556,9556
  a8(r64,l0) costs: ACC_REG:4668,4668 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24896,24896 MEM:6224,6224
  a9(r65,l0) costs: ACC_REG:4668,4668 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24896,24896 MEM:6224,6224
  a10(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a11(r43,l0) costs: ACC_REG:4260,4260 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22720,22720 MEM:5680,5680
  a12(r52,l0) costs: ACC_REG:4260,4260 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22720,22720 MEM:0,0
  a13(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a14(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 67(l0): point = 1
   Insn 66(l0): point = 3
   Insn 65(l0): point = 5
   Insn 64(l0): point = 7
   Insn 63(l0): point = 9
   Insn 62(l0): point = 11
   Insn 59(l0): point = 13
   Insn 57(l0): point = 15
   Insn 55(l0): point = 17
   Insn 54(l0): point = 19
   Insn 52(l0): point = 21
   Insn 51(l0): point = 23
   Insn 50(l0): point = 25
   Insn 49(l0): point = 27
   Insn 47(l0): point = 29
   Insn 46(l0): point = 31
   Insn 45(l0): point = 33
   Insn 43(l0): point = 35
   Insn 39(l0): point = 37
   Insn 35(l0): point = 39
   Insn 34(l0): point = 41
   Insn 33(l0): point = 43
   Insn 32(l0): point = 45
   Insn 30(l0): point = 48
   Insn 25(l0): point = 50
   Insn 24(l0): point = 52
   Insn 21(l0): point = 55
   Insn 20(l0): point = 57
   Insn 19(l0): point = 59
   Insn 15(l0): point = 62
   Insn 10(l0): point = 64
   Insn 9(l0): point = 66
   Insn 7(l0): point = 69
   Insn 6(l0): point = 71
   Insn 5(l0): point = 73
 a0(r49): [10..17]
 a1(r63): [14..45]
 a2(r78): [18..19]
 a3(r77): [26..27]
 a4(r75): [28..29]
 a5(r74): [28..31]
 a6(r73): [32..33]
 a7(r45): [32..50]
 a8(r64): [36..43]
 a9(r65): [36..41]
 a10(r58): [51..52]
 a11(r43): [63..64]
 a12(r52): [65..66]
 a13(r42): [70..71]
 a14(r51): [72..73]
Compressing live ranges: from 76 to 22 - 28%
Ranges after the compression:
 a0(r49): [0..1]
 a1(r63): [0..11]
 a2(r78): [2..3]
 a3(r77): [4..5]
 a4(r75): [6..7]
 a5(r74): [6..7]
 a6(r73): [8..9]
 a7(r45): [8..11]
 a8(r64): [10..11]
 a9(r65): [10..11]
 a10(r58): [12..13]
 a11(r43): [14..15]
 a12(r52): [16..17]
 a13(r42): [18..19]
 a14(r51): [20..21]
+++Allocating 80 bytes for conflict table (uncompressed size 120)
;; a0(r49,l0) conflicts: a1(r63,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a1(r63,l0) conflicts: a0(r49,l0) a2(r78,l0) a3(r77,l0) a4(r75,l0) a5(r74,l0) a6(r73,l0) a7(r45,l0) a8(r64,l0) a9(r65,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r78,l0) conflicts: a1(r63,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a3(r77,l0) conflicts: a1(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r75,l0) conflicts: a1(r63,l0) a5(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r74,l0) conflicts: a1(r63,l0) a4(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r73,l0) conflicts: a1(r63,l0) a7(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r45,l0) conflicts: a1(r63,l0) a6(r73,l0) a8(r64,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r64,l0) conflicts: a1(r63,l0) a7(r45,l0) a9(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r65,l0) conflicts: a1(r63,l0) a7(r45,l0) a8(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r58,l0) conflicts:;; a11(r43,l0) conflicts:;; a12(r52,l0) conflicts:;; a13(r42,l0) conflicts:;; a14(r51,l0) conflicts:  cp0:a5(r74)<->a6(r73)@48:shuffle
  cp1:a5(r74)<->a7(r45)@48:shuffle
  cp2:a3(r77)<->a4(r75)@48:shuffle
  cp3:a3(r77)<->a5(r74)@48:shuffle
  cp4:a0(r49)<->a2(r78)@48:shuffle
  pref0:a0(r49)<-hr11@778
  pref1:a0(r49)<-hr10@48
  regions=1, blocks=8, points=22
    allocnos=15 (big 0), copies=5, conflicts=0, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r49 1r63 2r78 3r77 4r75 5r74 6r73 7r45 8r64 9r65 10r58 11r43 12r52 13r42 14r51
    modified regnos: 42 43 45 49 51 52 58 63 64 65 73 74 75 77 78
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@96264
          2:( 2-11 13-15)@15560
            3:( 2-7)@9336
      Allocno a0r49 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a1r63 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r78 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a3r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a5r74-a6r73 (freq=48):
        Result (freq=1556): a5r74(778) a6r73(778)
      Forming thread by copy 2:a3r77-a4r75 (freq=48):
        Result (freq=1556): a3r77(778) a4r75(778)
      Forming thread by copy 4:a0r49-a2r78 (freq=48):
        Result (freq=2334): a0r49(1556) a2r78(778)
      Pushing a12(r52,l0)(cost 0)
      Pushing a11(r43,l0)(cost 0)
      Pushing a9(r65,l0)(cost 0)
      Pushing a8(r64,l0)(cost 0)
      Pushing a6(r73,l0)(cost 0)
      Pushing a5(r74,l0)(cost 0)
        Making a1(r63,l0) colorable
      Pushing a4(r75,l0)(cost 0)
      Pushing a3(r77,l0)(cost 0)
      Pushing a1(r63,l0)(cost 4668)
      Pushing a14(r51,l0)(cost 0)
      Pushing a13(r42,l0)(cost 0)
      Pushing a10(r58,l0)(cost 0)
      Pushing a2(r78,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Pushing a7(r45,l0)(cost 0)
      Popping a7(r45,l0)  -- assign reg 8
      Popping a0(r49,l0)  -- assign reg 11
      Popping a2(r78,l0)  -- assign reg 11
      Popping a10(r58,l0)  -- assign reg 8
      Popping a13(r42,l0)  -- assign reg 8
      Popping a14(r51,l0)  -- assign reg 8
      Popping a1(r63,l0)  -- assign reg 2
      Popping a3(r77,l0)  -- assign reg 8
      Popping a4(r75,l0)  -- assign reg 9
      Popping a5(r74,l0)  -- assign reg 8
      Popping a6(r73,l0)  -- assign reg 9
      Popping a8(r64,l0)  -- assign reg 9
      Popping a9(r65,l0)  -- assign reg 10
      Popping a11(r43,l0)  -- assign reg 2
      Popping a12(r52,l0)  -- assign reg 2
Disposition:
   13:r42  l0     8   11:r43  l0     2    7:r45  l0     8    0:r49  l0    11
   14:r51  l0     8   12:r52  l0     2   10:r58  l0     8    1:r63  l0     2
    8:r64  l0     9    9:r65  l0    10    6:r73  l0     9    5:r74  l0     8
    4:r75  l0     9    3:r77  l0     8    2:r78  l0    11
New iteration of spill/restore move
+++Costs: overall -1556, reg -1556, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


startScan

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={6d} r1={1d,12u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,7u} r8={5d} r9={5d} r10={8d,4u} r11={7d,2u} r12={6d,1u} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={1d,6u} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r42={1d,1u} r43={1d,1u} r45={1d,2u,1e} r49={1d,3u} r51={1d,1u} r52={1d,1u} r58={1d,1u} r63={1d,4u} r64={1d,3u} r65={1d,3u} r73={1d,1u} r74={1d,1u,1e} r75={1d,1u} r77={1d,1u} r78={1d,1u} 
;;    total ref usage 232{166d,64u,2e} in 35{30 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 51
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC37") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 6 5 7 2 (set (reg:SI 42 [ D.6008 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 51)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (nil)))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:SI 42 [ D.6008 ])
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6008 ])
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 16)
;;  succ:       4 [29.0%] 
;;              3 [71.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 7100, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [71.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(1){ }u7(7){ }u8(16){ }u9(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 52
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC37") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 10 9 11 3 (set (reg:SI 43 [ D.6009 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 52)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 52)
        (nil)))
(note 11 10 12 3 NOTE_INSN_DELETED)
(note 12 11 14 3 NOTE_INSN_DELETED)
(note 14 12 15 3 NOTE_INSN_DELETED)
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 43 [ D.6009 ])
                    (const_int 1 [0x1])
                    (const_int 2 [0x2]))
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6009 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 22)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              5 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 6450, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [29.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 16 15 17 4 47 "" [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 18 17 19 4 NOTE_INSN_DELETED)
(insn 19 18 20 4 (set (reg:SI 11 a11)
        (const_int 1779 [0x6f3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 44 {movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC39") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 21 20 22 4 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1779 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 [50.0%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 58
(code_label 22 21 23 5 48 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 58)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC37") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1780 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 25 24 26 5 (set (reg:SI 45 [ D.6009 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 58)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1780 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 58)
        (nil)))
(note 26 25 27 5 NOTE_INSN_DELETED)
(note 27 26 29 5 NOTE_INSN_DELETED)
(note 29 27 30 5 NOTE_INSN_DELETED)
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 45 [ D.6009 ])
                    (const_int 1 [0x1])
                    (const_int 6 [0x6]))
                (const_int 0 [0]))
            (label_ref:SI 70)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1780 60 {*bittrue}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 70)
;;  succ:       7 [61.0%] 
;;              6 [39.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45

;; basic block 6, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [39.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(1){ }u35(7){ }u36(16){ }u37(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 49 63 64 65 73 74 75 77 78
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:SI 63)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC37") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 33 32 34 6 (set:SI (reg/f:SI 64)
        (plus:SI (reg/f:SI 63)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 34 33 35 6 (set (reg:QI 65)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 35 34 39 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 64)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (reg:QI 65)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 46 {movqi_internal}
     (nil))
(insn 39 35 43 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 64)
                (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32])
        (reg:QI 65)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 46 {movqi_internal}
     (nil))
(insn 43 39 45 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 64)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (reg:QI 65)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1783 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 65)
        (expr_list:REG_DEAD (reg/f:SI 64)
            (nil))))
(insn 45 43 46 6 (set (reg:HI 73)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1784 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(insn 46 45 47 6 (set (reg:SI 74)
        (and:SI (reg:SI 45 [ D.6009 ])
            (subreg:SI (reg:HI 73) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1784 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 73)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6009 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 45 [ D.6009 ])
                    (const_int -129 [0xffffffffffffff7f]))
                (nil)))))
(insn 47 46 49 6 (set (reg:HI 75)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1784 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 49 47 50 6 (set (reg:SI 77)
        (ior:SI (reg:SI 74)
            (subreg:SI (reg:HI 75) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1784 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 75)
        (expr_list:REG_DEAD (reg:SI 74)
            (expr_list:REG_EQUAL (ior:SI (reg:SI 74)
                    (const_int 1 [0x1]))
                (nil)))))
(insn 50 49 51 6 (set (mem/j/c:HI (plus:SI (reg/f:SI 63)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 77) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1784 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 77)
        (nil)))
(call_insn 51 50 52 6 (call (mem:SI (symbol_ref:SI ("setBcnRxParams") [flags 0x3]  <function_decl 0x100b7c948 setBcnRxParams>) [0 setBcnRxParams S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1785 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 52 51 53 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1786 82 {call_value_internal}
     (nil)
    (nil))
(note 53 52 54 6 NOTE_INSN_DELETED)
(insn 54 53 55 6 (set (reg:SI 78)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC40") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1786 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 8062500 [0x7b0624])
        (nil)))
(insn 55 54 57 6 (set (reg:SI 49 [ D.6010 ])
        (plus:SI (reg:SI 10 a10)
            (reg:SI 78))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1786 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 78)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 57 55 59 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 63)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (reg:SI 49 [ D.6010 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1786 44 {movsi_internal}
     (nil))
(insn 59 57 60 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 63)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (reg:SI 49 [ D.6010 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1786 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 63)
        (nil)))
(note 60 59 61 6 NOTE_INSN_DELETED)
(note 61 60 62 6 NOTE_INSN_DELETED)
(insn 62 61 63 6 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC41") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1787 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("onBcnRx") [flags 0x3]  <function_decl 0x100bc3510 onBcnRx>)
        (nil)))
(insn 63 62 64 6 (set (reg:SI 11 a11)
        (reg:SI 49 [ D.6010 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1787 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 49 [ D.6010 ])
        (nil)))
(insn 64 63 65 6 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC42") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1787 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 65 64 66 6 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1787 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 66 65 67 6 (set (reg:SI 10 a10)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1788 44 {movsi_internal}
     (nil))
(call_insn 67 66 70 6 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1788 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [61.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(1){ }u72(7){ }u73(16){ }u74(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 70 67 71 7 46 "" [1 uses])
(note 71 70 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function nextTx (nextTx, funcdef_no=63, decl_uid=3667, cgraph_uid=63, symbol_order=71)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 33 (  1.6)
scanning new insn with uid = 186.
verify found no changes in insn with uid = 186.
deleting insn with uid = 119.
scanning new insn with uid = 187.
verify found no changes in insn with uid = 187.
deleting insn with uid = 74.
scanning new insn with uid = 188.
verify found no changes in insn with uid = 188.
deleting insn with uid = 39.
scanning new insn with uid = 189.
verify found no changes in insn with uid = 189.
deleting insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 33 (  1.6)
Reg 80: def dominates all uses has unique first use
Reg 81 uninteresting
Reg 51: def dominates all uses has unique first use
Reg 84: local to bb 5 def dominates all uses has unique first use
Reg 83 uninteresting
Reg 86 uninteresting
Reg 54 uninteresting
Reg 55 uninteresting
Reg 89: local to bb 6 def dominates all uses has unique first use
Reg 88 uninteresting
Reg 91 uninteresting
Reg 99 uninteresting
Reg 101: local to bb 9 def dominates all uses has unique first use
Reg 100 uninteresting
Reg 103 uninteresting
Reg 105 uninteresting
Reg 107 uninteresting
Reg 108 uninteresting
Reg 109 uninteresting
Reg 65: local to bb 12 def dominates all uses has unique first use
Reg 67: def dominates all uses has unique first use
Reg 111: local to bb 13 def dominates all uses has unique first use
Reg 112 uninteresting
Reg 114 uninteresting
Reg 70: local to bb 13 def dominates all uses has unique first use
Reg 72 uninteresting
Reg 73 uninteresting
Reg 119: local to bb 14 def dominates all uses has unique first use
Reg 118 uninteresting
Reg 121 uninteresting
Reg 77 uninteresting
Reg 78 uninteresting
Reg 122: local to bb 15 def dominates all uses has unique first use
Reg 123 uninteresting
Reg 125 uninteresting
Reg 128 uninteresting
Reg 130 uninteresting
Reg 132 uninteresting
Reg 135 uninteresting
Reg 134 uninteresting
Reg 51 not local to one basic block
Found def insn 99 for 65 to be not moveable
Reg 67 not local to one basic block
Found def insn 109 for 70 to be not moveable
Reg 80 not local to one basic block
Examining insn 29, def for 84
  all ok and transp
      Creating newreg=140 from oldreg=84
rescanning insn with uid = 29.
scanning new insn with uid = 190.
Examining insn 40, def for 89
  all ok
Examining insn 75, def for 101
  all ok and transp
      Creating newreg=141 from oldreg=101
rescanning insn with uid = 75.
scanning new insn with uid = 191.
Ignoring reg 111 with equiv init insn
Examining insn 120, def for 119
  all ok
Ignoring reg 122 with equiv init insn
    New r140: setting preferred AR_REGS, alternative ALL_REGS
    New r141: setting preferred AR_REGS, alternative ALL_REGS
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 1
;;  header 3, latch 18
;;  depth 1, outer 0
;;  nodes: 3 18 17 16 9 8 7 4 5 6 12 13 14 10 11
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 2, outer 1
;;  nodes: 17 16 12 13 14 10 11
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 2, outer 1
;;  nodes: 8 7 4 5 6
;; 2 succs { 3 }
;; 3 succs { 8 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 4 9 }
;; 9 succs { 17 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 15 16 }
;; 15 succs { 19 }
;; 16 succs { 17 }
;; 17 succs { 10 18 }
;; 18 succs { 19 3 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 33 (  1.6)
init_insns for 81: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 189 (nil))
init_insns for 88: (insn_list:REG_DEP_TRUE 188 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 187 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 109: (insn_list:REG_DEP_TRUE 98 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 105 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 186 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 127 (nil))
init_insns for 130: (insn_list:REG_DEP_TRUE 148 (nil))
init_insns for 132: (insn_list:REG_DEP_TRUE 158 (nil))
init_insns for 135: (insn_list:REG_DEP_TRUE 161 (nil))

Pass 0 for finding pseudo/allocno costs

    r141: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r141,l1) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r140,l2) best AR_REGS, allocno AR_REGS
    r135: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r135,l1) best AR_REGS, allocno AR_REGS
    r134: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r134,l1) best AR_REGS, allocno AR_REGS
    r132: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r132,l1) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r130,l3) best AR_REGS, allocno AR_REGS
    r128: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r128,l3) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r125,l0) best AR_REGS, allocno AR_REGS
    r123: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r123,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r122,l0) best AR_REGS, allocno AR_REGS
    r121: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r121,l3) best AR_REGS, allocno AR_REGS
    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r119,l3) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r118,l3) best AR_REGS, allocno AR_REGS
    r114: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r114,l3) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r112,l3) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r111,l3) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r109,l3) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r108,l3) best AR_REGS, allocno AR_REGS
    r107: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r107,l3) best AR_REGS, allocno AR_REGS
    r105: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r105,l3) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r103,l1) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r101,l1) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r100,l1) best AR_REGS, allocno AR_REGS
    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r99,l2) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r91,l2) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r89,l2) best AR_REGS, allocno AR_REGS
    r88: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r88,l2) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r86,l2) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r84,l2) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a66 (r83,l2) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r81,l1) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r80,l2) best AR_REGS, allocno AR_REGS
    a32 (r80,l3) best AR_REGS, allocno AR_REGS
    a9 (r80,l1) best AR_REGS, allocno AR_REGS
    a7 (r80,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r78,l3) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r77,l3) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r73,l3) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r72,l3) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r70,l3) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r67,l3) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r65,l3) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r60,l1) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r58,l3) best AR_REGS, allocno AR_REGS
    a12 (r58,l1) best AR_REGS, allocno AR_REGS
    a5 (r58,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r55,l2) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r54,l2) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r51,l2) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r48,l3) best AR_REGS, allocno AR_REGS
    a17 (r48,l1) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r47,l3) best AR_REGS, allocno AR_REGS
    a18 (r47,l1) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r46,l3) best AR_REGS, allocno AR_REGS
    a11 (r46,l1) best AR_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r45,l2) best AR_REGS, allocno AR_REGS
    a24 (r45,l1) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r44,l2) best AR_REGS, allocno AR_REGS
    a28 (r44,l3) best AR_REGS, allocno AR_REGS
    a23 (r44,l1) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r43,l2) best AR_REGS, allocno AR_REGS
    a27 (r43,l3) best AR_REGS, allocno AR_REGS
    a10 (r43,l1) best AR_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r42,l2) best AR_REGS, allocno AR_REGS
    a26 (r42,l3) best AR_REGS, allocno AR_REGS
    a8 (r42,l1) best AR_REGS, allocno AR_REGS
    a6 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:39,876 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:208,4672 MEM:52,1168
  a1(r122,l0) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:40,40
  a2(r46,l0) costs: ACC_REG:60,16962 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,90464 MEM:80,22616
  a3(r125,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a4(r123,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a5(r58,l0) costs: ACC_REG:30,585 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,3120 MEM:40,780
  a6(r42,l0) costs: ACC_REG:39,1392 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:208,7424 MEM:52,1856
  a7(r80,l0) costs: ACC_REG:39,246 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:208,1312 MEM:52,328
  a8(r42,l1) costs: ACC_REG:522,1353 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2784,7216 MEM:696,1804
  a9(r80,l1) costs: ACC_REG:207,207 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1104,1104 MEM:276,276
  a10(r43,l1) costs: ACC_REG:207,837 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1104,4464 MEM:276,1116
  a11(r46,l1) costs: ACC_REG:0,16902 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,90144 MEM:0,22536
  a12(r58,l1) costs: ACC_REG:555,555 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2960,2960 MEM:740,740
  a13(r134,l1) costs: ACC_REG:348,348 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1856,1856 MEM:464,464
  a14(r60,l1) costs: ACC_REG:348,348 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1856,1856 MEM:464,464
  a15(r135,l1) costs: ACC_REG:348,348 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1856,1856 MEM:464,464
  a16(r132,l1) costs: ACC_REG:348,348 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1856,1856 MEM:464,464
  a17(r48,l1) costs: ACC_REG:207,8787 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1104,46864 MEM:276,11716
  a18(r47,l1) costs: ACC_REG:207,7230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1104,38560 MEM:276,9640
  a19(r103,l1) costs: ACC_REG:414,414 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,2208 MEM:552,552
  a20(r100,l1) costs: ACC_REG:414,414 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,2208 MEM:0,0
  a21(r101,l1) costs: ACC_REG:414,414 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,2208 MEM:552,552
  a22(r141,l1) costs: ACC_REG:414,414 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,2208 MEM:552,552
  a23(r44,l1) costs: ACC_REG:621,1542 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3312,8224 MEM:828,2056
  a24(r45,l1) costs: ACC_REG:414,5406 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,28832 MEM:552,7208
  a25(r81,l1) costs: ACC_REG:414,414 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2208,2208 MEM:0,0
  a26(r42,l3) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r43,l3) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a28(r44,l3) costs: ACC_REG:705,705 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3760,3760 MEM:940,940
  a29(r47,l3) costs: ACC_REG:7023,7023 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:37456,37456 MEM:9364,9364
  a30(r48,l3) costs: ACC_REG:8580,8580 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:45760,45760 MEM:11440,11440
  a31(r58,l3) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a32(r80,l3) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r46,l3) costs: ACC_REG:16902,16902 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:90144,90144 MEM:22536,22536
  a34(r130,l3) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a35(r128,l3) costs: ACC_REG:5580,5580 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29760,29760 MEM:7440,7440
  a36(r78,l3) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a37(r77,l3) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a38(r121,l3) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a39(r118,l3) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:0,0
  a40(r119,l3) costs: ACC_REG:1410,1410 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7520,7520 MEM:1880,1880
  a41(r67,l3) costs: ACC_REG:3528,3528 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18816,18816 MEM:4704,4704
  a42(r73,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a43(r70,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a44(r72,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a45(r111,l3) costs: ACC_REG:4230,4230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22560,22560 MEM:1880,1880
  a46(r114,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a47(r112,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a48(r65,l3) costs: ACC_REG:5646,5646 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30112,30112 MEM:7528,7528
  a49(r109,l3) costs: ACC_REG:5646,5646 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30112,30112 MEM:0,0
  a50(r108,l3) costs: ACC_REG:2820,2820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15040,15040 MEM:3760,3760
  a51(r107,l3) costs: ACC_REG:5646,5646 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30112,30112 MEM:7528,7528
  a52(r105,l3) costs: ACC_REG:5646,5646 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30112,30112 MEM:7528,7528
  a53(r42,l2) costs: ACC_REG:831,831 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4432,4432 MEM:1108,1108
  a54(r43,l2) costs: ACC_REG:630,630 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3360,3360 MEM:840,840
  a55(r44,l2) costs: ACC_REG:216,216 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1152,1152 MEM:288,288
  a56(r45,l2) costs: ACC_REG:4992,4992 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26624,26624 MEM:6656,6656
  a57(r80,l2) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a58(r99,l2) costs: ACC_REG:1662,1662 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8864,8864 MEM:2216,2216
  a59(r91,l2) costs: ACC_REG:648,648 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3456,3456 MEM:864,864
  a60(r51,l2) costs: ACC_REG:1263,1263 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6736,6736 MEM:1684,1684
  a61(r88,l2) costs: ACC_REG:432,432 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2304,2304 MEM:0,0
  a62(r89,l2) costs: ACC_REG:432,432 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2304,2304 MEM:576,576
  a63(r55,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a64(r54,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a65(r86,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a66(r83,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:0,0
  a67(r84,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a68(r140,l2) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104

   Insn 178(l0): point = 0
   Insn 177(l0): point = 2
   Insn 184(l0): point = 5
   Insn 134(l0): point = 7
   Insn 132(l0): point = 9
   Insn 130(l0): point = 11
   Insn 128(l0): point = 13
   Insn 127(l0): point = 15
   Insn 4(l0): point = 18
   Insn 2(l0): point = 20
   Insn 182(l1): point = 23
   Insn 8(l1): point = 25
   Insn 79(l1): point = 27
   Insn 77(l1): point = 29
   Insn 191(l1): point = 31
   Insn 187(l1): point = 33
   Insn 75(l1): point = 35
   Insn 73(l1): point = 37
   Insn 180(l1): point = 40
   Insn 7(l1): point = 42
   Insn 6(l1): point = 44
   Insn 16(l1): point = 46
   Insn 15(l1): point = 48
   Insn 170(l1): point = 51
   Insn 167(l1): point = 53
   Insn 162(l1): point = 55
   Insn 161(l1): point = 57
   Insn 159(l1): point = 59
   Insn 158(l1): point = 61
   Insn 157(l1): point = 63
   Insn 156(l1): point = 65
   Insn 155(l1): point = 67
   Insn 154(l1): point = 69
   Insn 151(l1): point = 71
   Insn 90(l3): point = 74
   Insn 89(l3): point = 76
   Insn 86(l3): point = 78
   Insn 85(l3): point = 80
   Insn 149(l3): point = 83
   Insn 148(l3): point = 85
   Insn 9(l3): point = 88
   Insn 140(l3): point = 90
   Insn 139(l3): point = 92
   Insn 103(l3): point = 95
   Insn 100(l3): point = 97
   Insn 99(l3): point = 99
   Insn 98(l3): point = 101
   Insn 93(l3): point = 104
   Insn 92(l3): point = 106
   Insn 116(l3): point = 109
   Insn 113(l3): point = 111
   Insn 111(l3): point = 113
   Insn 109(l3): point = 115
   Insn 108(l3): point = 117
   Insn 106(l3): point = 119
   Insn 105(l3): point = 121
   Insn 125(l3): point = 124
   Insn 124(l3): point = 126
   Insn 123(l3): point = 128
   Insn 122(l3): point = 130
   Insn 186(l3): point = 132
   Insn 120(l3): point = 134
   Insn 26(l2): point = 137
   Insn 23(l2): point = 139
   Insn 71(l2): point = 142
   Insn 63(l2): point = 145
   Insn 62(l2): point = 147
   Insn 35(l2): point = 150
   Insn 34(l2): point = 152
   Insn 33(l2): point = 154
   Insn 31(l2): point = 156
   Insn 190(l2): point = 158
   Insn 189(l2): point = 160
   Insn 29(l2): point = 162
   Insn 5(l2): point = 165
   Insn 56(l2): point = 167
   Insn 49(l2): point = 169
   Insn 48(l2): point = 171
   Insn 47(l2): point = 173
   Insn 46(l2): point = 175
   Insn 45(l2): point = 177
   Insn 42(l2): point = 179
   Insn 188(l2): point = 181
   Insn 40(l2): point = 183
   Insn 37(l2): point = 185
 a0(r43): [3..17]
 a1(r122): [8..15]
 a2(r46): [8..17]
 a3(r125): [10..11]
 a4(r123): [12..13]
 a5(r58): [14..17]
 a6(r42): [18..18]
 a7(r80): [18..20]
 a8(r42): [23..73]
 a9(r80): [23..73]
 a10(r43): [51..73] [23..46]
 a11(r46):
 a12(r58): [60..73] [23..37]
 a13(r134): [54..55]
 a14(r60): [56..59]
 a15(r135): [56..57]
 a16(r132): [60..61]
 a17(r48): [23..25]
 a18(r47): [23..27]
 a19(r103): [28..29]
 a20(r100): [30..33]
 a21(r101): [30..31]
 a22(r141): [32..35]
 a23(r44): [23..42]
 a24(r45): [40..44]
 a25(r81): [47..48]
 a26(r42): [74..136]
 a27(r43): [74..136]
 a28(r44): [74..136]
 a29(r47): [107..108] [74..88]
 a30(r48): [93..136] [74..90]
 a31(r58): [74..136]
 a32(r80): [74..136]
 a33(r46): [109..136] [89..104] [74..78]
 a34(r130): [84..85]
 a35(r128): [91..92]
 a36(r78): [125..126]
 a37(r77): [127..128]
 a38(r121): [129..130]
 a39(r118): [131..132]
 a40(r119): [131..134]
 a41(r67): [135..136] [109..123] [95..97]
 a42(r73): [110..111]
 a43(r70): [110..115]
 a44(r72): [112..113]
 a45(r111): [114..121]
 a46(r114): [116..117]
 a47(r112): [118..119]
 a48(r65): [96..99]
 a49(r109): [100..101]
 a50(r108): [105..106]
 a51(r107): [75..76]
 a52(r105): [79..80]
 a53(r42): [137..187]
 a54(r43): [137..167]
 a55(r44): [137..165]
 a56(r45): [148..187] [137..145]
 a57(r80): [137..187]
 a58(r99): [146..147]
 a59(r91): [168..179]
 a60(r51): [176..187] [150..164] [137..139]
 a61(r88): [180..181]
 a62(r89): [180..183]
 a63(r55): [151..152]
 a64(r54): [153..154]
 a65(r86): [155..156]
 a66(r83): [157..160]
 a67(r84): [157..158]
 a68(r140): [159..162]
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 135
 Rebuilding regno allocno list for 134
 Rebuilding regno allocno list for 132
 Rebuilding regno allocno list for 130
 Rebuilding regno allocno list for 128
 Rebuilding regno allocno list for 121
 Rebuilding regno allocno list for 119
 Rebuilding regno allocno list for 118
 Rebuilding regno allocno list for 114
 Rebuilding regno allocno list for 112
 Rebuilding regno allocno list for 111
 Rebuilding regno allocno list for 109
 Rebuilding regno allocno list for 108
 Rebuilding regno allocno list for 107
 Rebuilding regno allocno list for 105
 Rebuilding regno allocno list for 103
 Rebuilding regno allocno list for 101
 Rebuilding regno allocno list for 100
 Rebuilding regno allocno list for 99
 Rebuilding regno allocno list for 91
 Rebuilding regno allocno list for 89
 Rebuilding regno allocno list for 88
 Rebuilding regno allocno list for 86
 Rebuilding regno allocno list for 84
 Rebuilding regno allocno list for 83
 Rebuilding regno allocno list for 81
      Moving ranges of a57r80 to a9r80:  [137..187]
      Moving ranges of a32r80 to a9r80:  [74..136]
      Moving ranges of a9r80 to a7r80:  [23..187]
 Rebuilding regno allocno list for 78
 Rebuilding regno allocno list for 77
 Rebuilding regno allocno list for 73
 Rebuilding regno allocno list for 72
 Rebuilding regno allocno list for 70
 Rebuilding regno allocno list for 67
 Rebuilding regno allocno list for 65
 Rebuilding regno allocno list for 60
      Moving ranges of a31r58 to a12r58:  [74..136]
      Moving ranges of a12r58 to a5r58:  [60..136] [23..37]
 Rebuilding regno allocno list for 55
 Rebuilding regno allocno list for 54
 Rebuilding regno allocno list for 51
      Moving ranges of a30r48 to a17r48:  [93..136] [74..90]
 Rebuilding regno allocno list for 48
      Moving ranges of a29r47 to a18r47:  [107..108] [74..88]
 Rebuilding regno allocno list for 47
      Moving ranges of a33r46 to a11r46:  [109..136] [89..104] [74..78]
      Moving ranges of a11r46 to a2r46:  [109..136] [89..104] [74..78]
      Moving ranges of a56r45 to a24r45:  [148..187] [137..145]
 Rebuilding regno allocno list for 45
      Moving ranges of a55r44 to a23r44:  [137..165]
      Moving ranges of a28r44 to a23r44:  [74..136]
 Rebuilding regno allocno list for 44
      Moving ranges of a54r43 to a10r43:  [137..167]
      Moving ranges of a27r43 to a10r43:  [74..136]
      Moving ranges of a10r43 to a0r43:  [51..167] [23..46]
      Moving ranges of a53r42 to a8r42:  [137..187]
      Moving ranges of a26r42 to a8r42:  [74..136]
      Moving ranges of a8r42 to a6r42:  [23..187]
Compressing live ranges: from 188 to 82 - 43%
Ranges after the compression:
 a0(r43): [20..77] [8..17] [0..5]
 a1(r122): [0..5]
 a2(r46): [44..63] [32..39] [26..27] [0..5]
 a3(r125): [0..1]
 a4(r123): [2..3]
 a5(r58): [24..63] [8..15] [4..5]
 a6(r42): [8..81] [6..6]
 a7(r80): [6..81]
 a13(r134): [20..21]
 a14(r60): [22..23]
 a15(r135): [22..23]
 a16(r132): [24..25]
 a17(r48): [36..63] [26..33] [8..9]
 a18(r47): [42..43] [26..31] [8..9]
 a19(r103): [10..11]
 a20(r100): [12..15]
 a21(r101): [12..13]
 a22(r141): [14..15]
 a23(r44): [26..77] [8..17]
 a24(r45): [68..81] [64..65] [16..17]
 a25(r81): [18..19]
 a34(r130): [30..31]
 a35(r128): [34..35]
 a36(r78): [54..55]
 a37(r77): [56..57]
 a38(r121): [58..59]
 a39(r118): [60..61]
 a40(r119): [60..61]
 a41(r67): [62..63] [44..53] [36..37]
 a42(r73): [44..45]
 a43(r70): [44..49]
 a44(r72): [46..47]
 a45(r111): [48..53]
 a46(r114): [50..51]
 a47(r112): [52..53]
 a48(r65): [36..37]
 a49(r109): [38..39]
 a50(r108): [40..41]
 a51(r107): [26..27]
 a52(r105): [28..29]
 a58(r99): [66..67]
 a59(r91): [78..79]
 a60(r51): [68..81] [64..65]
 a61(r88): [80..81]
 a62(r89): [80..81]
 a63(r55): [68..69]
 a64(r54): [70..71]
 a65(r86): [72..73]
 a66(r83): [74..77]
 a67(r84): [74..75]
 a68(r140): [76..77]
+++Allocating 408 bytes for conflict table (uncompressed size 1104)
;; a0(r43,l0) conflicts: a3(r125,l0) a1(r122,l0) a2(r46,l0) a4(r123,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0) a19(r103,l0) a21(r101,l0) a20(r100,l0) a22(r141,l0) a24(r45,l0) a13(r134,l0) a14(r60,l0) a15(r135,l0) a16(r132,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0) a60(r51,l0) a58(r99,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r122,l0) conflicts: a3(r125,l0) a2(r46,l0) a0(r43,l0) a4(r123,l0) a5(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a3(r125,l0) a1(r122,l0) a0(r43,l0) a4(r123,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0) a51(r107,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r125,l0) conflicts: a1(r122,l0) a2(r46,l0) a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r123,l0) conflicts: a1(r122,l0) a2(r46,l0) a0(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r58,l0) conflicts: a1(r122,l0) a2(r46,l0) a0(r43,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0) a19(r103,l0) a21(r101,l0) a20(r100,l0) a22(r141,l0) a16(r132,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r42,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0) a19(r103,l0) a21(r101,l0) a20(r100,l0) a22(r141,l0) a24(r45,l0) a25(r81,l0) a13(r134,l0) a14(r60,l0) a15(r135,l0) a16(r132,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0) a60(r51,l0) a58(r99,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0) a59(r91,l0) a61(r88,l0) a62(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a7(r80,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0) a19(r103,l0) a21(r101,l0) a20(r100,l0) a22(r141,l0) a24(r45,l0) a25(r81,l0) a13(r134,l0) a14(r60,l0) a15(r135,l0) a16(r132,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0) a60(r51,l0) a58(r99,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0) a59(r91,l0) a61(r88,l0) a62(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a13(r134,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r60,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a15(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r135,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a14(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r132,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r48,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a23(r44,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r47,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r103,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r100,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a21(r101,l0) a22(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r101,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a20(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r141,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a20(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r44,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a19(r103,l0) a21(r101,l0) a20(r100,l0) a22(r141,l0) a24(r45,l0) a51(r107,l0) a52(r105,l0) a34(r130,l0) a35(r128,l0) a48(r65,l0) a41(r67,l0) a49(r109,l0) a50(r108,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0) a36(r78,l0) a37(r77,l0) a38(r121,l0) a39(r118,l0) a40(r119,l0) a60(r51,l0) a58(r99,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r45,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a60(r51,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0) a59(r91,l0) a61(r88,l0) a62(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a25(r81,l0) conflicts: a6(r42,l0) a7(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r130,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r128,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r78,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r77,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r121,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r118,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a40(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r119,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a39(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r67,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a48(r65,l0) a42(r73,l0) a43(r70,l0) a44(r72,l0) a45(r111,l0) a46(r114,l0) a47(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r73,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a43(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r70,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a42(r73,l0) a44(r72,l0) a45(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r72,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a43(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r111,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a43(r70,l0) a46(r114,l0) a47(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r114,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a45(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r112,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0) a45(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r65,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0) a41(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r109,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r108,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r107,l0) conflicts: a2(r46,l0) a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r105,l0) conflicts: a0(r43,l0) a5(r58,l0) a6(r42,l0) a7(r80,l0) a18(r47,l0) a17(r48,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r99,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r91,l0) conflicts: a6(r42,l0) a7(r80,l0) a24(r45,l0) a60(r51,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a60(r51,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a63(r55,l0) a64(r54,l0) a65(r86,l0) a67(r84,l0) a66(r83,l0) a68(r140,l0) a59(r91,l0) a61(r88,l0) a62(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a61(r88,l0) conflicts: a6(r42,l0) a7(r80,l0) a24(r45,l0) a60(r51,l0) a62(r89,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a62(r89,l0) conflicts: a6(r42,l0) a7(r80,l0) a24(r45,l0) a60(r51,l0) a61(r88,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a63(r55,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r54,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r86,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r83,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0) a67(r84,l0) a68(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r84,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0) a66(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r140,l0) conflicts: a0(r43,l0) a6(r42,l0) a7(r80,l0) a23(r44,l0) a24(r45,l0) a60(r51,l0) a66(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r123)<->a5(r58)@1:shuffle
  cp1:a3(r125)<->a4(r123)@1:shuffle
  cp2:a14(r60)<->a16(r132)@7:shuffle
  cp3:a5(r58)<->a14(r60)@7:shuffle
  cp4:a13(r134)<->a14(r60)@7:shuffle
  cp5:a13(r134)<->a15(r135)@7:shuffle
  cp6:a17(r48)<->a35(r128)@232:shuffle
  cp7:a40(r119)<->a41(r67)@29:shuffle
  cp8:a38(r121)<->a40(r119)@29:shuffle
  cp9:a38(r121)<->a39(r118)@29:shuffle
  cp10:a36(r78)<->a37(r77)@29:shuffle
  cp11:a46(r114)<->a47(r112)@58:shuffle
  cp12:a42(r73)<->a44(r72)@58:shuffle
  cp13:a18(r47)<->a50(r108)@58:shuffle
  cp14:a2(r46)<->a50(r108)@58:shuffle
  cp15:a2(r46)<->a52(r105)@117:shuffle
  cp16:a21(r101)<->a22(r141)@69:move
  cp17:a19(r103)<->a21(r101)@8:shuffle
  cp18:a19(r103)<->a20(r100)@8:shuffle
  cp19:a24(r45)<->a58(r99)@68:shuffle
  cp20:a59(r91)<->a62(r89)@9:shuffle
  cp21:a59(r91)<->a61(r88)@9:shuffle
  cp22:a67(r84)<->a68(r140)@138:move
  cp23:a65(r86)<->a67(r84)@17:shuffle
  cp24:a65(r86)<->a66(r83)@17:shuffle
  cp25:a63(r55)<->a64(r54)@17:shuffle
  cp26:a0(r43)<->a25(r81)@8:shuffle
  pref0:a0(r43)<-hr2@26
  pref1:a7(r80)<-hr2@26
  pref3:a5(r58)<-hr12@58
  pref4:a60(r51)<-hr12@144
  regions=4, blocks=20, points=82
    allocnos=69 (big 0), copies=27, conflicts=0, ranges=69

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 19 15 18 17 16 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r43 1r122 2r46 3r125 4r123 5r58 6r42 7r80 13r134 14r60 15r135 16r132 17r48 18r47 19r103 20r100 21r101 22r141 23r44 24r45 25r81 34r130 35r128 36r78 37r77 38r121 39r118 40r119 41r67 42r73 43r70 44r72 45r111 46r114 47r112 48r65 49r109 50r108 51r107 52r105 58r99 59r91 60r51 61r88 62r89 63r55 64r54 65r86 66r83 67r84 68r140
    modified regnos: 42 43 44 45 46 47 48 51 54 55 58 60 65 67 70 72 73 77 78 80 81 83 84 86 88 89 91 99 100 101 103 105 107 108 109 111 112 114 118 119 121 122 123 125 128 130 132 134 135 140 141
    border:
    Pressure: AR_REGS=10
 Removing pref3:hr12@58
 Removing pref4:hr12@144
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@264328
          2:( 2-9 11-15)@1152
            3:( 2-7)@27984
      Allocno a0r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r123 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r58 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a7r80 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a13r134 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r135 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r132 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r141 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a25r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r128 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r121 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r118 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r114 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r105 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r99 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r91 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a60r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a61r88 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a62r89 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a63r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 22:a67r84-a68r140 (freq=138):
        Result (freq=552): a67r84(276) a68r140(276)
      Forming thread by copy 16:a21r101-a22r141 (freq=69):
        Result (freq=276): a21r101(138) a22r141(138)
      Forming thread by copy 11:a46r114-a47r112 (freq=58):
        Result (freq=1880): a46r114(940) a47r112(940)
      Forming thread by copy 12:a42r73-a44r72 (freq=58):
        Result (freq=1880): a42r73(940) a44r72(940)
      Forming thread by copy 13:a18r47-a50r108 (freq=58):
        Result (freq=3350): a18r47(2410) a50r108(940)
      Forming thread by copy 7:a40r119-a41r67 (freq=29):
        Result (freq=1646): a40r119(470) a41r67(1176)
      Forming thread by copy 8:a38r121-a40r119 (freq=29):
        Result (freq=2116): a38r121(470) a40r119(470) a41r67(1176)
      Forming thread by copy 10:a36r78-a37r77 (freq=29):
        Result (freq=940): a36r78(470) a37r77(470)
      Forming thread by copy 23:a65r86-a67r84 (freq=17):
        Result (freq=828): a65r86(276) a67r84(276) a68r140(276)
      Forming thread by copy 25:a63r55-a64r54 (freq=17):
        Result (freq=552): a63r55(276) a64r54(276)
      Forming thread by copy 20:a59r91-a62r89 (freq=9):
        Result (freq=360): a59r91(216) a62r89(144)
      Forming thread by copy 17:a19r103-a21r101 (freq=8):
        Result (freq=414): a19r103(138) a21r101(138) a22r141(138)
      Forming thread by copy 2:a14r60-a16r132 (freq=7):
        Result (freq=232): a14r60(116) a16r132(116)
      Forming thread by copy 4:a13r134-a14r60 (freq=7):
        Result (freq=348): a13r134(116) a14r60(116) a16r132(116)
      Forming thread by copy 0:a4r123-a5r58 (freq=1):
        Result (freq=215): a4r123(20) a5r58(195)
      Forming thread by copy 1:a3r125-a4r123 (freq=1):
        Result (freq=235): a3r125(20) a4r123(20) a5r58(195)
      Pushing a1(r122,l0)(cost 0)
      Pushing a15(r135,l0)(cost 0)
      Pushing a25(r81,l0)(cost 0)
      Pushing a20(r100,l0)(cost 0)
      Pushing a61(r88,l0)(cost 0)
      Pushing a4(r123,l0)(cost 0)
      Pushing a3(r125,l0)(cost 0)
      Pushing a66(r83,l0)(cost 0)
      Pushing a16(r132,l0)(cost 0)
      Pushing a14(r60,l0)(cost 0)
      Pushing a13(r134,l0)(cost 0)
      Pushing a62(r89,l0)(cost 0)
      Pushing a59(r91,l0)(cost 0)
      Pushing a22(r141,l0)(cost 0)
      Pushing a21(r101,l0)(cost 0)
      Pushing a19(r103,l0)(cost 0)
      Pushing a39(r118,l0)(cost 0)
      Pushing a64(r54,l0)(cost 0)
      Pushing a63(r55,l0)(cost 0)
      Pushing a58(r99,l0)(cost 0)
      Pushing a68(r140,l0)(cost 0)
      Pushing a67(r84,l0)(cost 0)
      Pushing a65(r86,l0)(cost 0)
      Forming thread by copy 19:a24r45-a58r99 (freq=68):
        Result (freq=2356): a24r45(1802) a58r99(554)
        Making a24(r45,l0) colorable
        Making a60(r51,l0) colorable
      Pushing a60(r51,l0)(cost 1684)
      Pushing a43(r70,l0)(cost 0)
        Making a41(r67,l0) colorable
      Pushing a37(r77,l0)(cost 0)
      Pushing a36(r78,l0)(cost 0)
      Pushing a45(r111,l0)(cost 0)
      Pushing a35(r128,l0)(cost 0)
      Pushing a47(r112,l0)(cost 0)
      Pushing a46(r114,l0)(cost 0)
      Pushing a44(r72,l0)(cost 0)
      Pushing a42(r73,l0)(cost 0)
      Forming thread by copy 15:a2r46-a52r105 (freq=117):
        Result (freq=7536): a2r46(5654) a52r105(1882)
        Making a2(r46,l0) colorable
      Pushing a52(r105,l0)(cost 0)
      Pushing a51(r107,l0)(cost 0)
      Pushing a49(r109,l0)(cost 0)
      Forming thread by copy 6:a17r48-a35r128 (freq=232):
        Result (freq=4789): a17r48(2929) a35r128(1860)
        Making a17(r48,l0) colorable
      Pushing a48(r65,l0)(cost 0)
        Making a23(r44,l0) colorable
      Pushing a23(r44,l0)(cost 2056)
      Pushing a34(r130,l0)(cost 0)
      Pushing a40(r119,l0)(cost 0)
      Pushing a38(r121,l0)(cost 0)
      Pushing a41(r67,l0)(cost 4704)
      Pushing a24(r45,l0)(cost 7208)
      Pushing a50(r108,l0)(cost 0)
      Pushing a18(r47,l0)(cost 0)
      Forming thread by copy 26:a0r43-a25r81 (freq=8):
        Result (freq=430): a0r43(292) a25r81(138)
        Making a0(r43,l0) colorable
        Making a5(r58,l0) colorable
        Making a6(r42,l0) colorable
        Making a7(r80,l0) colorable
      Pushing a7(r80,l0)(cost 380)
      Pushing a5(r58,l0)(cost 780)
      Pushing a0(r43,l0)(cost 1220)
      Pushing a6(r42,l0)(cost 1856)
      Pushing a17(r48,l0)(cost 11716)
      Pushing a2(r46,l0)(cost 22616)
      Popping a2(r46,l0)  -- assign reg 8
      Popping a17(r48,l0)  -- assign reg 9
      Popping a6(r42,l0)  -- assign reg 3
      Popping a0(r43,l0)  -- assign reg 2
      Popping a5(r58,l0)  -- assign reg 4
      Popping a7(r80,l0)  -- assign reg 5
      Popping a18(r47,l0)  -- assign reg 10
      Popping a50(r108,l0)  -- assign reg 8
      Popping a24(r45,l0)  -- assign reg 4
      Popping a41(r67,l0)  -- assign reg 10
      Popping a38(r121,l0)  -- assign reg 10
      Popping a40(r119,l0)  -- assign reg 10
      Popping a34(r130,l0)  -- assign reg 8
      Popping a23(r44,l0)  -- assign reg 11
      Popping a48(r65,l0)  -- assign reg 12
      Popping a49(r109,l0)  -- assign reg 10
      Popping a51(r107,l0)  -- assign reg 12
      Popping a52(r105,l0)  -- assign reg 8
      Popping a42(r73,l0)  -- assign reg 12
      Popping a44(r72,l0)  -- assign reg 12
      Popping a46(r114,l0)  -- assign reg 12
      Popping a47(r112,l0)  -- assign reg 12
      Popping a35(r128,l0)  -- assign reg 9
      Popping a45(r111,l0)  -- assign reg 13
      Popping a36(r78,l0)  -- assign reg 10
      Popping a37(r77,l0)  -- assign reg 10
      Popping a43(r70,l0)  -- assign reg 14
      Popping a60(r51,l0)  -- assign reg 6
      Popping a65(r86,l0)  -- assign reg 8
      Popping a67(r84,l0)  -- assign reg 8
      Popping a68(r140,l0)  -- assign reg 8
      Popping a58(r99,l0)  -- assign reg 4
      Popping a63(r55,l0)  -- assign reg 8
      Popping a64(r54,l0)  -- assign reg 8
      Popping a39(r118,l0)  -- assign reg 6
      Popping a19(r103,l0)  -- assign reg 6
      Popping a21(r101,l0)  -- assign reg 6
      Popping a22(r141,l0)  -- assign reg 6
      Popping a59(r91,l0)  -- assign reg 2
      Popping a62(r89,l0)  -- assign reg 2
      Popping a13(r134,l0)  -- assign reg 4
      Popping a14(r60,l0)  -- assign reg 4
      Popping a16(r132,l0)  -- assign reg 6
      Popping a66(r83,l0)  -- assign reg 9
      Popping a3(r125,l0)  -- assign reg 3
      Popping a4(r123,l0)  -- assign reg 3
      Popping a61(r88,l0)  -- assign reg 8
      Popping a20(r100,l0)  -- assign reg 8
      Popping a25(r81,l0)  -- assign reg 2
      Popping a15(r135,l0)  -- assign reg 6
      Popping a1(r122,l0)  -- assign reg 5
Disposition:
    6:r42  l0     3    0:r43  l0     2   23:r44  l0    11   24:r45  l0     4
    2:r46  l0     8   18:r47  l0    10   17:r48  l0     9   60:r51  l0     6
   64:r54  l0     8   63:r55  l0     8    5:r58  l0     4   14:r60  l0     4
   48:r65  l0    12   41:r67  l0    10   43:r70  l0    14   44:r72  l0    12
   42:r73  l0    12   37:r77  l0    10   36:r78  l0    10    7:r80  l0     5
   25:r81  l0     2   66:r83  l0     9   67:r84  l0     8   65:r86  l0     8
   61:r88  l0     8   62:r89  l0     2   59:r91  l0     2   58:r99  l0     4
   20:r100 l0     8   21:r101 l0     6   19:r103 l0     6   52:r105 l0     8
   51:r107 l0    12   50:r108 l0     8   49:r109 l0    10   45:r111 l0    13
   47:r112 l0    12   46:r114 l0    12   39:r118 l0     6   40:r119 l0    10
   38:r121 l0    10    1:r122 l0     5    4:r123 l0     3    3:r125 l0     3
   35:r128 l0     9   34:r130 l0     8   16:r132 l0     6   13:r134 l0     4
   15:r135 l0     6   68:r140 l0     8   22:r141 l0     6
New iteration of spill/restore move
+++Costs: overall -52, reg -52, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


nextTx

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={5d} r1={1d,23u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,19u} r8={4d} r9={4d} r10={6d,4u} r11={6d,2u} r12={6d,2u} r13={5d,1u} r14={4d} r15={4d} r16={1d,19u} r17={1d,18u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r42={2d,5u} r43={2d,6u} r44={2d,5u} r45={2d,10u} r46={2d,10u} r47={2d,4u} r48={2d,4u} r51={1d,2u} r54={1d,1u} r55={1d,1u} r58={1d,3u,1e} r60={1d,1u,1e} r65={1d,1u} r67={1d,1u} r70={1d,1u} r72={1d,1u} r73={1d,1u} r77={1d,1u} r78={1d,1u} r80={1d,1u} r81={1d,1u} r83={1d,1u} r84={1d,1u} r86={1d,1u} r88={1d,1u} r89={1d,1u} r91={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r103={1d,1u} r105={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r111={1d,2u} r112={1d,1u} r114={1d,1u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,2u} r123={1d,1u} r125={1d,1u} r128={1d,1u} r130={1d,1u} r132={1d,1u} r134={1d,1u} r135={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 371{184d,185u,2e} in 107{103 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 132, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 80
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v:SI 80 [ now ])
        (reg:SI 2 a2 [ now ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:646 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ now ])
        (nil)))
(note 3 2 12 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 12 3 4 2 (var_location:QI bmap (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:647 -1
     (nil))
(insn 4 12 169 2 (set (reg/v:SI 42 [ bmap ])
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:647 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 15 [0xf])
        (nil)))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 80

;; basic block 3, loop depth 1, count 0, freq 694, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              18 [95.5%]  (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(1){ }u6(7){ }u7(16){ }u8(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 80
;; lr  def 	 43 44 45 81
(code_label 169 4 13 3 59 "" [1 uses])
(note 13 169 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 14 13 15 3 (var_location:QI bmap (subreg:QI (reg/v:SI 42 [ bmap ]) 0)) -1
     (nil))
(insn 15 14 16 3 (set (reg:SI 81)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC43") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:649 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1800000000 [0x6b49d200])
        (nil)))
(insn 16 15 17 3 (set (reg/v:SI 43 [ mintime ])
        (plus:SI (reg/v:SI 80 [ now ])
            (reg:SI 81))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:649 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(debug_insn 17 16 18 3 (var_location:SI mintime (reg/v:SI 43 [ mintime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:649 -1
     (nil))
(debug_insn 18 17 19 3 (var_location:QI band (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:650 -1
     (nil))
(debug_insn 19 18 6 3 (var_location:QI bi (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 -1
     (nil))
(insn 6 19 7 3 (set (reg/v:SI 45 [ band ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 7 6 180 3 (set (reg/v:SI 44 [ band ])
        (reg/v:SI 45 [ band ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:650 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 180 7 181 3 (set (pc)
        (label_ref 65)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 78 {jump}
     (nil)
 -> 65)
;;  succ:       8 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80

(barrier 181 180 70)
;; basic block 4, loop depth 2, count 0, freq 2776, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       8 [80.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45
;; lr  def 	 51
(code_label 70 181 22 4 53 "" [1 uses])
(note 22 70 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 51 [ D.6013 ])
        (reg/v:SI 45 [ band ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 44 {movsi_internal}
     (nil))
(note 24 23 25 4 NOTE_INSN_DELETED)
(note 25 24 26 4 NOTE_INSN_DELETED)
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg/v:SI 42 [ bmap ])
                    (const_int 1 [0x1])
                    (reg/v:SI 45 [ band ]))
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 58)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 51 80

;; basic block 5, loop depth 2, count 0, freq 1388, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(1){ }u24(7){ }u25(16){ }u26(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 51 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 45
;; lr  def 	 54 55 83 84 86 140
(note 27 26 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 27 30 5 (set (reg:SI 140 [84])
        (plus:SI (reg/v:SI 45 [ band ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 1 {addsi3}
     (nil))
(note 30 29 189 5 NOTE_INSN_DELETED)
(insn 189 30 190 5 (set (reg/f:SI 83)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 190 189 31 5 (set (reg:SI 84)
        (reg:SI 140 [84])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140 [84])
        (nil)))
(insn 31 190 33 5 (set (reg:SI 86)
        (plus:SI (mult:SI (reg:SI 84)
                (const_int 8 [0x8]))
            (reg/f:SI 83))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 84)
        (expr_list:REG_DEAD (reg/f:SI 83)
            (nil))))
(insn 33 31 34 5 (set (reg:SI 54 [ D.6013 ])
        (mem/j:SI (plus:SI (reg:SI 86)
                (const_int 4 [0x4])) [0 LMIC.bands[_19].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 34 33 35 5 (set (reg:SI 55 [ D.6013 ])
        (minus:SI (reg/v:SI 43 [ mintime ])
            (reg:SI 54 [ D.6013 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 54 [ D.6013 ])
        (nil)))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (ge (reg:SI 55 [ D.6013 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 58))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:652 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 55 [ D.6013 ])
        (int_list:REG_BR_PROB 4752 (nil)))
 -> 58)
;;  succ:       6 [52.5%]  (FALLTHRU)
;;              7 [47.5%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 51 80

;; basic block 6, loop depth 2, count 0, freq 728, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [52.5%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(1){ }u37(7){ }u38(16){ }u39(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 51 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 51
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44 88 89 91
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 37 36 38 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 82 {call_value_internal}
     (nil)
    (nil))
(note 38 37 40 6 NOTE_INSN_DELETED)
(insn 40 38 41 6 (set (reg:SI 89)
        (plus:SI (reg:SI 51 [ D.6013 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 1 {addsi3}
     (nil))
(note 41 40 188 6 NOTE_INSN_DELETED)
(insn 188 41 42 6 (set (reg/f:SI 88)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 42 188 44 6 (set (reg:SI 91)
        (plus:SI (mult:SI (reg:SI 89)
                (const_int 8 [0x8]))
            (reg/f:SI 88))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 88)
            (nil))))
(note 44 42 45 6 NOTE_INSN_DELETED)
(insn 45 44 46 6 (set (reg:SI 13 a13)
        (mem/j:SI (plus:SI (reg:SI 91)
                (const_int 4 [0x4])) [0 LMIC.bands[_19].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 44 {movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:SI 12 a12)
        (reg:SI 51 [ D.6013 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 51 [ D.6013 ])
        (nil)))
(insn 47 46 48 6 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 48 47 49 6 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC46") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC45") [flags 0x2]  <var_decl 0x100f25480 *.LC45>)
        (nil)))
(call_insn 49 48 50 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:654 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_UNUSED (reg:SI 10 a10)
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(debug_insn 50 49 56 6 (var_location:QI band (subreg:QI (reg/v:SI 45 [ band ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:656 -1
     (nil))
(insn 56 50 57 6 (set (reg/v:SI 43 [ mintime ])
        (mem/j:SI (plus:SI (reg:SI 91)
                (const_int 4 [0x4])) [0 LMIC.bands[_19].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:656 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(debug_insn 57 56 5 6 (var_location:SI mintime (reg/v:SI 43 [ mintime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:656 -1
     (nil))
(insn 5 57 58 6 (set (reg/v:SI 44 [ band ])
        (reg/v:SI 45 [ band ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:656 44 {movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80

;; basic block 7, loop depth 2, count 0, freq 2776, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4 [50.0%] 
;;              5 [47.5%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u60(1){ }u61(7){ }u62(16){ }u63(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	 45 99
(code_label 58 5 59 7 52 "" [2 uses])
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 60 59 61 7 (var_location:QI band (subreg:QI (reg/v:SI 44 [ band ]) 0)) -1
     (nil))
(debug_insn 61 60 62 7 (var_location:SI mintime (reg/v:SI 43 [ mintime ])) -1
     (nil))
(insn 62 61 63 7 (set (reg:SI 99)
        (plus:SI (reg/v:SI 45 [ band ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 45 [ band ])
        (nil)))
(insn 63 62 64 7 (set (reg/v:SI 45 [ band ])
        (zero_extend:SI (subreg:QI (reg:SI 99) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(debug_insn 64 63 65 7 (var_location:QI bi (subreg:QI (reg/v:SI 45 [ band ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80

;; basic block 8, loop depth 2, count 0, freq 3469, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(1){ }u70(7){ }u71(16){ }u72(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	
(code_label 65 64 66 8 51 "" [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 67 66 68 8 (var_location:QI bi (subreg:QI (reg/v:SI 45 [ band ]) 0)) -1
     (nil))
(debug_insn 68 67 69 8 (var_location:QI band (subreg:QI (reg/v:SI 44 [ band ]) 0)) -1
     (nil))
(debug_insn 69 68 71 8 (var_location:SI mintime (reg/v:SI 43 [ mintime ])) -1
     (nil))
(jump_insn 71 69 72 8 (set (pc)
        (if_then_else (geu (reg/v:SI 45 [ band ])
                (const_int 4 [0x4]))
            (pc)
            (label_ref 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:651 59 {*ubfalse}
     (int_list:REG_BR_PROB 8000 (nil))
 -> 70)
;;  succ:       4 [80.0%] 
;;              9 [20.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 80

;; basic block 9, loop depth 1, count 0, freq 694, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 [20.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(1){ }u78(7){ }u79(16){ }u80(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 47 48 58 100 101 103 141
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 75 9 (set (reg:SI 58 [ D.6013 ])
        (reg/v:SI 44 [ band ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 44 {movsi_internal}
     (nil))
(insn 75 73 76 9 (set (reg:SI 141 [101])
        (plus:SI (reg/v:SI 44 [ band ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 1 {addsi3}
     (nil))
(note 76 75 187 9 NOTE_INSN_DELETED)
(insn 187 76 191 9 (set (reg/f:SI 100)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 191 187 77 9 (set (reg:SI 101)
        (reg:SI 141 [101])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [101])
        (nil)))
(insn 77 191 79 9 (set (reg:SI 103)
        (plus:SI (mult:SI (reg:SI 101)
                (const_int 8 [0x8]))
            (reg/f:SI 100))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg/f:SI 100)
            (nil))))
(insn 79 77 80 9 (set (reg/v:SI 47 [ chnl ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg:SI 103)
                    (const_int 3 [0x3])) [0 LMIC.bands[_30].lastchnl+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(debug_insn 80 79 81 9 (var_location:QI chnl (subreg:QI (reg/v:SI 47 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:660 -1
     (nil))
(debug_insn 81 80 8 9 (var_location:QI ci (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 -1
     (nil))
(insn 8 81 182 9 (set (reg/v:SI 48 [ ci ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 182 8 183 9 (set (pc)
        (label_ref 142)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 78 {jump}
     (nil)
 -> 142)
;;  succ:       17 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80

(barrier 183 182 146)
;; basic block 10, loop depth 2, count 0, freq 9412, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       17 [94.1%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(1){ }u90(7){ }u91(16){ }u92(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 46 105 107
(code_label 146 183 84 10 58 "" [1 uses])
(note 84 146 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg:SI 105)
        (plus:SI (reg/v:SI 47 [ chnl ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:662 1 {addsi3}
     (nil))
(insn 86 85 87 10 (set (reg/v:SI 46 [ chnl ])
        (zero_extend:SI (subreg:QI (reg:SI 105) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:662 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(debug_insn 87 86 89 10 (var_location:QI chnl (subreg:QI (reg/v:SI 46 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:662 -1
     (nil))
(insn 89 87 90 10 (set (reg:SI 107)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:662 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))
(jump_insn 90 89 91 10 (set (pc)
        (if_then_else (geu (reg:SI 107)
                (reg/v:SI 46 [ chnl ]))
            (label_ref 95)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:662 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 107)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 95)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 47 48 58 80

;; basic block 11, loop depth 2, count 0, freq 4706, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u98(1){ }u99(7){ }u100(16){ }u101(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 46 108
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg:SI 108)
        (plus:SI (reg/v:SI 47 [ chnl ])
            (const_int -15 [0xfffffffffffffff1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:663 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 47 [ chnl ])
        (nil)))
(insn 93 92 94 11 (set (reg/v:SI 46 [ chnl ])
        (zero_extend:SI (subreg:QI (reg:SI 108) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:663 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(debug_insn 94 93 95 11 (var_location:QI chnl (subreg:QI (reg/v:SI 46 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:663 -1
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 80

;; basic block 12, loop depth 2, count 0, freq 9412, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10 [50.0%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(1){ }u106(7){ }u107(16){ }u108(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 65 67 109
(code_label 95 94 96 12 55 "" [1 uses])
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 97 96 98 12 (var_location:QI chnl (subreg:QI (reg/v:SI 46 [ chnl ]) 0)) -1
     (nil))
(insn 98 97 99 12 (set (reg/f:SI 109)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:664 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 99 98 100 12 (set (reg:SI 65 [ D.6015 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 109)
                    (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:664 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 100 99 101 12 (set (reg:SI 67 [ D.6013 ])
        (reg/v:SI 46 [ chnl ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:664 44 {movsi_internal}
     (nil))
(note 101 100 102 12 NOTE_INSN_DELETED)
(note 102 101 103 12 NOTE_INSN_DELETED)
(jump_insn 103 102 104 12 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 65 [ D.6015 ])
                    (const_int 1 [0x1])
                    (reg/v:SI 46 [ chnl ]))
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:664 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6015 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 137)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              16 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 67 80

;; basic block 13, loop depth 2, count 0, freq 4706, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u116(1){ }u117(7){ }u118(16){ }u119(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 67 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 70 72 73 111 112 114
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 13 (set (reg/f:SI 111)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 106 105 107 13 (set (reg:SI 112)
        (plus:SI (reg/v:SI 46 [ chnl ])
            (const_int 64 [0x40]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 1 {addsi3}
     (nil))
(note 107 106 108 13 NOTE_INSN_DELETED)
(insn 108 107 109 13 (set (reg/f:SI 114)
        (plus:SI (mult:SI (reg:SI 112)
                (const_int 2 [0x2]))
            (reg/f:SI 111))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 109 108 111 13 (set (reg:SI 70 [ D.6015 ])
        (zero_extend:SI (mem/j:HI (reg/f:SI 114) [0 LMIC.channelDrMap S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 111 109 112 13 (set (reg:SI 72 [ D.6012 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 111)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(note 112 111 113 13 NOTE_INSN_DELETED)
(insn 113 112 114 13 (set (reg:SI 73 [ D.6013 ])
        (and:SI (reg:SI 72 [ D.6012 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6012 ])
        (nil)))
(note 114 113 115 13 NOTE_INSN_DELETED)
(note 115 114 116 13 NOTE_INSN_DELETED)
(jump_insn 116 115 117 13 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 70 [ D.6015 ])
                    (const_int 1 [0x1])
                    (reg:SI 73 [ D.6013 ]))
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:664 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 73 [ D.6013 ])
        (expr_list:REG_DEAD (reg:SI 70 [ D.6015 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 137)
;;  succ:       14 [50.0%]  (FALLTHRU)
;;              16 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 67 80

;; basic block 14, loop depth 2, count 0, freq 2353, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u132(1){ }u133(7){ }u134(16){ }u135(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 67 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 67
;; lr  def 	 77 78 118 119 121
(note 117 116 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 117 121 14 (set (reg:SI 119)
        (plus:SI (reg:SI 67 [ D.6013 ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:666 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6013 ])
        (nil)))
(note 121 120 186 14 NOTE_INSN_DELETED)
(insn 186 121 122 14 (set (reg/f:SI 118)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:666 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 122 186 123 14 (set (reg/f:SI 121)
        (plus:SI (mult:SI (reg:SI 119)
                (const_int 4 [0x4]))
            (reg/f:SI 118))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:666 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg/f:SI 118)
            (nil))))
(insn 123 122 124 14 (set (reg:SI 77 [ D.6016 ])
        (mem/j:SI (reg/f:SI 121) [0 LMIC.channelFreq S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:666 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 124 123 125 14 (set (reg:SI 78 [ D.6016 ])
        (and:SI (reg:SI 77 [ D.6016 ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:666 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6016 ])
        (nil)))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (ne (reg/v:SI 44 [ band ])
                (reg:SI 78 [ D.6016 ]))
            (label_ref 137)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:665 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 78 [ D.6016 ])
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 137)
;;  succ:       15 [4.5%]  (FALLTHRU)
;;              16 [95.5%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 80

;; basic block 15, loop depth 0, count 0, freq 106, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [4.5%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u144(1){ }u145(7){ }u146(16){ }u147(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 46 58
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 58
;; lr  def 	 122 123 125
(note 126 125 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 15 (set (reg/f:SI 122)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC44") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:667 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 128 127 129 15 (set (reg:SI 123)
        (plus:SI (reg:SI 58 [ D.6013 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:667 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 58 [ D.6013 ])
        (nil)))
(note 129 128 130 15 NOTE_INSN_DELETED)
(insn 130 129 132 15 (set (reg:SI 125)
        (plus:SI (mult:SI (reg:SI 123)
                (const_int 8 [0x8]))
            (reg/f:SI 122))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:667 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 132 130 134 15 (set (mem/j:QI (plus:SI (reg:SI 125)
                (const_int 3 [0x3])) [0 LMIC.bands[_30].lastchnl+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 46 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:667 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 134 132 184 15 (set (mem/j/c:QI (plus:SI (reg/f:SI 122)
                (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 46 [ chnl ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:667 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (expr_list:REG_DEAD (reg/v:SI 46 [ chnl ])
            (nil))))
(jump_insn 184 134 185 15 (set (pc)
        (label_ref 171)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:668 78 {jump}
     (nil)
 -> 171)
;;  succ:       19 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

(barrier 185 184 137)
;; basic block 16, loop depth 2, count 0, freq 9306, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       12 [50.0%] 
;;              13 [50.0%] 
;;              14 [95.5%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u156(1){ }u157(7){ }u158(16){ }u159(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 48 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 48
;; lr  def 	 47 48 128
(code_label 137 185 138 16 56 "" [3 uses])
(note 138 137 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 16 (set (reg:SI 128)
        (plus:SI (reg/v:SI 48 [ ci ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 48 [ ci ])
        (nil)))
(insn 140 139 141 16 (set (reg/v:SI 48 [ ci ])
        (zero_extend:SI (subreg:QI (reg:SI 128) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(debug_insn 141 140 9 16 (var_location:QI ci (subreg:QI (reg/v:SI 48 [ ci ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 -1
     (nil))
(insn 9 141 142 16 (set (reg/v:SI 47 [ chnl ])
        (reg/v:SI 46 [ chnl ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 46 [ chnl ])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80

;; basic block 17, loop depth 2, count 0, freq 10000, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [100.0%]  (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u164(1){ }u165(7){ }u166(16){ }u167(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 130
(code_label 142 9 143 17 54 "" [1 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 144 143 145 17 (var_location:QI ci (subreg:QI (reg/v:SI 48 [ ci ]) 0)) -1
     (nil))
(debug_insn 145 144 148 17 (var_location:QI chnl (subreg:QI (reg/v:SI 47 [ chnl ]) 0)) -1
     (nil))
(insn 148 145 149 17 (set (reg:SI 130)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))
(jump_insn 149 148 150 17 (set (pc)
        (if_then_else (geu (reg:SI 130)
                (reg/v:SI 48 [ ci ]))
            (label_ref 146)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:661 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 130)
        (int_list:REG_BR_PROB 9412 (nil)))
 -> 146)
;;  succ:       10 [94.1%] 
;;              18 [5.9%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 48 58 80

;; basic block 18, loop depth 1, count 0, freq 588, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 [5.9%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u172(1){ }u173(7){ }u174(16){ }u175(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 58
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 60 132 134 135
(note 150 149 151 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 151 150 152 18 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:672 82 {call_value_internal}
     (nil)
    (nil))
(note 152 151 153 18 NOTE_INSN_DELETED)
(note 153 152 154 18 NOTE_INSN_DELETED)
(insn 154 153 155 18 (set (reg:SI 12 a12)
        (reg:SI 58 [ D.6013 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:672 44 {movsi_internal}
     (nil))
(insn 155 154 156 18 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:672 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 156 155 157 18 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC48") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:672 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC47") [flags 0x2]  <var_decl 0x100f25510 *.LC47>)
        (nil)))
(call_insn 157 156 158 18 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:672 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 158 157 159 18 (set (reg:SI 132)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 159 158 161 18 (set (reg:SI 60 [ D.6013 ])
        (ashift:SI (reg:SI 132)
            (reg:SI 58 [ D.6013 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg:SI 58 [ D.6013 ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 58 [ D.6013 ]))
                (nil)))))
(insn 161 159 162 18 (set (reg:SI 135)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 162 161 165 18 (set (reg:SI 134)
        (xor:SI (reg:SI 135)
            (reg:SI 60 [ D.6013 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_DEAD (reg:SI 60 [ D.6013 ])
            (expr_list:REG_EQUAL (not:SI (reg:SI 60 [ D.6013 ]))
                (nil)))))
(note 165 162 166 18 NOTE_INSN_DELETED)
(note 166 165 167 18 NOTE_INSN_DELETED)
(insn 167 166 168 18 (set (reg/v:SI 42 [ bmap ])
        (and:SI (reg:SI 134)
            (reg/v:SI 42 [ bmap ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(debug_insn 168 167 170 18 (var_location:QI bmap (subreg:QI (reg/v:SI 42 [ bmap ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 -1
     (nil))
(jump_insn 170 168 171 18 (set (pc)
        (if_then_else (ne (reg/v:SI 42 [ bmap ])
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:674 56 {*btrue}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 169)
;;  succ:       19 [4.5%]  (FALLTHRU)
;;              3 [95.5%]  (DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 80

;; basic block 19, loop depth 0, count 0, freq 132, maybe hot
;;  prev block 18, next block 1, flags: (RTL)
;;  pred:       18 [4.5%]  (FALLTHRU)
;;              15 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(1){ }u198(7){ }u199(16){ }u200(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 2 [a2]
(code_label 171 170 172 19 57 "" [1 uses])
(note 172 171 177 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 177 172 178 19 (set (reg/i:SI 2 a2)
        (reg/v:SI 43 [ mintime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:679 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 [ mintime ])
        (nil)))
(insn 178 177 0 19 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:679 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function nextJoinState (nextJoinState, funcdef_no=66, decl_uid=3689, cgraph_uid=66, symbol_order=74)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 17 (    1)
scanning new insn with uid = 138.
verify found no changes in insn with uid = 138.
deleting insn with uid = 104.
scanning new insn with uid = 139.
verify found no changes in insn with uid = 139.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 17 (    1)
Reg 70 uninteresting
Reg 45 uninteresting
Reg 71 uninteresting
Reg 46 uninteresting
Reg 74: local to bb 3 def dominates all uses has unique first use
Reg 73 uninteresting
Reg 75 uninteresting
Reg 76 uninteresting
Reg 47 uninteresting
Reg 77 uninteresting
Reg 48 uninteresting
Reg 83 uninteresting
Reg 84 uninteresting
Reg 66 uninteresting
Reg 67: local to bb 6 def dominates all uses has unique first use
Reg 85 uninteresting
Reg 86 uninteresting
Reg 87 uninteresting
Reg 89: local to bb 11 def dominates all uses has unique first use
Reg 91 uninteresting
Reg 90 uninteresting
Reg 52 uninteresting
Reg 53 uninteresting
Reg 94 uninteresting
Reg 56 uninteresting
Reg 96 uninteresting
Reg 59 uninteresting
Ignoring reg 60, has equiv memory
Reg 99 uninteresting
Found def insn 46 for 67 to be not moveable
Ignoring reg 74 with equiv init insn
Found def insn 62 for 89 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 9 }
;; 5 succs { 10 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 60: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 73: (insn_list:REG_DEP_TRUE 139 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 75: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 76: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 84: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 85: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 87: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 91: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 94: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 96: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 138 (nil))

Pass 0 for finding pseudo/allocno costs

    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r99,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r96,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r94,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r93,l0) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r91,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r90,l0) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r89,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r87,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r86,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r85,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r84,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r83,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r77,l0) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r76,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r73,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r71,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r70,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r66,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r59,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r56,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r52,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a1(r99,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a2(r93,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a3(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r59,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r43,l0) costs: ACC_REG:9810,9810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:52320,52320 MEM:13080,13080
  a6(r96,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a7(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r94,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r52,l0) costs: ACC_REG:6810,6810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36320,36320 MEM:9080,9080
  a11(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r87,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a13(r90,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a14(r91,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a15(r89,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r68,l0) costs: ACC_REG:5580,5580 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29760,29760 MEM:7440,7440
  a17(r86,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:1440,1440
  a18(r85,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a19(r67,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a20(r66,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a21(r84,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:0,0
  a22(r83,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a23(r48,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a24(r76,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a25(r77,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a26(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a27(r75,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a28(r73,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:0,0
  a29(r74,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a30(r46,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a31(r70,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a32(r71,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a33(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 118(l0): point = 0
   Insn 117(l0): point = 2
   Insn 109(l0): point = 5
   Insn 108(l0): point = 7
   Insn 107(l0): point = 9
   Insn 106(l0): point = 11
   Insn 138(l0): point = 13
   Insn 102(l0): point = 15
   Insn 136(l0): point = 18
   Insn 97(l0): point = 20
   Insn 96(l0): point = 22
   Insn 95(l0): point = 24
   Insn 92(l0): point = 26
   Insn 90(l0): point = 29
   Insn 89(l0): point = 31
   Insn 87(l0): point = 33
   Insn 86(l0): point = 35
   Insn 85(l0): point = 37
   Insn 83(l0): point = 39
   Insn 82(l0): point = 41
   Insn 80(l0): point = 43
   Insn 79(l0): point = 45
   Insn 78(l0): point = 47
   Insn 77(l0): point = 49
   Insn 6(l0): point = 52
   Insn 72(l0): point = 55
   Insn 71(l0): point = 57
   Insn 70(l0): point = 59
   Insn 67(l0): point = 61
   Insn 66(l0): point = 63
   Insn 65(l0): point = 65
   Insn 64(l0): point = 67
   Insn 63(l0): point = 69
   Insn 62(l0): point = 71
   Insn 60(l0): point = 73
   Insn 4(l0): point = 76
   Insn 134(l0): point = 79
   Insn 3(l0): point = 81
   Insn 132(l0): point = 84
   Insn 5(l0): point = 86
   Insn 56(l0): point = 88
   Insn 55(l0): point = 90
   Insn 54(l0): point = 92
   Insn 51(l0): point = 95
   Insn 50(l0): point = 97
   Insn 48(l0): point = 100
   Insn 47(l0): point = 102
   Insn 46(l0): point = 104
   Insn 45(l0): point = 106
   Insn 44(l0): point = 108
   Insn 38(l0): point = 111
   Insn 37(l0): point = 113
   Insn 36(l0): point = 115
   Insn 34(l0): point = 118
   Insn 30(l0): point = 120
   Insn 27(l0): point = 122
   Insn 26(l0): point = 124
   Insn 25(l0): point = 126
   Insn 24(l0): point = 128
   Insn 23(l0): point = 130
   Insn 20(l0): point = 133
   Insn 139(l0): point = 135
   Insn 19(l0): point = 137
   Insn 16(l0): point = 140
   Insn 15(l0): point = 142
   Insn 13(l0): point = 144
   Insn 12(l0): point = 146
   Insn 11(l0): point = 148
   Insn 10(l0): point = 150
 a0(r42): [84..86] [79..81] [3..76]
 a1(r99): [12..13]
 a2(r93): [32..49]
 a3(r60): [32..33]
 a4(r59): [34..35]
 a5(r43): [55..61] [34..52]
 a6(r96): [36..37]
 a7(r56): [42..43]
 a8(r54): [44..47]
 a9(r94): [44..45]
 a10(r52): [53..59]
 a11(r53): [56..57]
 a12(r87): [60..73]
 a13(r90): [66..67]
 a14(r91): [68..69]
 a15(r89): [68..71]
 a16(r68): [98..113] [93..95]
 a17(r86): [96..97]
 a18(r85): [101..102]
 a19(r67): [101..104]
 a20(r66): [105..106]
 a21(r84): [107..108]
 a22(r83): [114..115]
 a23(r48): [119..122]
 a24(r76): [121..128]
 a25(r77): [123..124]
 a26(r47): [125..126]
 a27(r75): [129..130]
 a28(r73): [134..135]
 a29(r74): [134..137]
 a30(r46): [141..144]
 a31(r70): [143..150]
 a32(r71): [145..146]
 a33(r45): [147..148]
Compressing live ranges: from 153 to 52 - 33%
Ranges after the compression:
 a0(r42): [0..23]
 a1(r99): [0..1]
 a2(r93): [2..11]
 a3(r60): [2..3]
 a4(r59): [4..5]
 a5(r43): [4..15]
 a6(r96): [6..7]
 a7(r56): [8..9]
 a8(r54): [10..11]
 a9(r94): [10..11]
 a10(r52): [12..13]
 a11(r53): [12..13]
 a12(r87): [14..19]
 a13(r90): [16..17]
 a14(r91): [18..19]
 a15(r89): [18..19]
 a16(r68): [28..33] [24..25]
 a17(r86): [26..27]
 a18(r85): [28..29]
 a19(r67): [28..29]
 a20(r66): [30..31]
 a21(r84): [32..33]
 a22(r83): [34..35]
 a23(r48): [36..37]
 a24(r76): [36..41]
 a25(r77): [38..39]
 a26(r47): [40..41]
 a27(r75): [42..43]
 a28(r73): [44..45]
 a29(r74): [44..45]
 a30(r46): [46..47]
 a31(r70): [46..51]
 a32(r71): [48..49]
 a33(r45): [50..51]
+++Allocating 256 bytes for conflict table (uncompressed size 272)
;; a0(r42,l0) conflicts: a1(r99,l0) a3(r60,l0) a2(r93,l0) a4(r59,l0) a5(r43,l0) a6(r96,l0) a7(r56,l0) a8(r54,l0) a9(r94,l0) a10(r52,l0) a11(r53,l0) a12(r87,l0) a13(r90,l0) a14(r91,l0) a15(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r99,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a2(r93,l0) conflicts: a0(r42,l0) a3(r60,l0) a4(r59,l0) a5(r43,l0) a6(r96,l0) a7(r56,l0) a8(r54,l0) a9(r94,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r60,l0) conflicts: a0(r42,l0) a2(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r59,l0) conflicts: a0(r42,l0) a2(r93,l0) a5(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r43,l0) conflicts: a0(r42,l0) a2(r93,l0) a4(r59,l0) a6(r96,l0) a7(r56,l0) a8(r54,l0) a9(r94,l0) a10(r52,l0) a11(r53,l0) a12(r87,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r96,l0) conflicts: a0(r42,l0) a2(r93,l0) a5(r43,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a7(r56,l0) conflicts: a0(r42,l0) a2(r93,l0) a5(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r54,l0) conflicts: a0(r42,l0) a2(r93,l0) a5(r43,l0) a9(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r94,l0) conflicts: a0(r42,l0) a2(r93,l0) a5(r43,l0) a8(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r52,l0) conflicts: a0(r42,l0) a5(r43,l0) a11(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r53,l0) conflicts: a0(r42,l0) a5(r43,l0) a10(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r87,l0) conflicts: a0(r42,l0) a5(r43,l0) a13(r90,l0) a14(r91,l0) a15(r89,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a13(r90,l0) conflicts: a0(r42,l0) a12(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r91,l0) conflicts: a0(r42,l0) a12(r87,l0) a15(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r89,l0) conflicts: a0(r42,l0) a12(r87,l0) a14(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r68,l0) conflicts: a18(r85,l0) a19(r67,l0) a20(r66,l0) a21(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r86,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r85,l0) conflicts: a16(r68,l0) a19(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r67,l0) conflicts: a16(r68,l0) a18(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r66,l0) conflicts: a16(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r84,l0) conflicts: a16(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r83,l0) conflicts:;; a23(r48,l0) conflicts: a24(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r76,l0) conflicts: a23(r48,l0) a25(r77,l0) a26(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r77,l0) conflicts: a24(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r47,l0) conflicts: a24(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r75,l0) conflicts:;; a28(r73,l0) conflicts: a29(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r74,l0) conflicts: a28(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r46,l0) conflicts: a31(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r70,l0) conflicts: a30(r46,l0) a32(r71,l0) a33(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r71,l0) conflicts: a31(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r45,l0) conflicts: a31(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r56)<->a9(r94)@125:shuffle
  cp1:a7(r56)<->a8(r54)@125:shuffle
  cp2:a4(r59)<->a6(r96)@125:shuffle
  cp3:a3(r60)<->a4(r59)@125:shuffle
  cp4:a3(r60)<->a5(r43)@125:shuffle
  cp5:a13(r90)<->a14(r91)@125:shuffle
  cp6:a13(r90)<->a15(r89)@125:shuffle
  cp7:a16(r68)<->a17(r86)@44:shuffle
  cp8:a20(r66)<->a21(r84)@31:shuffle
  cp9:a24(r76)<->a27(r75)@125:shuffle
  cp10:a25(r77)<->a26(r47)@125:shuffle
  cp11:a23(r48)<->a25(r77)@125:shuffle
  cp12:a32(r71)<->a33(r45)@125:shuffle
  cp13:a30(r46)<->a32(r71)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a5(r43)<-hr10@2000
  pref2:a16(r68)<-hr11@500
  pref3:a7(r56)<-hr10@125
  pref4:a4(r59)<-hr10@125
  regions=1, blocks=17, points=52
    allocnos=34 (big 0), copies=14, conflicts=0, ranges=35

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r99 2r93 3r60 4r59 5r43 6r96 7r56 8r54 9r94 10r52 11r53 12r87 13r90 14r91 15r89 16r68 17r86 18r85 19r67 20r66 21r84 22r83 23r48 24r76 25r77 26r47 27r75 28r73 29r74 30r46 31r70 32r71 33r45
    modified regnos: 42 43 45 46 47 48 52 53 54 56 59 60 66 67 68 70 71 73 74 75 76 77 83 84 85 86 87 89 90 91 93 94 96 99
    border:
    Pressure: AR_REGS=5
 Removing pref1:hr10@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@327400
          2:( 2-9 11-15)@0
            3:( 2-7)@90160
      Allocno a0r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r99 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a2r93 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r96 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a7r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r87 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a13r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a7r56-a9r94 (freq=125):
        Result (freq=4000): a7r56(2000) a9r94(2000)
      Forming thread by copy 2:a4r59-a6r96 (freq=125):
        Result (freq=4000): a4r59(2000) a6r96(2000)
      Forming thread by copy 3:a3r60-a4r59 (freq=125):
        Result (freq=6000): a3r60(2000) a4r59(2000) a6r96(2000)
      Forming thread by copy 5:a13r90-a14r91 (freq=125):
        Result (freq=4000): a13r90(2000) a14r91(2000)
      Forming thread by copy 9:a24r76-a27r75 (freq=125):
        Result (freq=5000): a24r76(3000) a27r75(2000)
      Forming thread by copy 10:a25r77-a26r47 (freq=125):
        Result (freq=4000): a25r77(2000) a26r47(2000)
      Forming thread by copy 11:a23r48-a25r77 (freq=125):
        Result (freq=7000): a23r48(3000) a25r77(2000) a26r47(2000)
      Forming thread by copy 12:a32r71-a33r45 (freq=125):
        Result (freq=4000): a32r71(2000) a33r45(2000)
      Forming thread by copy 13:a30r46-a32r71 (freq=125):
        Result (freq=7000): a30r46(3000) a32r71(2000) a33r45(2000)
      Forming thread by copy 7:a16r68-a17r86 (freq=44):
        Result (freq=2220): a16r68(1860) a17r86(360)
      Forming thread by copy 8:a20r66-a21r84 (freq=31):
        Result (freq=1000): a20r66(500) a21r84(500)
      Pushing a19(r67,l0)(cost 0)
      Pushing a18(r85,l0)(cost 0)
      Pushing a29(r74,l0)(cost 0)
      Pushing a28(r73,l0)(cost 0)
      Pushing a22(r83,l0)(cost 0)
      Pushing a21(r84,l0)(cost 0)
      Pushing a20(r66,l0)(cost 0)
      Pushing a1(r99,l0)(cost 0)
      Pushing a15(r89,l0)(cost 0)
      Pushing a11(r53,l0)(cost 0)
      Pushing a8(r54,l0)(cost 0)
      Pushing a17(r86,l0)(cost 0)
      Pushing a16(r68,l0)(cost 0)
      Pushing a10(r52,l0)(cost 0)
      Pushing a31(r70,l0)(cost 0)
      Pushing a14(r91,l0)(cost 0)
      Pushing a13(r90,l0)(cost 0)
      Pushing a12(r87,l0)(cost 0)
      Pushing a9(r94,l0)(cost 0)
        Making a5(r43,l0) colorable
      Pushing a5(r43,l0)(cost 17080)
        Making a0(r42,l0) colorable
        Making a2(r93,l0) colorable
      Pushing a2(r93,l0)(cost 4000)
      Pushing a0(r42,l0)(cost 16000)
      Pushing a7(r56,l0)(cost 0)
      Pushing a27(r75,l0)(cost 0)
      Pushing a24(r76,l0)(cost 0)
      Pushing a4(r59,l0)(cost 0)
      Pushing a3(r60,l0)(cost 0)
      Pushing a6(r96,l0)(cost 0)
      Pushing a33(r45,l0)(cost 0)
      Pushing a32(r71,l0)(cost 0)
      Pushing a30(r46,l0)(cost 0)
      Pushing a26(r47,l0)(cost 0)
      Pushing a25(r77,l0)(cost 0)
      Pushing a23(r48,l0)(cost 0)
      Popping a23(r48,l0)  -- assign reg 8
      Popping a25(r77,l0)  -- assign reg 8
      Popping a26(r47,l0)  -- assign reg 8
      Popping a30(r46,l0)  -- assign reg 8
      Popping a32(r71,l0)  -- assign reg 8
      Popping a33(r45,l0)  -- assign reg 8
      Popping a6(r96,l0)  -- assign reg 8
      Popping a3(r60,l0)  -- assign reg 10
      Popping a4(r59,l0)  -- assign reg 10
      Popping a24(r76,l0)  -- assign reg 9
      Popping a27(r75,l0)  -- assign reg 9
      Popping a7(r56,l0)  -- assign reg 10
      Popping a0(r42,l0)  -- assign reg 2
      Popping a2(r93,l0)  -- assign reg 3
      Popping a5(r43,l0)  -- assign reg 4
      Popping a9(r94,l0)  -- assign reg 8
      Popping a12(r87,l0)  -- assign reg 3
      Popping a13(r90,l0)  -- assign reg 4
      Popping a14(r91,l0)  -- assign reg 4
      Popping a31(r70,l0)  -- assign reg 2
      Popping a10(r52,l0)  -- assign reg 3
      Popping a16(r68,l0)  -- assign reg 11
      Popping a17(r86,l0)  -- assign reg 11
      Popping a8(r54,l0)  -- assign reg 10
      Popping a11(r53,l0)  -- assign reg 8
      Popping a15(r89,l0)  -- assign reg 8
      Popping a1(r99,l0)  -- assign reg 3
      Popping a20(r66,l0)  -- assign reg 2
      Popping a21(r84,l0)  -- assign reg 2
      Popping a22(r83,l0)  -- assign reg 2
      Popping a28(r73,l0)  -- assign reg 2
      Popping a29(r74,l0)  -- assign reg 3
      Popping a18(r85,l0)  -- assign reg 2
      Popping a19(r67,l0)  -- assign reg 3
Disposition:
    0:r42  l0     2    5:r43  l0     4   33:r45  l0     8   30:r46  l0     8
   26:r47  l0     8   23:r48  l0     8   10:r52  l0     3   11:r53  l0     8
    8:r54  l0    10    7:r56  l0    10    4:r59  l0    10    3:r60  l0    10
   20:r66  l0     2   19:r67  l0     3   16:r68  l0    11   31:r70  l0     2
   32:r71  l0     8   28:r73  l0     2   29:r74  l0     3   27:r75  l0     9
   24:r76  l0     9   25:r77  l0     8   22:r83  l0     2   21:r84  l0     2
   18:r85  l0     2   17:r86  l0    11   12:r87  l0     3   15:r89  l0     8
   13:r90  l0     4   14:r91  l0     4    2:r93  l0     3    9:r94  l0     8
    6:r96  l0     8    1:r99  l0     3
New iteration of spill/restore move
+++Costs: overall -5500, reg -5500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


nextJoinState

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={8d} r1={1d,23u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,16u} r8={7d} r9={7d} r10={11d,8u} r11={10d,3u} r12={8d,1u} r13={7d} r14={7d} r15={7d} r16={1d,16u} r17={1d,15u} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r42={3d,3u} r43={2d,4u} r45={1d,1u} r46={1d,2u} r47={1d,1u} r48={1d,2u} r52={1d,2u} r53={1d,1u} r54={1d,1u,1e} r56={1d,1u} r59={1d,1u} r60={1d,1u} r66={1d,1u} r67={1d,1u} r68={2d,6u} r70={1d,2u} r71={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,2u} r77={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,3u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r93={1d,2u,1e} r94={1d,1u} r96={1d,1u} r99={1d,1u} 
;;    total ref usage 384{246d,136u,2e} in 76{69 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 46 70 71
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 2 10 2 (var_location:QI failed (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:704 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 70)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 45 [ D.6019 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 70)
                    (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 34 {zero_extendqisi2}
     (nil))
(insn 12 11 13 2 (set (reg:SI 71)
        (plus:SI (reg:SI 45 [ D.6019 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6019 ])
        (nil)))
(insn 13 12 15 2 (set (reg:SI 46 [ D.6019 ])
        (zero_extend:SI (subreg:QI (reg:SI 71) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(insn 15 13 16 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 70)
                (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16])
        (subreg/s/v:QI (reg:SI 46 [ D.6019 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 70)
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:SI 46 [ D.6019 ])
                (const_int 3 [0x3]))
            (label_ref 21)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:708 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6019 ])
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 21)
;;  succ:       3 [28.0%]  (FALLTHRU)
;;              4 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [28.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(1){ }u11(7){ }u12(16){ }u13(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 73 74
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 17 139 3 (set (reg:QI 74)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:709 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 139 19 20 3 (set (reg/f:SI 73)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:709 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 20 139 21 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 73)
                (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16])
        (reg:QI 74)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:709 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 74)
        (expr_list:REG_DEAD (reg/f:SI 73)
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [72.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47 48 75 76 77
(code_label 21 20 22 4 61 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 75)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 24 23 25 4 (set:SI (reg/f:SI 76)
        (plus:SI (reg/f:SI 75)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 75)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 25 24 26 4 (set (reg:SI 47 [ D.6019 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 76)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 34 {zero_extendqisi2}
     (nil))
(insn 26 25 27 4 (set (reg:SI 77)
        (plus:SI (reg:SI 47 [ D.6019 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 47 [ D.6019 ])
        (nil)))
(insn 27 26 30 4 (set (reg:SI 48 [ D.6019 ])
        (zero_extend:SI (subreg:QI (reg:SI 77) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 77)
        (nil)))
(insn 30 27 31 4 (set (mem/j/c:QI (plus:SI (reg/f:SI 76)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (subreg/s/v:QI (reg:SI 48 [ D.6019 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 76)
        (nil)))
(note 31 30 33 4 NOTE_INSN_DELETED)
(note 33 31 34 4 NOTE_INSN_DELETED)
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 48 [ D.6019 ])
                    (const_int 1 [0x1])
                    (const_int 0 [0]))
                (const_int 0 [0]))
            (label_ref:SI 123)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:710 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6019 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 123)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              9 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(1){ }u30(7){ }u31(16){ }u32(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 68 83
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:SI 83)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:712 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 37 36 38 5 (set (reg:SI 68 [ D.6026 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 83)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:712 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (nil)))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (eq (reg:SI 68 [ D.6026 ])
                (const_int 0 [0]))
            (label_ref:SI 127)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:712 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 127)
;;  succ:       10 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68

;; basic block 6, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  def 	 66 67 84 85
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 40 39 42 6 (var_location:QI dr (subreg:QI (reg:SI 68 [ D.6026 ]) 0)) -1
     (nil))
(debug_insn 42 40 43 6 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 43 42 44 6 (var_location:SI index (reg:SI 68 [ D.6026 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 84)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC50") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 45 44 46 6 (set (reg/f:SI 66 [ D.6024 ])
        (plus:SI (reg:SI 68 [ D.6026 ])
            (reg/f:SI 84))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 84)
        (nil)))
(insn 46 45 47 6 (set (reg:SI 67 [ D.6025 ])
        (zero_extend:SI (mem:QI (reg/f:SI 66 [ D.6024 ]) [0 *_43+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 66 [ D.6024 ])
        (nil)))
(insn 47 46 48 6 (set (reg:SI 85)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (eq (reg:SI 67 [ D.6025 ])
                (reg:SI 85))
            (label_ref 52)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 85)
        (expr_list:REG_DEAD (reg:SI 67 [ D.6025 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 52)
;;  succ:       7 [72.0%]  (FALLTHRU)
;;              8 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68

;; basic block 7, loop depth 0, count 0, freq 1800, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [72.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(1){ }u47(7){ }u48(16){ }u49(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  def 	 68 86
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg:SI 86)
        (plus:SI (reg:SI 68 [ D.6026 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6026 ])
        (nil)))
(insn 51 50 52 7 (set (reg:SI 68 [ D.6026 ])
        (zero_extend:SI (subreg:QI (reg:SI 86) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68

;; basic block 8, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6 [28.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(1){ }u53(7){ }u54(16){ }u55(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(code_label 52 51 53 8 63 "" [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:SI 11 a11)
        (reg:SI 68 [ D.6026 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:715 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6026 ])
        (nil)))
(insn 55 54 56 8 (set (reg:SI 10 a10)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:715 44 {movsi_internal}
     (nil))
(call_insn 56 55 5 8 (call (mem:SI (symbol_ref:SI ("setDrJoin") [flags 0x3]  <function_decl 0x100b66e58 setDrJoin>) [0 setDrJoin S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:715 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 5 56 132 8 (set (reg/v:SI 42 [ failed ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:704 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 132 5 133 8 (set (pc)
        (label_ref 57)) 78 {jump}
     (nil)
 -> 57)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 133 132 123)
;; basic block 9, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(1){ }u61(7){ }u62(16){ }u63(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 123 133 122 9 67 "" [1 uses])
(note 122 123 3 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 3 122 134 9 (set (reg/v:SI 42 [ failed ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:704 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 134 3 135 9 (set (pc)
        (label_ref 57)) 78 {jump}
     (nil)
 -> 57)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 135 134 127)
;; basic block 10, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       5 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(1){ }u65(7){ }u66(16){ }u67(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 127 135 126 10 68 "" [1 uses])
(note 126 127 4 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 4 126 57 10 (set (reg/v:SI 42 [ failed ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:713 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;;              10 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(1){ }u69(7){ }u70(16){ }u71(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 52 53 87 89 90 91
(code_label 57 4 58 11 62 "" [2 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 59 58 60 11 (var_location:QI failed (subreg:QI (reg/v:SI 42 [ failed ]) 0)) -1
     (nil))
(insn 60 59 62 11 (set (reg/f:SI 87)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:718 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 62 60 63 11 (set (reg:HI 89 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 87)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:718 45 {movhi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:SI 91)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC51") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:718 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -2049 [0xfffffffffffff7ff])
        (nil)))
(insn 64 63 65 11 (set (reg:SI 90)
        (and:SI (subreg:SI (reg:HI 89 [ LMIC.opmode ]) 0)
            (reg:SI 91))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:718 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 91)
        (expr_list:REG_DEAD (reg:HI 89 [ LMIC.opmode ])
            (nil))))
(insn 65 64 66 11 (set (mem/j/c:HI (plus:SI (reg/f:SI 87)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 90) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:718 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(call_insn 66 65 67 11 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:721 82 {call_value_internal}
     (nil)
    (nil))
(insn 67 66 68 11 (set (reg/v:SI 43 [ time ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:721 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 68 67 70 11 (var_location:SI time (reg/v:SI 43 [ time ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:721 -1
     (nil))
(insn 70 68 71 11 (set (reg/v:SI 52 [ time ])
        (mem/j/c:SI (plus:SI (reg/f:SI 87)
                (const_int 36 [0x24])) [0 LMIC.bands[0].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:722 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 71 70 72 11 (set (reg:SI 53 [ D.6020 ])
        (minus:SI (reg/v:SI 43 [ time ])
            (reg/v:SI 52 [ time ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:722 4 {subsi3}
     (nil))
(jump_insn 72 71 130 11 (set (pc)
        (if_then_else (ge (reg:SI 53 [ D.6020 ])
                (const_int 0 [0]))
            (label_ref:SI 74)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:722 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 53 [ D.6020 ])
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 74)
;;  succ:       12 [27.0%]  (FALLTHRU)
;;              13 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 52

;; basic block 12, loop depth 0, count 0, freq 2700, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [27.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u85(1){ }u86(7){ }u87(16){ }u88(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 52
;; lr  def 	 43
(note 130 72 6 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 6 130 74 12 (set (reg/v:SI 43 [ time ])
        (reg/v:SI 52 [ time ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:723 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 52 [ time ])
        (nil)))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 13, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;;              11 [73.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u90(1){ }u91(7){ }u92(16){ }u93(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 54 56 59 60 93 94 96
(code_label 74 6 75 13 64 "" [1 uses])
(note 75 74 76 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 76 75 77 13 (var_location:SI time (reg/v:SI 43 [ time ])) -1
     (nil))
(insn 77 76 78 13 (set (reg/f:SI 93)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 78 77 79 13 (set (reg:SI 54 [ D.6019 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 93)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 34 {zero_extendqisi2}
     (nil))
(insn 79 78 80 13 (set (reg:SI 94)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(insn 80 79 81 13 (set (reg:SI 56 [ D.6020 ])
        (ashiftrt:SI (reg:SI 94)
            (reg:SI 54 [ D.6019 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg:SI 54 [ D.6019 ])
            (expr_list:REG_EQUAL (ashiftrt:SI (const_int 255 [0xff])
                    (reg:SI 54 [ D.6019 ]))
                (nil)))))
(note 81 80 82 13 NOTE_INSN_DELETED)
(insn 82 81 83 13 (set (reg:SI 10 a10)
        (zero_extend:SI (subreg:QI (reg:SI 56 [ D.6020 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 56 [ D.6020 ])
        (nil)))
(call_insn 83 82 84 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("rndDelay") [flags 0x3]  <function_decl 0x100b66ca8 rndDelay>) [0 rndDelay S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 84 83 85 13 NOTE_INSN_DELETED)
(insn 85 84 86 13 (set (reg:SI 96)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC52") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 187500 [0x2dc6c])
        (nil)))
(insn 86 85 87 13 (set (reg:SI 59 [ D.6020 ])
        (plus:SI (reg:SI 10 a10)
            (reg:SI 96))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:730 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 87 86 89 13 (set (reg:SI 60 [ D.6020 ])
        (plus:SI (reg/v:SI 43 [ time ])
            (reg:SI 59 [ D.6020 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:724 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6020 ])
        (expr_list:REG_DEAD (reg/v:SI 43 [ time ])
            (expr_list:REG_EQUIV (mem/j/c:SI (reg/f:SI 93) [0 LMIC.txend+0 S4 A32])
                (nil)))))
(insn 89 87 90 13 (set (mem/j/c:SI (reg/f:SI 93) [0 LMIC.txend+0 S4 A32])
        (reg:SI 60 [ D.6020 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:724 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_DEAD (reg:SI 60 [ D.6020 ])
            (nil))))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (eq (reg/v:SI 42 [ failed ])
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:732 56 {*btrue}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 100)
;;  succ:       14 [39.0%]  (FALLTHRU)
;;              15 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 14, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [39.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(1){ }u112(7){ }u113(16){ }u114(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 92 91 93 14 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:733 82 {call_value_internal}
     (nil)
    (nil))
(note 93 92 94 14 NOTE_INSN_DELETED)
(note 94 93 95 14 NOTE_INSN_DELETED)
(insn 95 94 96 14 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:733 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 96 95 97 14 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC54") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:733 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC53") [flags 0x2]  <var_decl 0x100f25a20 *.LC53>)
        (nil)))
(call_insn 97 96 136 14 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:733 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_UNUSED (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(jump_insn 136 97 137 14 (set (pc)
        (label_ref 110)) 78 {jump}
     (nil)
 -> 110)
;;  succ:       16 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 137 136 100)
;; basic block 15, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13 [61.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u122(1){ }u123(7){ }u124(16){ }u125(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 99
(code_label 100 137 101 15 65 "" [1 uses])
(note 101 100 102 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 102 101 103 15 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 82 {call_value_internal}
     (nil)
    (nil))
(note 103 102 105 15 NOTE_INSN_DELETED)
(note 105 103 138 15 NOTE_INSN_DELETED)
(insn 138 105 106 15 (set (reg/f:SI 99)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC49") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 106 138 107 15 (set (reg:SI 12 a12)
        (mem/j/c:SI (reg/f:SI 99) [0 LMIC.txend+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 107 106 108 15 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 108 107 109 15 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC56") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC55") [flags 0x2]  <var_decl 0x100f25ab0 *.LC55>)
        (nil)))
(call_insn 109 108 110 15 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:735 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 16, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u135(1){ }u136(7){ }u137(16){ }u138(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 110 109 111 16 66 "" [1 uses])
(note 111 110 117 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 117 111 118 16 (set (reg/i:SI 2 a2)
        (reg/v:SI 42 [ failed ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:739 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ failed ])
        (nil)))
(insn 118 117 0 16 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:739 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function initDefaultChannels (initDefaultChannels, funcdef_no=56, decl_uid=3626, cgraph_uid=56, symbol_order=64)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 10 (  1.1)
scanning new insn with uid = 148.
verify found no changes in insn with uid = 148.
deleting insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 10 (  1.1)
Reg 56: local to bb 2 def dominates all uses has unique first use
Reg 62: local to bb 2 def dominates all uses has unique first use
Reg 63 uninteresting
Reg 71 uninteresting
Reg 81: local to bb 2 def dominates all uses has unique first use
Reg 80 uninteresting
Reg 83 uninteresting
Reg 54 uninteresting
Reg 55: local to bb 6 def dominates all uses has unique first use
Reg 84: local to bb 6 def dominates all uses has unique first use
Reg 85 uninteresting
Reg 87 uninteresting
Reg 89 uninteresting
Reg 91: local to bb 6 def dominates all uses has unique first use
Reg 92 uninteresting
Reg 93 uninteresting
Reg 94 uninteresting
Reg 96 uninteresting
Reg 98 uninteresting
Reg 101 uninteresting
Reg 103 uninteresting
Reg 108 uninteresting
Reg 110 uninteresting
Reg 112 uninteresting
Reg 115 uninteresting
Ignoring reg 53, has equiv memory
Found def insn 69 for 55 to be not moveable
Found def insn 3 for 56 to be not moveable
Ignoring reg 62 with equiv init insn
Ignoring reg 81 with equiv init insn
Ignoring reg 84 with equiv init insn
Examining insn 78, def for 91
  all ok
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 137 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 63: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 71: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 80: (insn_list:REG_DEP_TRUE 148 (nil))
init_insns for 81: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 84: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 96: (insn_list:REG_DEP_TRUE 95 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 98 (nil))
init_insns for 103: (insn_list:REG_DEP_TRUE 107 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 119 (nil))
init_insns for 112: (insn_list:REG_DEP_TRUE 122 (nil))

Pass 0 for finding pseudo/allocno costs

    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r115,l0) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r112,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r110,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r108,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r103,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r101,l0) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r98,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r96,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r95,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r94,l1) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r93,l1) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r92,l1) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r91,l1) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r89,l1) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r87,l1) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r85,l1) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r84,l1) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r83,l1) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r81,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r80,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r71,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r62,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r55,l1) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r54,l1) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r53,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r43,l1) best AR_REGS, allocno AR_REGS
    a10 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r42,l1) best AR_REGS, allocno AR_REGS
    a11 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r95,l0) costs: ACC_REG:9750,9750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:52000,52000 MEM:11000,11000
  a1(r53,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a2(r115,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a3(r112,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a4(r110,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a5(r108,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a6(r98,l0) costs: ACC_REG:2250,2250 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12000,12000 MEM:3000,3000
  a7(r103,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a8(r101,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a9(r96,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a10(r43,l0) costs: ACC_REG:750,12750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4000,68000 MEM:1000,17000
  a11(r42,l0) costs: ACC_REG:750,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4000,40000 MEM:1000,10000
  a12(r56,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a13(r80,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:0,0
  a14(r81,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a15(r71,l0) costs: ACC_REG:6750,6750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36000,36000 MEM:7000,7000
  a16(r63,l0) costs: ACC_REG:12750,12750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:68000,68000 MEM:17000,17000
  a17(r62,l0) costs: ACC_REG:6750,6750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36000,36000 MEM:7000,7000
  a18(r42,l1) costs: ACC_REG:6750,6750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36000,36000 MEM:9000,9000
  a19(r43,l1) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a20(r94,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a21(r93,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a22(r91,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a23(r92,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a24(r84,l1) costs: ACC_REG:6750,6750 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36000,36000 MEM:3000,3000
  a25(r89,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a26(r87,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a27(r55,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a28(r85,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a29(r54,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a30(r83,l1) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:0,0

   Insn 137(l0): point = 0
   Insn 135(l0): point = 2
   Insn 133(l0): point = 4
   Insn 131(l0): point = 6
   Insn 130(l0): point = 8
   Insn 129(l0): point = 10
   Insn 128(l0): point = 12
   Insn 124(l0): point = 14
   Insn 123(l0): point = 16
   Insn 122(l0): point = 18
   Insn 120(l0): point = 20
   Insn 119(l0): point = 22
   Insn 117(l0): point = 24
   Insn 116(l0): point = 26
   Insn 112(l0): point = 28
   Insn 111(l0): point = 30
   Insn 108(l0): point = 32
   Insn 107(l0): point = 34
   Insn 105(l0): point = 36
   Insn 104(l0): point = 38
   Insn 100(l0): point = 40
   Insn 99(l0): point = 42
   Insn 98(l0): point = 44
   Insn 96(l0): point = 46
   Insn 95(l0): point = 48
   Insn 94(l0): point = 50
   Insn 146(l0): point = 53
   Insn 7(l0): point = 55
   Insn 5(l0): point = 58
   Insn 144(l0): point = 61
   Insn 6(l0): point = 63
   Insn 55(l0): point = 66
   Insn 54(l0): point = 68
   Insn 148(l0): point = 70
   Insn 53(l0): point = 72
   Insn 51(l0): point = 74
   Insn 49(l0): point = 76
   Insn 47(l0): point = 78
   Insn 45(l0): point = 80
   Insn 43(l0): point = 82
   Insn 41(l0): point = 84
   Insn 39(l0): point = 86
   Insn 37(l0): point = 88
   Insn 35(l0): point = 90
   Insn 34(l0): point = 92
   Insn 32(l0): point = 94
   Insn 30(l0): point = 96
   Insn 28(l0): point = 98
   Insn 26(l0): point = 100
   Insn 24(l0): point = 102
   Insn 22(l0): point = 104
   Insn 20(l0): point = 106
   Insn 19(l0): point = 108
   Insn 18(l0): point = 110
   Insn 16(l0): point = 112
   Insn 15(l0): point = 114
   Insn 14(l0): point = 116
   Insn 13(l0): point = 118
   Insn 3(l0): point = 120
   Insn 85(l1): point = 123
   Insn 84(l1): point = 125
   Insn 82(l1): point = 127
   Insn 81(l1): point = 129
   Insn 80(l1): point = 131
   Insn 79(l1): point = 133
   Insn 78(l1): point = 135
   Insn 76(l1): point = 137
   Insn 74(l1): point = 139
   Insn 73(l1): point = 141
   Insn 71(l1): point = 143
   Insn 70(l1): point = 145
   Insn 69(l1): point = 147
   Insn 68(l1): point = 149
   Insn 67(l1): point = 151
   Insn 92(l1): point = 154
 a0(r95): [1..50]
 a1(r53): [1..6]
 a2(r115): [11..12]
 a3(r112): [17..18]
 a4(r110): [21..22]
 a5(r108): [25..26]
 a6(r98): [31..44]
 a7(r103): [33..34]
 a8(r101): [37..38]
 a9(r96): [47..48]
 a10(r43): [53..55]
 a11(r42): [61..63] [53..58]
 a12(r56): [67..120]
 a13(r80): [69..70]
 a14(r81): [69..72]
 a15(r71): [75..90]
 a16(r63): [75..108]
 a17(r62): [93..110]
 a18(r42): [126..156] [123..123]
 a19(r43): [130..156] [123..127]
 a20(r94): [124..125]
 a21(r93): [128..129]
 a22(r91): [132..135]
 a23(r92): [132..133]
 a24(r84): [136..145]
 a25(r89): [136..137]
 a26(r87): [140..141]
 a27(r55): [140..147]
 a28(r85): [142..143]
 a29(r54): [148..149]
 a30(r83): [150..151]
 Rebuilding regno allocno list for 94
 Rebuilding regno allocno list for 93
 Rebuilding regno allocno list for 92
 Rebuilding regno allocno list for 91
 Rebuilding regno allocno list for 89
 Rebuilding regno allocno list for 87
 Rebuilding regno allocno list for 85
 Rebuilding regno allocno list for 84
 Rebuilding regno allocno list for 83
 Rebuilding regno allocno list for 55
 Rebuilding regno allocno list for 54
      Moving ranges of a19r43 to a10r43:  [130..156] [123..127]
      Moving ranges of a18r42 to a11r42:  [126..156] [123..123]
Compressing live ranges: from 157 to 45 - 28%
Ranges after the compression:
 a0(r95): [0..15]
 a1(r53): [0..1]
 a2(r115): [2..3]
 a3(r112): [4..5]
 a4(r110): [6..7]
 a5(r108): [8..9]
 a6(r98): [10..13]
 a7(r103): [10..11]
 a8(r101): [12..13]
 a9(r96): [14..15]
 a10(r43): [33..44] [26..30] [16..17]
 a11(r42): [29..44] [26..26] [16..19]
 a12(r56): [20..25]
 a13(r80): [20..21]
 a14(r81): [20..21]
 a15(r71): [22..23]
 a16(r63): [22..25]
 a17(r62): [24..25]
 a20(r94): [27..28]
 a21(r93): [31..32]
 a22(r91): [33..34]
 a23(r92): [33..34]
 a24(r84): [35..40]
 a25(r89): [35..36]
 a26(r87): [37..38]
 a27(r55): [37..40]
 a28(r85): [39..40]
 a29(r54): [41..42]
 a30(r83): [43..44]
+++Allocating 232 bytes for conflict table (uncompressed size 248)
;; a0(r95,l0) conflicts: a1(r53,l0) a2(r115,l0) a3(r112,l0) a4(r110,l0) a5(r108,l0) a7(r103,l0) a6(r98,l0) a8(r101,l0) a9(r96,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r53,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r115,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r112,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r110,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r108,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r98,l0) conflicts: a0(r95,l0) a7(r103,l0) a8(r101,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a7(r103,l0) conflicts: a0(r95,l0) a6(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r101,l0) conflicts: a0(r95,l0) a6(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r96,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r43,l0) conflicts: a11(r42,l0) a20(r94,l0) a22(r91,l0) a23(r92,l0) a25(r89,l0) a24(r84,l0) a26(r87,l0) a27(r55,l0) a28(r85,l0) a29(r54,l0) a30(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r42,l0) conflicts: a10(r43,l0) a21(r93,l0) a22(r91,l0) a23(r92,l0) a25(r89,l0) a24(r84,l0) a26(r87,l0) a27(r55,l0) a28(r85,l0) a29(r54,l0) a30(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r56,l0) conflicts: a13(r80,l0) a14(r81,l0) a15(r71,l0) a16(r63,l0) a17(r62,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a13(r80,l0) conflicts: a14(r81,l0) a12(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r81,l0) conflicts: a13(r80,l0) a12(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r71,l0) conflicts: a12(r56,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r63,l0) conflicts: a12(r56,l0) a15(r71,l0) a17(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r62,l0) conflicts: a12(r56,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r94,l0) conflicts: a10(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r93,l0) conflicts: a11(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r91,l0) conflicts: a10(r43,l0) a11(r42,l0) a23(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r92,l0) conflicts: a10(r43,l0) a11(r42,l0) a22(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r84,l0) conflicts: a10(r43,l0) a11(r42,l0) a25(r89,l0) a26(r87,l0) a27(r55,l0) a28(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r89,l0) conflicts: a10(r43,l0) a11(r42,l0) a24(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r87,l0) conflicts: a10(r43,l0) a11(r42,l0) a24(r84,l0) a27(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r55,l0) conflicts: a10(r43,l0) a11(r42,l0) a24(r84,l0) a26(r87,l0) a28(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r85,l0) conflicts: a10(r43,l0) a11(r42,l0) a24(r84,l0) a27(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r54,l0) conflicts: a10(r43,l0) a11(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r83,l0) conflicts: a10(r43,l0) a11(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a29(r54)<->a30(r83)@93:shuffle
  cp1:a26(r87)<->a28(r85)@93:shuffle
  cp2:a22(r91)<->a25(r89)@93:shuffle
  cp3:a22(r91)<->a24(r84)@93:shuffle
  cp4:a10(r43)<->a21(r93)@186:shuffle
  cp5:a11(r42)<->a20(r94)@186:shuffle
  pref0:a1(r53)<-hr10@500
  pref1:a12(r56)<-hr2@500
  pref2:a8(r101)<-hr10@31
  pref3:a5(r108)<-hr10@31
  pref4:a2(r115)<-hr10@31
  regions=2, blocks=9, points=45
    allocnos=31 (big 0), copies=6, conflicts=0, ranges=33

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r95 1r53 2r115 3r112 4r110 5r108 6r98 7r103 8r101 9r96 10r43 11r42 12r56 13r80 14r81 15r71 16r63 17r62 20r94 21r93 22r91 23r92 24r84 25r89 26r87 27r55 28r85 29r54 30r83
    modified regnos: 42 43 53 54 55 56 62 63 71 80 81 83 84 85 87 89 91 92 93 94 95 96 98 101 103 108 110 112 115
    border:
    Pressure: AR_REGS=5
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@272372
          2:( 2-7)@34000
      Allocno a0r95 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r98 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a7r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r56 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a13r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 4:a10r43-a21r93 (freq=186):
        Result (freq=5750): a10r43(4250) a21r93(1500)
      Forming thread by copy 5:a11r42-a20r94 (freq=186):
        Result (freq=4000): a11r42(2500) a20r94(1500)
      Forming thread by copy 0:a29r54-a30r83 (freq=93):
        Result (freq=3000): a29r54(1500) a30r83(1500)
      Forming thread by copy 1:a26r87-a28r85 (freq=93):
        Result (freq=3000): a26r87(1500) a28r85(1500)
      Forming thread by copy 2:a22r91-a25r89 (freq=93):
        Result (freq=3000): a22r91(1500) a25r89(1500)
      Pushing a14(r81,l0)(cost 0)
      Pushing a13(r80,l0)(cost 0)
      Pushing a12(r56,l0)(cost 0)
      Pushing a9(r96,l0)(cost 0)
      Pushing a8(r101,l0)(cost 0)
      Pushing a7(r103,l0)(cost 0)
      Pushing a5(r108,l0)(cost 0)
        Making a0(r95,l0) colorable
      Pushing a4(r110,l0)(cost 0)
      Pushing a3(r112,l0)(cost 0)
      Pushing a2(r115,l0)(cost 0)
      Pushing a6(r98,l0)(cost 0)
      Pushing a1(r53,l0)(cost 0)
      Pushing a27(r55,l0)(cost 0)
      Pushing a23(r92,l0)(cost 0)
      Pushing a24(r84,l0)(cost 0)
      Pushing a17(r62,l0)(cost 0)
      Pushing a15(r71,l0)(cost 0)
      Pushing a30(r83,l0)(cost 0)
      Pushing a29(r54,l0)(cost 0)
      Pushing a28(r85,l0)(cost 0)
      Pushing a26(r87,l0)(cost 0)
      Pushing a25(r89,l0)(cost 0)
      Pushing a22(r91,l0)(cost 0)
      Pushing a0(r95,l0)(cost 11000)
      Pushing a20(r94,l0)(cost 0)
      Pushing a11(r42,l0)(cost 0)
      Pushing a16(r63,l0)(cost 0)
      Pushing a21(r93,l0)(cost 0)
      Pushing a10(r43,l0)(cost 0)
      Popping a10(r43,l0)  -- assign reg 8
      Popping a21(r93,l0)  -- assign reg 8
      Popping a16(r63,l0)  -- assign reg 8
      Popping a11(r42,l0)  -- assign reg 9
      Popping a20(r94,l0)  -- assign reg 9
      Popping a0(r95,l0)  -- assign reg 2
      Popping a22(r91,l0)  -- assign reg 2
      Popping a25(r89,l0)  -- assign reg 2
      Popping a26(r87,l0)  -- assign reg 10
      Popping a28(r85,l0)  -- assign reg 10
      Popping a29(r54,l0)  -- assign reg 2
      Popping a30(r83,l0)  -- assign reg 2
      Popping a15(r71,l0)  -- assign reg 9
      Popping a17(r62,l0)  -- assign reg 9
      Popping a24(r84,l0)  -- assign reg 11
      Popping a23(r92,l0)  -- assign reg 10
      Popping a27(r55,l0)  -- assign reg 2
      Popping a1(r53,l0)  -- assign reg 10
      Popping a6(r98,l0)  -- assign reg 3
      Popping a2(r115,l0)  -- assign reg 10
      Popping a3(r112,l0)  -- assign reg 3
      Popping a4(r110,l0)  -- assign reg 3
      Popping a5(r108,l0)  -- assign reg 10
      Popping a7(r103,l0)  -- assign reg 8
      Popping a8(r101,l0)  -- assign reg 10
      Popping a9(r96,l0)  -- assign reg 3
      Popping a12(r56,l0)  -- assign reg 2
      Popping a13(r80,l0)  -- assign reg 3
      Popping a14(r81,l0)  -- assign reg 8
Disposition:
   11:r42  l0     9   10:r43  l0     8    1:r53  l0    10   29:r54  l0     2
   27:r55  l0     2   12:r56  l0     2   17:r62  l0     9   16:r63  l0     8
   15:r71  l0     9   13:r80  l0     3   14:r81  l0     8   30:r83  l0     2
   24:r84  l0    11   28:r85  l0    10   26:r87  l0    10   25:r89  l0     2
   22:r91  l0     2   23:r92  l0    10   21:r93  l0     8   20:r94  l0     9
    0:r95  l0     2    9:r96  l0     3    6:r98  l0     3    8:r101 l0    10
    7:r103 l0     8    5:r108 l0    10    4:r110 l0     3    3:r112 l0     3
    2:r115 l0    10
New iteration of spill/restore move
+++Costs: overall -2186, reg -2186, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


initDefaultChannels

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={6d} r1={1d,13u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,8u} r8={5d} r9={5d} r10={6d,5u} r11={6d,1u} r12={6d,1u} r13={5d} r14={5d} r15={5d} r16={1d,8u} r17={1d,7u} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r42={3d,5u} r43={2d,6u} r53={1d,3u} r54={1d,1u} r55={1d,1u} r56={1d,1u} r62={1d,8u} r63={1d,16u} r71={1d,8u} r80={1d,1u} r81={1d,1u} r83={1d,1u} r84={1d,2u} r85={1d,1u} r87={1d,1u} r89={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,12u,1e} r96={1d,1u} r98={1d,2u} r101={1d,1u} r103={1d,1u} r108={1d,1u} r110={1d,1u} r112={1d,1u} r115={1d,1u} 
;;    total ref usage 307{180d,126u,1e} in 81{76 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 56 62 63 71 80 81
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 56 [ join ])
        (reg:SI 2 a2 [ join ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:545 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ join ])
        (nil)))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 4 12 2 NOTE_INSN_DELETED)
(note 12 10 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:SI 12 a12)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:546 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 11 a11)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:546 44 {movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC57") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:546 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 64 [0x40])))
        (nil)))
(call_insn 16 15 18 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x100c87510 memset>) [0 memset S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:546 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 18 16 19 2 (set (reg/f:SI 62)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC58") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 128 [0x80])))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 63)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 20 19 22 2 (set (mem/c:SI (reg/f:SI 62) [0 MEM[(void *)&LMIC + 128B]+0 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 22 20 24 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 4 [0x4])) [0 MEM[(void *)&LMIC + 128B]+4 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 24 22 26 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 8 [0x8])) [0 MEM[(void *)&LMIC + 128B]+8 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 26 24 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 12 [0xc])) [0 MEM[(void *)&LMIC + 128B]+12 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 28 26 30 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 16 [0x10])) [0 MEM[(void *)&LMIC + 128B]+16 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 30 28 32 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 20 [0x14])) [0 MEM[(void *)&LMIC + 128B]+20 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 32 30 34 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 24 [0x18])) [0 MEM[(void *)&LMIC + 128B]+24 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (nil))
(insn 34 32 35 2 (set (mem/c:SI (plus:SI (reg/f:SI 62)
                (const_int 28 [0x1c])) [0 MEM[(void *)&LMIC + 128B]+28 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:547 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 62)
        (nil)))
(insn 35 34 37 2 (set (reg/f:SI 71)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC59") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 32 [0x20])))
        (nil)))
(insn 37 35 39 2 (set (mem/c:SI (reg/f:SI 71) [0 MEM[(void *)&LMIC + 32B]+0 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 39 37 41 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 4 [0x4])) [0 MEM[(void *)&LMIC + 32B]+4 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 41 39 43 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 8 [0x8])) [0 MEM[(void *)&LMIC + 32B]+8 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 43 41 45 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 12 [0xc])) [0 MEM[(void *)&LMIC + 32B]+12 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 45 43 47 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 16 [0x10])) [0 MEM[(void *)&LMIC + 32B]+16 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 47 45 49 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 20 [0x14])) [0 MEM[(void *)&LMIC + 32B]+20 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 49 47 51 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 24 [0x18])) [0 MEM[(void *)&LMIC + 32B]+24 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (nil))
(insn 51 49 53 2 (set (mem/c:SI (plus:SI (reg/f:SI 71)
                (const_int 28 [0x1c])) [0 MEM[(void *)&LMIC + 32B]+28 S4 A32])
        (reg:SI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:548 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 71)
        (expr_list:REG_DEAD (reg:SI 63)
            (nil))))
(insn 53 51 148 2 (set (reg:HI 81)
        (const_int 7 [0x7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:550 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 7 [0x7])
        (nil)))
(insn 148 53 54 2 (set (reg/f:SI 80)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC60") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:550 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 54 148 55 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 80)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])
        (reg:HI 81)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:550 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 81)
        (expr_list:REG_DEAD (reg/f:SI 80)
            (nil))))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (eq (reg/v:SI 56 [ join ])
                (const_int 0 [0]))
            (label_ref:SI 143)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:551 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 56 [ join ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 143)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              4 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 1250, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(1){ }u48(7){ }u49(16){ }u50(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 56 55 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 56 144 3 (set (reg/v:SI 42 [ su ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:551 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 144 6 145 3 (set (pc)
        (label_ref 57)) 78 {jump}
     (nil)
 -> 57)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 145 144 143)
;; basic block 4, loop depth 0, count 0, freq 1250, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u51(1){ }u52(7){ }u53(16){ }u54(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 143 145 142 4 74 "" [1 uses])
(note 142 143 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 142 57 4 (set (reg/v:SI 42 [ su ])
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:551 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 3 [0x3])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u55(1){ }u56(7){ }u57(16){ }u58(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 57 5 58 5 71 "" [1 uses])
(note 58 57 7 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 7 58 146 5 (set (reg/v:SI 43 [ fu ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:551 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 146 7 147 5 (set (pc)
        (label_ref 87)) 78 {jump}
     (nil)
 -> 87)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

(barrier 147 146 91)
;; basic block 6, loop depth 1, count 0, freq 7500, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       7 [75.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(1){ }u60(7){ }u61(16){ }u62(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  def 	 42 43 54 55 83 84 85 87 89 91 92 93 94
(code_label 91 147 61 6 73 "" [1 uses])
(note 61 91 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 64 61 65 6 (var_location:SI table (symbol_ref:SI ("constant_table_iniChannelFreq") [flags 0x2]  <var_decl 0x100b69bd0 constant_table_iniChannelFreq>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 -1
     (nil))
(debug_insn 65 64 66 6 (var_location:SI index (reg/v:SI 42 [ su ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 -1
     (nil))
(note 66 65 67 6 NOTE_INSN_DELETED)
(insn 67 66 68 6 (set (reg/f:SI 83)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC61") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:256 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_iniChannelFreq") [flags 0x2]  <var_decl 0x100b69bd0 constant_table_iniChannelFreq>)
        (nil)))
(insn 68 67 69 6 (set (reg/f:SI 54 [ D.6032 ])
        (plus:SI (mult:SI (reg/v:SI 42 [ su ])
                (const_int 4 [0x4]))
            (reg/f:SI 83))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:256 2 {*addx}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (nil)))
(insn 69 68 70 6 (set (reg:SI 55 [ D.6033 ])
        (mem:SI (reg/f:SI 54 [ D.6032 ]) [0 *_42+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:256 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 54 [ D.6032 ])
        (nil)))
(insn 70 69 71 6 (set (reg/f:SI 84)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC60") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 71 70 72 6 (set (reg:SI 85)
        (plus:SI (reg/v:SI 43 [ fu ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 1 {addsi3}
     (nil))
(note 72 71 73 6 NOTE_INSN_DELETED)
(insn 73 72 74 6 (set (reg/f:SI 87)
        (plus:SI (mult:SI (reg:SI 85)
                (const_int 4 [0x4]))
            (reg/f:SI 84))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 74 73 76 6 (set (mem/j:SI (reg/f:SI 87) [0 LMIC.channelFreq S4 A32])
        (reg:SI 55 [ D.6033 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:553 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_DEAD (reg:SI 55 [ D.6033 ])
            (nil))))
(insn 76 74 77 6 (set (reg:SI 89)
        (plus:SI (reg/v:SI 43 [ fu ])
            (const_int 64 [0x40]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:554 1 {addsi3}
     (nil))
(note 77 76 78 6 NOTE_INSN_DELETED)
(insn 78 77 79 6 (set (reg/f:SI 91)
        (plus:SI (mult:SI (reg:SI 89)
                (const_int 2 [0x2]))
            (reg/f:SI 84))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:554 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 84)
            (nil))))
(insn 79 78 80 6 (set (reg:HI 92)
        (const_int 63 [0x3f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:554 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 63 [0x3f])
        (nil)))
(insn 80 79 81 6 (set (mem/j:HI (reg/f:SI 91) [0 LMIC.channelDrMap S2 A16])
        (reg:HI 92)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:554 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 92)
        (expr_list:REG_DEAD (reg/f:SI 91)
            (nil))))
(insn 81 80 82 6 (set (reg:SI 93)
        (plus:SI (reg/v:SI 43 [ fu ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 43 [ fu ])
        (nil)))
(insn 82 81 83 6 (set (reg/v:SI 43 [ fu ])
        (zero_extend:SI (subreg:QI (reg:SI 93) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(debug_insn 83 82 84 6 (var_location:QI fu (subreg:QI (reg/v:SI 43 [ fu ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 -1
     (nil))
(insn 84 83 85 6 (set (reg:SI 94)
        (plus:SI (reg/v:SI 42 [ su ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 42 [ su ])
        (nil)))
(insn 85 84 86 6 (set (reg/v:SI 42 [ su ])
        (zero_extend:SI (subreg:QI (reg:SI 94) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(debug_insn 86 85 87 6 (var_location:QI su (subreg:QI (reg/v:SI 42 [ su ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 7, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u86(1){ }u87(7){ }u88(16){ }u89(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(code_label 87 86 88 7 72 "" [1 uses])
(note 88 87 89 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 89 88 90 7 (var_location:QI fu (subreg:QI (reg/v:SI 43 [ fu ]) 0)) -1
     (nil))
(debug_insn 90 89 92 7 (var_location:QI su (subreg:QI (reg/v:SI 42 [ su ]) 0)) -1
     (nil))
(jump_insn 92 90 93 7 (set (pc)
        (if_then_else (geu (reg/v:SI 43 [ fu ])
                (const_int 3 [0x3]))
            (pc)
            (label_ref 91))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:552 59 {*ubfalse}
     (int_list:REG_BR_PROB 7500 (nil))
 -> 91)
;;  succ:       6 [75.0%] 
;;              8 [25.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 8, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [25.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(1){ }u94(7){ }u95(16){ }u96(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 53 95 96 98 101 103 108 110 112 115
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (reg/f:SI 95)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC60") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:557 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 95 94 96 8 (set (reg:HI 96)
        (const_int 1000 [0x3e8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:557 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 1000 [0x3e8])
        (nil)))
(insn 96 95 98 8 (set (mem/j/c:HI (plus:SI (reg/f:SI 95)
                (const_int 32 [0x20])) [0 LMIC.bands[0].txcap+0 S2 A32])
        (reg:HI 96)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:557 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 96)
        (nil)))
(insn 98 96 99 8 (set (reg:QI 98)
        (const_int 14 [0xe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:558 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 14 [0xe])
        (nil)))
(insn 99 98 100 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 34 [0x22])) [0 LMIC.bands[0].txpow+0 S1 A16])
        (reg:QI 98)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:558 46 {movqi_internal}
     (nil))
(call_insn 100 99 101 8 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:559 82 {call_value_internal}
     (nil)
    (nil))
(note 101 100 104 8 NOTE_INSN_DELETED)
(insn 104 101 105 8 (set (reg:SI 101)
        (and:SI (reg:SI 10 a10)
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:559 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 105 104 107 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 35 [0x23])) [0 LMIC.bands[0].lastchnl+0 S1 A8])
        (subreg:QI (reg:SI 101) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:559 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 107 105 108 8 (set (reg:HI 103)
        (const_int 100 [0x64])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:560 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 100 [0x64])
        (nil)))
(insn 108 107 111 8 (set (mem/j/c:HI (plus:SI (reg/f:SI 95)
                (const_int 40 [0x28])) [0 LMIC.bands[1].txcap+0 S2 A32])
        (reg:HI 103)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:560 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 103)
        (nil)))
(insn 111 108 112 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 42 [0x2a])) [0 LMIC.bands[1].txpow+0 S1 A16])
        (reg:QI 98)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:561 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 98)
        (nil)))
(call_insn 112 111 113 8 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:562 82 {call_value_internal}
     (nil)
    (nil))
(note 113 112 116 8 NOTE_INSN_DELETED)
(insn 116 113 117 8 (set (reg:SI 108)
        (and:SI (reg:SI 10 a10)
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:562 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 117 116 119 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 43 [0x2b])) [0 LMIC.bands[1].lastchnl+0 S1 A8])
        (subreg:QI (reg:SI 108) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:562 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 119 117 120 8 (set (reg:HI 110)
        (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:563 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 10 [0xa])
        (nil)))
(insn 120 119 122 8 (set (mem/j/c:HI (plus:SI (reg/f:SI 95)
                (const_int 48 [0x30])) [0 LMIC.bands[2].txcap+0 S2 A32])
        (reg:HI 110)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:563 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 110)
        (nil)))
(insn 122 120 123 8 (set (reg:QI 112)
        (const_int 27 [0x1b])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:564 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 27 [0x1b])
        (nil)))
(insn 123 122 124 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 50 [0x32])) [0 LMIC.bands[2].txpow+0 S1 A16])
        (reg:QI 112)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:564 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 112)
        (nil)))
(call_insn 124 123 125 8 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:565 82 {call_value_internal}
     (nil)
    (nil))
(note 125 124 128 8 NOTE_INSN_DELETED)
(insn 128 125 129 8 (set (reg:SI 115)
        (and:SI (reg:SI 10 a10)
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:565 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 129 128 130 8 (set (mem/j/c:QI (plus:SI (reg/f:SI 95)
                (const_int 51 [0x33])) [0 LMIC.bands[2].lastchnl+0 S1 A8])
        (subreg:QI (reg:SI 115) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:565 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(call_insn 130 129 131 8 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:568 82 {call_value_internal}
     (nil)
    (nil))
(insn 131 130 133 8 (set (reg:SI 53 [ D.6029 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:568 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 95)
                    (const_int 36 [0x24])) [0 LMIC.bands[0].avail+0 S4 A32])
            (nil))))
(insn 133 131 135 8 (set (mem/j/c:SI (plus:SI (reg/f:SI 95)
                (const_int 52 [0x34])) [0 LMIC.bands[2].avail+0 S4 A32])
        (reg:SI 53 [ D.6029 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:568 44 {movsi_internal}
     (nil))
(insn 135 133 137 8 (set (mem/j/c:SI (plus:SI (reg/f:SI 95)
                (const_int 44 [0x2c])) [0 LMIC.bands[1].avail+0 S4 A32])
        (reg:SI 53 [ D.6029 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:567 44 {movsi_internal}
     (nil))
(insn 137 135 0 8 (set (mem/j/c:SI (plus:SI (reg/f:SI 95)
                (const_int 36 [0x24])) [0 LMIC.bands[0].avail+0 S4 A32])
        (reg:SI 53 [ D.6029 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:566 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg:SI 53 [ D.6029 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function initJoinLoop (initJoinLoop, funcdef_no=65, decl_uid=3686, cgraph_uid=65, symbol_order=73)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 70 uninteresting
Reg 51 uninteresting
Reg 57 uninteresting
Reg 58 uninteresting
Reg 60 uninteresting
Reg 44 uninteresting
Reg 45: local to bb 4 def dominates all uses has unique first use
Ignoring reg 47, has equiv memory
Found def insn 42 for 45 to be not moveable
Ignoring reg 50 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 47: (insn_list:REG_DEP_TRUE 48 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 60: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 41 (nil))

Pass 0 for finding pseudo/allocno costs

    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r70,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r67,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r57,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r67,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r50,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a5(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r49,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a9(r51,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a10(r70,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 48(l0): point = 0
   Insn 46(l0): point = 2
   Insn 44(l0): point = 4
   Insn 43(l0): point = 6
   Insn 42(l0): point = 8
   Insn 41(l0): point = 10
   Insn 38(l0): point = 13
   Insn 37(l0): point = 15
   Insn 36(l0): point = 17
   Insn 33(l0): point = 20
   Insn 28(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 13(l0): point = 44
   Insn 11(l0): point = 46
   Insn 9(l0): point = 48
   Insn 8(l0): point = 50
   Insn 6(l0): point = 52
   Insn 5(l0): point = 54
 a0(r67): [1..10]
 a1(r47): [1..2]
 a2(r45): [3..8]
 a3(r44): [21..22]
 a4(r50): [23..50]
 a5(r60): [35..36]
 a6(r58): [39..40]
 a7(r57): [41..42]
 a8(r49): [41..52]
 a9(r51): [43..44]
 a10(r70): [45..46]
 a11(r53): [47..48]
Compressing live ranges: from 57 to 18 - 31%
Ranges after the compression:
 a0(r67): [0..3]
 a1(r47): [0..1]
 a2(r45): [2..3]
 a3(r44): [4..5]
 a4(r50): [6..17]
 a5(r60): [6..7]
 a6(r58): [8..9]
 a7(r57): [10..11]
 a8(r49): [10..17]
 a9(r51): [12..13]
 a10(r70): [14..15]
 a11(r53): [16..17]
+++Allocating 88 bytes for conflict table (uncompressed size 96)
;; a0(r67,l0) conflicts: a1(r47,l0) a2(r45,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r47,l0) conflicts: a0(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r45,l0) conflicts: a0(r67,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r44,l0) conflicts:;; a4(r50,l0) conflicts: a5(r60,l0) a6(r58,l0) a7(r57,l0) a8(r49,l0) a9(r51,l0) a10(r70,l0) a11(r53,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r60,l0) conflicts: a4(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r58,l0) conflicts: a4(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r57,l0) conflicts: a4(r50,l0) a8(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r49,l0) conflicts: a4(r50,l0) a7(r57,l0) a9(r51,l0) a10(r70,l0) a11(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r51,l0) conflicts: a4(r50,l0) a8(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r70,l0) conflicts: a4(r50,l0) a8(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r53,l0) conflicts: a4(r50,l0) a8(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r47)<->a2(r45)@125:shuffle
  cp1:a10(r70)<->a11(r53)@125:shuffle
  cp2:a9(r51)<->a10(r70)@125:shuffle
  cp3:a7(r57)<->a9(r51)@250:shuffle
  cp4:a6(r58)<->a8(r49)@125:shuffle
  cp5:a6(r58)<->a7(r57)@125:shuffle
  pref0:a8(r49)<-hr10@2000
  pref1:a1(r47)<-hr10@125
  regions=1, blocks=5, points=18
    allocnos=12 (big 0), copies=6, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r67 1r47 2r45 3r44 4r50 5r60 6r58 7r57 8r49 9r51 10r70 11r53
    modified regnos: 44 45 47 49 50 51 53 57 58 60 67 70
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@152500
          2:( 2-7)@40000
      Allocno a0r67 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r50 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 3:a7r57-a9r51 (freq=250):
        Result (freq=5000): a7r57(2000) a9r51(3000)
      Forming thread by copy 0:a1r47-a2r45 (freq=125):
        Result (freq=4000): a1r47(2000) a2r45(2000)
      Forming thread by copy 1:a10r70-a11r53 (freq=125):
        Result (freq=4000): a10r70(2000) a11r53(2000)
      Forming thread by copy 2:a9r51-a10r70 (freq=125):
        Result (freq=9000): a7r57(2000) a10r70(2000) a11r53(2000) a9r51(3000)
      Forming thread by copy 4:a6r58-a8r49 (freq=125):
        Result (freq=5000): a6r58(2000) a8r49(3000)
      Pushing a5(r60,l0)(cost 0)
      Pushing a3(r44,l0)(cost 0)
      Pushing a0(r67,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Pushing a2(r45,l0)(cost 0)
      Pushing a6(r58,l0)(cost 0)
        Making a4(r50,l0) colorable
      Pushing a4(r50,l0)(cost 8000)
      Pushing a8(r49,l0)(cost 0)
      Pushing a11(r53,l0)(cost 0)
      Pushing a10(r70,l0)(cost 0)
      Pushing a7(r57,l0)(cost 0)
      Pushing a9(r51,l0)(cost 0)
      Popping a9(r51,l0)  -- assign reg 8
      Popping a7(r57,l0)  -- assign reg 8
      Popping a10(r70,l0)  -- assign reg 8
      Popping a11(r53,l0)  -- assign reg 8
      Popping a8(r49,l0)  -- assign reg 10
      Popping a4(r50,l0)  -- assign reg 2
      Popping a6(r58,l0)  -- assign reg 8
      Popping a2(r45,l0)  -- assign reg 2
      Popping a1(r47,l0)  -- assign reg 10
      Popping a0(r67,l0)  -- assign reg 3
      Popping a3(r44,l0)  -- assign reg 2
      Popping a5(r60,l0)  -- assign reg 3
Disposition:
    3:r44  l0     2    2:r45  l0     2    1:r47  l0    10    8:r49  l0    10
    4:r50  l0     2    9:r51  l0     8   11:r53  l0     8    7:r57  l0     8
    6:r58  l0     8    5:r60  l0     3    0:r67  l0     3   10:r70  l0     8
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


initJoinLoop

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11]
;;  ref usage 	r0={6d} r1={1d,9u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={5d} r9={5d} r10={9d,6u} r11={7d,2u} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={1d,3u} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r44={1d,1u} r45={1d,1u} r47={1d,1u} r49={1d,2u,1e} r50={1d,3u} r51={1d,2u} r53={1d,1u} r57={1d,1u} r58={1d,1u} r60={1d,1u} r67={1d,2u,1e} r70={1d,1u} 
;;    total ref usage 210{163d,45u,2e} in 27{22 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 49 50 51 53 57 58 60 70
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 82 {call_value_internal}
     (nil)
    (nil))
(insn 6 5 8 2 (set (reg:SI 49)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 8 6 9 2 (set (reg/f:SI 50)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC62") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 9 8 11 2 (set (reg:SI 53)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC63") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -1431655765 [0xffffffffaaaaaaab])
        (nil)))
(insn 11 9 13 2 (set (reg:SI 70 [+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 49))
                    (zero_extend:DI (reg:SI 53)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 8 {umulsi3_highpart}
     (expr_list:REG_DEAD (reg:SI 53)
        (nil)))
(insn 13 11 15 2 (set (reg:SI 51)
        (lshiftrt:SI (reg:SI 70 [+4 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 53 {lshrsi3}
     (expr_list:REG_DEAD (reg:SI 70 [+4 ])
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 49)
                (const_int 3 [0x3]))
            (nil))))
(note 15 13 16 2 NOTE_INSN_DELETED)
(insn 16 15 17 2 (set (reg:SI 57)
        (plus:SI (mult:SI (reg:SI 51)
                (const_int 2 [0x2]))
            (reg:SI 51))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 51)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 58)
        (minus:SI (reg:SI 49)
            (reg:SI 57))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 57)
        (expr_list:REG_DEAD (reg:SI 49)
            (nil))))
(insn 18 17 20 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 50)
                (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16])
        (subreg:QI (reg:SI 58) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:694 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 58)
        (nil)))
(insn 20 18 21 2 (set (reg:QI 60)
        (const_int 14 [0xe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:695 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 14 [0xe])
        (nil)))
(insn 21 20 22 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 50)
                (const_int 175 [0xaf])) [0 LMIC.adrTxPow+0 S1 A8])
        (reg:QI 60)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:695 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 60)
        (nil)))
(insn 22 21 23 2 (set (reg:SI 11 a11)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:696 44 {movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:696 44 {movsi_internal}
     (nil))
(call_insn 24 23 25 2 (call (mem:SI (symbol_ref:SI ("setDrJoin") [flags 0x3]  <function_decl 0x100b66e58 setDrJoin>) [0 setDrJoin S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:696 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 25 24 26 2 (set (reg:SI 10 a10)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:697 44 {movsi_internal}
     (nil))
(call_insn 26 25 28 2 (call (mem:SI (symbol_ref:SI ("initDefaultChannels") [flags 0x3]  <function_decl 0x100b7c288 initDefaultChannels>) [0 initDefaultChannels S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:697 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 28 26 29 2 (set (reg:SI 44 [ D.6039 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 50)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:698 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 50)
        (nil)))
(note 29 28 30 2 NOTE_INSN_DELETED)
(note 30 29 32 2 NOTE_INSN_DELETED)
(note 32 30 33 2 NOTE_INSN_DELETED)
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 44 [ D.6039 ])
                    (const_int 1 [0x1])
                    (const_int 11 [0xb]))
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:698 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6039 ])
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 39)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(1){ }u31(7){ }u32(16){ }u33(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 35 34 36 3 NOTE_INSN_DELETED)
(insn 36 35 37 3 (set (reg:SI 11 a11)
        (const_int 698 [0x2ba])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:698 44 {movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC65") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:698 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 38 37 39 3 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:698 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(1){ }u39(7){ }u40(16){ }u41(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 45 47 67
(code_label 39 38 40 4 76 "" [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (set (reg/f:SI 67)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC62") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 42 41 43 4 (set (reg:SI 45 [ D.6040 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 67)
                (const_int 36 [0x24])) [0 LMIC.bands[0].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 44 {movsi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:SI 10 a10)
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 44 {movsi_internal}
     (nil))
(call_insn 44 43 45 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("rndDelay") [flags 0x3]  <function_decl 0x100b66ca8 rndDelay>) [0 rndDelay S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 45 44 46 4 NOTE_INSN_DELETED)
(insn 46 45 48 4 (set (reg:SI 47 [ D.6040 ])
        (plus:SI (reg:SI 45 [ D.6040 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6040 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EQUIV (mem/j/c:SI (reg/f:SI 67) [0 LMIC.txend+0 S4 A32])
                (nil)))))
(insn 48 46 0 4 (set (mem/j/c:SI (reg/f:SI 67) [0 LMIC.txend+0 S4 A32])
        (reg:SI 47 [ D.6040 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:699 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 67)
        (expr_list:REG_DEAD (reg:SI 47 [ D.6040 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_encrypt (aes_encrypt, funcdef_no=41, decl_uid=3450, cgraph_uid=41, symbol_order=42)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 44: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 43 to be not moveable
Found def insn 3 for 44 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r43): [5..14]
 a1(r44): [7..12]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r44): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r43,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs: 3 8-15
;;     conflict hard regs: 3 8-15

;; a1(r44,l0) conflicts: a0(r43,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

  pref0:a0(r43)<-hr2@2000
  pref1:a1(r44)<-hr3@2000
  pref2:a0(r43)<-hr11@2000
  pref3:a1(r44)<-hr12@125
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r44
    modified regnos: 43 44
    border:
    Pressure: AR_REGS=3
 Removing pref2:hr11@2000
 Removing pref3:hr12@125
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-7)@24000
          2:( 2 4-7)@24000
      Allocno a0r43 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Allocno a1r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r43,l0)(cost 0)
      Popping a0(r43,l0)  -- assign reg 2
      Popping a1(r44,l0)  -- assign reg 3
Disposition:
    0:r43  l0     2    1:r44  l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_encrypt

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={3d} r1={1d,4u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={2d} r9={2d} r10={4d,2u} r11={3d,1u} r12={3d,1u} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={1d,1u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r43={1d,1u} r44={1d,1u} 
;;    total ref usage 87{70d,17u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 44
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 43 [ pdu ])
        (reg:SI 2 a2 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:174 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ pdu ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 44 [ len ])
        (reg:SI 3 a3 [ len ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:174 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ len ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC66") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:175 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 9 8 10 2 (call (mem:SI (symbol_ref:SI ("os_getDevKey") [flags 0x41]  <function_decl 0x140eefe58 os_getDevKey>) [0 os_getDevKey S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:175 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg/v:SI 44 [ len ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:176 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/v:SI 44 [ len ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 43 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:176 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 43 [ pdu ])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:176 44 {movsi_internal}
     (nil))
(call_insn 14 13 0 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:176 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function getSf (getSf, funcdef_no=7, decl_uid=3046, cgraph_uid=7, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getSf

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 4 9 2 NOTE_INSN_DELETED)
(note 9 8 14 2 NOTE_INSN_DELETED)
(insn 14 9 15 2 (set (reg/i:SI 2 a2)
        (and:SI (reg:SI 2 a2 [ params ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:347 30 {andsi3}
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:347 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setSf (setSf, funcdef_no=8, decl_uid=3050, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 55 uninteresting
Found def insn 5 for 50 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r53,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS

  a0(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 11(l0): point = 4
   Insn 9(l0): point = 6
   Insn 5(l0): point = 8
   Insn 3(l0): point = 10
 a0(r50): [3..8]
 a1(r55): [3..4]
 a2(r53): [5..6]
 a3(r48): [5..10]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r50): [0..3]
 a1(r55): [0..1]
 a2(r53): [2..3]
 a3(r48): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r50,l0) conflicts: a1(r55,l0) a2(r53,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r55,l0) conflicts: a0(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r53,l0) conflicts: a0(r50,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a0(r50,l0) a2(r53,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

  cp0:a1(r55)<->a2(r53)@125:shuffle
  cp1:a1(r55)<->a3(r48)@125:shuffle
  pref0:a3(r48)<-hr2@125
  pref1:a0(r50)<-hr3@125
  pref2:a0(r50)<-hr2@125
  pref3:a1(r55)<-hr2@125
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r50 1r55 2r53 3r48
    modified regnos: 48 50 53 55
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@49000
          2:( 2 4-15)@16500
      Allocno a0r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Forming thread by copy 0:a1r55-a2r53 (freq=125):
        Result (freq=4000): a1r55(2000) a2r53(2000)
      Pushing a3(r48,l0)(cost 0)
      Pushing a0(r50,l0)(cost 0)
      Pushing a2(r53,l0)(cost 0)
      Pushing a1(r55,l0)(cost 0)
      Popping a1(r55,l0)  -- assign reg 2
      Popping a2(r53,l0)  -- assign reg 8
      Popping a0(r50,l0)  -- assign reg 3
      Popping a3(r48,l0)  -- assign reg 2
Disposition:
    3:r48  l0     2    0:r50  l0     3    2:r53  l0     8    1:r55  l0     2
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setSf

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r48={1d,1u,1e} r50={1d,1u} r53={1d,1u} r55={1d,1u} 
;;    total ref usage 31{15d,15u,1e} in 6{6 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 48 50 53 55
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 48 [ params ])
        (zero_extend:SI (reg:HI 2 a2 [ params ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ params ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 50 [ sf ])
        (zero_extend:SI (reg:QI 3 a3 [ sf ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ sf ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 11 2 (set (reg:HI 53)
        (const_int -8 [0xfffffffffffffff8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -8 [0xfffffffffffffff8])
        (nil)))
(insn 11 9 14 2 (set (reg:SI 55)
        (and:SI (reg/v:SI 48 [ params ])
            (subreg:SI (reg:HI 53) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 53)
        (expr_list:REG_DEAD (reg/v:SI 48 [ params ])
            (expr_list:REG_EQUAL (and:SI (reg/v:SI 48 [ params ])
                    (const_int -8 [0xfffffffffffffff8]))
                (nil)))))
(note 14 11 15 2 NOTE_INSN_DELETED)
(note 15 14 20 2 NOTE_INSN_DELETED)
(insn 20 15 21 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 55)
            (reg/v:SI 50 [ sf ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_DEAD (reg/v:SI 50 [ sf ])
            (nil))))
(insn 21 20 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:348 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function getBw (getBw, funcdef_no=9, decl_uid=3053, cgraph_uid=9, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getBw

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 9 2 NOTE_INSN_DELETED)
(note 9 7 10 2 NOTE_INSN_DELETED)
(note 10 9 15 2 NOTE_INSN_DELETED)
(insn 15 10 16 2 (set (reg/i:SI 2 a2)
        (zero_extract:SI (reg:SI 2 a2 [ params ])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:349 38 {extzv_internal}
     (nil))
(insn 16 15 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:349 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setBw (setBw, funcdef_no=10, decl_uid=3057, cgraph_uid=10, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52 uninteresting
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 55 uninteresting
Reg 57 uninteresting
Examining insn 9, def for 45
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 55: (insn_list:REG_DEP_TRUE 10 (nil))

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r55,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 22(l0): point = 0
   Insn 21(l0): point = 2
   Insn 12(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 5(l0): point = 10
   Insn 3(l0): point = 12
 a0(r45): [3..8]
 a1(r57): [3..4]
 a2(r55): [5..6]
 a3(r50): [5..12]
 a4(r52): [9..10]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r45): [0..3]
 a1(r57): [0..1]
 a2(r55): [2..3]
 a3(r50): [2..5]
 a4(r52): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r45,l0) conflicts: a1(r57,l0) a2(r55,l0) a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r57,l0) conflicts: a0(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r55,l0) conflicts: a0(r45,l0) a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r50,l0) conflicts: a0(r45,l0) a2(r55,l0) a4(r52,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a4(r52,l0) conflicts: a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r45)<->a4(r52)@125:shuffle
  cp1:a1(r57)<->a2(r55)@125:shuffle
  cp2:a1(r57)<->a3(r50)@125:shuffle
  pref0:a3(r50)<-hr2@125
  pref1:a4(r52)<-hr3@125
  pref2:a0(r45)<-hr2@125
  pref3:a1(r57)<-hr2@125
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=3, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r45 1r57 2r55 3r50 4r52
    modified regnos: 45 50 52 55 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@65500
          2:( 2 4-15)@16500
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r50 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a4r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r45-a4r52 (freq=125):
        Result (freq=4000): a0r45(2000) a4r52(2000)
      Forming thread by copy 1:a1r57-a2r55 (freq=125):
        Result (freq=4000): a1r57(2000) a2r55(2000)
      Pushing a3(r50,l0)(cost 0)
      Pushing a2(r55,l0)(cost 0)
      Pushing a1(r57,l0)(cost 0)
      Pushing a4(r52,l0)(cost 0)
      Pushing a0(r45,l0)(cost 0)
      Popping a0(r45,l0)  -- assign reg 3
      Popping a4(r52,l0)  -- assign reg 3
      Popping a1(r57,l0)  -- assign reg 2
      Popping a2(r55,l0)  -- assign reg 8
      Popping a3(r50,l0)  -- assign reg 2
Disposition:
    0:r45  l0     3    3:r50  l0     2    4:r52  l0     3    2:r55  l0     8
    1:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setBw

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r45={1d,1u} r50={1d,1u,1e} r52={1d,1u} r55={1d,1u} r57={1d,1u} 
;;    total ref usage 33{16d,16u,1e} in 7{7 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 45 50 52 55 57
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 50 [ params ])
        (zero_extend:SI (reg:HI 2 a2 [ params ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ params ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 52 [ cr ])
        (zero_extend:SI (reg:QI 3 a3 [ cr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ cr ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 45 [ D.6054 ])
        (ashift:SI (reg/v:SI 52 [ cr ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 52 [ cr ])
        (nil)))
(insn 10 9 12 2 (set (reg:HI 55)
        (const_int -25 [0xffffffffffffffe7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -25 [0xffffffffffffffe7])
        (nil)))
(insn 12 10 15 2 (set (reg:SI 57)
        (and:SI (reg/v:SI 50 [ params ])
            (subreg:SI (reg:HI 55) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 55)
        (expr_list:REG_DEAD (reg/v:SI 50 [ params ])
            (expr_list:REG_EQUAL (and:SI (reg/v:SI 50 [ params ])
                    (const_int -25 [0xffffffffffffffe7]))
                (nil)))))
(note 15 12 16 2 NOTE_INSN_DELETED)
(note 16 15 21 2 NOTE_INSN_DELETED)
(insn 21 16 22 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 57)
            (reg:SI 45 [ D.6054 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 57)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6054 ])
            (nil))))
(insn 22 21 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:350 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function getCr (getCr, funcdef_no=11, decl_uid=3060, cgraph_uid=11, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getCr

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 9 2 NOTE_INSN_DELETED)
(note 9 7 10 2 NOTE_INSN_DELETED)
(note 10 9 15 2 NOTE_INSN_DELETED)
(insn 15 10 16 2 (set (reg/i:SI 2 a2)
        (zero_extract:SI (reg:SI 2 a2 [ params ])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:351 38 {extzv_internal}
     (nil))
(insn 16 15 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:351 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setCr (setCr, funcdef_no=12, decl_uid=3064, cgraph_uid=12, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52 uninteresting
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 55 uninteresting
Reg 57 uninteresting
Examining insn 9, def for 45
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 55: (insn_list:REG_DEP_TRUE 10 (nil))

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r55,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 22(l0): point = 0
   Insn 21(l0): point = 2
   Insn 12(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 5(l0): point = 10
   Insn 3(l0): point = 12
 a0(r45): [3..8]
 a1(r57): [3..4]
 a2(r55): [5..6]
 a3(r50): [5..12]
 a4(r52): [9..10]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r45): [0..3]
 a1(r57): [0..1]
 a2(r55): [2..3]
 a3(r50): [2..5]
 a4(r52): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r45,l0) conflicts: a1(r57,l0) a2(r55,l0) a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r57,l0) conflicts: a0(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r55,l0) conflicts: a0(r45,l0) a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r50,l0) conflicts: a0(r45,l0) a2(r55,l0) a4(r52,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a4(r52,l0) conflicts: a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r45)<->a4(r52)@125:shuffle
  cp1:a1(r57)<->a2(r55)@125:shuffle
  cp2:a1(r57)<->a3(r50)@125:shuffle
  pref0:a3(r50)<-hr2@125
  pref1:a4(r52)<-hr3@125
  pref2:a0(r45)<-hr2@125
  pref3:a1(r57)<-hr2@125
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=3, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r45 1r57 2r55 3r50 4r52
    modified regnos: 45 50 52 55 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@65500
          2:( 2 4-15)@16500
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r50 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a4r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r45-a4r52 (freq=125):
        Result (freq=4000): a0r45(2000) a4r52(2000)
      Forming thread by copy 1:a1r57-a2r55 (freq=125):
        Result (freq=4000): a1r57(2000) a2r55(2000)
      Pushing a3(r50,l0)(cost 0)
      Pushing a2(r55,l0)(cost 0)
      Pushing a1(r57,l0)(cost 0)
      Pushing a4(r52,l0)(cost 0)
      Pushing a0(r45,l0)(cost 0)
      Popping a0(r45,l0)  -- assign reg 3
      Popping a4(r52,l0)  -- assign reg 3
      Popping a1(r57,l0)  -- assign reg 2
      Popping a2(r55,l0)  -- assign reg 8
      Popping a3(r50,l0)  -- assign reg 2
Disposition:
    0:r45  l0     3    3:r50  l0     2    4:r52  l0     3    2:r55  l0     8
    1:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setCr

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r45={1d,1u} r50={1d,1u,1e} r52={1d,1u} r55={1d,1u} r57={1d,1u} 
;;    total ref usage 33{16d,16u,1e} in 7{7 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 45 50 52 55 57
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 50 [ params ])
        (zero_extend:SI (reg:HI 2 a2 [ params ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ params ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 52 [ cr ])
        (zero_extend:SI (reg:QI 3 a3 [ cr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ cr ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 45 [ D.6063 ])
        (ashift:SI (reg/v:SI 52 [ cr ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 52 [ cr ])
        (nil)))
(insn 10 9 12 2 (set (reg:HI 55)
        (const_int -97 [0xffffffffffffff9f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -97 [0xffffffffffffff9f])
        (nil)))
(insn 12 10 15 2 (set (reg:SI 57)
        (and:SI (reg/v:SI 50 [ params ])
            (subreg:SI (reg:HI 55) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 55)
        (expr_list:REG_DEAD (reg/v:SI 50 [ params ])
            (expr_list:REG_EQUAL (and:SI (reg/v:SI 50 [ params ])
                    (const_int -97 [0xffffffffffffff9f]))
                (nil)))))
(note 15 12 16 2 NOTE_INSN_DELETED)
(note 16 15 21 2 NOTE_INSN_DELETED)
(insn 21 16 22 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 57)
            (reg:SI 45 [ D.6063 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 57)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6063 ])
            (nil))))
(insn 22 21 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function getNocrc (getNocrc, funcdef_no=13, decl_uid=3067, cgraph_uid=13, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getNocrc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 8 2 NOTE_INSN_DELETED)
(note 8 7 9 2 NOTE_INSN_DELETED)
(note 9 8 10 2 NOTE_INSN_DELETED)
(note 10 9 15 2 NOTE_INSN_DELETED)
(insn 15 10 16 2 (set (reg/i:SI 2 a2)
        (zero_extract:SI (reg:SI 2 a2 [ params ])
            (const_int 1 [0x1])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:353 38 {extzv_internal}
     (nil))
(insn 16 15 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:353 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setNocrc (setNocrc, funcdef_no=14, decl_uid=3071, cgraph_uid=14, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 55 uninteresting
Reg 58 uninteresting
Found def insn 8 for 44 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r58,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r53,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r49,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 3(l0): point = 12
 a0(r58): [3..4]
 a1(r44): [5..10]
 a2(r55): [5..6]
 a3(r53): [7..8]
 a4(r49): [7..12]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r58): [0..1]
 a1(r44): [2..5]
 a2(r55): [2..3]
 a3(r53): [4..5]
 a4(r49): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 40)
;; a0(r58,l0) conflicts:;; a1(r44,l0) conflicts: a2(r55,l0) a3(r53,l0) a4(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r55,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r53,l0) conflicts: a1(r44,l0) a4(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r49,l0) conflicts: a1(r44,l0) a3(r53,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

  cp0:a2(r55)<->a3(r53)@125:shuffle
  cp1:a2(r55)<->a4(r49)@125:shuffle
  cp2:a0(r58)<->a1(r44)@125:shuffle
  cp3:a0(r58)<->a2(r55)@125:shuffle
  pref0:a4(r49)<-hr2@125
  pref1:a1(r44)<-hr3@125
  pref2:a0(r58)<-hr2@125
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=4, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r58 1r44 2r55 3r53 4r49
    modified regnos: 44 49 53 55 58
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@65000
          2:( 2 4-15)@16500
      Allocno a0r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r49 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Forming thread by copy 0:a2r55-a3r53 (freq=125):
        Result (freq=4000): a2r55(2000) a3r53(2000)
      Forming thread by copy 2:a0r58-a1r44 (freq=125):
        Result (freq=4000): a0r58(2000) a1r44(2000)
      Pushing a4(r49,l0)(cost 0)
      Pushing a3(r53,l0)(cost 0)
      Pushing a2(r55,l0)(cost 0)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r58,l0)(cost 0)
      Popping a0(r58,l0)  -- assign reg 2
      Popping a1(r44,l0)  -- assign reg 3
      Popping a2(r55,l0)  -- assign reg 2
      Popping a3(r53,l0)  -- assign reg 8
      Popping a4(r49,l0)  -- assign reg 2
Disposition:
    1:r44  l0     3    4:r49  l0     2    3:r53  l0     8    2:r55  l0     2
    0:r58  l0     2
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setNocrc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r44={1d,1u} r49={1d,1u,1e} r53={1d,1u} r55={1d,1u} r58={1d,1u} 
;;    total ref usage 33{16d,16u,1e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 44 49 53 55 58
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 49 [ params ])
        (zero_extend:SI (reg:HI 2 a2 [ params ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ params ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 44 [ D.6071 ])
        (ashift:SI (reg:SI 3 a3 [ nocrc ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ nocrc ])
        (nil)))
(insn 9 8 11 2 (set (reg:HI 53)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(insn 11 9 14 2 (set (reg:SI 55)
        (and:SI (reg/v:SI 49 [ params ])
            (subreg:SI (reg:HI 53) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 53)
        (expr_list:REG_DEAD (reg/v:SI 49 [ params ])
            (expr_list:REG_EQUAL (and:SI (reg/v:SI 49 [ params ])
                    (const_int -129 [0xffffffffffffff7f]))
                (nil)))))
(insn 14 11 15 2 (set (reg:SI 58)
        (ior:SI (reg:SI 55)
            (reg:SI 44 [ D.6071 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6071 ])
            (nil))))
(note 15 14 20 2 NOTE_INSN_DELETED)
(insn 20 15 21 2 (set (reg/i:SI 2 a2)
        (zero_extend:SI (subreg:HI (reg:SI 58) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 58)
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function getIh (getIh, funcdef_no=15, decl_uid=3074, cgraph_uid=15, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getIh

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 8 2 NOTE_INSN_DELETED)
(note 8 7 14 2 NOTE_INSN_DELETED)
(insn 14 8 15 2 (set (reg/i:SI 2 a2)
        (zero_extract:SI (reg:SI 2 a2 [ params ])
            (const_int 8 [0x8])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:355 38 {extzv_internal}
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:355 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function setIh (setIh, funcdef_no=16, decl_uid=3078, cgraph_uid=16, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 54 uninteresting
Reg 57 uninteresting
Found def insn 8 for 44 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r57,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r54,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 8(l0): point = 8
 a0(r57): [3..4]
 a1(r44): [5..8]
 a2(r54): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r57): [0..1]
 a1(r44): [2..3]
 a2(r54): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r57,l0) conflicts:;; a1(r44,l0) conflicts: a2(r54,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a2(r54,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r57)<->a1(r44)@125:shuffle
  cp1:a0(r57)<->a2(r54)@125:shuffle
  pref0:a1(r44)<-hr3@125
  pref1:a2(r54)<-hr2@125
  pref2:a0(r57)<-hr2@125
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=2, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r57 1r44 2r54
    modified regnos: 44 54 57
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@33000
          2:( 3-15)@16500
      Allocno a0r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a2r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r57-a1r44 (freq=125):
        Result (freq=4000): a0r57(2000) a1r44(2000)
      Pushing a2(r54,l0)(cost 0)
      Pushing a0(r57,l0)(cost 0)
      Pushing a1(r44,l0)(cost 0)
      Popping a1(r44,l0)  -- assign reg 3
      Popping a0(r57,l0)  -- assign reg 2
      Popping a2(r54,l0)  -- assign reg 2
Disposition:
    1:r44  l0     3    2:r54  l0     2    0:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -750, reg -750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


setIh

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r44={1d,1u} r54={1d,1u} r57={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 44 54 57
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(note 3 4 5 2 NOTE_INSN_DELETED)
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 10 2 (set (reg:SI 44 [ D.6078 ])
        (ashift:SI (reg:SI 3 a3 [ ih ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:356 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ ih ])
        (nil)))
(insn 10 8 13 2 (set (reg:SI 54)
        (zero_extend:SI (reg:QI 2 a2 [ params ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:356 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ params ])
        (nil)))
(insn 13 10 14 2 (set (reg:SI 57)
        (ior:SI (reg:SI 54)
            (reg:SI 44 [ D.6078 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:356 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 54)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6078 ])
            (nil))))
(note 14 13 19 2 NOTE_INSN_DELETED)
(insn 19 14 20 2 (set (reg/i:SI 2 a2)
        (zero_extend:SI (subreg:HI (reg:SI 57) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:356 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 57)
        (nil)))
(insn 20 19 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:356 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function makeRps (makeRps, funcdef_no=17, decl_uid=3085, cgraph_uid=17, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 64: def dominates all uses has unique first use
Reg 58: local to bb 2 def dominates all uses has unique first use
Reg 60: local to bb 2 def dominates all uses has unique first use
Reg 62: local to bb 2 def dominates all uses has unique first use
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 68 uninteresting
Reg 71 uninteresting
Reg 51: def dominates all uses has unique first use
Reg 53: local to bb 5 def dominates all uses has unique first use
Reg 73 uninteresting
Reg 76 uninteresting
Examining insn 15, def for 45
  all ok
Examining insn 16, def for 49
  all ok
Reg 51 not local to one basic block
Examining insn 28, def for 53
  all ok
Found def insn 3 for 58 to be not moveable
Found def insn 5 for 60 to be not moveable
Found def insn 7 for 62 to be not moveable
Reg 64 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r76,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r73,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r71,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r68,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r64,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r62,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r58,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r49,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r76,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r73,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r64,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r71,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r62,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 39(l0): point = 0
   Insn 38(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 12(l0): point = 11
   Insn 45(l0): point = 14
   Insn 11(l0): point = 16
   Insn 24(l0): point = 19
   Insn 23(l0): point = 21
   Insn 22(l0): point = 23
   Insn 19(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 7(l0): point = 31
   Insn 5(l0): point = 33
   Insn 3(l0): point = 35
   Insn 8(l0): point = 37
 a0(r76): [3..4]
 a1(r53): [5..8]
 a2(r73): [5..6]
 a3(r51): [7..21]
 a4(r42): [14..16] [7..11]
 a5(r64): [9..37]
 a6(r71): [22..23]
 a7(r49): [24..27]
 a8(r68): [24..25]
 a9(r45): [26..29]
 a10(r58): [26..35]
 a11(r62): [28..31]
 a12(r60): [30..33]
Compressing live ranges: from 40 to 20 - 50%
Ranges after the compression:
 a0(r76): [0..1]
 a1(r53): [2..5]
 a2(r73): [2..3]
 a3(r51): [4..9]
 a4(r42): [4..9]
 a5(r64): [6..19]
 a6(r71): [10..11]
 a7(r49): [12..15]
 a8(r68): [12..13]
 a9(r45): [14..17]
 a10(r58): [14..19]
 a11(r62): [16..19]
 a12(r60): [18..19]
+++Allocating 96 bytes for conflict table (uncompressed size 104)
;; a0(r76,l0) conflicts:;; a1(r53,l0) conflicts: a2(r73,l0) a3(r51,l0) a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r73,l0) conflicts: a1(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r51,l0) conflicts: a1(r53,l0) a4(r42,l0) a5(r64,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a4(r42,l0) conflicts: a1(r53,l0) a3(r51,l0) a5(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r64,l0) conflicts: a3(r51,l0) a4(r42,l0) a6(r71,l0) a8(r68,l0) a7(r49,l0) a9(r45,l0) a10(r58,l0) a11(r62,l0) a12(r60,l0)
;;     total conflict hard regs: 2-4 6
;;     conflict hard regs: 2-4 6

;; a6(r71,l0) conflicts: a5(r64,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a7(r49,l0) conflicts: a5(r64,l0) a8(r68,l0) a9(r45,l0) a10(r58,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a8(r68,l0) conflicts: a5(r64,l0) a7(r49,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a9(r45,l0) conflicts: a5(r64,l0) a7(r49,l0) a10(r58,l0) a11(r62,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a10(r58,l0) conflicts: a5(r64,l0) a7(r49,l0) a9(r45,l0) a11(r62,l0) a12(r60,l0)
;;     total conflict hard regs: 3 4 6
;;     conflict hard regs: 3 4 6

;; a11(r62,l0) conflicts: a5(r64,l0) a9(r45,l0) a10(r58,l0) a12(r60,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a12(r60,l0) conflicts: a5(r64,l0) a10(r58,l0) a11(r62,l0)
;;     total conflict hard regs: 4 6
;;     conflict hard regs: 4 6

  cp0:a1(r53)<->a5(r64)@125:shuffle
  cp1:a2(r73)<->a3(r51)@125:shuffle
  cp2:a2(r73)<->a4(r42)@125:shuffle
  cp3:a0(r76)<->a1(r53)@125:shuffle
  cp4:a0(r76)<->a2(r73)@125:shuffle
  cp5:a9(r45)<->a12(r60)@125:shuffle
  cp6:a7(r49)<->a11(r62)@125:shuffle
  cp7:a8(r68)<->a9(r45)@125:shuffle
  cp8:a8(r68)<->a10(r58)@125:shuffle
  cp9:a6(r71)<->a7(r49)@125:shuffle
  cp10:a6(r71)<->a8(r68)@125:shuffle
  cp11:a3(r51)<->a6(r71)@125:shuffle
  pref0:a5(r64)<-hr5@2000
  pref1:a0(r76)<-hr2@125
  pref2:a10(r58)<-hr2@125
  pref3:a12(r60)<-hr3@125
  pref4:a11(r62)<-hr4@125
  regions=1, blocks=6, points=20
    allocnos=13 (big 0), copies=12, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r76 1r53 2r73 3r51 4r42 5r64 6r71 7r49 8r68 9r45 10r58 11r62 12r60
    modified regnos: 42 45 49 51 53 58 60 62 64 68 71 73 76
    border:
    Pressure: AR_REGS=5
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@64500
          2:( 2-5 7-15)@96500
            3:( 2 3 5 7-15)@16500
              4:( 2 5 7-15)@16500
                5:( 5 7-15)@24000
      Allocno a0r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r51 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a4r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r64 of AR_REGS(14) has 10 avail. regs  5 7-15, node:  5 7-15 (confl regs =  0-4 6 16-34)
      Allocno a6r71 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a7r49 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a8r68 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a9r45 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a10r58 of AR_REGS(14) has 11 avail. regs  2 5 7-15, node:  2 5 7-15 (confl regs =  0 1 3 4 6 16-34)
      Allocno a11r62 of AR_REGS(14) has 13 avail. regs  2-5 7-15, node:  2-5 7-15 (confl regs =  0 1 6 16-34)
      Allocno a12r60 of AR_REGS(14) has 12 avail. regs  2 3 5 7-15, node:  2 3 5 7-15 (confl regs =  0 1 4 6 16-34)
      Forming thread by copy 0:a1r53-a5r64 (freq=125):
        Result (freq=4000): a1r53(2000) a5r64(2000)
      Forming thread by copy 1:a2r73-a3r51 (freq=125):
        Result (freq=4000): a2r73(2000) a3r51(2000)
      Forming thread by copy 3:a0r76-a1r53 (freq=125):
        Result (freq=6000): a0r76(2000) a1r53(2000) a5r64(2000)
      Forming thread by copy 5:a9r45-a12r60 (freq=125):
        Result (freq=4000): a9r45(2000) a12r60(2000)
      Forming thread by copy 6:a7r49-a11r62 (freq=125):
        Result (freq=4000): a7r49(2000) a11r62(2000)
      Forming thread by copy 7:a8r68-a9r45 (freq=125):
        Result (freq=6000): a8r68(2000) a9r45(2000) a12r60(2000)
      Forming thread by copy 9:a6r71-a7r49 (freq=125):
        Result (freq=6000): a6r71(2000) a7r49(2000) a11r62(2000)
      Forming thread by copy 11:a3r51-a6r71 (freq=125):
        Result (freq=10000): a2r73(2000) a6r71(2000) a7r49(2000) a11r62(2000) a3r51(2000)
      Pushing a10(r58,l0)(cost 0)
      Pushing a4(r42,l0)(cost 0)
      Pushing a9(r45,l0)(cost 0)
      Pushing a8(r68,l0)(cost 0)
      Pushing a12(r60,l0)(cost 0)
      Pushing a1(r53,l0)(cost 0)
      Pushing a0(r76,l0)(cost 0)
      Pushing a5(r64,l0)(cost 0)
      Pushing a2(r73,l0)(cost 0)
      Pushing a11(r62,l0)(cost 0)
      Pushing a7(r49,l0)(cost 0)
      Pushing a6(r71,l0)(cost 0)
      Pushing a3(r51,l0)(cost 0)
      Popping a3(r51,l0)  -- assign reg 8
      Popping a6(r71,l0)  -- assign reg 8
      Popping a7(r49,l0)  -- assign reg 4
      Popping a11(r62,l0)  -- assign reg 4
      Popping a2(r73,l0)  -- assign reg 8
      Popping a5(r64,l0)  -- assign reg 5
      Popping a0(r76,l0)  -- assign reg 8
      Popping a1(r53,l0)  -- assign reg 5
      Popping a12(r60,l0)  -- assign reg 3
      Popping a8(r68,l0)  -- assign reg 8
      Popping a9(r45,l0)  -- assign reg 3
      Popping a4(r42,l0)  -- assign reg 2
      Popping a10(r58,l0)  -- assign reg 8
Assigning 2 to a0r76
Assigning 2 to a10r58
Disposition:
    4:r42  l0     2    9:r45  l0     3    7:r49  l0     4    3:r51  l0     8
    1:r53  l0     5   10:r58  l0     2   12:r60  l0     3   11:r62  l0     4
    5:r64  l0     5    8:r68  l0     8    6:r71  l0     8    2:r73  l0     8
    0:r76  l0     2
New iteration of spill/restore move
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


makeRps

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3] 4[a4] 5[a5] 6[a6]
;;  ref usage 	r0={1d} r1={1d,5u} r2={2d,3u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r45={1d,1u} r49={1d,1u} r51={1d,1u} r53={1d,1u} r58={1d,1u} r60={1d,1u} r62={1d,1u} r64={1d,1u} r68={1d,1u} r71={1d,1u} r73={1d,1u} r76={1d,1u} 
;;    total ref usage 64{25d,39u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 49 51 58 60 62 64 68 71
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 13 4 2 NOTE_INSN_DELETED)
(note 4 2 6 2 NOTE_INSN_DELETED)
(note 6 4 8 2 NOTE_INSN_DELETED)
(insn 8 6 9 2 (set (reg/v:SI 64 [ ih ])
        (reg:SI 5 a5 [ ih ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:357 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ ih ])
        (nil)))
(note 9 8 3 2 NOTE_INSN_DELETED)
(insn 3 9 5 2 (set (reg/v:SI 58 [ sf ])
        (zero_extend:SI (reg:QI 2 a2 [ sf ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:357 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ sf ])
        (nil)))
(insn 5 3 7 2 (set (reg/v:SI 60 [ bw ])
        (zero_extend:SI (reg:QI 3 a3 [ bw ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:357 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ bw ])
        (nil)))
(insn 7 5 10 2 (set (reg/v:SI 62 [ cr ])
        (zero_extend:SI (reg:QI 4 a4 [ cr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:357 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 4 a4 [ cr ])
        (nil)))
(note 10 7 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 10 16 2 (set (reg:SI 45 [ D.6082 ])
        (ashift:SI (reg/v:SI 60 [ bw ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ bw ])
        (nil)))
(insn 16 15 19 2 (set (reg:SI 49 [ D.6082 ])
        (ashift:SI (reg/v:SI 62 [ cr ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 62 [ cr ])
        (nil)))
(insn 19 16 22 2 (set (reg:SI 68)
        (ior:SI (reg/v:SI 58 [ sf ])
            (reg:SI 45 [ D.6082 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 31 {iorsi3}
     (expr_list:REG_DEAD (reg/v:SI 58 [ sf ])
        (expr_list:REG_DEAD (reg:SI 45 [ D.6082 ])
            (nil))))
(insn 22 19 23 2 (set (reg:SI 71)
        (ior:SI (reg:SI 68)
            (reg:SI 49 [ D.6082 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 68)
        (expr_list:REG_DEAD (reg:SI 49 [ D.6082 ])
            (nil))))
(insn 23 22 24 2 (set (reg:SI 51 [ D.6081 ])
        (sign_extend:SI (subreg:HI (reg:SI 71) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:SI 6 a6 [ nocrc ])
                (const_int 0 [0]))
            (label_ref:SI 44)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 6 a6 [ nocrc ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 44)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 64

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 25 24 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 25 45 3 (set (reg:SI 42 [ D.6081 ])
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(jump_insn 45 11 46 3 (set (pc)
        (label_ref 26)) 78 {jump}
     (nil)
 -> 26)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 51 64

(barrier 46 45 44)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 44 46 43 4 90 "" [1 uses])
(note 43 44 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 43 26 4 (set (reg:SI 42 [ D.6081 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 51 64

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(1){ }u29(7){ }u30(16){ }u31(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 51 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 51 64
;; lr  def 	 2 [a2] 53 73 76
(code_label 26 12 27 5 89 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:SI 53 [ D.6082 ])
        (ashift:SI (reg/v:SI 64 [ ih ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 64 [ ih ])
        (nil)))
(insn 29 28 32 5 (set (reg:SI 73)
        (ior:SI (reg:SI 42 [ D.6081 ])
            (reg:SI 51 [ D.6081 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 51 [ D.6081 ])
        (expr_list:REG_DEAD (reg:SI 42 [ D.6081 ])
            (nil))))
(insn 32 29 33 5 (set (reg:SI 76)
        (ior:SI (reg:SI 73)
            (reg:SI 53 [ D.6082 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:358 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 73)
        (expr_list:REG_DEAD (reg:SI 53 [ D.6082 ])
            (nil))))
(note 33 32 38 5 NOTE_INSN_DELETED)
(insn 38 33 39 5 (set (reg/i:SI 2 a2)
        (zero_extend:SI (subreg:HI (reg:SI 76) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:359 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 39 38 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:359 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function sameSfBw (sameSfBw, funcdef_no=18, decl_uid=3089, cgraph_uid=18, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 26.
verify found no changes in insn with uid = 26.
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 49 uninteresting
Reg 42 uninteresting
Reg 57: local to bb 2 def dominates all uses has unique first use
Reg 56 uninteresting
Reg 55 uninteresting
Found def insn 3 for 47 to be not moveable
Ignoring reg 57 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 56: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r54,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r47,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 15(l0): point = 4
   Insn 26(l0): point = 6
   Insn 14(l0): point = 8
   Insn 12(l0): point = 10
   Insn 10(l0): point = 12
   Insn 5(l0): point = 14
   Insn 3(l0): point = 16
 a0(r55): [3..4]
 a1(r57): [5..8]
 a2(r56): [5..6]
 a3(r54): [5..10]
 a4(r42): [11..12]
 a5(r49): [13..14]
 a6(r47): [13..16]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r55): [0..1]
 a1(r57): [2..3]
 a2(r56): [2..3]
 a3(r54): [2..3]
 a4(r42): [4..5]
 a5(r49): [6..7]
 a6(r47): [6..7]
+++Allocating 40 bytes for conflict table (uncompressed size 56)
;; a0(r55,l0) conflicts:;; a1(r57,l0) conflicts: a2(r56,l0) a3(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r56,l0) conflicts: a1(r57,l0) a3(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r54,l0) conflicts: a1(r57,l0) a2(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r42,l0) conflicts:;; a5(r49,l0) conflicts: a6(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r47,l0) conflicts: a5(r49,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

  cp0:a4(r42)<->a5(r49)@125:shuffle
  cp1:a4(r42)<->a6(r47)@125:shuffle
  cp2:a3(r54)<->a4(r42)@125:shuffle
  cp3:a0(r55)<->a3(r54)@125:shuffle
  cp4:a0(r55)<->a2(r56)@125:shuffle
  cp5:a0(r55)<->a1(r57)@125:shuffle
  pref0:a0(r55)<-hr2@2000
  pref1:a6(r47)<-hr2@125
  pref2:a5(r49)<-hr3@125
  regions=1, blocks=3, points=8
    allocnos=7 (big 0), copies=6, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r55 1r57 2r56 3r54 4r42 5r49 6r47
    modified regnos: 42 47 49 54 55 56 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@104500
          2:( 2 4-15)@16500
      Allocno a0r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r47 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Forming thread by copy 0:a4r42-a5r49 (freq=125):
        Result (freq=4000): a4r42(2000) a5r49(2000)
      Forming thread by copy 2:a3r54-a4r42 (freq=125):
        Result (freq=6000): a3r54(2000) a4r42(2000) a5r49(2000)
      Forming thread by copy 3:a0r55-a3r54 (freq=125):
        Result (freq=8000): a0r55(2000) a3r54(2000) a4r42(2000) a5r49(2000)
      Pushing a6(r47,l0)(cost 0)
      Pushing a2(r56,l0)(cost 0)
      Pushing a1(r57,l0)(cost 0)
      Pushing a5(r49,l0)(cost 0)
      Pushing a4(r42,l0)(cost 0)
      Pushing a3(r54,l0)(cost 0)
      Pushing a0(r55,l0)(cost 0)
      Popping a0(r55,l0)  -- assign reg 2
      Popping a3(r54,l0)  -- assign reg 3
      Popping a4(r42,l0)  -- assign reg 2
      Popping a5(r49,l0)  -- assign reg 3
      Popping a1(r57,l0)  -- assign reg 2
      Popping a2(r56,l0)  -- assign reg 8
      Popping a6(r47,l0)  -- assign reg 2
Disposition:
    4:r42  l0     2    6:r47  l0     2    5:r49  l0     3    3:r54  l0     3
    0:r55  l0     2    2:r56  l0     8    1:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -4500, reg -4500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sameSfBw

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r47={1d,1u} r49={1d,1u} r54={1d,1u,1e} r55={1d,1u} r56={1d,1u} r57={1d,1u} 
;;    total ref usage 37{18d,18u,1e} in 9{9 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 42 47 49 54 55 56 57
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 47 [ r1 ])
        (zero_extend:SI (reg:HI 2 a2 [ r1 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ r1 ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 49 [ r2 ])
        (zero_extend:SI (reg:HI 3 a3 [ r2 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 3 a3 [ r2 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(note 9 6 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:SI 42 [ D.6087 ])
        (xor:SI (reg/v:SI 47 [ r1 ])
            (reg/v:SI 49 [ r2 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 32 {xorsi3}
     (expr_list:REG_DEAD (reg/v:SI 49 [ r2 ])
        (expr_list:REG_DEAD (reg/v:SI 47 [ r1 ])
            (nil))))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 14 2 (set (reg:SI 54)
        (and:SI (reg:SI 42 [ D.6087 ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6087 ])
        (nil)))
(insn 14 12 26 2 (set (reg:SI 57)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 26 14 15 2 (set (reg:SI 56)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 15 26 17 2 (set (reg:SI 55)
        (if_then_else:SI (eq (reg:SI 54)
                (const_int 0 [0]))
            (reg:SI 56)
            (reg:SI 57))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 57)
        (expr_list:REG_DEAD (reg:SI 56)
            (expr_list:REG_DEAD (reg:SI 54)
                (expr_list:REG_EQUAL (eq:SI (reg:SI 54)
                        (const_int 0 [0]))
                    (nil))))))
(note 17 15 23 2 NOTE_INSN_DELETED)
(insn 23 17 24 2 (set (reg/i:SI 2 a2)
        (reg:SI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 55)
        (nil)))
(insn 24 23 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:362 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function updr2rps (updr2rps, funcdef_no=19, decl_uid=3093, cgraph_uid=19, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 49 uninteresting
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 45 uninteresting
Examining insn 7, def for 43
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 11 (nil))

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r49,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a2(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
 a0(r45): [3..4]
 a1(r51): [5..6]
 a2(r43): [5..8]
 a3(r49): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r45): [0..1]
 a1(r51): [2..3]
 a2(r43): [2..3]
 a3(r49): [4..5]
+++Allocating 16 bytes for conflict table (uncompressed size 32)
;; a0(r45,l0) conflicts:;; a1(r51,l0) conflicts: a2(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r43,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r49,l0) conflicts:  cp0:a2(r43)<->a3(r49)@125:shuffle
  cp1:a0(r45)<->a1(r51)@125:shuffle
  cp2:a0(r45)<->a2(r43)@125:shuffle
  pref0:a3(r49)<-hr2@125
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=3, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r45 1r51 2r43 3r49
    modified regnos: 43 45 49 51
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@48500
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a2r43-a3r49 (freq=125):
        Result (freq=4000): a2r43(2000) a3r49(2000)
      Forming thread by copy 1:a0r45-a1r51 (freq=125):
        Result (freq=4000): a0r45(2000) a1r51(2000)
      Pushing a3(r49,l0)(cost 0)
      Pushing a2(r43,l0)(cost 0)
      Pushing a1(r51,l0)(cost 0)
      Pushing a0(r45,l0)(cost 0)
      Popping a0(r45,l0)  -- assign reg 2
      Popping a1(r51,l0)  -- assign reg 8
      Popping a2(r43,l0)  -- assign reg 2
      Popping a3(r49,l0)  -- assign reg 2
Disposition:
    2:r43  l0     2    0:r45  l0     2    3:r49  l0     2    1:r51  l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


updr2rps

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r43={1d,2u} r45={1d,1u} r49={1d,1u} r51={1d,1u} 
;;    total ref usage 30{15d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 43 45 49 51
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 49 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 9 2 (set (reg:SI 43 [ D.6092 ])
        (plus:SI (reg/v:SI 49 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
        (nil)))
(debug_insn 9 7 10 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI index (reg:SI 43 [ D.6092 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC67") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 45 [ D.6094 ])
        (plus:SI (reg:SI 43 [ D.6092 ])
            (reg/f:SI 51))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6092 ])
            (nil))))
(note 13 12 20 2 NOTE_INSN_DELETED)
(insn 20 13 21 2 (set (reg/i:SI 2 a2)
        (zero_extend:SI (mem:QI (reg/f:SI 45 [ D.6094 ]) [0 *_6+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 45 [ D.6094 ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function dndr2rps (dndr2rps, funcdef_no=20, decl_uid=3096, cgraph_uid=20, symbol_order=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52 uninteresting
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 54 uninteresting
Reg 49 uninteresting
Reg 50 uninteresting
Reg 58 uninteresting
Reg 60 uninteresting
Examining insn 8, def for 47
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 54: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 0 for finding pseudo/allocno costs

    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r57,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r47,l0) best AR_REGS, allocno AR_REGS

  a0(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a6(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 22(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 8(l0): point = 16
   Insn 3(l0): point = 18
 a0(r60): [3..4]
 a1(r58): [5..6]
 a2(r57): [5..8]
 a3(r50): [9..10]
 a4(r49): [11..12]
 a5(r54): [13..14]
 a6(r47): [13..16]
 a7(r52): [17..18]
Compressing live ranges: from 21 to 12 - 57%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r58): [2..3]
 a2(r57): [2..3]
 a3(r50): [4..5]
 a4(r49): [6..7]
 a5(r54): [8..9]
 a6(r47): [8..9]
 a7(r52): [10..11]
+++Allocating 32 bytes for conflict table (uncompressed size 64)
;; a0(r60,l0) conflicts:;; a1(r58,l0) conflicts: a2(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r57,l0) conflicts: a1(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r50,l0) conflicts:;; a4(r49,l0) conflicts:;; a5(r54,l0) conflicts: a6(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r47,l0) conflicts: a5(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r52,l0) conflicts:  cp0:a6(r47)<->a7(r52)@125:shuffle
  cp1:a4(r49)<->a5(r54)@125:shuffle
  cp2:a4(r49)<->a6(r47)@125:shuffle
  cp3:a2(r57)<->a3(r50)@125:shuffle
  cp4:a0(r60)<->a1(r58)@125:shuffle
  cp5:a0(r60)<->a2(r57)@125:shuffle
  pref0:a7(r52)<-hr2@125
  pref1:a0(r60)<-hr2@125
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=6, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r60 1r58 2r57 3r50 4r49 5r54 6r47 7r52
    modified regnos: 47 49 50 52 54 57 58 60
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@113000
      Allocno a0r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a6r47-a7r52 (freq=125):
        Result (freq=4000): a6r47(2000) a7r52(2000)
      Forming thread by copy 1:a4r49-a5r54 (freq=125):
        Result (freq=4000): a4r49(2000) a5r54(2000)
      Forming thread by copy 3:a2r57-a3r50 (freq=125):
        Result (freq=4000): a2r57(2000) a3r50(2000)
      Forming thread by copy 4:a0r60-a1r58 (freq=125):
        Result (freq=4000): a0r60(2000) a1r58(2000)
      Pushing a7(r52,l0)(cost 0)
      Pushing a6(r47,l0)(cost 0)
      Pushing a5(r54,l0)(cost 0)
      Pushing a4(r49,l0)(cost 0)
      Pushing a3(r50,l0)(cost 0)
      Pushing a2(r57,l0)(cost 0)
      Pushing a1(r58,l0)(cost 0)
      Pushing a0(r60,l0)(cost 0)
      Popping a0(r60,l0)  -- assign reg 2
      Popping a1(r58,l0)  -- assign reg 8
      Popping a2(r57,l0)  -- assign reg 2
      Popping a3(r50,l0)  -- assign reg 2
      Popping a4(r49,l0)  -- assign reg 2
      Popping a5(r54,l0)  -- assign reg 8
      Popping a6(r47,l0)  -- assign reg 2
      Popping a7(r52,l0)  -- assign reg 2
Disposition:
    6:r47  l0     2    4:r49  l0     2    3:r50  l0     2    7:r52  l0     2
    5:r54  l0     8    2:r57  l0     2    1:r58  l0     8    0:r60  l0     2
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dndr2rps

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r47={1d,2u} r49={1d,1u} r50={1d,2u} r52={1d,2u} r54={1d,1u} r57={1d,1u,1e} r58={1d,1u} r60={1d,1u} 
;;    total ref usage 41{19d,21u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 47 49 50 52 54 57 58 60
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 52 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:366 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:QI dr (subreg:QI (reg/v:SI 52 [ dr ]) 0)) -1
     (nil))
(insn 8 7 10 2 (set (reg:SI 47 [ D.6100 ])
        (plus:SI (reg/v:SI 52 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 52 [ dr ])
        (nil)))
(debug_insn 10 8 11 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI index (reg:SI 47 [ D.6100 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC68") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 49 [ D.6102 ])
        (plus:SI (reg:SI 47 [ D.6100 ])
            (reg/f:SI 54))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (expr_list:REG_DEAD (reg:SI 47 [ D.6100 ])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 50 [ D.6103 ])
        (zero_extend:SI (mem:QI (reg/f:SI 49 [ D.6102 ]) [0 *_10+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 49 [ D.6102 ])
        (nil)))
(debug_insn 15 14 16 2 (var_location:HI params (zero_extend:HI (subreg:QI (reg:SI 50 [ D.6103 ]) 0))) -1
     (nil))
(debug_insn 16 15 17 2 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(note 17 16 19 2 NOTE_INSN_DELETED)
(insn 19 17 20 2 (set (reg:SI 57)
        (and:SI (reg:SI 50 [ D.6103 ])
            (const_int 127 [0x7f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6103 ])
        (nil)))
(insn 20 19 22 2 (set (reg:HI 58)
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 22 20 23 2 (set (reg:SI 60)
        (ior:SI (reg:SI 57)
            (subreg:SI (reg:HI 58) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 58)
        (expr_list:REG_DEAD (reg:SI 57)
            (expr_list:REG_EQUAL (ior:SI (reg:SI 57)
                    (const_int 128 [0x80]))
                (nil)))))
(note 23 22 28 2 NOTE_INSN_DELETED)
(insn 28 23 29 2 (set (reg/i:SI 2 a2)
        (zero_extend:SI (subreg:QI (reg:SI 60) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:366 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 60)
        (nil)))
(insn 29 28 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:366 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function isFasterDR (isFasterDR, funcdef_no=21, decl_uid=3100, cgraph_uid=21, symbol_order=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 47: local to bb 2 def dominates all uses has unique first use
Found def insn 3 for 45 to be not moveable
Found def insn 5 for 47 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a1(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 11(l0): point = 5
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 5(l0): point = 12
   Insn 3(l0): point = 14
 a0(r49): [8..10] [3..5]
 a1(r45): [9..14]
 a2(r47): [9..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r49): [0..3]
 a1(r45): [2..3]
 a2(r47): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r49,l0) conflicts: a1(r45,l0) a2(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r45,l0) conflicts: a0(r49,l0) a2(r47,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a2(r47,l0) conflicts: a0(r49,l0) a1(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r49)<-hr2@125
  pref1:a1(r45)<-hr2@125
  pref2:a2(r47)<-hr3@125
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r49 1r45 2r47
    modified regnos: 45 47 49
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@37000
          2:( 2 4-15)@16500
      Allocno a0r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r45 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a2r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a2(r47,l0)(cost 0)
      Pushing a1(r45,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Popping a0(r49,l0)  -- assign reg 8
      Popping a1(r45,l0)  -- assign reg 2
      Popping a2(r47,l0)  -- assign reg 3
Disposition:
    1:r45  l0     2    2:r47  l0     3    0:r49  l0     8
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


isFasterDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,4u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,4u} r16={1d,4u} r17={1d,3u} r45={1d,1u} r47={1d,1u} r49={2d,1u} 
;;    total ref usage 37{15d,22u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 47 49
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 45 [ dr1 ])
        (zero_extend:SI (reg:QI 2 a2 [ dr1 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr1 ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 47 [ dr2 ])
        (zero_extend:SI (reg:QI 3 a3 [ dr2 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ dr2 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:QI 49)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 10 9 22 2 (set (pc)
        (if_then_else (ltu (reg/v:SI 47 [ dr2 ])
                (reg/v:SI 45 [ dr1 ]))
            (label_ref 12)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 58 {*ubtrue}
     (expr_list:REG_DEAD (reg/v:SI 47 [ dr2 ])
        (expr_list:REG_DEAD (reg/v:SI 45 [ dr1 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 12)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(1){ }u11(7){ }u12(16){ }u13(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 49
(note 22 10 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 22 12 3 (set (reg:QI 49)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 2 [a2]
(code_label 12 11 23 4 95 "" [1 uses])
(note 23 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 13 23 19 4 NOTE_INSN_DELETED)
(insn 19 13 20 4 (set (reg/i:SI 2 a2)
        (and:SI (subreg:SI (reg:QI 49) 0)
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 49)
        (nil)))
(insn 20 19 0 4 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:367 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function isSlowerDR (isSlowerDR, funcdef_no=22, decl_uid=3104, cgraph_uid=22, symbol_order=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 47: local to bb 2 def dominates all uses has unique first use
Found def insn 3 for 45 to be not moveable
Found def insn 5 for 47 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a1(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 11(l0): point = 5
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 5(l0): point = 12
   Insn 3(l0): point = 14
 a0(r49): [8..10] [3..5]
 a1(r47): [9..12]
 a2(r45): [9..14]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r49): [0..3]
 a1(r47): [2..3]
 a2(r45): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r49,l0) conflicts: a1(r47,l0) a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r47,l0) conflicts: a0(r49,l0) a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r45,l0) conflicts: a0(r49,l0) a1(r47,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

  pref0:a0(r49)<-hr2@125
  pref1:a2(r45)<-hr2@125
  pref2:a1(r47)<-hr3@125
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r49 1r47 2r45
    modified regnos: 45 47 49
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@37000
          2:( 2 4-15)@16500
      Allocno a0r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r45 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Pushing a2(r45,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Popping a0(r49,l0)  -- assign reg 8
      Popping a1(r47,l0)  -- assign reg 3
      Popping a2(r45,l0)  -- assign reg 2
Disposition:
    2:r45  l0     2    1:r47  l0     3    0:r49  l0     8
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


isSlowerDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,4u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,4u} r16={1d,4u} r17={1d,3u} r45={1d,1u} r47={1d,1u} r49={2d,1u} 
;;    total ref usage 37{15d,22u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 47 49
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 45 [ dr1 ])
        (zero_extend:SI (reg:QI 2 a2 [ dr1 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr1 ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 47 [ dr2 ])
        (zero_extend:SI (reg:QI 3 a3 [ dr2 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ dr2 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:QI 49)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 10 9 22 2 (set (pc)
        (if_then_else (ltu (reg/v:SI 45 [ dr1 ])
                (reg/v:SI 47 [ dr2 ]))
            (label_ref 12)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 58 {*ubtrue}
     (expr_list:REG_DEAD (reg/v:SI 47 [ dr2 ])
        (expr_list:REG_DEAD (reg/v:SI 45 [ dr1 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 12)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(1){ }u11(7){ }u12(16){ }u13(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 49
(note 22 10 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 22 12 3 (set (reg:QI 49)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 2 [a2]
(code_label 12 11 23 4 97 "" [1 uses])
(note 23 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 13 23 19 4 NOTE_INSN_DELETED)
(insn 19 13 20 4 (set (reg/i:SI 2 a2)
        (and:SI (subreg:SI (reg:QI 49) 0)
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 49)
        (nil)))
(insn 20 19 0 4 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:368 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function incDR (incDR, funcdef_no=23, decl_uid=3107, cgraph_uid=23, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 49 uninteresting (no unique first use)
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 46 uninteresting
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 52 uninteresting
Reg 53 uninteresting
Examining insn 8, def for 44
  all ok
Found def insn 14 for 47 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 15 (nil))

Pass 0 for finding pseudo/allocno costs

    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r49,l0) costs: ACC_REG:8997,8997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:47984,47984 MEM:11996,11996
  a2(r53,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:6400,6400
  a3(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a7(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 5(l0): point = 5
   Insn 33(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 16(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 12(l0): point = 23
   Insn 8(l0): point = 25
   Insn 3(l0): point = 27
 a0(r42): [8..10] [3..5]
 a1(r49): [13..27] [6..7]
 a2(r53): [11..12]
 a3(r52): [16..17]
 a4(r47): [16..19]
 a5(r46): [20..21]
 a6(r51): [22..23]
 a7(r44): [22..25]
Compressing live ranges: from 30 to 14 - 46%
Ranges after the compression:
 a0(r42): [4..5] [0..1]
 a1(r49): [8..13] [2..3]
 a2(r53): [6..7]
 a3(r52): [8..9]
 a4(r47): [8..9]
 a5(r46): [10..11]
 a6(r51): [12..13]
 a7(r44): [12..13]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r42,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r49,l0) conflicts: a3(r52,l0) a4(r47,l0) a5(r46,l0) a6(r51,l0) a7(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r53,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r52,l0) conflicts: a1(r49,l0) a4(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r47,l0) conflicts: a1(r49,l0) a3(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r46,l0) conflicts: a1(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r51,l0) conflicts: a1(r49,l0) a7(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r44,l0) conflicts: a1(r49,l0) a6(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r42)<->a1(r49)@199:move
  cp1:a1(r49)<->a2(r53)@100:shuffle
  cp2:a0(r42)<->a2(r53)@100:shuffle
  cp3:a5(r46)<->a6(r51)@125:shuffle
  cp4:a5(r46)<->a7(r44)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a1(r49)<-hr2@125
  regions=1, blocks=6, points=14
    allocnos=8 (big 0), copies=5, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r42 1r49 2r53 3r52 4r47 5r46 6r51 7r44
    modified regnos: 42 44 46 47 49 51 52 53
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@125284
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r42-a1r49 (freq=199):
        Result (freq=4998): a0r42(1999) a1r49(2999)
      Forming thread by copy 3:a5r46-a6r51 (freq=125):
        Result (freq=4000): a5r46(2000) a6r51(2000)
      Forming thread by copy 1:a1r49-a2r53 (freq=100):
        Result (freq=6598): a0r42(1999) a2r53(1600) a1r49(2999)
      Pushing a7(r44,l0)(cost 0)
      Pushing a4(r47,l0)(cost 0)
      Pushing a3(r52,l0)(cost 0)
      Pushing a6(r51,l0)(cost 0)
      Pushing a5(r46,l0)(cost 0)
      Pushing a2(r53,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Popping a1(r49,l0)  -- assign reg 2
      Popping a0(r42,l0)  -- assign reg 2
      Popping a2(r53,l0)  -- assign reg 2
      Popping a5(r46,l0)  -- assign reg 8
      Popping a6(r51,l0)  -- assign reg 8
      Popping a3(r52,l0)  -- assign reg 8
      Popping a4(r47,l0)  -- assign reg 9
      Popping a7(r44,l0)  -- assign reg 9
Disposition:
    0:r42  l0     2    7:r44  l0     9    5:r46  l0     8    4:r47  l0     9
    1:r49  l0     2    6:r51  l0     8    3:r52  l0     8    2:r53  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


incDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,5u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r44={1d,2u} r46={1d,1u} r47={1d,1u} r49={1d,3u} r51={1d,1u} r52={1d,1u} r53={1d,1u} 
;;    total ref usage 53{20d,33u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 46 47 49 51 52
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 49 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 10 2 (set (reg:SI 44 [ D.6114 ])
        (plus:SI (reg/v:SI 49 [ dr ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 1 {addsi3}
     (nil))
(debug_insn 10 8 11 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI index (reg:SI 44 [ D.6114 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC69") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 46 [ D.6116 ])
        (plus:SI (reg:SI 44 [ D.6114 ])
            (reg/f:SI 51))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6114 ])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 47 [ D.6117 ])
        (zero_extend:SI (mem:QI (reg/f:SI 46 [ D.6116 ]) [0 *_7+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 46 [ D.6116 ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 52)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:SI 47 [ D.6117 ])
                (reg:SI 52))
            (label_ref:SI 32)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 52)
        (expr_list:REG_DEAD (reg:SI 47 [ D.6117 ])
            (int_list:REG_BR_PROB 1991 (nil))))
 -> 32)
;;  succ:       3 [80.1%]  (FALLTHRU)
;;              4 [19.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 3, loop depth 0, count 0, freq 8009, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [80.1%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 42 53
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 53)
        (plus:SI (reg/v:SI 49 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
        (nil)))
(insn 19 18 33 3 (set (reg:SI 42 [ D.6113 ])
        (zero_extend:SI (subreg:QI (reg:SI 53) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 53)
        (nil)))
(jump_insn 33 19 34 3 (set (pc)
        (label_ref 20)) 78 {jump}
     (nil)
 -> 20)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 34 33 32)
;; basic block 4, loop depth 0, count 0, freq 1991, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [19.9%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(1){ }u20(7){ }u21(16){ }u22(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 42
(code_label 32 34 31 4 100 "" [1 uses])
(note 31 32 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 31 20 4 (set (reg:SI 42 [ D.6113 ])
        (reg/v:SI 49 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 20 5 21 5 99 "" [1 uses])
(note 21 20 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 21 27 5 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6113 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6113 ])
        (nil)))
(insn 27 26 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:369 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function decDR (decDR, funcdef_no=24, decl_uid=3110, cgraph_uid=24, symbol_order=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 47: def dominates all uses has unique first use
Reg 49 uninteresting
Reg 44 uninteresting
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 50 uninteresting
Reg 51 uninteresting
Found def insn 13 for 45 to be not moveable
Reg 47 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 49: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r47,l0) costs: ACC_REG:8997,8997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:47984,47984 MEM:11996,11996
  a2(r51,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:6400,6400
  a3(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 5(l0): point = 5
   Insn 32(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 3(l0): point = 25
 a0(r42): [8..10] [3..5]
 a1(r47): [13..25] [6..7]
 a2(r51): [11..12]
 a3(r50): [16..17]
 a4(r45): [16..19]
 a5(r44): [20..21]
 a6(r49): [22..23]
Compressing live ranges: from 28 to 14 - 50%
Ranges after the compression:
 a0(r42): [4..5] [0..1]
 a1(r47): [8..13] [2..3]
 a2(r51): [6..7]
 a3(r50): [8..9]
 a4(r45): [8..9]
 a5(r44): [10..11]
 a6(r49): [12..13]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r42,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r47,l0) conflicts: a3(r50,l0) a4(r45,l0) a5(r44,l0) a6(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r51,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r50,l0) conflicts: a1(r47,l0) a4(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r45,l0) conflicts: a1(r47,l0) a3(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r44,l0) conflicts: a1(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r49,l0) conflicts: a1(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r42)<->a1(r47)@199:move
  cp1:a1(r47)<->a2(r51)@100:shuffle
  cp2:a0(r42)<->a2(r51)@100:shuffle
  cp3:a5(r44)<->a6(r49)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a1(r47)<-hr2@125
  regions=1, blocks=6, points=14
    allocnos=7 (big 0), copies=4, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r42 1r47 2r51 3r50 4r45 5r44 6r49
    modified regnos: 42 44 45 47 49 50 51
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@109284
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r42-a1r47 (freq=199):
        Result (freq=4998): a0r42(1999) a1r47(2999)
      Forming thread by copy 3:a5r44-a6r49 (freq=125):
        Result (freq=4000): a5r44(2000) a6r49(2000)
      Forming thread by copy 1:a1r47-a2r51 (freq=100):
        Result (freq=6598): a0r42(1999) a2r51(1600) a1r47(2999)
      Pushing a4(r45,l0)(cost 0)
      Pushing a3(r50,l0)(cost 0)
      Pushing a6(r49,l0)(cost 0)
      Pushing a5(r44,l0)(cost 0)
      Pushing a2(r51,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Popping a1(r47,l0)  -- assign reg 2
      Popping a0(r42,l0)  -- assign reg 2
      Popping a2(r51,l0)  -- assign reg 2
      Popping a5(r44,l0)  -- assign reg 8
      Popping a6(r49,l0)  -- assign reg 8
      Popping a3(r50,l0)  -- assign reg 8
      Popping a4(r45,l0)  -- assign reg 9
Disposition:
    0:r42  l0     2    5:r44  l0     8    4:r45  l0     9    1:r47  l0     2
    6:r49  l0     8    3:r50  l0     8    2:r51  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


decDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,5u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r44={1d,1u} r45={1d,1u} r47={1d,4u} r49={1d,1u} r50={1d,1u} r51={1d,1u} 
;;    total ref usage 51{19d,32u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 45 47 49 50
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 47 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 4 10 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI index (reg/v:SI 47 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 49)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC70") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 44 [ D.6121 ])
        (plus:SI (reg/v:SI 47 [ dr ])
            (reg/f:SI 49))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 49)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 45 [ D.6122 ])
        (zero_extend:SI (mem:QI (reg/f:SI 44 [ D.6121 ]) [0 *_5+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 44 [ D.6121 ])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 50)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:SI 45 [ D.6122 ])
                (reg:SI 50))
            (label_ref:SI 31)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 50)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6122 ])
            (int_list:REG_BR_PROB 1991 (nil))))
 -> 31)
;;  succ:       3 [80.1%]  (FALLTHRU)
;;              4 [19.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47

;; basic block 3, loop depth 0, count 0, freq 8009, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [80.1%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(1){ }u13(7){ }u14(16){ }u15(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 42 51
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 51)
        (plus:SI (reg/v:SI 47 [ dr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 47 [ dr ])
        (nil)))
(insn 18 17 32 3 (set (reg:SI 42 [ D.6119 ])
        (zero_extend:SI (subreg:QI (reg:SI 51) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 51)
        (nil)))
(jump_insn 32 18 33 3 (set (pc)
        (label_ref 19)) 78 {jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 33 32 31)
;; basic block 4, loop depth 0, count 0, freq 1991, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [19.9%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 42
(code_label 31 33 30 4 103 "" [1 uses])
(note 30 31 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 30 19 4 (set (reg:SI 42 [ D.6119 ])
        (reg/v:SI 47 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 47 [ dr ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(1){ }u24(7){ }u25(16){ }u26(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 19 5 20 5 102 "" [1 uses])
(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 20 26 5 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6119 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6119 ])
        (nil)))
(insn 26 25 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function assertDR (assertDR, funcdef_no=25, decl_uid=3113, cgraph_uid=25, symbol_order=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 49 uninteresting
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 46 uninteresting
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 52 uninteresting
Examining insn 9, def for 44
  all ok
Found def insn 15 for 47 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 16 (nil))

Pass 0 for finding pseudo/allocno costs

    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r49,l0) costs: ACC_REG:7674,7674 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40928,40928 MEM:10232,10232
  a2(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a6(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 5(l0): point = 5
   Insn 32(l0): point = 8
   Insn 6(l0): point = 10
   Insn 17(l0): point = 13
   Insn 16(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 9(l0): point = 23
   Insn 3(l0): point = 25
 a0(r42): [8..10] [3..5]
 a1(r49): [13..25] [6..7]
 a2(r52): [14..15]
 a3(r47): [14..17]
 a4(r46): [18..19]
 a5(r51): [20..21]
 a6(r44): [20..23]
Compressing live ranges: from 28 to 12 - 42%
Ranges after the compression:
 a0(r42): [4..5] [0..1]
 a1(r49): [6..11] [2..3]
 a2(r52): [6..7]
 a3(r47): [6..7]
 a4(r46): [8..9]
 a5(r51): [10..11]
 a6(r44): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r42,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r49,l0) conflicts: a2(r52,l0) a3(r47,l0) a4(r46,l0) a5(r51,l0) a6(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r52,l0) conflicts: a1(r49,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r47,l0) conflicts: a1(r49,l0) a2(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r46,l0) conflicts: a1(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r51,l0) conflicts: a1(r49,l0) a6(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r44,l0) conflicts: a1(r49,l0) a5(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r42)<->a1(r49)@558:move
  cp1:a4(r46)<->a5(r51)@125:shuffle
  cp2:a4(r46)<->a6(r44)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a1(r49)<-hr2@125
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=3, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r42 1r49 2r52 3r47 4r46 5r51 6r44
    modified regnos: 42 44 46 47 49 51 52
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@108956
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r42-a1r49 (freq=558):
        Result (freq=4557): a0r42(1999) a1r49(2558)
      Forming thread by copy 1:a4r46-a5r51 (freq=125):
        Result (freq=4000): a4r46(2000) a5r51(2000)
      Pushing a6(r44,l0)(cost 0)
      Pushing a3(r47,l0)(cost 0)
      Pushing a2(r52,l0)(cost 0)
      Pushing a5(r51,l0)(cost 0)
      Pushing a4(r46,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Popping a1(r49,l0)  -- assign reg 2
      Popping a0(r42,l0)  -- assign reg 2
      Popping a4(r46,l0)  -- assign reg 8
      Popping a5(r51,l0)  -- assign reg 8
      Popping a2(r52,l0)  -- assign reg 8
      Popping a3(r47,l0)  -- assign reg 9
      Popping a6(r44,l0)  -- assign reg 9
Disposition:
    0:r42  l0     2    6:r44  l0     9    4:r46  l0     8    3:r47  l0     9
    1:r49  l0     2    5:r51  l0     8    2:r52  l0     8
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


assertDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,5u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r44={1d,2u} r46={1d,1u} r47={1d,1u} r49={1d,2u} r51={1d,1u} r52={1d,1u} 
;;    total ref usage 50{19d,31u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 46 47 49 51 52
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 49 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 11 2 (set (reg:SI 44 [ D.6125 ])
        (plus:SI (reg/v:SI 49 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 1 {addsi3}
     (nil))
(debug_insn 11 9 12 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:SI index (reg:SI 44 [ D.6125 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC71") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 46 [ D.6127 ])
        (plus:SI (reg:SI 44 [ D.6125 ])
            (reg/f:SI 51))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6125 ])
            (nil))))
(insn 15 14 16 2 (set (reg:SI 47 [ D.6128 ])
        (zero_extend:SI (mem:QI (reg/f:SI 46 [ D.6127 ]) [0 *_7+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 46 [ D.6127 ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 52)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:SI 47 [ D.6128 ])
                (reg:SI 52))
            (label_ref:SI 31)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 52)
        (expr_list:REG_DEAD (reg:SI 47 [ D.6128 ])
            (int_list:REG_BR_PROB 5588 (nil))))
 -> 31)
;;  succ:       4 [55.9%] 
;;              3 [44.1%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49

;; basic block 3, loop depth 0, count 0, freq 4412, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [44.1%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 18 17 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 18 32 3 (set (reg:SI 42 [ D.6124 ])
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(jump_insn 32 6 33 3 (set (pc)
        (label_ref 19)) 78 {jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 33 32 31)
;; basic block 4, loop depth 0, count 0, freq 5588, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [55.9%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(1){ }u18(7){ }u19(16){ }u20(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 42
(code_label 31 33 30 4 106 "" [1 uses])
(note 30 31 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 30 19 4 (set (reg:SI 42 [ D.6124 ])
        (reg/v:SI 49 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(1){ }u23(7){ }u24(16){ }u25(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 19 5 20 5 105 "" [1 uses])
(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 20 26 5 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6124 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6124 ])
        (nil)))
(insn 26 25 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:371 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function validDR (validDR, funcdef_no=26, decl_uid=3116, cgraph_uid=26, symbol_order=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 28.
verify found no changes in insn with uid = 28.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 50 uninteresting
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 52 uninteresting
Reg 45 uninteresting
Reg 55 uninteresting
Reg 58: local to bb 2 def dominates all uses has unique first use
Reg 57 uninteresting
Reg 54 uninteresting
Examining insn 7, def for 43
  all ok
Ignoring reg 58 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 17 (nil))

Pass 0 for finding pseudo/allocno costs

    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r48,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a8(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 18(l0): point = 4
   Insn 28(l0): point = 6
   Insn 17(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 7(l0): point = 20
   Insn 3(l0): point = 22
 a0(r54): [3..4]
 a1(r58): [5..8]
 a2(r57): [5..6]
 a3(r56): [5..10]
 a4(r55): [11..12]
 a5(r48): [11..14]
 a6(r45): [15..16]
 a7(r52): [17..18]
 a8(r43): [17..20]
 a9(r50): [21..22]
Compressing live ranges: from 25 to 12 - 48%
Ranges after the compression:
 a0(r54): [0..1]
 a1(r58): [2..3]
 a2(r57): [2..3]
 a3(r56): [2..3]
 a4(r55): [4..5]
 a5(r48): [4..5]
 a6(r45): [6..7]
 a7(r52): [8..9]
 a8(r43): [8..9]
 a9(r50): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 80)
;; a0(r54,l0) conflicts:;; a1(r58,l0) conflicts: a2(r57,l0) a3(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r57,l0) conflicts: a1(r58,l0) a3(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r56,l0) conflicts: a1(r58,l0) a2(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r55,l0) conflicts: a5(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r48,l0) conflicts: a4(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r45,l0) conflicts:;; a7(r52,l0) conflicts: a8(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r43,l0) conflicts: a7(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r50,l0) conflicts:  cp0:a8(r43)<->a9(r50)@125:shuffle
  cp1:a6(r45)<->a7(r52)@125:shuffle
  cp2:a6(r45)<->a8(r43)@125:shuffle
  cp3:a3(r56)<->a4(r55)@125:shuffle
  cp4:a3(r56)<->a5(r48)@125:shuffle
  cp5:a0(r54)<->a3(r56)@125:shuffle
  cp6:a0(r54)<->a2(r57)@125:shuffle
  cp7:a0(r54)<->a1(r58)@125:shuffle
  pref0:a0(r54)<-hr2@2000
  pref1:a9(r50)<-hr2@125
  regions=1, blocks=3, points=12
    allocnos=10 (big 0), copies=8, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r54 1r58 2r57 3r56 4r55 5r48 6r45 7r52 8r43 9r50
    modified regnos: 43 45 48 50 52 54 55 56 57 58
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@152500
      Allocno a0r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a8r43-a9r50 (freq=125):
        Result (freq=4000): a8r43(2000) a9r50(2000)
      Forming thread by copy 1:a6r45-a7r52 (freq=125):
        Result (freq=4000): a6r45(2000) a7r52(2000)
      Forming thread by copy 3:a3r56-a4r55 (freq=125):
        Result (freq=4000): a3r56(2000) a4r55(2000)
      Forming thread by copy 5:a0r54-a3r56 (freq=125):
        Result (freq=6000): a0r54(2000) a3r56(2000) a4r55(2000)
      Pushing a5(r48,l0)(cost 0)
      Pushing a2(r57,l0)(cost 0)
      Pushing a1(r58,l0)(cost 0)
      Pushing a9(r50,l0)(cost 0)
      Pushing a8(r43,l0)(cost 0)
      Pushing a7(r52,l0)(cost 0)
      Pushing a6(r45,l0)(cost 0)
      Pushing a4(r55,l0)(cost 0)
      Pushing a3(r56,l0)(cost 0)
      Pushing a0(r54,l0)(cost 0)
      Popping a0(r54,l0)  -- assign reg 2
      Popping a3(r56,l0)  -- assign reg 8
      Popping a4(r55,l0)  -- assign reg 2
      Popping a6(r45,l0)  -- assign reg 2
      Popping a7(r52,l0)  -- assign reg 8
      Popping a8(r43,l0)  -- assign reg 2
      Popping a9(r50,l0)  -- assign reg 2
      Popping a1(r58,l0)  -- assign reg 2
      Popping a2(r57,l0)  -- assign reg 9
      Popping a5(r48,l0)  -- assign reg 8
Disposition:
    8:r43  l0     2    6:r45  l0     2    5:r48  l0     8    9:r50  l0     2
    7:r52  l0     8    0:r54  l0     2    4:r55  l0     2    3:r56  l0     8
    2:r57  l0     9    1:r58  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


validDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r43={1d,2u} r45={1d,1u} r48={1d,1u,1e} r50={1d,1u} r52={1d,1u} r54={1d,1u} r55={1d,1u} r56={1d,1u,1e} r57={1d,1u} r58={1d,1u} 
;;    total ref usage 44{21d,21u,2e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 43 45 48 50 52 54 55 56 57 58
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 50 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 9 2 (set (reg:SI 43 [ D.6130 ])
        (plus:SI (reg/v:SI 50 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 50 [ dr ])
        (nil)))
(debug_insn 9 7 10 2 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI index (reg:SI 43 [ D.6130 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC72") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 45 [ D.6132 ])
        (plus:SI (reg:SI 43 [ D.6130 ])
            (reg/f:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 52)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6130 ])
            (nil))))
(insn 13 12 14 2 (set (reg:SI 48 [ D.6135 ])
        (zero_extend:SI (mem:QI (reg/f:SI 45 [ D.6132 ]) [0 *_6+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 45 [ D.6132 ])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 55)
        (const_int -255 [0xffffffffffffff01])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -255 [0xffffffffffffff01])
        (nil)))
(insn 15 14 17 2 (set (reg:SI 56)
        (plus:SI (reg:SI 48 [ D.6135 ])
            (reg:SI 55))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_DEAD (reg:SI 48 [ D.6135 ])
            (expr_list:REG_EQUAL (plus:SI (reg:SI 48 [ D.6135 ])
                    (const_int -255 [0xffffffffffffff01]))
                (nil)))))
(insn 17 15 28 2 (set (reg:SI 58)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 28 17 18 2 (set (reg:SI 57)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 18 28 20 2 (set (reg:SI 54)
        (if_then_else:SI (ne (reg:SI 56)
                (const_int 0 [0]))
            (reg:SI 57)
            (reg:SI 58))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 58)
        (expr_list:REG_DEAD (reg:SI 57)
            (expr_list:REG_DEAD (reg:SI 56)
                (expr_list:REG_EQUAL (ne:SI (reg:SI 56)
                        (const_int 0 [0]))
                    (nil))))))
(note 20 18 25 2 NOTE_INSN_DELETED)
(insn 25 20 26 2 (set (reg/i:SI 2 a2)
        (reg:SI 54)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 54)
        (nil)))
(insn 26 25 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function lowerDR (lowerDR, funcdef_no=27, decl_uid=3120, cgraph_uid=27, symbol_order=27)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 11 (  1.4)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52 uninteresting
Reg 44 uninteresting
Reg 45: local to bb 3 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 54 uninteresting
Reg 55 uninteresting
Reg 42: def dominates all uses has unique first use
Reg 42 not local to one basic block
Found def insn 19 for 45 to be not moveable
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 0 for finding pseudo/allocno costs

    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r55,l1) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r54,l1) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r53,l1) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r52,l1) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l1) best AR_REGS, allocno AR_REGS
    a1 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r48,l1) best AR_REGS, allocno AR_REGS
    a0 (r48,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r45,l1) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r44,l1) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r42,l1) best AR_REGS, allocno AR_REGS

  a0(r48,l0) costs: ACC_REG:540,7200 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,38400 MEM:720,9600
  a1(r50,l0) costs: ACC_REG:270,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1440,48000 MEM:360,12000
  a2(r48,l1) costs: ACC_REG:6660,6660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:35520,35520 MEM:8880,8880
  a3(r50,l1) costs: ACC_REG:8730,8730 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:46560,46560 MEM:11640,11640
  a4(r42,l1) costs: ACC_REG:5730,5730 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30560,30560 MEM:7640,7640
  a5(r55,l1) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r54,l1) costs: ACC_REG:3930,3930 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20960,20960 MEM:5240,5240
  a7(r53,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a8(r45,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a9(r44,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a10(r52,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:0,0

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 46(l0): point = 5
   Insn 5(l0): point = 7
   Insn 3(l0): point = 9
   Insn 21(l1): point = 12
   Insn 20(l1): point = 14
   Insn 19(l1): point = 16
   Insn 18(l1): point = 18
   Insn 17(l1): point = 20
   Insn 37(l1): point = 23
   Insn 34(l1): point = 25
   Insn 33(l1): point = 27
   Insn 28(l1): point = 30
   Insn 24(l1): point = 33
   Insn 23(l1): point = 35
 a0(r48): [3..9]
 a1(r50): [5..7]
 a2(r48): [36..37] [12..33]
 a3(r50): [24..30]
 a4(r42): [31..37] [12..25]
 a5(r55): [26..27]
 a6(r54): [34..35]
 a7(r53): [13..14]
 a8(r45): [13..16]
 a9(r44): [17..18]
 a10(r52): [19..20]
 Rebuilding regno allocno list for 55
 Rebuilding regno allocno list for 54
 Rebuilding regno allocno list for 53
 Rebuilding regno allocno list for 52
      Moving ranges of a3r50 to a1r50:  [24..30]
      Moving ranges of a2r48 to a0r48:  [36..37] [12..33]
 Rebuilding regno allocno list for 45
 Rebuilding regno allocno list for 44
 Rebuilding regno allocno list for 42
Compressing live ranges: from 38 to 18 - 47%
Ranges after the compression:
 a0(r48): [16..17] [0..13]
 a1(r50): [8..11] [0..1]
 a4(r42): [12..17] [2..9]
 a5(r55): [10..11]
 a6(r54): [14..15]
 a7(r53): [2..3]
 a8(r45): [2..3]
 a9(r44): [4..5]
 a10(r52): [6..7]
+++Allocating 72 bytes for conflict table (uncompressed size 88)
;; a0(r48,l0) conflicts: a1(r50,l0) a7(r53,l0) a8(r45,l0) a4(r42,l0) a9(r44,l0) a10(r52,l0) a5(r55,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a1(r50,l0) conflicts: a0(r48,l0) a4(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r42,l0) conflicts: a1(r50,l0) a0(r48,l0) a7(r53,l0) a8(r45,l0) a9(r44,l0) a10(r52,l0) a6(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r55,l0) conflicts: a1(r50,l0) a0(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r54,l0) conflicts: a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r53,l0) conflicts: a0(r48,l0) a8(r45,l0) a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r45,l0) conflicts: a0(r48,l0) a7(r53,l0) a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r44,l0) conflicts: a0(r48,l0) a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r52,l0) conflicts: a0(r48,l0) a4(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r42)<->a5(r55)@125:shuffle
  cp1:a0(r48)<->a6(r54)@162:shuffle
  cp2:a9(r44)<->a10(r52)@113:shuffle
  pref0:a0(r48)<-hr2@191
  pref1:a1(r50)<-hr3@11
  regions=2, blocks=8, points=18
    allocnos=11 (big 0), copies=3, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r48 1r50 4r42 5r55 6r54 7r53 8r45 9r44 10r52
    modified regnos: 42 44 45 48 50 52 53 54 55
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@109484
          2:( 2 4-15)@19964
      Allocno a0r48 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a1r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a0r48-a6r54 (freq=162):
        Result (freq=3710): a0r48(2400) a6r54(1310)
      Forming thread by copy 0:a4r42-a5r55 (freq=125):
        Result (freq=3910): a4r42(1910) a5r55(2000)
      Forming thread by copy 2:a9r44-a10r52 (freq=113):
        Result (freq=3640): a9r44(1820) a10r52(1820)
      Pushing a8(r45,l0)(cost 0)
      Pushing a7(r53,l0)(cost 0)
      Pushing a1(r50,l0)(cost 0)
      Pushing a10(r52,l0)(cost 0)
      Pushing a9(r44,l0)(cost 0)
      Pushing a6(r54,l0)(cost 0)
      Pushing a0(r48,l0)(cost 0)
      Pushing a4(r42,l0)(cost 0)
      Pushing a5(r55,l0)(cost 0)
      Popping a5(r55,l0)  -- assign reg 8
      Popping a4(r42,l0)  -- assign reg 8
      Popping a0(r48,l0)  -- assign reg 2
      Popping a6(r54,l0)  -- assign reg 2
      Popping a9(r44,l0)  -- assign reg 9
      Popping a10(r52,l0)  -- assign reg 9
      Popping a1(r50,l0)  -- assign reg 3
      Popping a7(r53,l0)  -- assign reg 3
      Popping a8(r45,l0)  -- assign reg 9
Disposition:
    4:r42  l0     8    9:r44  l0     9    8:r45  l0     9    0:r48  l0     2
    1:r50  l0     3   10:r52  l0     9    7:r53  l0     3    6:r54  l0     2
    5:r55  l0     8
New iteration of spill/restore move
+++Costs: overall -404, reg -404, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


lowerDR

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,7u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,7u} r16={1d,7u} r17={1d,6u} r42={1d,2u} r44={1d,1u} r45={1d,1u} r48={2d,6u} r50={2d,3u} r52={1d,1u} r53={1d,1u} r54={1d,1u} r55={1d,1u} 
;;    total ref usage 70{22d,48u,0e} in 23{23 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48 50
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 48 [ dr ])
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 50 [ n ])
        (zero_extend:SI (reg:QI 3 a3 [ n ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ n ])
        (nil)))
(note 6 5 46 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 46 6 47 2 (set (pc)
        (label_ref 29)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 78 {jump}
     (nil)
 -> 29)
;;  succ:       6 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50

(barrier 47 46 36)
;; basic block 3, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [91.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(1){ }u9(7){ }u10(16){ }u11(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 44 45 52 53
(code_label 36 47 12 3 111 "" [1 uses])
(note 12 36 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 13 12 15 3 (var_location:QI dr (subreg:QI (reg/v:SI 48 [ dr ]) 0)) -1
     (nil))
(debug_insn 15 13 16 3 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 16 15 17 3 (var_location:SI index (reg/v:SI 48 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC73") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 18 17 19 3 (set (reg/f:SI 44 [ D.6138 ])
        (plus:SI (reg/v:SI 48 [ dr ])
            (reg/f:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 52)
        (nil)))
(insn 19 18 20 3 (set (reg:SI 45 [ D.6139 ])
        (zero_extend:SI (mem:QI (reg/f:SI 44 [ D.6138 ]) [0 *_9+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 44 [ D.6138 ])
        (nil)))
(insn 20 19 21 3 (set (reg:SI 53)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (eq (reg:SI 45 [ D.6139 ])
                (reg:SI 53))
            (label_ref 25)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 53)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6139 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 25)
;;  succ:       4 [72.0%]  (FALLTHRU)
;;              5 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48

;; basic block 4, loop depth 1, count 0, freq 6552, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [72.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(1){ }u20(7){ }u21(16){ }u22(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 48 54
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 54)
        (plus:SI (reg/v:SI 48 [ dr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 48 [ dr ])
        (nil)))
(insn 24 23 25 4 (set (reg/v:SI 48 [ dr ])
        (zero_extend:SI (subreg:QI (reg:SI 54) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 54)
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48

;; basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [28.0%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(1){ }u26(7){ }u27(16){ }u28(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 50
(code_label 25 24 26 5 110 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 5 (var_location:QI dr (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
(insn 28 27 29 5 (set (reg/v:SI 50 [ n ])
        (reg/v:SI 42 [ n ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ n ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50

;; basic block 6, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(1){ }u31(7){ }u32(16){ }u33(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	 42 55
(code_label 29 28 30 6 109 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 6 (var_location:QI n (subreg:QI (reg/v:SI 50 [ n ]) 0)) -1
     (nil))
(debug_insn 32 31 33 6 (var_location:QI dr (subreg:QI (reg/v:SI 48 [ dr ]) 0)) -1
     (nil))
(insn 33 32 34 6 (set (reg:SI 55)
        (plus:SI (reg/v:SI 50 [ n ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 1 {addsi3}
     (nil))
(insn 34 33 35 6 (set (reg/v:SI 42 [ n ])
        (zero_extend:SI (subreg:QI (reg:SI 55) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 55)
        (nil)))
(debug_insn 35 34 37 6 (var_location:QI n (subreg:QI (reg/v:SI 42 [ n ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
(jump_insn 37 35 38 6 (set (pc)
        (if_then_else (ne (reg/v:SI 50 [ n ])
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 50 [ n ])
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 36)
;;  succ:       3 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 48

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(1){ }u41(7){ }u42(16){ }u43(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 2 [a2]
(note 38 37 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 38 44 7 (set (reg/i:SI 2 a2)
        (reg/v:SI 48 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 48 [ dr ])
        (nil)))
(insn 44 43 0 7 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function os_rlsbf2 (os_rlsbf2, funcdef_no=28, decl_uid=2750, cgraph_uid=28, symbol_order=29)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 51 uninteresting
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 44 uninteresting
Reg 46 uninteresting
Found def insn 6 for 42 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r51,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r51,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r46): [3..4]
 a1(r42): [3..8]
 a2(r44): [5..6]
 a3(r51): [7..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r46): [0..1]
 a1(r42): [0..5]
 a2(r44): [2..3]
 a3(r51): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r46,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r42,l0) conflicts: a0(r46,l0) a2(r44,l0) a3(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r44,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r51,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r46)<->a2(r44)@125:shuffle
  pref0:a3(r51)<-hr2@2000
  pref1:a0(r46)<-hr2@125
  pref2:a1(r42)<-hr2@125
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r46 1r42 2r44 3r51
    modified regnos: 42 44 46 51
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@81000
      Allocno a0r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r46-a2r44 (freq=125):
        Result (freq=4000): a0r46(2000) a2r44(2000)
      Pushing a1(r42,l0)(cost 0)
      Pushing a3(r51,l0)(cost 0)
      Pushing a2(r44,l0)(cost 0)
      Pushing a0(r46,l0)(cost 0)
      Popping a0(r46,l0)  -- assign reg 8
      Popping a2(r44,l0)  -- assign reg 8
      Popping a3(r51,l0)  -- assign reg 2
      Popping a1(r42,l0)  -- assign reg 9
Assigning 2 to a0r46
Disposition:
    1:r42  l0     9    2:r44  l0     8    0:r46  l0     2    3:r51  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_rlsbf2

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r44={1d,1u} r46={1d,1u} r51={1d,2u} 
;;    total ref usage 30{15d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 42 44 46 51
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:SI 51 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:61 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 42 [ D.6143 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 51 [ buf ]) [0 *buf_2(D)+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:62 34 {zero_extendqisi2}
     (nil))
(insn 7 6 8 2 (set (reg:SI 44 [ D.6143 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 51 [ buf ])
                    (const_int 1 [0x1])) [0 MEM[(const u1_t *)buf_2(D) + 1B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:62 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v/f:SI 51 [ buf ])
        (nil)))
(insn 8 7 11 2 (set (reg:SI 46 [ D.6145 ])
        (ashift:SI (reg:SI 44 [ D.6143 ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:62 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6143 ])
        (nil)))
(note 11 8 12 2 NOTE_INSN_DELETED)
(note 12 11 17 2 NOTE_INSN_DELETED)
(insn 17 12 18 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 42 [ D.6143 ])
            (reg:SI 46 [ D.6145 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:63 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6145 ])
        (expr_list:REG_DEAD (reg:SI 42 [ D.6143 ])
            (nil))))
(insn 18 17 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:63 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function os_rlsbf4 (os_rlsbf4, funcdef_no=29, decl_uid=2740, cgraph_uid=29, symbol_order=30)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 57 uninteresting
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 44 uninteresting
Reg 46 uninteresting
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 48 uninteresting
Reg 50 uninteresting
Reg 51: local to bb 2 def dominates all uses has unique first use
Reg 52 uninteresting
Reg 54 uninteresting
Found def insn 6 for 42 to be not moveable
Examining insn 11, def for 47
  all ok
Examining insn 15, def for 51
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r57,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r57,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a4(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 18(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 8(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r54): [3..4]
 a1(r51): [3..8]
 a2(r52): [5..6]
 a3(r57): [7..22]
 a4(r50): [9..10]
 a5(r47): [9..14]
 a6(r48): [11..12]
 a7(r46): [15..16]
 a8(r42): [15..20]
 a9(r44): [17..18]
Compressing live ranges: from 25 to 14 - 56%
Ranges after the compression:
 a0(r54): [0..1]
 a1(r51): [0..5]
 a2(r52): [2..3]
 a3(r57): [4..13]
 a4(r50): [6..7]
 a5(r47): [6..9]
 a6(r48): [8..9]
 a7(r46): [10..11]
 a8(r42): [10..13]
 a9(r44): [12..13]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r54,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r51,l0) conflicts: a0(r54,l0) a2(r52,l0) a3(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r52,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r57,l0) conflicts: a1(r51,l0) a4(r50,l0) a5(r47,l0) a6(r48,l0) a7(r46,l0) a8(r42,l0) a9(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r50,l0) conflicts: a3(r57,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r47,l0) conflicts: a3(r57,l0) a4(r50,l0) a6(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r48,l0) conflicts: a3(r57,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r46,l0) conflicts: a3(r57,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r42,l0) conflicts: a3(r57,l0) a7(r46,l0) a9(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r44,l0) conflicts: a3(r57,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r46)<->a9(r44)@125:shuffle
  cp1:a5(r47)<->a7(r46)@125:shuffle
  cp2:a5(r47)<->a8(r42)@125:shuffle
  cp3:a4(r50)<->a6(r48)@125:shuffle
  cp4:a1(r51)<->a4(r50)@125:shuffle
  cp5:a1(r51)<->a5(r47)@125:shuffle
  cp6:a0(r54)<->a2(r52)@125:shuffle
  pref0:a3(r57)<-hr2@2000
  pref1:a0(r54)<-hr2@125
  pref2:a1(r51)<-hr2@125
  regions=1, blocks=3, points=14
    allocnos=10 (big 0), copies=7, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r54 1r51 2r52 3r57 4r50 5r47 6r48 7r46 8r42 9r44
    modified regnos: 42 44 46 47 48 50 51 52 54 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@193000
      Allocno a0r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a7r46-a9r44 (freq=125):
        Result (freq=4000): a7r46(2000) a9r44(2000)
      Forming thread by copy 1:a5r47-a7r46 (freq=125):
        Result (freq=6000): a5r47(2000) a7r46(2000) a9r44(2000)
      Forming thread by copy 3:a4r50-a6r48 (freq=125):
        Result (freq=4000): a4r50(2000) a6r48(2000)
      Forming thread by copy 4:a1r51-a4r50 (freq=125):
        Result (freq=6000): a1r51(2000) a4r50(2000) a6r48(2000)
      Forming thread by copy 6:a0r54-a2r52 (freq=125):
        Result (freq=4000): a0r54(2000) a2r52(2000)
      Pushing a8(r42,l0)(cost 0)
      Pushing a2(r52,l0)(cost 0)
      Pushing a0(r54,l0)(cost 0)
      Pushing a3(r57,l0)(cost 0)
      Pushing a9(r44,l0)(cost 0)
      Pushing a7(r46,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Pushing a6(r48,l0)(cost 0)
      Pushing a4(r50,l0)(cost 0)
      Pushing a1(r51,l0)(cost 0)
      Popping a1(r51,l0)  -- assign reg 8
      Popping a4(r50,l0)  -- assign reg 8
      Popping a6(r48,l0)  -- assign reg 8
      Popping a5(r47,l0)  -- assign reg 9
      Popping a7(r46,l0)  -- assign reg 8
      Popping a9(r44,l0)  -- assign reg 8
      Popping a3(r57,l0)  -- assign reg 2
      Popping a0(r54,l0)  -- assign reg 2
      Popping a2(r52,l0)  -- assign reg 2
      Popping a8(r42,l0)  -- assign reg 9
Disposition:
    8:r42  l0     9    9:r44  l0     8    7:r46  l0     8    5:r47  l0     9
    6:r48  l0     8    4:r50  l0     8    1:r51  l0     8    2:r52  l0     2
    0:r54  l0     2    3:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_rlsbf4

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r44={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} r50={1d,1u} r51={1d,1u} r52={1d,1u} r54={1d,1u} r57={1d,4u} 
;;    total ref usage 44{21d,23u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 42 44 46 47 48 50 51 52 54 57
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:SI 57 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:67 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 42 [ D.6147 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 57 [ buf ]) [0 *buf_2(D)+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 34 {zero_extendqisi2}
     (nil))
(insn 8 6 10 2 (set (reg:SI 44 [ D.6147 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 1 [0x1])) [0 MEM[(const u1_t *)buf_2(D) + 1B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 34 {zero_extendqisi2}
     (nil))
(insn 10 8 11 2 (set (reg:SI 46 [ D.6148 ])
        (ashift:SI (reg:SI 44 [ D.6147 ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6147 ])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 47 [ D.6148 ])
        (ior:SI (reg:SI 42 [ D.6147 ])
            (reg:SI 46 [ D.6148 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6148 ])
        (expr_list:REG_DEAD (reg:SI 42 [ D.6147 ])
            (nil))))
(insn 12 11 14 2 (set (reg:SI 48 [ D.6147 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 2 [0x2])) [0 MEM[(const u1_t *)buf_2(D) + 2B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 34 {zero_extendqisi2}
     (nil))
(insn 14 12 15 2 (set (reg:SI 50 [ D.6148 ])
        (ashift:SI (reg:SI 48 [ D.6147 ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6147 ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 51 [ D.6148 ])
        (ior:SI (reg:SI 47 [ D.6148 ])
            (reg:SI 50 [ D.6148 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6148 ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6148 ])
            (nil))))
(insn 16 15 18 2 (set (reg:SI 52 [ D.6147 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 3 [0x3])) [0 MEM[(const u1_t *)buf_2(D) + 3B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v/f:SI 57 [ buf ])
        (nil)))
(insn 18 16 19 2 (set (reg:SI 54 [ D.6148 ])
        (ashift:SI (reg:SI 52 [ D.6147 ])
            (const_int 24 [0x18]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:68 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6147 ])
        (nil)))
(note 19 18 24 2 NOTE_INSN_DELETED)
(insn 24 19 25 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 51 [ D.6148 ])
            (reg:SI 54 [ D.6148 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:69 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 54 [ D.6148 ])
        (expr_list:REG_DEAD (reg:SI 51 [ D.6148 ])
            (nil))))
(insn 25 24 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:69 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function convFreq (convFreq, funcdef_no=60, decl_uid=3649, cgraph_uid=60, symbol_order=68)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 45 uninteresting
Reg 52 uninteresting
Reg 55 uninteresting
Reg 56 uninteresting
Reg 46: local to bb 2 def dominates all uses has unique first use
Reg 57 uninteresting
Examining insn 22, def for 46
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 56: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 23 (nil))

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r52,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:7830,7830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:41760,41760 MEM:10440,10440
  a1(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a3(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a4(r55,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a5(r54,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a6(r52,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a7(r45,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 34(l0): point = 0
   Insn 33(l0): point = 2
   Insn 4(l0): point = 5
   Insn 24(l0): point = 8
   Insn 23(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 14(l0): point = 24
   Insn 11(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
 a0(r42): [8..16] [3..5]
 a1(r46): [9..12]
 a2(r57): [9..10]
 a3(r56): [13..14]
 a4(r55): [13..20]
 a5(r54): [21..22] [18..18]
 a6(r52): [23..24]
 a7(r45): [25..26]
Compressing live ranges: from 33 to 14 - 42%
Ranges after the compression:
 a0(r42): [0..5]
 a1(r46): [2..3]
 a2(r57): [2..3]
 a3(r56): [4..5]
 a4(r55): [4..7]
 a5(r54): [8..9] [6..6]
 a6(r52): [10..11]
 a7(r45): [12..13]
+++Allocating 48 bytes for conflict table (uncompressed size 64)
;; a0(r42,l0) conflicts: a1(r46,l0) a2(r57,l0) a3(r56,l0) a4(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r46,l0) conflicts: a0(r42,l0) a2(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r57,l0) conflicts: a0(r42,l0) a1(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r56,l0) conflicts: a0(r42,l0) a4(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r55,l0) conflicts: a0(r42,l0) a3(r56,l0) a5(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r54,l0) conflicts: a4(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r52,l0) conflicts:;; a7(r45,l0) conflicts:  cp0:a6(r52)<->a7(r45)@250:shuffle
  cp1:a5(r54)<->a6(r52)@250:shuffle
  cp2:a1(r46)<->a3(r56)@125:shuffle
  cp3:a1(r46)<->a4(r55)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a7(r45)<-hr10@125
  regions=1, blocks=5, points=14
    allocnos=8 (big 0), copies=4, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r42 1r46 2r57 3r56 4r55 5r54 6r52 7r45
    modified regnos: 42 45 46 52 54 55 56 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@149380
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a6r52-a7r45 (freq=250):
        Result (freq=6000): a6r52(3000) a7r45(3000)
      Forming thread by copy 1:a5r54-a6r52 (freq=250):
        Result (freq=9000): a5r54(3000) a6r52(3000) a7r45(3000)
      Forming thread by copy 2:a1r46-a3r56 (freq=125):
        Result (freq=4000): a1r46(2000) a3r56(2000)
      Pushing a2(r57,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a4(r55,l0)(cost 0)
      Pushing a3(r56,l0)(cost 0)
      Pushing a1(r46,l0)(cost 0)
      Pushing a7(r45,l0)(cost 0)
      Pushing a6(r52,l0)(cost 0)
      Pushing a5(r54,l0)(cost 0)
      Popping a5(r54,l0)  -- assign reg 10
      Popping a6(r52,l0)  -- assign reg 10
      Popping a7(r45,l0)  -- assign reg 10
      Popping a1(r46,l0)  -- assign reg 8
      Popping a3(r56,l0)  -- assign reg 8
      Popping a4(r55,l0)  -- assign reg 9
      Popping a0(r42,l0)  -- assign reg 2
      Popping a2(r57,l0)  -- assign reg 9
Disposition:
    0:r42  l0     2    7:r45  l0    10    1:r46  l0     8    6:r52  l0    10
    5:r54  l0    10    4:r55  l0     9    3:r56  l0     8    2:r57  l0     9
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


convFreq

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10]
;;  ref usage 	r0={2d} r1={1d,5u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={1d} r9={1d} r10={2d,2u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d,3u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={2d,2u} r45={1d,2u} r46={1d,1u} r52={1d,2u} r54={2d,1u} r55={1d,4u} r56={1d,1u} r57={1d,1u} 
;;    total ref usage 84{49d,35u,0e} in 17{16 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 45 46 52 54 55 56 57
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 3 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (plus:SI (reg:SI 2 a2 [ ptr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ ptr ])
        (nil)))
(call_insn/i 9 8 10 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 13 2 (set (reg:SI 45 [ D.6151 ])
        (lshiftrt:SI (reg:SI 10 a10)
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 53 {lshrsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 13 11 14 2 NOTE_INSN_DELETED)
(insn 14 13 15 2 (set (reg:SI 52)
        (plus:SI (mult:SI (reg:SI 45 [ D.6151 ])
                (const_int 4 [0x4]))
            (reg:SI 45 [ D.6151 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6151 ])
        (nil)))
(note 15 14 16 2 NOTE_INSN_DELETED)
(insn 16 15 17 2 (set (reg:SI 54)
        (plus:SI (mult:SI (reg:SI 52)
                (const_int 4 [0x4]))
            (reg:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 52)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 55)
        (ashift:SI (reg:SI 54)
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 54)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 54)
        (reg:SI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 44 {movsi_internal}
     (expr_list:REG_UNUSED (reg:SI 54)
        (nil)))
(insn 19 18 20 2 (set (reg/v:SI 42 [ freq ])
        (reg:SI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 44 {movsi_internal}
     (nil))
(debug_insn 20 19 21 2 (var_location:SI freq (reg:SI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:609 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 56)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC74") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:610 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -863000000 [0xffffffffcc8faa40])
        (nil)))
(insn 22 21 23 2 (set (reg:SI 46 [ D.6151 ])
        (plus:SI (reg:SI 55)
            (reg:SI 56))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:610 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 56)
        (expr_list:REG_DEAD (reg:SI 55)
            (nil))))
(insn 23 22 24 2 (set (reg:SI 57)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC75") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:610 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 7000000 [0x6acfc0])
        (nil)))
(jump_insn 24 23 38 2 (set (pc)
        (if_then_else (geu (reg:SI 57)
                (reg:SI 46 [ D.6151 ]))
            (label_ref:SI 26)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:610 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 57)
        (expr_list:REG_DEAD (reg:SI 46 [ D.6151 ])
            (int_list:REG_BR_PROB 3900 (nil))))
 -> 26)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              4 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 38 24 4 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 4 38 26 3 (set (reg/v:SI 42 [ freq ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:611 44 {movsi_internal}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              2 [39.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(1){ }u31(7){ }u32(16){ }u33(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 26 4 27 4 115 "" [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 28 27 33 4 (var_location:SI freq (reg/v:SI 42 [ freq ])) -1
     (nil))
(insn 33 28 34 4 (set (reg/i:SI 2 a2)
        (reg/v:SI 42 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:613 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ freq ])
        (nil)))
(insn 34 33 0 4 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:613 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function os_rmsbf4 (os_rmsbf4, funcdef_no=30, decl_uid=2745, cgraph_uid=30, symbol_order=31)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 57 uninteresting
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 44 uninteresting
Reg 46 uninteresting
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 48 uninteresting
Reg 50 uninteresting
Reg 51: local to bb 2 def dominates all uses has unique first use
Reg 52 uninteresting
Reg 54 uninteresting
Found def insn 6 for 42 to be not moveable
Examining insn 11, def for 47
  all ok
Examining insn 15, def for 51
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r57,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r57,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a4(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 18(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 8(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r54): [3..4]
 a1(r51): [3..8]
 a2(r52): [5..6]
 a3(r57): [7..22]
 a4(r50): [9..10]
 a5(r47): [9..14]
 a6(r48): [11..12]
 a7(r46): [15..16]
 a8(r42): [15..20]
 a9(r44): [17..18]
Compressing live ranges: from 25 to 14 - 56%
Ranges after the compression:
 a0(r54): [0..1]
 a1(r51): [0..5]
 a2(r52): [2..3]
 a3(r57): [4..13]
 a4(r50): [6..7]
 a5(r47): [6..9]
 a6(r48): [8..9]
 a7(r46): [10..11]
 a8(r42): [10..13]
 a9(r44): [12..13]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r54,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r51,l0) conflicts: a0(r54,l0) a2(r52,l0) a3(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r52,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r57,l0) conflicts: a1(r51,l0) a4(r50,l0) a5(r47,l0) a6(r48,l0) a7(r46,l0) a8(r42,l0) a9(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r50,l0) conflicts: a3(r57,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r47,l0) conflicts: a3(r57,l0) a4(r50,l0) a6(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r48,l0) conflicts: a3(r57,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r46,l0) conflicts: a3(r57,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r42,l0) conflicts: a3(r57,l0) a7(r46,l0) a9(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r44,l0) conflicts: a3(r57,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r46)<->a9(r44)@125:shuffle
  cp1:a5(r47)<->a7(r46)@125:shuffle
  cp2:a5(r47)<->a8(r42)@125:shuffle
  cp3:a4(r50)<->a6(r48)@125:shuffle
  cp4:a1(r51)<->a4(r50)@125:shuffle
  cp5:a1(r51)<->a5(r47)@125:shuffle
  cp6:a0(r54)<->a2(r52)@125:shuffle
  pref0:a3(r57)<-hr2@2000
  pref1:a0(r54)<-hr2@125
  pref2:a1(r51)<-hr2@125
  regions=1, blocks=3, points=14
    allocnos=10 (big 0), copies=7, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r54 1r51 2r52 3r57 4r50 5r47 6r48 7r46 8r42 9r44
    modified regnos: 42 44 46 47 48 50 51 52 54 57
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@193000
      Allocno a0r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a7r46-a9r44 (freq=125):
        Result (freq=4000): a7r46(2000) a9r44(2000)
      Forming thread by copy 1:a5r47-a7r46 (freq=125):
        Result (freq=6000): a5r47(2000) a7r46(2000) a9r44(2000)
      Forming thread by copy 3:a4r50-a6r48 (freq=125):
        Result (freq=4000): a4r50(2000) a6r48(2000)
      Forming thread by copy 4:a1r51-a4r50 (freq=125):
        Result (freq=6000): a1r51(2000) a4r50(2000) a6r48(2000)
      Forming thread by copy 6:a0r54-a2r52 (freq=125):
        Result (freq=4000): a0r54(2000) a2r52(2000)
      Pushing a8(r42,l0)(cost 0)
      Pushing a2(r52,l0)(cost 0)
      Pushing a0(r54,l0)(cost 0)
      Pushing a3(r57,l0)(cost 0)
      Pushing a9(r44,l0)(cost 0)
      Pushing a7(r46,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Pushing a6(r48,l0)(cost 0)
      Pushing a4(r50,l0)(cost 0)
      Pushing a1(r51,l0)(cost 0)
      Popping a1(r51,l0)  -- assign reg 8
      Popping a4(r50,l0)  -- assign reg 8
      Popping a6(r48,l0)  -- assign reg 8
      Popping a5(r47,l0)  -- assign reg 9
      Popping a7(r46,l0)  -- assign reg 8
      Popping a9(r44,l0)  -- assign reg 8
      Popping a3(r57,l0)  -- assign reg 2
      Popping a0(r54,l0)  -- assign reg 2
      Popping a2(r52,l0)  -- assign reg 2
      Popping a8(r42,l0)  -- assign reg 9
Disposition:
    8:r42  l0     9    9:r44  l0     8    7:r46  l0     8    5:r47  l0     9
    6:r48  l0     8    4:r50  l0     8    1:r51  l0     8    2:r52  l0     2
    0:r54  l0     2    3:r57  l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_rmsbf4

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r44={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} r50={1d,1u} r51={1d,1u} r52={1d,1u} r54={1d,1u} r57={1d,4u} 
;;    total ref usage 44{21d,23u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 42 44 46 47 48 50 51 52 54 57
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:SI 57 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:74 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 42 [ D.6152 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 3 [0x3])) [0 MEM[(const u1_t *)buf_1(D) + 3B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 34 {zero_extendqisi2}
     (nil))
(insn 8 6 10 2 (set (reg:SI 44 [ D.6152 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 2 [0x2])) [0 MEM[(const u1_t *)buf_1(D) + 2B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 34 {zero_extendqisi2}
     (nil))
(insn 10 8 11 2 (set (reg:SI 46 [ D.6153 ])
        (ashift:SI (reg:SI 44 [ D.6152 ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6152 ])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 47 [ D.6153 ])
        (ior:SI (reg:SI 42 [ D.6152 ])
            (reg:SI 46 [ D.6153 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6153 ])
        (expr_list:REG_DEAD (reg:SI 42 [ D.6152 ])
            (nil))))
(insn 12 11 14 2 (set (reg:SI 48 [ D.6152 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 57 [ buf ])
                    (const_int 1 [0x1])) [0 MEM[(const u1_t *)buf_1(D) + 1B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 34 {zero_extendqisi2}
     (nil))
(insn 14 12 15 2 (set (reg:SI 50 [ D.6153 ])
        (ashift:SI (reg:SI 48 [ D.6152 ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6152 ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 51 [ D.6153 ])
        (ior:SI (reg:SI 47 [ D.6153 ])
            (reg:SI 50 [ D.6153 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6153 ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6153 ])
            (nil))))
(insn 16 15 18 2 (set (reg:SI 52 [ D.6152 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 57 [ buf ]) [0 *buf_1(D)+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v/f:SI 57 [ buf ])
        (nil)))
(insn 18 16 19 2 (set (reg:SI 54 [ D.6153 ])
        (ashift:SI (reg:SI 52 [ D.6152 ])
            (const_int 24 [0x18]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:75 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6152 ])
        (nil)))
(note 19 18 24 2 NOTE_INSN_DELETED)
(insn 24 19 25 2 (set (reg/i:SI 2 a2)
        (ior:SI (reg:SI 51 [ D.6153 ])
            (reg:SI 54 [ D.6153 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:76 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 54 [ D.6153 ])
        (expr_list:REG_DEAD (reg:SI 51 [ D.6153 ])
            (nil))))
(insn 25 24 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:76 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_verifyMic0 (aes_verifyMic0, funcdef_no=40, decl_uid=3446, cgraph_uid=40, symbol_order=41)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 34.
verify found no changes in insn with uid = 34.
deleting insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 51: local to bb 2 def dominates all uses has unique first use
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 59: local to bb 2 def dominates all uses has unique first use
Reg 58 uninteresting
Reg 56 uninteresting
Found def insn 15 for 43 to be not moveable
Found def insn 2 for 50 to be not moveable
Found def insn 3 for 51 to be not moveable
Ignoring reg 59 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 58: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 59: (insn_list:REG_DEP_TRUE 22 (nil))

Pass 0 for finding pseudo/allocno costs

    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r59,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r56,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r50,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r59,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r51,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a6(r50,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 23(l0): point = 4
   Insn 34(l0): point = 6
   Insn 22(l0): point = 8
   Insn 20(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r56): [3..4]
 a1(r59): [5..8]
 a2(r58): [5..6]
 a3(r57): [5..10]
 a4(r43): [11..16]
 a5(r51): [15..30]
 a6(r50): [15..32]
Compressing live ranges: from 35 to 6 - 17%
Ranges after the compression:
 a0(r56): [0..1]
 a1(r59): [2..3]
 a2(r58): [2..3]
 a3(r57): [2..3]
 a4(r43): [4..5]
 a5(r51): [4..5]
 a6(r50): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r56,l0) conflicts:;; a1(r59,l0) conflicts: a2(r58,l0) a3(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r58,l0) conflicts: a1(r59,l0) a3(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r57,l0) conflicts: a1(r59,l0) a2(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r43,l0) conflicts: a5(r51,l0) a6(r50,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r51,l0) conflicts: a4(r43,l0) a6(r50,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r50,l0) conflicts: a4(r43,l0) a5(r51,l0)
;;     total conflict hard regs: 3 8-15
;;     conflict hard regs: 3 8-15

  cp0:a3(r57)<->a4(r43)@125:shuffle
  cp1:a0(r56)<->a3(r57)@125:shuffle
  cp2:a0(r56)<->a2(r58)@125:shuffle
  cp3:a0(r56)<->a1(r59)@125:shuffle
  pref0:a6(r50)<-hr2@2000
  pref1:a5(r51)<-hr3@2000
  pref2:a6(r50)<-hr11@1000
  pref3:a4(r43)<-hr10@2000
  pref4:a0(r56)<-hr2@2000
  pref5:a5(r51)<-hr10@125
  pref6:a6(r50)<-hr10@125
  pref7:a3(r57)<-hr10@125
  regions=1, blocks=3, points=6
    allocnos=7 (big 0), copies=4, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r56 1r59 2r58 3r57 4r43 5r51 6r50
    modified regnos: 43 50 51 56 57 58 59
    border:
    Pressure: AR_REGS=5
 Removing pref3:hr10@2000
 Removing pref5:hr10@125
 Removing pref6:hr10@125
 Removing pref2:hr11@1000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@72500
          2:( 2-7)@56000
            3:( 2 4-7)@32000
      Allocno a0r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r50 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Forming thread by copy 0:a3r57-a4r43 (freq=125):
        Result (freq=4000): a3r57(2000) a4r43(2000)
      Forming thread by copy 1:a0r56-a3r57 (freq=125):
        Result (freq=6000): a0r56(2000) a3r57(2000) a4r43(2000)
      Pushing a2(r58,l0)(cost 0)
      Pushing a1(r59,l0)(cost 0)
      Pushing a6(r50,l0)(cost 0)
      Pushing a5(r51,l0)(cost 0)
      Pushing a3(r57,l0)(cost 0)
      Pushing a0(r56,l0)(cost 0)
      Pushing a4(r43,l0)(cost 0)
      Popping a4(r43,l0)  -- assign reg 4
      Popping a0(r56,l0)  -- assign reg 2
      Popping a3(r57,l0)  -- assign reg 10
      Popping a5(r51,l0)  -- assign reg 3
      Popping a6(r50,l0)  -- assign reg 2
      Popping a1(r59,l0)  -- assign reg 2
      Popping a2(r58,l0)  -- assign reg 4
Disposition:
    4:r43  l0     4    6:r50  l0     2    5:r51  l0     3    0:r56  l0     2
    3:r57  l0    10    2:r58  l0     4    1:r59  l0     2
New iteration of spill/restore move
+++Costs: overall -12250, reg -12250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_verifyMic0

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={4d} r1={1d,5u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={3d} r9={3d} r10={6d,5u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={1d,2u} r17={1d,1u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r43={1d,1u} r50={1d,2u} r51={1d,2u} r56={1d,1u} r57={1d,1u,1e} r58={1d,1u} r59={1d,1u} 
;;    total ref usage 135{104d,30u,1e} in 17{14 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 2 [a2] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 50 51 56 57 58 59
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 50 [ pdu ])
        (reg:SI 2 a2 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:168 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ pdu ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 51 [ len ])
        (reg:SI 3 a3 [ len ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:168 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ len ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC76") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:169 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 9 8 10 2 (call (mem:SI (symbol_ref:SI ("os_getDevKey") [flags 0x41]  <function_decl 0x140eefe58 os_getDevKey>) [0 os_getDevKey S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:169 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg/v:SI 51 [ len ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 33 {zero_extendhisi2}
     (nil))
(insn 12 11 13 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 50 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 44 {movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 10 a10)
        (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 44 {movsi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 43 [ D.6156 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 16 15 17 2 NOTE_INSN_DELETED)
(insn 17 16 18 2 (set (reg:SI 10 a10)
        (plus:SI (reg/v/f:SI 50 [ pdu ])
            (reg/v:SI 51 [ len ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 51 [ len ])
        (expr_list:REG_DEAD (reg/v/f:SI 50 [ pdu ])
            (nil))))
(call_insn/i 18 17 19 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rmsbf4") [flags 0x3]  <function_decl 0x140efa948 os_rmsbf4>) [0 os_rmsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 19 18 20 2 NOTE_INSN_DELETED)
(insn 20 19 22 2 (set (reg:SI 57)
        (minus:SI (reg:SI 43 [ D.6156 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6156 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 22 20 34 2 (set (reg:SI 59)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 34 22 23 2 (set (reg:SI 58)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 23 34 25 2 (set (reg:SI 56)
        (if_then_else:SI (eq (reg:SI 57)
                (const_int 0 [0]))
            (reg:SI 58)
            (reg:SI 59))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:170 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 59)
        (expr_list:REG_DEAD (reg:SI 58)
            (expr_list:REG_DEAD (reg:SI 57)
                (expr_list:REG_EQUAL (eq:SI (reg:SI 57)
                        (const_int 0 [0]))
                    (nil))))))
(note 25 23 31 2 NOTE_INSN_DELETED)
(insn 31 25 32 2 (set (reg/i:SI 2 a2)
        (reg:SI 56)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:171 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 56)
        (nil)))
(insn 32 31 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function os_wlsbf2 (os_wlsbf2, funcdef_no=31, decl_uid=2753, cgraph_uid=31, symbol_order=32)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 46 uninteresting
Reg 48 uninteresting
Found def insn 2 for 45 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r48,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a1(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r46,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 4(l0): point = 6
   Insn 2(l0): point = 8
 a0(r45): [1..8]
 a1(r48): [1..2]
 a2(r46): [3..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r45): [0..3]
 a1(r48): [0..1]
 a2(r46): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r45,l0) conflicts: a1(r48,l0) a2(r46,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a1(r48,l0) conflicts: a0(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a0(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r48)<->a2(r46)@125:shuffle
  pref0:a0(r45)<-hr2@2000
  pref1:a2(r46)<-hr3@125
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=1, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r45 1r48 2r46
    modified regnos: 45 46 48
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@40500
          2:( 2 4-15)@32000
      Allocno a0r45 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a1r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r48-a2r46 (freq=125):
        Result (freq=5000): a1r48(2000) a2r46(3000)
      Pushing a0(r45,l0)(cost 0)
      Pushing a1(r48,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Popping a2(r46,l0)  -- assign reg 3
      Popping a1(r48,l0)  -- assign reg 3
      Popping a0(r45,l0)  -- assign reg 2
Disposition:
    0:r45  l0     2    2:r46  l0     3    1:r48  l0     3
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_wlsbf2

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r45={1d,2u} r46={1d,2u} r48={1d,1u} 
;;    total ref usage 27{13d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 46 48
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:SI 45 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:81 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_DELETED)
(insn 4 3 5 2 (set (reg/v:SI 46 [ v ])
        (zero_extend:SI (reg:HI 3 a3 [ v ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:81 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 3 a3 [ v ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem:QI (reg/v/f:SI 45 [ buf ]) [0 *buf_4(D)+0 S1 A8])
        (subreg:QI (reg/v:SI 46 [ v ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:82 46 {movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 48)
        (lshiftrt:SI (reg/v:SI 46 [ v ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:83 53 {lshrsi3}
     (expr_list:REG_DEAD (reg/v:SI 46 [ v ])
        (nil)))
(insn 10 9 0 2 (set (mem:QI (plus:SI (reg/v/f:SI 45 [ buf ])
                (const_int 1 [0x1])) [0 MEM[(u1_t *)buf_4(D) + 1B]+0 S1 A8])
        (subreg:QI (reg:SI 48) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:83 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 48)
        (expr_list:REG_DEAD (reg/v/f:SI 45 [ buf ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_sessKeys (aes_sessKeys, funcdef_no=43, decl_uid=3464, cgraph_uid=43, symbol_order=44)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 48: local to bb 2 def dominates all uses has unique first use
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 45: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 53 uninteresting
Reg 63 uninteresting
Reg 64 uninteresting
Found def insn 3 for 45 to be not moveable
Found def insn 4 for 47 to be not moveable
Found def insn 5 for 48 to be not moveable
Found def insn 6 for 49 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 63: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 64: (insn_list:REG_DEP_TRUE 42 (nil))

Pass 0 for finding pseudo/allocno costs

    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r63,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a1(r51,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a2(r64,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a3(r48,l0) costs: ACC_REG:21000,21000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:112000,112000 MEM:28000,28000
  a4(r63,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 55(l0): point = 0
   Insn 54(l0): point = 2
   Insn 53(l0): point = 4
   Insn 52(l0): point = 6
   Insn 51(l0): point = 8
   Insn 50(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 45(l0): point = 18
   Insn 44(l0): point = 20
   Insn 43(l0): point = 22
   Insn 42(l0): point = 24
   Insn 41(l0): point = 26
   Insn 40(l0): point = 28
   Insn 38(l0): point = 30
   Insn 37(l0): point = 32
   Insn 36(l0): point = 34
   Insn 35(l0): point = 36
   Insn 31(l0): point = 38
   Insn 30(l0): point = 40
   Insn 29(l0): point = 42
   Insn 26(l0): point = 44
   Insn 25(l0): point = 46
   Insn 24(l0): point = 48
   Insn 23(l0): point = 50
   Insn 18(l0): point = 52
   Insn 17(l0): point = 54
   Insn 15(l0): point = 56
   Insn 14(l0): point = 58
   Insn 13(l0): point = 60
   Insn 12(l0): point = 62
   Insn 11(l0): point = 64
   Insn 3(l0): point = 66
   Insn 6(l0): point = 68
   Insn 5(l0): point = 70
   Insn 4(l0): point = 72
 a0(r49): [5..68]
 a1(r51): [7..64]
 a2(r64): [11..24]
 a3(r48): [17..70]
 a4(r63): [27..28]
 a5(r45): [43..66]
 a6(r47): [49..72]
 a7(r53): [53..54]
Compressing live ranges: from 75 to 6 - 8%
Ranges after the compression:
 a0(r49): [0..5]
 a1(r51): [0..5]
 a2(r64): [0..1]
 a3(r48): [0..5]
 a4(r63): [2..3]
 a5(r45): [4..5]
 a6(r47): [4..5]
 a7(r53): [4..5]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r49,l0) conflicts: a2(r64,l0) a1(r51,l0) a3(r48,l0) a4(r63,l0) a5(r45,l0) a6(r47,l0) a7(r53,l0)
;;     total conflict hard regs: 2 8-15
;;     conflict hard regs: 2 8-15

;; a1(r51,l0) conflicts: a2(r64,l0) a0(r49,l0) a3(r48,l0) a4(r63,l0) a5(r45,l0) a6(r47,l0) a7(r53,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r64,l0) conflicts: a0(r49,l0) a1(r51,l0) a3(r48,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r48,l0) conflicts: a2(r64,l0) a0(r49,l0) a1(r51,l0) a4(r63,l0) a5(r45,l0) a6(r47,l0) a7(r53,l0)
;;     total conflict hard regs: 2 5 8-15
;;     conflict hard regs: 2 5 8-15

;; a4(r63,l0) conflicts: a0(r49,l0) a1(r51,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r45,l0) conflicts: a0(r49,l0) a1(r51,l0) a3(r48,l0) a6(r47,l0) a7(r53,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r47,l0) conflicts: a0(r49,l0) a1(r51,l0) a3(r48,l0) a5(r45,l0) a7(r53,l0)
;;     total conflict hard regs: 2 4 5 8-15
;;     conflict hard regs: 2 4 5 8-15

;; a7(r53,l0) conflicts: a0(r49,l0) a1(r51,l0) a3(r48,l0) a5(r45,l0) a6(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a6(r47)<-hr3@2000
  pref1:a3(r48)<-hr4@2000
  pref2:a0(r49)<-hr5@2000
  pref3:a5(r45)<-hr2@2000
  pref4:a1(r51)<-hr12@5000
  pref5:a3(r48)<-hr10@1000
  pref6:a6(r47)<-hr11@2000
  pref7:a5(r45)<-hr11@2000
  pref8:a3(r48)<-hr11@3000
  pref9:a0(r49)<-hr10@1000
  pref10:a2(r64)<-hr10@3000
  pref11:a0(r49)<-hr11@2000
  regions=1, blocks=3, points=6
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r49 1r51 2r64 3r48 4r63 5r45 6r47 7r53
    modified regnos: 45 47 48 49 51 53 63 64
    border:
    Pressure: AR_REGS=8
 Removing pref11:hr11@2000
 Removing pref9:hr10@1000
 Removing pref4:hr12@5000
 Removing pref10:hr10@3000
 Removing pref8:hr11@3000
 Removing pref5:hr10@1000
 Removing pref7:hr11@2000
 Removing pref6:hr11@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@32000
          2:( 2-7)@104000
            3:( 3-7)@40000
              4:( 3 4 6 7)@68000
                5:( 3 6 7)@24000
      Allocno a0r49 of AR_REGS(14) has 5 avail. regs  3-7, node:  3-7 (confl regs =  0-2 8-34)
      Allocno a1r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r64 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r48 of AR_REGS(14) has 4 avail. regs  3 4 6 7, node:  3 4 6 7 (confl regs =  0-2 5 8-34)
      Allocno a4r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r47 of AR_REGS(14) has 3 avail. regs  3 6 7, node:  3 6 7 (confl regs =  0-2 4 5 8-34)
      Allocno a7r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a7(r53,l0)(cost 0)
      Pushing a5(r45,l0)(cost 0)
        Making a1(r51,l0) colorable
      Pushing a4(r63,l0)(cost 0)
        Making a0(r49,l0) colorable
      Pushing a2(r64,l0)(cost 0)
        Making a3(r48,l0) colorable
      Pushing a0(r49,l0)(cost 20000)
        Making a6(r47,l0) colorable
      Pushing a6(r47,l0)(cost 12000)
      Pushing a1(r51,l0)(cost 30000)
      Pushing a3(r48,l0)(cost 34000)
      Popping a3(r48,l0)  -- assign reg 4
      Popping a1(r51,l0)  -- assign reg 6
      Popping a6(r47,l0)  -- assign reg 3
      Popping a0(r49,l0)  -- assign reg 5
      Popping a2(r64,l0)  -- assign reg 3
      Popping a4(r63,l0)  -- assign reg 3
      Popping a5(r45,l0)  -- assign reg 2
      Popping a7(r53,l0)  -- assign reg 8
Disposition:
    5:r45  l0     2    6:r47  l0     3    3:r48  l0     4    0:r49  l0     5
    1:r51  l0     6    7:r53  l0     8    4:r63  l0     3    2:r64  l0     3
New iteration of spill/restore move
+++Costs: overall -16000, reg -16000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_sessKeys

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={9d} r1={1d,10u} r2={1d,1u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d} r7={1d,2u} r8={8d} r9={8d} r10={16d,8u} r11={14d,6u} r12={13d,5u} r13={8d} r14={8d} r15={8d} r16={1d,2u} r17={1d,1u} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r45={1d,1u} r47={1d,1u} r48={1d,6u} r49={1d,3u} r51={1d,4u} r53={1d,1u} r63={1d,1u} r64={1d,2u} 
;;    total ref usage 310{253d,57u,0e} in 37{29 regular + 8 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 45 47 48 49 51 53 63 64
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_DELETED)
(insn 4 2 5 2 (set (reg/v/f:SI 47 [ artnonce ])
        (reg:SI 3 a3 [ artnonce ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:193 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ artnonce ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:SI 48 [ nwkkey ])
        (reg:SI 4 a4 [ nwkkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:193 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ nwkkey ])
        (nil)))
(insn 6 5 3 2 (set (reg/v/f:SI 49 [ artkey ])
        (reg:SI 5 a5 [ artkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:193 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ artkey ])
        (nil)))
(insn 3 6 7 2 (set (reg/v:SI 45 [ devnonce ])
        (reg:SI 2 a2 [ devnonce ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:193 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ devnonce ])
        (nil)))
(note 7 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 7 12 2 (set (reg:SI 51)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:194 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 16 [0x10])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 12 a12)
        (reg:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:194 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 11 a11)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:194 44 {movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 10 a10)
        (reg/v/f:SI 48 [ nwkkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:194 44 {movsi_internal}
     (nil))
(call_insn 15 14 17 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x100c87510 memset>) [0 memset S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:194 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 17 15 18 2 (set (reg:QI 53)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:195 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 18 17 19 2 (set (mem:QI (reg/v/f:SI 48 [ nwkkey ]) [0 *nwkkey_2(D)+0 S1 A8])
        (reg:QI 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:195 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 53)
        (nil)))
(note 19 18 22 2 NOTE_INSN_DELETED)
(note 22 19 23 2 NOTE_INSN_DELETED)
(insn 23 22 24 2 (set (reg:SI 12 a12)
        (const_int 6 [0x6])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:196 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 6 [0x6])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 47 [ artnonce ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:196 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 47 [ artnonce ])
        (nil)))
(insn 25 24 26 2 (set (reg:SI 10 a10)
        (plus:SI (reg/v/f:SI 48 [ nwkkey ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:196 1 {addsi3}
     (nil))
(call_insn 26 25 28 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:196 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(note 28 26 29 2 NOTE_INSN_DELETED)
(insn 29 28 30 2 (set (reg:SI 11 a11)
        (reg/v:SI 45 [ devnonce ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:197 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 45 [ devnonce ])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 10 a10)
        (plus:SI (reg/v/f:SI 48 [ nwkkey ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:197 1 {addsi3}
     (nil))
(call_insn 31 30 35 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf2") [flags 0x3]  <function_decl 0x140efabd0 os_wlsbf2>) [0 os_wlsbf2 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:197 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 35 31 36 2 (set (reg:SI 12 a12)
        (reg:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:198 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 48 [ nwkkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:198 44 {movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SI 10 a10)
        (reg/v/f:SI 49 [ artkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:198 44 {movsi_internal}
     (nil))
(call_insn 38 37 40 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:198 82 {call_value_internal}
     (expr_list:REG_RETURNED (reg/v/f:SI 49 [ artkey ])
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_UNUSED (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(insn 40 38 41 2 (set (reg:QI 63)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:199 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 41 40 42 2 (set (mem:QI (reg/v/f:SI 49 [ artkey ]) [0 *artkey_12(D)+0 S1 A8])
        (reg:QI 63)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:199 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 63)
        (nil)))
(insn 42 41 43 2 (set (reg/f:SI 64)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC77") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:201 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(insn 43 42 44 2 (set (reg:SI 10 a10)
        (reg/f:SI 64)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:201 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 44 43 45 2 (call (mem:SI (symbol_ref:SI ("os_getDevKey") [flags 0x41]  <function_decl 0x140eefe58 os_getDevKey>) [0 os_getDevKey S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:201 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 45 44 46 2 (set (reg:SI 12 a12)
        (reg:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:202 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 46 45 47 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 48 [ nwkkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:202 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 48 [ nwkkey ])
        (nil)))
(insn 47 46 48 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:202 44 {movsi_internal}
     (nil))
(call_insn 48 47 50 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:202 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 50 48 51 2 (set (reg:SI 10 a10)
        (reg/f:SI 64)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:203 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 64)
        (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
            (nil))))
(call_insn 51 50 52 2 (call (mem:SI (symbol_ref:SI ("os_getDevKey") [flags 0x41]  <function_decl 0x140eefe58 os_getDevKey>) [0 os_getDevKey S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:203 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 52 51 53 2 (set (reg:SI 12 a12)
        (reg:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:204 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 51)
        (expr_list:REG_EQUAL (const_int 16 [0x10])
            (nil))))
(insn 53 52 54 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 49 [ artkey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:204 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 49 [ artkey ])
        (nil)))
(insn 54 53 55 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:204 44 {movsi_internal}
     (nil))
(call_insn 55 54 0 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:204 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function os_wlsbf4 (os_wlsbf4, funcdef_no=32, decl_uid=2743, cgraph_uid=32, symbol_order=33)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 50 uninteresting
Reg 43 uninteresting
Reg 45 uninteresting
Reg 47 uninteresting
Found def insn 2 for 49 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a1(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r50,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a3(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r49): [1..16]
 a1(r47): [1..2]
 a2(r50): [3..14]
 a3(r45): [5..6]
 a4(r43): [9..10]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r49): [0..5]
 a1(r47): [0..1]
 a2(r50): [2..5]
 a3(r45): [2..3]
 a4(r43): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r49,l0) conflicts: a1(r47,l0) a3(r45,l0) a2(r50,l0) a4(r43,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a1(r47,l0) conflicts: a0(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r50,l0) conflicts: a0(r49,l0) a3(r45,l0) a4(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r45,l0) conflicts: a0(r49,l0) a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r43,l0) conflicts: a0(r49,l0) a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r47)<->a2(r50)@125:shuffle
  pref0:a0(r49)<-hr2@2000
  pref1:a2(r50)<-hr3@2000
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=1, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r49 1r47 2r50 3r45 4r43
    modified regnos: 43 45 47 49 50
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@96000
          2:( 2 4-15)@48000
      Allocno a0r49 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r47-a2r50 (freq=125):
        Result (freq=7000): a1r47(2000) a2r50(5000)
      Pushing a4(r43,l0)(cost 0)
      Pushing a3(r45,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Pushing a2(r50,l0)(cost 0)
      Popping a2(r50,l0)  -- assign reg 3
      Popping a1(r47,l0)  -- assign reg 3
      Popping a0(r49,l0)  -- assign reg 2
      Popping a3(r45,l0)  -- assign reg 8
      Popping a4(r43,l0)  -- assign reg 8
Disposition:
    4:r43  l0     8    3:r45  l0     8    1:r47  l0     3    0:r49  l0     2
    2:r50  l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_wlsbf4

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r43={1d,1u} r45={1d,1u} r47={1d,1u} r49={1d,4u} r50={1d,4u} 
;;    total ref usage 35{15d,20u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 45 47 49 50
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 49 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:88 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 50 [ v ])
        (reg:SI 3 a3 [ v ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:88 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ v ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem:QI (reg/v/f:SI 49 [ buf ]) [0 *buf_4(D)+0 S1 A8])
        (subreg:QI (reg/v:SI 50 [ v ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:89 46 {movqi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 43 [ D.6176 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:90 53 {lshrsi3}
     (nil))
(insn 9 8 10 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 1 [0x1])) [0 MEM[(u1_t *)buf_4(D) + 1B]+0 S1 A8])
        (subreg:QI (reg:SI 43 [ D.6176 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:90 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6176 ])
        (nil)))
(insn 10 9 11 2 (set (reg:SI 45 [ D.6176 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:91 53 {lshrsi3}
     (nil))
(insn 11 10 12 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 2 [0x2])) [0 MEM[(u1_t *)buf_4(D) + 2B]+0 S1 A8])
        (subreg:QI (reg:SI 45 [ D.6176 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:91 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6176 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 47 [ D.6176 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 24 [0x18]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:92 53 {lshrsi3}
     (expr_list:REG_DEAD (reg/v:SI 50 [ v ])
        (nil)))
(insn 13 12 0 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 3 [0x3])) [0 MEM[(u1_t *)buf_4(D) + 3B]+0 S1 A8])
        (subreg:QI (reg:SI 47 [ D.6176 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:92 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 49 [ buf ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6176 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function rxschedInit (rxschedInit, funcdef_no=48, decl_uid=3587, cgraph_uid=48, symbol_order=55)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 68: local to bb 2 def dominates all uses has unique first use
Reg 69 uninteresting
Reg 73 uninteresting
Reg 77: local to bb 2 def dominates all uses has unique first use
Reg 83 uninteresting
Reg 48: local to bb 2 def dominates all uses has unique first use
Reg 84 uninteresting
Reg 49 uninteresting
Reg 50: local to bb 2 def dominates all uses has unique first use
Ignoring reg 51, has equiv memory
Reg 86 uninteresting
Reg 52: local to bb 2 def dominates all uses has unique first use
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 96 uninteresting
Reg 57 uninteresting
Reg 101 uninteresting
Reg 58 uninteresting
Reg 103: local to bb 2 def dominates all uses has unique first use
Ignoring reg 65, has equiv memory
Reg 66 uninteresting
Examining insn 45, def for 48
  all ok
Found def insn 48 for 50 to be not moveable
Examining insn 53, def for 52
  found unusable input reg 51.
Ignoring reg 68 with equiv init insn
Ignoring reg 77 with equiv init insn
Examining insn 55, def for 88
  all ok
Examining insn 58, def for 89
  all ok
Examining insn 83, def for 103
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 65: (insn_list:REG_DEP_TRUE 90 (nil))
init_insns for 68: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 69: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 73: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 76: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 77: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 84: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 86: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 90: (insn_list:REG_DEP_TRUE 57 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 79 (nil))

Pass 0 for finding pseudo/allocno costs

    r107: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r107,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r103,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r101,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r96,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r90,l0) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r89,l0) best AR_REGS, allocno AR_REGS
    r88: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r88,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r86,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r84,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r83,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r77,l0) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r76,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r73,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r65,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r57,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r48,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r67,l0) costs: ACC_REG:21000,21000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:112000,112000 MEM:28000,28000
  a1(r66,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r76,l0) costs: ACC_REG:18000,18000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:96000,96000 MEM:16000,16000
  a3(r65,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r57,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a5(r103,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a8(r101,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r69,l0) costs: ACC_REG:27000,27000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:144000,144000 MEM:36000,36000
  a10(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r96,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a12(r90,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a13(r50,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a14(r107,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a15(r89,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r88,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r86,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a18(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a19(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a20(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a21(r84,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a22(r83,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a23(r77,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a24(r73,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a25(r68,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000

   Insn 93(l0): point = 0
   Insn 92(l0): point = 2
   Insn 90(l0): point = 4
   Insn 89(l0): point = 6
   Insn 87(l0): point = 8
   Insn 86(l0): point = 10
   Insn 85(l0): point = 12
   Insn 83(l0): point = 14
   Insn 80(l0): point = 16
   Insn 79(l0): point = 18
   Insn 78(l0): point = 20
   Insn 76(l0): point = 22
   Insn 75(l0): point = 24
   Insn 71(l0): point = 26
   Insn 97(l0): point = 28
   Insn 96(l0): point = 30
   Insn 69(l0): point = 32
   Insn 67(l0): point = 34
   Insn 66(l0): point = 36
   Insn 64(l0): point = 38
   Insn 58(l0): point = 40
   Insn 57(l0): point = 42
   Insn 55(l0): point = 44
   Insn 53(l0): point = 46
   Insn 52(l0): point = 48
   Insn 51(l0): point = 50
   Insn 48(l0): point = 52
   Insn 47(l0): point = 54
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 44(l0): point = 60
   Insn 39(l0): point = 62
   Insn 38(l0): point = 64
   Insn 35(l0): point = 66
   Insn 34(l0): point = 68
   Insn 33(l0): point = 70
   Insn 32(l0): point = 72
   Insn 31(l0): point = 74
   Insn 29(l0): point = 76
   Insn 28(l0): point = 78
   Insn 27(l0): point = 80
   Insn 24(l0): point = 82
   Insn 23(l0): point = 84
   Insn 22(l0): point = 86
   Insn 21(l0): point = 88
   Insn 20(l0): point = 90
   Insn 19(l0): point = 92
   Insn 17(l0): point = 94
   Insn 15(l0): point = 96
   Insn 14(l0): point = 98
   Insn 12(l0): point = 100
   Insn 10(l0): point = 102
   Insn 8(l0): point = 104
   Insn 7(l0): point = 106
   Insn 6(l0): point = 108
   Insn 2(l0): point = 110
 a0(r67): [1..110]
 a1(r66): [1..2]
 a2(r76): [3..90]
 a3(r65): [5..6]
 a4(r57): [7..24]
 a5(r103): [11..14]
 a6(r58): [15..16]
 a7(r44): [17..66]
 a8(r101): [17..18]
 a9(r69): [21..106]
 a10(r52): [25..46]
 a11(r96): [29..36]
 a12(r90): [31..42]
 a13(r50): [31..52]
 a14(r107): [37..38] [34..34]
 a15(r89): [37..40]
 a16(r88): [41..44]
 a17(r86): [47..48]
 a18(r51): [47..50]
 a19(r49): [53..54]
 a20(r48): [55..58]
 a21(r84): [55..56]
 a22(r83): [59..60]
 a23(r77): [65..88]
 a24(r73): [93..96]
 a25(r68): [99..108]
Compressing live ranges: from 113 to 33 - 29%
Ranges after the compression:
 a0(r67): [0..32]
 a1(r66): [0..1]
 a2(r76): [2..28]
 a3(r65): [2..3]
 a4(r57): [4..11]
 a5(r103): [4..5]
 a6(r58): [6..7]
 a7(r44): [8..28]
 a8(r101): [8..9]
 a9(r69): [10..32]
 a10(r52): [12..18]
 a11(r96): [12..14]
 a12(r90): [12..18]
 a13(r50): [12..20]
 a14(r107): [15..16] [13..13]
 a15(r89): [15..16]
 a16(r88): [17..18]
 a17(r86): [19..20]
 a18(r51): [19..20]
 a19(r49): [21..22]
 a20(r48): [23..24]
 a21(r84): [23..24]
 a22(r83): [25..26]
 a23(r77): [27..28]
 a24(r73): [29..30]
 a25(r68): [31..32]
+++Allocating 208 bytes for conflict table (uncompressed size 208)
;; a0(r67,l0) conflicts: a1(r66,l0) a3(r65,l0) a2(r76,l0) a5(r103,l0) a4(r57,l0) a6(r58,l0) a8(r101,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0) a17(r86,l0) a18(r51,l0) a19(r49,l0) a20(r48,l0) a21(r84,l0) a22(r83,l0) a23(r77,l0) a24(r73,l0) a25(r68,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r66,l0) conflicts: a0(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r76,l0) conflicts: a0(r67,l0) a3(r65,l0) a5(r103,l0) a4(r57,l0) a6(r58,l0) a8(r101,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0) a17(r86,l0) a18(r51,l0) a19(r49,l0) a20(r48,l0) a21(r84,l0) a22(r83,l0) a23(r77,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r65,l0) conflicts: a0(r67,l0) a2(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r57,l0) conflicts: a0(r67,l0) a2(r76,l0) a5(r103,l0) a6(r58,l0) a8(r101,l0) a7(r44,l0) a9(r69,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r103,l0) conflicts: a0(r67,l0) a2(r76,l0) a4(r57,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a6(r58,l0) conflicts: a0(r67,l0) a2(r76,l0) a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r44,l0) conflicts: a0(r67,l0) a2(r76,l0) a4(r57,l0) a8(r101,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0) a17(r86,l0) a18(r51,l0) a19(r49,l0) a20(r48,l0) a21(r84,l0) a22(r83,l0) a23(r77,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a8(r101,l0) conflicts: a0(r67,l0) a2(r76,l0) a4(r57,l0) a7(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r69,l0) conflicts: a0(r67,l0) a2(r76,l0) a4(r57,l0) a7(r44,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0) a17(r86,l0) a18(r51,l0) a19(r49,l0) a20(r48,l0) a21(r84,l0) a22(r83,l0) a23(r77,l0) a24(r73,l0) a25(r68,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a10(r52,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a11(r96,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0)
;;     total conflict hard regs: 10 12 13
;;     conflict hard regs: 10 12 13

;; a12(r90,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a13(r50,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a13(r50,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a14(r107,l0) a15(r89,l0) a16(r88,l0) a17(r86,l0) a18(r51,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a14(r107,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a11(r96,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a15(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r89,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0) a14(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r88,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a10(r52,l0) a12(r90,l0) a13(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r86,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a13(r50,l0) a18(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r51,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a13(r50,l0) a17(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r49,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a20(r48,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a21(r84,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a21(r84,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0) a20(r48,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a22(r83,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a23(r77,l0) conflicts: a0(r67,l0) a2(r76,l0) a7(r44,l0) a9(r69,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a24(r73,l0) conflicts: a0(r67,l0) a9(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r68,l0) conflicts: a0(r67,l0) a9(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a20(r48)<->a22(r83)@125:shuffle
  cp1:a19(r49)<->a21(r84)@125:shuffle
  cp2:a19(r49)<->a20(r48)@125:shuffle
  cp3:a13(r50)<->a19(r49)@125:shuffle
  cp4:a10(r52)<->a17(r86)@125:shuffle
  cp5:a10(r52)<->a18(r51)@125:shuffle
  cp6:a15(r89)<->a16(r88)@125:shuffle
  cp7:a11(r96)<->a15(r89)@125:shuffle
  cp8:a4(r57)<->a10(r52)@125:shuffle
  cp9:a6(r58)<->a8(r101)@125:shuffle
  cp10:a6(r58)<->a7(r44)@125:shuffle
  cp11:a5(r103)<->a6(r58)@125:shuffle
  cp12:a3(r65)<->a4(r57)@125:shuffle
  pref0:a0(r67)<-hr2@2000
  pref1:a23(r77)<-hr10@3000
  pref2:a23(r77)<-hr11@1000
  pref3:a9(r69)<-hr10@1000
  pref4:a11(r96)<-hr11@2000
  pref5:a13(r50)<-hr10@250
  pref6:a12(r90)<-hr10@125
  pref7:a4(r57)<-hr10@125
  pref8:a5(r103)<-hr10@125
  pref9:a3(r65)<-hr10@125
  regions=1, blocks=3, points=33
    allocnos=26 (big 0), copies=13, conflicts=0, ranges=27

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r67 1r66 2r76 3r65 4r57 5r103 6r58 7r44 8r101 9r69 10r52 11r96 12r90 13r50 14r107 15r89 16r88 17r86 18r51 19r49 20r48 21r84 22r83 23r77 24r73 25r68
    modified regnos: 44 48 49 50 51 52 57 58 65 66 67 68 69 73 76 77 83 84 86 88 89 90 96 101 103 107
    border:
    Pressure: AR_REGS=10
 Removing pref7:hr10@125
 Removing pref3:hr10@1000
 Removing pref2:hr11@1000
 Removing pref1:hr10@3000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@152500
          2:( 2-11 14 15)@49500
            3:( 2-9 11 14 15)@80000
              4:( 2-7)@260500
      Allocno a0r67 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r76 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r57 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r103 of AR_REGS(14) has 13 avail. regs  2-10 12-15, ^node:  2-15 (confl regs =  0 1 11 16-34)
      Allocno a6r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a8r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r69 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a10r52 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a11r96 of AR_REGS(14) has 11 avail. regs  2-9 11 14 15, node:  2-9 11 14 15 (confl regs =  0 1 10 12 13 16-34)
      Allocno a12r90 of AR_REGS(14) has 12 avail. regs  2-11 14 15, node:  2-11 14 15 (confl regs =  0 1 12 13 16-34)
      Allocno a13r50 of AR_REGS(14) has 12 avail. regs  2-11 14 15, node:  2-11 14 15 (confl regs =  0 1 12 13 16-34)
      Allocno a14r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r88 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r49 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a20r48 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a21r84 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a22r83 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a23r77 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a24r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a20r48-a22r83 (freq=125):
        Result (freq=4000): a20r48(2000) a22r83(2000)
      Forming thread by copy 1:a19r49-a21r84 (freq=125):
        Result (freq=4000): a19r49(2000) a21r84(2000)
      Forming thread by copy 6:a15r89-a16r88 (freq=125):
        Result (freq=4000): a15r89(2000) a16r88(2000)
      Forming thread by copy 7:a11r96-a15r89 (freq=125):
        Result (freq=7000): a11r96(3000) a15r89(2000) a16r88(2000)
      Forming thread by copy 9:a6r58-a8r101 (freq=125):
        Result (freq=4000): a6r58(2000) a8r101(2000)
      Forming thread by copy 11:a5r103-a6r58 (freq=125):
        Result (freq=6000): a5r103(2000) a6r58(2000) a8r101(2000)
      Forming thread by copy 12:a3r65-a4r57 (freq=125):
        Result (freq=5000): a3r65(2000) a4r57(3000)
      Pushing a18(r51,l0)(cost 0)
      Forming thread by copy 3:a13r50-a19r49 (freq=125):
        Result (freq=8000): a13r50(4000) a19r49(2000) a21r84(2000)
        Making a13(r50,l0) colorable
      Pushing a17(r86,l0)(cost 0)
      Pushing a1(r66,l0)(cost 0)
      Pushing a24(r73,l0)(cost 0)
      Pushing a14(r107,l0)(cost 0)
      Pushing a23(r77,l0)(cost 0)
      Pushing a22(r83,l0)(cost 0)
      Pushing a20(r48,l0)(cost 0)
      Pushing a21(r84,l0)(cost 0)
      Pushing a19(r49,l0)(cost 0)
      Pushing a12(r90,l0)(cost 0)
      Pushing a25(r68,l0)(cost 0)
      Pushing a3(r65,l0)(cost 0)
      Pushing a8(r101,l0)(cost 0)
      Pushing a6(r58,l0)(cost 0)
        Making a4(r57,l0) colorable
      Pushing a4(r57,l0)(cost 12250)
      Pushing a5(r103,l0)(cost 0)
      Pushing a16(r88,l0)(cost 0)
      Pushing a15(r89,l0)(cost 0)
      Pushing a11(r96,l0)(cost 0)
        Making a0(r67,l0) colorable
        Making a2(r76,l0) colorable
        Making a7(r44,l0) colorable
        Making a9(r69,l0) colorable
      Forming thread by copy 4:a10r52-a17r86 (freq=125):
        Result (freq=4000): a10r52(2000) a17r86(2000)
      Forming thread by copy 8:a4r57-a10r52 (freq=125):
        Result (freq=9000): a3r65(2000) a10r52(2000) a17r86(2000) a4r57(3000)
        Making a10(r52,l0) colorable
      Pushing a7(r44,l0)(cost 12000)
      Pushing a2(r76,l0)(cost 16000)
      Pushing a0(r67,l0)(cost 32000)
      Pushing a13(r50,l0)(cost 16500)
      Pushing a9(r69,l0)(cost 36000)
      Pushing a10(r52,l0)(cost 8000)
      Popping a10(r52,l0)  -- assign reg 3
      Popping a9(r69,l0)  -- assign reg 4
      Popping a13(r50,l0)  -- assign reg 10
      Popping a0(r67,l0)  -- assign reg 2
      Popping a2(r76,l0)  -- assign reg 5
      Popping a7(r44,l0)  -- assign reg 6
      Popping a11(r96,l0)  -- assign reg 11
      Popping a15(r89,l0)  -- assign reg 11
      Popping a16(r88,l0)  -- assign reg 11
      Popping a5(r103,l0)  -- assign reg 10
      Popping a4(r57,l0)  -- assign reg 3
      Popping a6(r58,l0)  -- assign reg 10
      Popping a8(r101,l0)  -- assign reg 10
      Popping a3(r65,l0)  -- assign reg 3
      Popping a25(r68,l0)  -- assign reg 3
      Popping a12(r90,l0)  -- assign reg 8
      Popping a19(r49,l0)  -- assign reg 3
      Popping a21(r84,l0)  -- assign reg 3
      Popping a20(r48,l0)  -- assign reg 8
      Popping a22(r83,l0)  -- assign reg 3
      Popping a23(r77,l0)  -- assign reg 3
      Popping a14(r107,l0)  -- assign reg 9
      Popping a24(r73,l0)  -- assign reg 3
      Popping a1(r66,l0)  -- assign reg 3
      Popping a17(r86,l0)  -- assign reg 3
      Popping a18(r51,l0)  -- assign reg 8
Assigning 10 to a3r65
Disposition:
    7:r44  l0     6   20:r48  l0     8   19:r49  l0     3   13:r50  l0    10
   18:r51  l0     8   10:r52  l0     3    4:r57  l0     3    6:r58  l0    10
    3:r65  l0    10    1:r66  l0     3    0:r67  l0     2   25:r68  l0     3
    9:r69  l0     4   24:r73  l0     3    2:r76  l0     5   23:r77  l0     3
   22:r83  l0     3   21:r84  l0     3   17:r86  l0     3   16:r88  l0    11
   15:r89  l0    11   12:r90  l0     8   11:r96  l0    11    8:r101 l0    10
    5:r103 l0    10   14:r107 l0     9
New iteration of spill/restore move
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rxschedInit

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={7d} r1={1d,8u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={6d} r9={6d} r10={12d,9u} r11={12d,5u} r12={8d,2u} r13={7d,1u} r14={6d} r15={6d} r16={1d,2u} r17={1d,1u} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r44={1d,3u,2e} r48={1d,1u} r49={1d,1u} r50={1d,4u} r51={1d,1u} r52={1d,1u} r57={1d,2u} r58={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,6u,1e} r68={1d,4u} r69={1d,8u} r73={1d,2u} r76={1d,4u,1e} r77={1d,3u} r83={1d,1u} r84={1d,1u} r86={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,3u} r96={1d,2u} r101={1d,1u} r103={1d,1u} r107={2d,1u} 
;;    total ref usage 305{214d,87u,4e} in 58{52 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 48 49 50 51 52 57 58 65 66 67 68 69 73 76 77 83 84 86 88 89 90 96 101 103 107
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:SI 67 [ rxsched ])
        (reg:SI 2 a2 [ rxsched ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:428 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ rxsched ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 68)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC78") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 69)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 8 7 10 2 (set (mem:SI (reg/f:SI 68) [0 MEM[(void *)&AESKEY]+0 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (nil))
(insn 10 8 12 2 (set (mem:SI (plus:SI (reg/f:SI 68)
                (const_int 4 [0x4])) [0 MEM[(void *)&AESKEY]+4 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (nil))
(insn 12 10 14 2 (set (mem:SI (plus:SI (reg/f:SI 68)
                (const_int 8 [0x8])) [0 MEM[(void *)&AESKEY]+8 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (nil))
(insn 14 12 15 2 (set (mem:SI (plus:SI (reg/f:SI 68)
                (const_int 12 [0xc])) [0 MEM[(void *)&AESKEY]+12 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:429 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 68)
        (nil)))
(insn 15 14 17 2 (set (reg/f:SI 73)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC79") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:430 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 17 15 19 2 (set (mem/c:SI (reg/f:SI 73) [0 MEM[(void *)&LMIC + 340B]+0 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:430 44 {movsi_internal}
     (nil))
(insn 19 17 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 73)
                (const_int 4 [0x4])) [0 MEM[(void *)&LMIC + 340B]+4 S4 A32])
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:430 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 73)
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 76)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC80") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:431 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 21 20 22 2 (set (reg/f:SI 77)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC81") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:431 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 76)
                (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:431 44 {movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 10 a10)
        (reg/f:SI 77)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:431 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn 24 23 26 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:431 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 26 24 27 2 NOTE_INSN_DELETED)
(insn 27 26 28 2 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 76)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:432 44 {movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC82") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:432 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 336 [0x150])))
        (nil)))
(call_insn 29 28 31 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:432 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 31 29 32 2 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:433 44 {movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SI 11 a11)
        (reg/f:SI 77)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:433 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 10 a10)
        (reg:SI 69)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:433 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(call_insn 34 33 35 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:433 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 35 34 36 2 (set (reg/v:SI 44 [ intvExp ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                    (const_int 1 [0x1])) [0 rxsched_9(D)->intvExp+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:434 34 {zero_extendqisi2}
     (nil))
(debug_insn 36 35 38 2 (var_location:QI intvExp (subreg:QI (reg/v:SI 44 [ intvExp ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:434 -1
     (nil))
(insn 38 36 39 2 (set (reg:SI 10 a10)
        (reg/f:SI 77)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 77)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 332 [0x14c])))
            (nil))))
(call_insn/i 39 38 40 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf2") [flags 0x3]  <function_decl 0x140efaaf8 os_rlsbf2>) [0 os_rlsbf2 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 40 39 44 2 NOTE_INSN_DELETED)
(insn 44 40 45 2 (set (reg:SI 83)
        (const_int 7 [0x7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 7 [0x7])
        (nil)))
(insn 45 44 46 2 (set (reg:SI 48 [ D.6179 ])
        (minus:SI (reg:SI 83)
            (reg/v:SI 44 [ intvExp ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 83)
        (expr_list:REG_EQUAL (minus:SI (const_int 7 [0x7])
                (reg/v:SI 44 [ intvExp ]))
            (nil))))
(insn 46 45 47 2 (set (reg:SI 84)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC83") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 4095 [0xfff])
        (nil)))
(insn 47 46 48 2 (set (reg:SI 49 [ D.6179 ])
        (ashiftrt:SI (reg:SI 84)
            (reg:SI 48 [ D.6179 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 84)
        (expr_list:REG_DEAD (reg:SI 48 [ D.6179 ])
            (nil))))
(insn 48 47 49 2 (set (reg/v:SI 50 [ off ])
        (and:SI (reg:SI 10 a10)
            (reg:SI 49 [ D.6179 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 49 [ D.6179 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(debug_insn 49 48 51 2 (var_location:SI off (reg/v:SI 50 [ off ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:435 -1
     (nil))
(insn 51 49 52 2 (set (reg:SI 51 [ D.6179 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 76)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:436 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 76)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (nil)))
(insn 52 51 53 2 (set (reg:SI 86)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC84") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:436 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 132500 [0x20594])
        (nil)))
(insn 53 52 55 2 (set (reg:SI 52 [ D.6179 ])
        (plus:SI (reg:SI 51 [ D.6179 ])
            (reg:SI 86))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:436 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 86)
        (expr_list:REG_DEAD (reg:SI 51 [ D.6179 ])
            (nil))))
(insn 55 53 57 2 (set (reg:SI 88)
        (ashiftrt:SI (reg/v:SI 50 [ off ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 52 {ashrsi3}
     (nil))
(insn 57 55 58 2 (set (reg:SI 90)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC85") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1875000 [0x1c9c38])
        (nil)))
(insn 58 57 63 2 (set (reg:SI 89)
        (mult:SI (reg:SI 88)
            (reg:SI 90))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(note 63 58 64 2 NOTE_INSN_DELETED)
(insn 64 63 66 2 (set (reg:SI 107 [ D.6180+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 50 [ off ]))
                    (zero_extend:DI (reg:SI 90)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 8 {umulsi3_highpart}
     (nil))
(insn 66 64 67 2 (set (reg:SI 96)
        (plus:SI (reg:SI 89)
            (reg:SI 107 [ D.6180+4 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 107 [ D.6180+4 ])
        (expr_list:REG_DEAD (reg:SI 89)
            (nil))))
(insn 67 66 69 2 (set (reg:SI 107 [ D.6180+4 ])
        (reg:SI 96)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 44 {movsi_internal}
     (expr_list:REG_UNUSED (reg:SI 107 [ D.6180+4 ])
        (nil)))
(insn 69 67 96 2 (set (reg:DI 12 a12)
        (const_int 1000 [0x3e8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 43 {movdi_internal}
     (expr_list:REG_EQUAL (const_int 1000 [0x3e8])
        (nil)))
(insn 96 69 97 2 (set (reg:SI 10 a10)
        (mult:SI (reg/v:SI 50 [ off ])
            (reg:SI 90))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_DEAD (reg/v:SI 50 [ off ])
            (nil))))
(insn 97 96 71 2 (set (reg:SI 11 a11 [+4 ])
        (reg:SI 96)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(call_insn/u 71 97 72 2 (set (reg:DI 10 a10)
        (call (mem:SI (symbol_ref:SI ("__divdi3") [flags 0x41]) [0  S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:438 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a12)
        (expr_list:REG_UNUSED (reg:SI 11 a11)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (use (reg:DI 12 a12))
        (expr_list (use (reg:DI 10 a10))
            (nil))))
(note 72 71 75 2 NOTE_INSN_DELETED)
(insn 75 72 76 2 (set (reg:SI 57 [ D.6179 ])
        (plus:SI (reg:SI 52 [ D.6179 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:437 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6179 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 76 75 78 2 (set (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 4 [0x4])) [0 rxsched_9(D)->rxbase+0 S4 A32])
        (reg:SI 57 [ D.6179 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:436 44 {movsi_internal}
     (nil))
(insn 78 76 79 2 (set (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 2 [0x2])) [0 rxsched_9(D)->slot+0 S1 A16])
        (subreg:QI (reg:SI 69) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:439 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 69)
        (nil)))
(insn 79 78 80 2 (set (reg:SI 101)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 80 79 81 2 (set (reg:SI 58 [ D.6179 ])
        (ashift:SI (reg:SI 101)
            (reg/v:SI 44 [ intvExp ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg/v:SI 44 [ intvExp ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg/v:SI 44 [ intvExp ]))
                (nil)))))
(note 81 80 83 2 NOTE_INSN_DELETED)
(insn 83 81 84 2 (set (reg:SI 103)
        (plus:SI (reg:SI 58 [ D.6179 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 58 [ D.6179 ])
        (nil)))
(note 84 83 85 2 NOTE_INSN_DELETED)
(insn 85 84 86 2 (set (reg:SI 11 a11)
        (zero_extend:SI (mem/j:QI (reg/v/f:SI 67 [ rxsched ]) [0 rxsched_9(D)->dr+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 34 {zero_extendqisi2}
     (nil))
(insn 86 85 87 2 (set (reg:SI 10 a10)
        (zero_extend:SI (subreg:QI (reg:SI 103) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(call_insn 87 86 88 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("calcRxWindow") [flags 0x3]  <function_decl 0x100b66798 calcRxWindow>) [0 calcRxWindow S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 88 87 89 2 NOTE_INSN_DELETED)
(insn 89 88 90 2 (set (reg:SI 65 [ D.6179 ])
        (minus:SI (reg:SI 57 [ D.6179 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6179 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EQUIV (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                        (const_int 8 [0x8])) [0 rxsched_9(D)->rxtime+0 S4 A32])
                (nil)))))
(insn 90 89 92 2 (set (mem/j:SI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 8 [0x8])) [0 rxsched_9(D)->rxtime+0 S4 A32])
        (reg:SI 65 [ D.6179 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:440 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6179 ])
        (nil)))
(insn 92 90 93 2 (set (reg:SI 66 [ D.6181 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 76)
                    (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:441 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 76)
        (nil)))
(insn 93 92 0 2 (set (mem/j:QI (plus:SI (reg/v/f:SI 67 [ rxsched ])
                (const_int 3 [0x3])) [0 rxsched_9(D)->rxsyms+0 S1 A8])
        (subreg/s/v:QI (reg:SI 66 [ D.6181 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:441 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 67 [ rxsched ])
        (expr_list:REG_DEAD (reg:SI 66 [ D.6181 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function txDone (txDone, funcdef_no=76, decl_uid=3770, cgraph_uid=76, symbol_order=84)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
scanning new insn with uid = 62.
verify found no changes in insn with uid = 62.
deleting insn with uid = 50.
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 21.
scanning new insn with uid = 64.
verify found no changes in insn with uid = 64.
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 53 uninteresting (no unique first use)
Reg 54 uninteresting (no unique first use)
Reg 55 uninteresting
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 56 uninteresting
Reg 59: local to bb 2 def dominates all uses has unique first use
Reg 60 uninteresting
Reg 62 uninteresting
Reg 64 uninteresting
Reg 66 uninteresting
Reg 67 uninteresting
Reg 45 uninteresting
Ignoring reg 46, has equiv memory
Reg 47 uninteresting
Reg 48 uninteresting
Reg 71 uninteresting
Reg 74 uninteresting
Found def insn 8 for 42 to be not moveable
Examining insn 12, def for 59
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 46: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 64 (nil))
init_insns for 60: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 64: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 68: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 71: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 62 (nil))

Pass 0 for finding pseudo/allocno costs

    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r74,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r71,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r65,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r64,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r62,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r59,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r53,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r53,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r54,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a2(r74,l0) costs: ACC_REG:4800,4800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25600,25600 MEM:0,0
  a3(r48,l0) costs: ACC_REG:1791,1791 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9552,9552 MEM:2388,2388
  a4(r68,l0) costs: ACC_REG:2985,2985 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15920,15920 MEM:2388,2388
  a5(r71,l0) costs: ACC_REG:1194,1194 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6368,6368 MEM:1592,1592
  a6(r47,l0) costs: ACC_REG:1194,1194 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6368,6368 MEM:1592,1592
  a7(r46,l0) costs: ACC_REG:1194,1194 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6368,6368 MEM:0,0
  a8(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a10(r62,l0) costs: ACC_REG:1233,1233 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6576,6576 MEM:548,548
  a11(r66,l0) costs: ACC_REG:822,822 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4384,4384 MEM:1096,1096
  a12(r64,l0) costs: ACC_REG:822,822 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4384,4384 MEM:1096,1096
  a13(r65,l0) costs: ACC_REG:822,822 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4384,4384 MEM:1096,1096
  a14(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a15(r59,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a18(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 55(l0): point = 1
   Insn 54(l0): point = 3
   Insn 53(l0): point = 5
   Insn 52(l0): point = 7
   Insn 62(l0): point = 9
   Insn 60(l0): point = 12
   Insn 45(l0): point = 14
   Insn 44(l0): point = 16
   Insn 43(l0): point = 18
   Insn 42(l0): point = 20
   Insn 39(l0): point = 22
   Insn 38(l0): point = 24
   Insn 36(l0): point = 26
   Insn 34(l0): point = 28
   Insn 33(l0): point = 30
   Insn 32(l0): point = 32
   Insn 31(l0): point = 34
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 24(l0): point = 44
   Insn 23(l0): point = 46
   Insn 63(l0): point = 48
   Insn 22(l0): point = 50
   Insn 19(l0): point = 52
   Insn 18(l0): point = 54
   Insn 17(l0): point = 56
   Insn 14(l0): point = 59
   Insn 13(l0): point = 61
   Insn 12(l0): point = 63
   Insn 64(l0): point = 65
   Insn 8(l0): point = 67
   Insn 7(l0): point = 69
   Insn 3(l0): point = 71
   Insn 2(l0): point = 73
 a0(r53): [31..73] [4..11]
 a1(r54): [21..71] [6..11]
 a2(r74): [8..9]
 a3(r48): [19..28]
 a4(r68): [23..34]
 a5(r71): [23..24]
 a6(r47): [29..30]
 a7(r46): [31..32]
 a8(r45): [38..39]
 a9(r67): [40..41]
 a10(r62): [45..52]
 a11(r66): [45..46]
 a12(r64): [47..48]
 a13(r65): [47..50]
 a14(r60): [60..61]
 a15(r59): [60..63]
 a16(r56): [64..65]
 a17(r42): [64..67]
 a18(r55): [68..69]
Compressing live ranges: from 76 to 22 - 28%
Ranges after the compression:
 a0(r53): [6..21] [0..1]
 a1(r54): [0..21]
 a2(r74): [0..1]
 a3(r48): [2..3]
 a4(r68): [2..7]
 a5(r71): [2..3]
 a6(r47): [4..5]
 a7(r46): [6..7]
 a8(r45): [8..9]
 a9(r67): [10..11]
 a10(r62): [12..15]
 a11(r66): [12..13]
 a12(r64): [14..15]
 a13(r65): [14..15]
 a14(r60): [16..17]
 a15(r59): [16..17]
 a16(r56): [18..19]
 a17(r42): [18..19]
 a18(r55): [20..21]
+++Allocating 152 bytes for conflict table (uncompressed size 152)
;; a0(r53,l0) conflicts: a2(r74,l0) a1(r54,l0) a4(r68,l0) a7(r46,l0) a8(r45,l0) a9(r67,l0) a11(r66,l0) a10(r62,l0) a12(r64,l0) a13(r65,l0) a14(r60,l0) a15(r59,l0) a16(r56,l0) a17(r42,l0) a18(r55,l0)
;;     total conflict hard regs: 3 8-15
;;     conflict hard regs: 3 8-15

;; a1(r54,l0) conflicts: a2(r74,l0) a0(r53,l0) a3(r48,l0) a5(r71,l0) a4(r68,l0) a6(r47,l0) a7(r46,l0) a8(r45,l0) a9(r67,l0) a11(r66,l0) a10(r62,l0) a12(r64,l0) a13(r65,l0) a14(r60,l0) a15(r59,l0) a16(r56,l0) a17(r42,l0) a18(r55,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r74,l0) conflicts: a0(r53,l0) a1(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a1(r54,l0) a5(r71,l0) a4(r68,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a4(r68,l0) conflicts: a0(r53,l0) a1(r54,l0) a3(r48,l0) a5(r71,l0) a6(r47,l0) a7(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r71,l0) conflicts: a1(r54,l0) a3(r48,l0) a4(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r47,l0) conflicts: a1(r54,l0) a4(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r46,l0) conflicts: a0(r53,l0) a1(r54,l0) a4(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r45,l0) conflicts: a0(r53,l0) a1(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r67,l0) conflicts: a0(r53,l0) a1(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r62,l0) conflicts: a0(r53,l0) a1(r54,l0) a11(r66,l0) a12(r64,l0) a13(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r66,l0) conflicts: a0(r53,l0) a1(r54,l0) a10(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r64,l0) conflicts: a0(r53,l0) a1(r54,l0) a10(r62,l0) a13(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r65,l0) conflicts: a0(r53,l0) a1(r54,l0) a10(r62,l0) a12(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r60,l0) conflicts: a0(r53,l0) a1(r54,l0) a15(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r59,l0) conflicts: a0(r53,l0) a1(r54,l0) a14(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r56,l0) conflicts: a0(r53,l0) a1(r54,l0) a17(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r42,l0) conflicts: a0(r53,l0) a1(r54,l0) a16(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r55,l0) conflicts: a0(r53,l0) a1(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r53)<->a6(r47)@24:shuffle
  cp1:a6(r47)<->a7(r46)@24:shuffle
  cp2:a3(r48)<->a6(r47)@24:shuffle
  cp3:a11(r66)<->a12(r64)@17:shuffle
  cp4:a11(r66)<->a13(r65)@17:shuffle
  cp5:a15(r59)<->a16(r56)@125:shuffle
  cp6:a15(r59)<->a17(r42)@125:shuffle
  pref0:a1(r54)<-hr11@1600
  pref1:a0(r53)<-hr10@1600
  pref2:a1(r54)<-hr12@398
  pref3:a0(r53)<-hr2@2000
  pref4:a1(r54)<-hr3@2000
  pref5:a3(r48)<-hr11@24
  regions=1, blocks=8, points=22
    allocnos=19 (big 0), copies=7, conflicts=0, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r53 1r54 2r74 3r48 4r68 5r71 6r47 7r46 8r45 9r67 10r62 11r66 12r64 13r65 14r60 15r59 16r56 17r42 18r55
    modified regnos: 42 45 46 47 48 53 54 55 56 59 60 62 64 65 66 67 68 71 74
    border:
    Pressure: AR_REGS=5
 Removing pref1:hr10@1600
 Removing pref2:hr12@398
 Removing pref0:hr11@1600
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@98816
          2:( 2-11 13-15)@4872
            3:( 2-7)@23992
              4:( 2 4-7)@23992
      Allocno a0r53 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Allocno a1r54 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a4r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 5:a15r59-a16r56 (freq=125):
        Result (freq=4000): a15r59(2000) a16r56(2000)
      Forming thread by copy 1:a6r47-a7r46 (freq=24):
        Result (freq=796): a6r47(398) a7r46(398)
      Forming thread by copy 2:a3r48-a6r47 (freq=24):
        Result (freq=1393): a3r48(597) a6r47(398) a7r46(398)
      Forming thread by copy 3:a11r66-a12r64 (freq=17):
        Result (freq=548): a11r66(274) a12r64(274)
      Pushing a13(r65,l0)(cost 0)
      Pushing a5(r71,l0)(cost 0)
      Pushing a10(r62,l0)(cost 0)
      Pushing a12(r64,l0)(cost 0)
      Pushing a11(r66,l0)(cost 0)
      Pushing a4(r68,l0)(cost 0)
      Pushing a7(r46,l0)(cost 0)
      Pushing a6(r47,l0)(cost 0)
      Pushing a3(r48,l0)(cost 0)
      Pushing a2(r74,l0)(cost 0)
      Pushing a18(r55,l0)(cost 0)
      Pushing a17(r42,l0)(cost 0)
      Pushing a14(r60,l0)(cost 0)
        Making a1(r54,l0) colorable
      Pushing a1(r54,l0)(cost 11996)
        Making a0(r53,l0) colorable
      Pushing a0(r53,l0)(cost 11996)
      Pushing a9(r67,l0)(cost 0)
      Pushing a8(r45,l0)(cost 0)
      Pushing a16(r56,l0)(cost 0)
      Pushing a15(r59,l0)(cost 0)
      Popping a15(r59,l0)  -- assign reg 8
      Popping a16(r56,l0)  -- assign reg 8
      Popping a8(r45,l0)  -- assign reg 8
      Popping a9(r67,l0)  -- assign reg 8
      Popping a0(r53,l0)  -- assign reg 2
      Popping a1(r54,l0)  -- assign reg 3
      Popping a14(r60,l0)  -- assign reg 9
      Popping a17(r42,l0)  -- assign reg 9
      Popping a18(r55,l0)  -- assign reg 8
      Popping a2(r74,l0)  -- assign reg 8
      Popping a3(r48,l0)  -- assign reg 11
      Popping a6(r47,l0)  -- assign reg 2
      Popping a7(r46,l0)  -- assign reg 11
      Popping a4(r68,l0)  -- assign reg 8
      Popping a11(r66,l0)  -- assign reg 8
      Popping a12(r64,l0)  -- assign reg 8
      Popping a10(r62,l0)  -- assign reg 9
      Popping a5(r71,l0)  -- assign reg 2
      Popping a13(r65,l0)  -- assign reg 10
Disposition:
   17:r42  l0     9    8:r45  l0     8    7:r46  l0    11    6:r47  l0     2
    3:r48  l0    11    0:r53  l0     2    1:r54  l0     3   18:r55  l0     8
   16:r56  l0     8   15:r59  l0     8   14:r60  l0     9   10:r62  l0     9
   12:r64  l0     8   13:r65  l0    10   11:r66  l0     8    9:r67  l0     8
    4:r68  l0     8    5:r71  l0     2    2:r74  l0     8
New iteration of spill/restore move
+++Costs: overall -8048, reg -8048, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


txDone

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={4d} r1={1d,10u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,7u} r8={3d} r9={3d} r10={6d,3u} r11={5d,2u} r12={5d,2u} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={1d,6u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r42={1d,1u} r45={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,2u} r53={1d,2u} r54={1d,2u} r55={1d,1u} r56={1d,1u} r59={1d,1u} r60={1d,1u} r62={1d,2u} r64={1d,1u} r65={1d,1u,1e} r66={1d,1u} r67={1d,1u} r68={1d,3u,1e} r71={1d,1u} r74={1d,1u} 
;;    total ref usage 183{117d,64u,2e} in 35{32 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 53 54 55 56 59 60
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v:SI 53 [ delay ])
        (reg:SI 2 a2 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1397 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ delay ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 54 [ func ])
        (reg:SI 3 a3 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1397 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ func ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 55)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC87") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 7 10 2 (set (reg:SI 42 [ D.6182 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 55)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 55)
        (nil)))
(note 10 8 64 2 NOTE_INSN_DELETED)
(insn 64 10 12 2 (set (reg:HI 56)
        (const_int 1538 [0x602])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 1538 [0x602])
        (nil)))
(insn 12 64 13 2 (set (reg:SI 59)
        (and:SI (reg:SI 42 [ D.6182 ])
            (subreg:SI (reg:HI 56) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 56)
        (expr_list:REG_DEAD (reg:SI 42 [ D.6182 ])
            (nil))))
(insn 13 12 14 2 (set (reg:SI 60)
        (const_int 1026 [0x402])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1026 [0x402])
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:SI 59)
                (reg:SI 60))
            (label_ref 25)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1399 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 60)
        (expr_list:REG_DEAD (reg:SI 59)
            (int_list:REG_BR_PROB 8629 (nil))))
 -> 25)
;;  succ:       3 [13.7%]  (FALLTHRU)
;;              4 [86.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54

;; basic block 3, loop depth 0, count 0, freq 1371, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [13.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 62 64 65 66
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 16 15 17 3 NOTE_INSN_DELETED)
(insn 17 16 18 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC88") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1400 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 312 [0x138])))
        (nil)))
(call_insn 18 17 19 3 (call (mem:SI (symbol_ref:SI ("rxschedInit") [flags 0x3]  <function_decl 0x100b66a20 rxschedInit>) [0 rxschedInit S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1400 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 19 18 22 3 (set (reg/f:SI 62)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC87") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1401 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 22 19 63 3 (set (reg:HI 65 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 62)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1401 45 {movhi_internal}
     (nil))
(insn 63 22 23 3 (set (reg:HI 64)
        (const_int 512 [0x200])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1401 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 512 [0x200])
        (nil)))
(insn 23 63 24 3 (set (reg:SI 66)
        (ior:SI (subreg:SI (reg:HI 65 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 64) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1401 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 65 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 64)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 65 [ LMIC.opmode ]) 0)
                    (const_int 512 [0x200]))
                (nil)))))
(insn 24 23 25 3 (set (mem/j/c:HI (plus:SI (reg/f:SI 62)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 66) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1401 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 66)
        (expr_list:REG_DEAD (reg/f:SI 62)
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [86.3%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 67
(code_label 25 24 26 4 124 "" [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:SI 67)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC87") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1411 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 28 27 29 4 (set (reg:SI 45 [ D.6183 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 67)
                    (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1411 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 67)
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:SI 45 [ D.6183 ])
                (const_int 7 [0x7]))
            (label_ref 48)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1411 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6183 ])
        (int_list:REG_BR_PROB 8009 (nil)))
 -> 48)
;;  succ:       5 [19.9%]  (FALLTHRU)
;;              6 [80.1%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54

;; basic block 5, loop depth 0, count 0, freq 1991, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [19.9%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(1){ }u33(7){ }u34(16){ }u35(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 46 47 48 68 71
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 68)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC87") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1412 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 32 31 33 5 (set (reg:SI 46 [ D.6184 ])
        (mem/j/c:SI (reg/f:SI 68) [0 LMIC.txend+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1412 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (reg/f:SI 68) [0 LMIC.txend+0 S4 A32])
        (nil)))
(insn 33 32 34 5 (set (reg:SI 47 [ D.6184 ])
        (plus:SI (reg:SI 46 [ D.6184 ])
            (reg/v:SI 53 [ delay ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1412 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 53 [ delay ])
        (expr_list:REG_DEAD (reg:SI 46 [ D.6184 ])
            (nil))))
(insn 34 33 36 5 (set (reg:SI 48 [ D.6184 ])
        (plus:SI (reg:SI 47 [ D.6184 ])
            (const_int -10 [0xfffffffffffffff6]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1412 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 47 [ D.6184 ])
        (nil)))
(insn 36 34 38 5 (set (mem/j/c:SI (plus:SI (reg/f:SI 68)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (reg:SI 48 [ D.6184 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1412 44 {movsi_internal}
     (nil))
(insn 38 36 39 5 (set (reg:QI 71)
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1413 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 68)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (reg:QI 71)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1413 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 71)
        (expr_list:REG_DEAD (reg/f:SI 68)
            (nil))))
(note 40 39 41 5 NOTE_INSN_DELETED)
(note 41 40 42 5 NOTE_INSN_DELETED)
(insn 42 41 43 5 (set (reg:SI 12 a12)
        (reg/v/f:SI 54 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1414 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 54 [ func ])
        (nil)))
(insn 43 42 44 5 (set (reg:SI 11 a11)
        (plus:SI (reg:SI 48 [ D.6184 ])
            (const_int -125 [0xffffffffffffff83]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1414 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6184 ])
        (nil)))
(insn 44 43 45 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC89") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1414 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 45 44 60 5 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1414 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(jump_insn 60 45 61 5 (set (pc)
        (label_ref 58)) 78 {jump}
     (nil)
 -> 58)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 61 60 48)
;; basic block 6, loop depth 0, count 0, freq 8009, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4 [80.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(1){ }u53(7){ }u54(16){ }u55(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 53 54
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 74
(code_label 48 61 49 6 125 "" [1 uses])
(note 49 48 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 51 49 62 6 NOTE_INSN_DELETED)
(insn 62 51 52 6 (set (reg/f:SI 74)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC87") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1419 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 52 62 53 6 (set (reg:SI 12 a12)
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 74)
                    (const_int 17 [0x11])) [0 LMIC.dndr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1419 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 74)
        (nil)))
(insn 53 52 54 6 (set (reg:SI 11 a11)
        (reg/v/f:SI 54 [ func ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1419 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 54 [ func ])
        (nil)))
(insn 54 53 55 6 (set (reg:SI 10 a10)
        (reg/v:SI 53 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1419 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 53 [ delay ])
        (nil)))
(call_insn 55 54 58 6 (call (mem:SI (symbol_ref:SI ("schedRx12") [flags 0x3]  <function_decl 0x100bb2000 schedRx12>) [0 schedRx12 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1419 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(1){ }u65(7){ }u66(16){ }u67(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 58 55 59 7 123 "" [1 uses])
(note 59 58 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function updataDone (updataDone, funcdef_no=88, decl_uid=3820, cgraph_uid=88, symbol_order=96)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 17.
verify found no changes in insn with uid = 17.
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 47 uninteresting
Reg 48 uninteresting
Reg 42: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Found def insn 8 for 42 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 47: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 51: (insn_list:REG_DEP_TRUE 17 (nil))

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r51,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 17(l0): point = 4
   Insn 12(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
 a0(r51): [3..4]
 a1(r42): [3..8]
 a2(r48): [9..10]
 a3(r47): [11..12]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r51): [0..1]
 a1(r42): [0..1]
 a2(r48): [2..3]
 a3(r47): [4..5]
+++Allocating 16 bytes for conflict table (uncompressed size 32)
;; a0(r51,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a1(r42,l0) conflicts: a0(r51,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a2(r48,l0) conflicts:;; a3(r47,l0) conflicts:  cp0:a2(r48)<->a3(r47)@125:shuffle
  pref0:a0(r51)<-hr10@125
  pref1:a1(r42)<-hr10@125
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r51 1r42 2r48 3r47
    modified regnos: 42 47 48 51
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@16000
          2:( 2-10 12-15)@17000
      Allocno a0r51 of AR_REGS(14) has 13 avail. regs  2-10 12-15, node:  2-10 12-15 (confl regs =  0 1 11 16-34)
      Allocno a1r42 of AR_REGS(14) has 13 avail. regs  2-10 12-15, node:  2-10 12-15 (confl regs =  0 1 11 16-34)
      Allocno a2r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a2r48-a3r47 (freq=125):
        Result (freq=4000): a2r48(2000) a3r47(2000)
      Pushing a1(r42,l0)(cost 0)
      Pushing a0(r51,l0)(cost 0)
      Pushing a3(r47,l0)(cost 0)
      Pushing a2(r48,l0)(cost 0)
      Popping a2(r48,l0)  -- assign reg 8
      Popping a3(r47,l0)  -- assign reg 8
      Popping a0(r51,l0)  -- assign reg 8
      Popping a1(r42,l0)  -- assign reg 10
Disposition:
    1:r42  l0    10    3:r47  l0     8    2:r48  l0     8    0:r51  l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


updataDone

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={2d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={1d,1u} r47={1d,1u} r48={1d,1u} r51={1d,1u} 
;;    total ref usage 57{43d,14u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 47 48 51
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 47)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC90") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 48)
        (plus:SI (reg/f:SI 47)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 47)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6185 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 48)
                    (const_int 39 [0x27])) [0 LMIC.rxDelay+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (nil)))
(note 9 8 11 2 NOTE_INSN_DELETED)
(note 11 9 12 2 NOTE_INSN_DELETED)
(insn 12 11 17 2 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC91") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("setupRx1DnData") [flags 0x3]  <function_decl 0x100bc31b0 setupRx1DnData>)
        (nil)))
(insn 17 12 13 2 (set (reg:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC92") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 13 17 14 2 (set (reg:SI 10 a10)
        (mult:SI (reg:SI 42 [ D.6185 ])
            (reg:SI 51))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 51)
        (expr_list:REG_DEAD (reg:SI 42 [ D.6185 ])
            (nil))))
(call_insn 14 13 0 2 (call (mem:SI (symbol_ref:SI ("txDone") [flags 0x3]  <function_decl 0x100bb21b0 txDone>) [0 txDone S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1609 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function jreqDone (jreqDone, funcdef_no=83, decl_uid=3803, cgraph_uid=83, symbol_order=91)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


jreqDone

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={2d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 49{39d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(note 6 3 7 2 NOTE_INSN_DELETED)
(note 7 6 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC93") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1567 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("setupRx1Jacc") [flags 0x3]  <function_decl 0x100bb2af8 setupRx1Jacc>)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC94") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1567 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 312500 [0x4c4b4])
        (nil)))
(call_insn 10 9 0 2 (call (mem:SI (symbol_ref:SI ("txDone") [flags 0x3]  <function_decl 0x100bb21b0 txDone>) [0 txDone S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1567 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function micB0 (micB0, funcdef_no=36, decl_uid=3422, cgraph_uid=36, symbol_order=37)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 46: local to bb 2 def dominates all uses has unique first use
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 50 uninteresting
Reg 55 uninteresting
Reg 58 uninteresting
Reg 57 uninteresting
Found def insn 3 for 46 to be not moveable
Ignoring reg 49 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 49: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 21 (nil))

Pass 0 for finding pseudo/allocno costs

    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r55,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r46,l0) best AR_REGS, allocno AR_REGS

  a0(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r49,l0) costs: ACC_REG:24000,24000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128000,128000 MEM:24000,24000
  a2(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r50,l0) costs: ACC_REG:18000,18000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:96000,96000 MEM:24000,24000
  a4(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 35(l0): point = 4
   Insn 33(l0): point = 6
   Insn 32(l0): point = 8
   Insn 31(l0): point = 10
   Insn 29(l0): point = 12
   Insn 27(l0): point = 14
   Insn 23(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 17(l0): point = 24
   Insn 15(l0): point = 26
   Insn 13(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
 a0(r46): [5..38]
 a1(r49): [13..34]
 a2(r57): [15..16]
 a3(r50): [17..32]
 a4(r58): [17..18]
 a5(r47): [17..36]
 a6(r55): [21..22]
Compressing live ranges: from 41 to 6 - 14%
Ranges after the compression:
 a0(r46): [0..5]
 a1(r49): [0..5]
 a2(r57): [0..1]
 a3(r50): [2..5]
 a4(r58): [2..3]
 a5(r47): [2..5]
 a6(r55): [4..5]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r46,l0) conflicts: a2(r57,l0) a1(r49,l0) a4(r58,l0) a3(r50,l0) a5(r47,l0) a6(r55,l0)
;;     total conflict hard regs: 2 4 5 8-15
;;     conflict hard regs: 2 4 5 8-15

;; a1(r49,l0) conflicts: a2(r57,l0) a0(r46,l0) a4(r58,l0) a3(r50,l0) a5(r47,l0) a6(r55,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a2(r57,l0) conflicts: a0(r46,l0) a1(r49,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a3(r50,l0) conflicts: a0(r46,l0) a1(r49,l0) a4(r58,l0) a5(r47,l0) a6(r55,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a4(r58,l0) conflicts: a0(r46,l0) a1(r49,l0) a3(r50,l0) a5(r47,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a5(r47,l0) conflicts: a0(r46,l0) a1(r49,l0) a4(r58,l0) a3(r50,l0) a6(r55,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a6(r55,l0) conflicts: a0(r46,l0) a1(r49,l0) a3(r50,l0) a5(r47,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

  cp0:a2(r57)<->a5(r47)@125:shuffle
  cp1:a2(r57)<->a4(r58)@125:shuffle
  cp2:a2(r57)<->a3(r50)@125:shuffle
  pref0:a0(r46)<-hr3@2000
  pref1:a5(r47)<-hr4@2000
  pref2:a0(r46)<-hr11@2000
  regions=1, blocks=3, points=6
    allocnos=7 (big 0), copies=3, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r46 1r49 2r57 3r50 4r58 5r47 6r55
    modified regnos: 46 47 49 50 55 57 58
    border:
    Pressure: AR_REGS=7
 Removing pref2:hr11@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 3 4 6-15)@168000
          2:( 3 6 7)@24000
      Allocno a0r46 of AR_REGS(14) has 3 avail. regs  3 6 7, node:  3 6 7 (confl regs =  0-2 4 5 8-34)
      Allocno a1r49 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Allocno a2r57 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Allocno a3r50 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Allocno a4r58 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Allocno a5r47 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Allocno a6r55 of AR_REGS(14) has 12 avail. regs  3 4 6-15, node:  3 4 6-15 (confl regs =  0-2 5 16-34)
      Forming thread by copy 0:a2r57-a5r47 (freq=125):
        Result (freq=4000): a2r57(2000) a5r47(2000)
      Pushing a6(r55,l0)(cost 0)
      Pushing a4(r58,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Pushing a2(r57,l0)(cost 0)
        Making a0(r46,l0) colorable
      Pushing a0(r46,l0)(cost 12000)
      Pushing a3(r50,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Popping a1(r49,l0)  -- assign reg 8
      Popping a3(r50,l0)  -- assign reg 9
      Popping a0(r46,l0)  -- assign reg 3
      Popping a2(r57,l0)  -- assign reg 9
      Popping a5(r47,l0)  -- assign reg 4
      Popping a4(r58,l0)  -- assign reg 10
      Popping a6(r55,l0)  -- assign reg 10
Disposition:
    0:r46  l0     3    5:r47  l0     4    1:r49  l0     8    3:r50  l0     9
    6:r55  l0    10    2:r57  l0     9    4:r58  l0    10
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


micB0

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 10[a10] 11[a11]
;;  ref usage 	r0={3d} r1={1d,4u} r2={1d,1u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d} r7={1d,2u} r8={2d} r9={2d} r10={4d,2u} r11={4d,2u} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={1d,1u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r46={1d,1u} r47={1d,1u,1e} r49={1d,7u} r50={1d,5u} r55={1d,1u} r57={1d,1u} r58={1d,1u} 
;;    total ref usage 110{75d,34u,1e} in 20{18 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 46 47 49 50 55 57 58
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 46 [ seqno ])
        (reg:SI 3 a3 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:137 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ seqno ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 47 [ dndir ])
        (reg:SI 4 a4 [ dndir ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:137 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ dndir ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_DELETED)
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 49)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC95") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 50)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 11 10 13 2 (set (mem:SI (reg/f:SI 49) [0 MEM[(void *)&AESAUX]+0 S4 A32])
        (reg:SI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (nil))
(insn 13 11 15 2 (set (mem:SI (plus:SI (reg/f:SI 49)
                (const_int 4 [0x4])) [0 MEM[(void *)&AESAUX]+4 S4 A32])
        (reg:SI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (nil))
(insn 15 13 17 2 (set (mem:SI (plus:SI (reg/f:SI 49)
                (const_int 8 [0x8])) [0 MEM[(void *)&AESAUX]+8 S4 A32])
        (reg:SI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (nil))
(insn 17 15 19 2 (set (mem:SI (plus:SI (reg/f:SI 49)
                (const_int 12 [0xc])) [0 MEM[(void *)&AESAUX]+12 S4 A32])
        (reg:SI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:138 44 {movsi_internal}
     (nil))
(insn 19 17 20 2 (set (reg:QI 55)
        (const_int 73 [0x49])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:139 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 73 [0x49])
        (nil)))
(insn 20 19 21 2 (set (mem:QI (reg/f:SI 49) [0 MEM[(u1_t *)&AESAUX]+0 S1 A32])
        (reg:QI 55)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:139 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 55)
        (nil)))
(insn 21 20 23 2 (set (reg:SI 58)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:140 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 23 21 25 2 (set (reg:SI 57)
        (if_then_else:SI (ne (reg/v:SI 47 [ dndir ])
                (const_int 0 [0]))
            (reg:SI 58)
            (reg:SI 50))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:140 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 58)
        (expr_list:REG_DEAD (reg:SI 50)
            (expr_list:REG_DEAD (reg/v:SI 47 [ dndir ])
                (expr_list:REG_EQUAL (ne:SI (reg/v:SI 47 [ dndir ])
                        (const_int 0 [0]))
                    (nil))))))
(note 25 23 27 2 NOTE_INSN_DELETED)
(insn 27 25 29 2 (set (mem:QI (plus:SI (reg/f:SI 49)
                (const_int 5 [0x5])) [0 MEM[(u1_t *)&AESAUX + 5B]+0 S1 A8])
        (subreg:QI (reg:SI 57) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:140 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 57)
        (nil)))
(insn 29 27 30 2 (set (mem:QI (plus:SI (reg/f:SI 49)
                (const_int 15 [0xf])) [0 MEM[(u1_t *)&AESAUX + 15B]+0 S1 A8])
        (reg:QI 5 a5 [ len ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:141 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 49)
        (expr_list:REG_DEAD (reg:QI 5 a5 [ len ])
            (nil))))
(note 30 29 31 2 NOTE_INSN_DELETED)
(insn 31 30 32 2 (set (reg:SI 11 a11)
        (reg:SI 2 a2 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:142 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ devaddr ])
        (nil)))
(insn 32 31 33 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC96") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:142 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
                (const_int 6 [0x6])))
        (nil)))
(call_insn 33 32 34 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:142 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 34 33 35 2 NOTE_INSN_DELETED)
(insn 35 34 36 2 (set (reg:SI 11 a11)
        (reg/v:SI 46 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:143 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 46 [ seqno ])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC97") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:143 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
                (const_int 10 [0xa])))
        (nil)))
(call_insn 37 36 0 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:143 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_verifyMic (aes_verifyMic, funcdef_no=37, decl_uid=3430, cgraph_uid=37, symbol_order=38)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 51.
verify found no changes in insn with uid = 51.
deleting insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 56: local to bb 2 def dominates all uses has unique first use
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 54: local to bb 2 def dominates all uses has unique first use
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 68: local to bb 2 def dominates all uses has unique first use
Reg 67 uninteresting
Reg 65 uninteresting
Found def insn 32 for 43 to be not moveable
Found def insn 2 for 50 to be not moveable
Found def insn 6 for 54 to be not moveable
Found def insn 7 for 56 to be not moveable
Ignoring reg 68 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 67: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 68: (insn_list:REG_DEP_TRUE 39 (nil))

Pass 0 for finding pseudo/allocno costs

    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r65,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r56,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r54,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r50,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r65,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r66,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r56,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a6(r54,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a7(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 49(l0): point = 0
   Insn 48(l0): point = 2
   Insn 40(l0): point = 4
   Insn 51(l0): point = 6
   Insn 39(l0): point = 8
   Insn 37(l0): point = 10
   Insn 35(l0): point = 12
   Insn 34(l0): point = 14
   Insn 32(l0): point = 16
   Insn 31(l0): point = 18
   Insn 30(l0): point = 20
   Insn 29(l0): point = 22
   Insn 28(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 22(l0): point = 32
   Insn 17(l0): point = 34
   Insn 16(l0): point = 36
   Insn 15(l0): point = 38
   Insn 14(l0): point = 40
   Insn 13(l0): point = 42
   Insn 6(l0): point = 44
   Insn 2(l0): point = 46
   Insn 8(l0): point = 48
   Insn 7(l0): point = 50
 a0(r65): [3..4]
 a1(r68): [5..8]
 a2(r67): [5..6]
 a3(r66): [5..10]
 a4(r43): [11..16]
 a5(r56): [15..50]
 a6(r54): [15..44]
 a7(r50): [31..46]
Compressing live ranges: from 53 to 8 - 15%
Ranges after the compression:
 a0(r65): [0..1]
 a1(r68): [2..3]
 a2(r67): [2..3]
 a3(r66): [2..3]
 a4(r43): [4..5]
 a5(r56): [4..7]
 a6(r54): [4..7]
 a7(r50): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r65,l0) conflicts:;; a1(r68,l0) conflicts: a2(r67,l0) a3(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r67,l0) conflicts: a1(r68,l0) a3(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r66,l0) conflicts: a1(r68,l0) a2(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r43,l0) conflicts: a5(r56,l0) a6(r54,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r56,l0) conflicts: a4(r43,l0) a6(r54,l0) a7(r50,l0)
;;     total conflict hard regs: 2-6 8-15
;;     conflict hard regs: 2-6 8-15

;; a6(r54,l0) conflicts: a4(r43,l0) a5(r56,l0) a7(r50,l0)
;;     total conflict hard regs: 3-5 8-15
;;     conflict hard regs: 3-5 8-15

;; a7(r50,l0) conflicts: a5(r56,l0) a6(r54,l0)
;;     total conflict hard regs: 3-6 8-15
;;     conflict hard regs: 3-6 8-15

  cp0:a3(r66)<->a4(r43)@125:shuffle
  cp1:a0(r65)<->a3(r66)@125:shuffle
  cp2:a0(r65)<->a2(r67)@125:shuffle
  cp3:a0(r65)<->a1(r68)@125:shuffle
  pref0:a5(r56)<-hr7@1000
  pref1:a7(r50)<-hr2@2000
  pref2:a6(r54)<-hr6@2000
  pref3:a5(r56)<-hr13@1000
  pref4:a7(r50)<-hr11@2000
  pref5:a6(r54)<-hr11@1000
  pref6:a4(r43)<-hr10@2000
  pref7:a0(r65)<-hr2@2000
  pref8:a5(r56)<-hr10@125
  pref9:a6(r54)<-hr10@125
  pref10:a3(r66)<-hr10@125
  regions=1, blocks=3, points=8
    allocnos=8 (big 0), copies=4, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r65 1r68 2r67 3r66 4r43 5r56 6r54 7r50
    modified regnos: 43 50 54 56 65 66 67 68
    border:
    Pressure: AR_REGS=7
 Removing pref6:hr10@2000
 Removing pref8:hr10@125
 Removing pref3:hr13@1000
 Removing pref9:hr10@125
 Removing pref5:hr11@1000
 Removing pref4:hr11@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@72500
          2:( 2-7)@24000
            3:( 2 6 7)@32000
              4:( 2 7)@24000
                5:( 7)@18000
      Allocno a0r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r56 of AR_REGS(14) has 1 avail. regs  7, node:  7 (confl regs =  0-6 8-34)
      Allocno a6r54 of AR_REGS(14) has 3 avail. regs  2 6 7, node:  2 6 7 (confl regs =  0 1 3-5 8-34)
      Allocno a7r50 of AR_REGS(14) has 2 avail. regs  2 7, node:  2 7 (confl regs =  0 1 3-6 8-34)
      Forming thread by copy 0:a3r66-a4r43 (freq=125):
        Result (freq=4000): a3r66(2000) a4r43(2000)
      Forming thread by copy 1:a0r65-a3r66 (freq=125):
        Result (freq=6000): a0r65(2000) a3r66(2000) a4r43(2000)
      Pushing a2(r67,l0)(cost 0)
      Pushing a1(r68,l0)(cost 0)
      Pushing a3(r66,l0)(cost 0)
      Pushing a0(r65,l0)(cost 0)
      Pushing a4(r43,l0)(cost 0)
        Making a6(r54,l0) colorable
      Pushing a6(r54,l0)(cost 16000)
        Making a7(r50,l0) colorable
      Pushing a7(r50,l0)(cost 12000)
        Making a5(r56,l0) colorable
      Pushing a5(r56,l0)(cost 18000)
      Popping a5(r56,l0)  -- assign reg 7
      Popping a7(r50,l0)  -- assign reg 2
      Popping a6(r54,l0)  -- assign reg 6
      Popping a4(r43,l0)  -- assign reg 2
      Popping a0(r65,l0)  -- assign reg 2
      Popping a3(r66,l0)  -- assign reg 10
      Popping a1(r68,l0)  -- assign reg 2
      Popping a2(r67,l0)  -- assign reg 6
Disposition:
    4:r43  l0     2    7:r50  l0     2    6:r54  l0     6    5:r56  l0     7
    0:r65  l0     2    3:r66  l0    10    2:r67  l0     6    1:r68  l0     2
New iteration of spill/restore move
+++Costs: overall -14250, reg -14250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_verifyMic

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 6[a6] 7[a7] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={5d} r1={1d,6u} r2={2d,3u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={2d,3u} r8={4d} r9={4d} r10={8d,6u} r11={7d,3u} r12={7d,3u} r13={5d,1u} r14={4d} r15={4d} r16={1d,2u} r17={1d,1u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r43={1d,1u} r50={1d,1u} r54={1d,2u} r56={1d,3u} r65={1d,1u} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 183{139d,43u,1e} in 26{22 regular + 4 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 2 [a2] 7 [a7] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 50 54 56 65 66 67 68
(note 11 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 7 11 8 2 (set (reg:SI 56)
        (reg:SI 7 a7)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:147 44 {movsi_internal}
     (nil))
(insn 8 7 2 2 (set (reg/f:SI 7 a7 [ len ])
        (unspec_volatile:SI [
                (const_int 0 [0])
            ] 1)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:147 90 {set_frame_ptr}
     (nil))
(insn 2 8 3 2 (set (reg/v/f:SI 50 [ key ])
        (reg:SI 2 a2 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:147 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ key ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 6 2 NOTE_INSN_DELETED)
(insn 6 5 10 2 (set (reg/v/f:SI 54 [ pdu ])
        (reg:SI 6 a6 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:147 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 a6 [ pdu ])
        (nil)))
(note 10 6 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg:SI 13 a13)
        (reg:SI 56)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:148 44 {movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 12 a12)
        (reg:SI 5 a5 [ dndir ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:148 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ dndir ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 11 a11)
        (reg:SI 4 a4 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:148 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ seqno ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 10 a10)
        (reg:SI 3 a3 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:148 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ devaddr ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:SI (symbol_ref:SI ("micB0") [flags 0x3]  <function_decl 0x100b50ca8 micB0>) [0 micB0 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:148 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_DEAD (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(note 18 17 21 2 NOTE_INSN_DELETED)
(note 21 18 22 2 NOTE_INSN_DELETED)
(insn 22 21 23 2 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:149 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 23 22 24 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 50 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:149 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 50 [ key ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC98") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:149 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 25 24 27 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:149 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(note 27 25 28 2 NOTE_INSN_DELETED)
(insn 28 27 29 2 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg:SI 56) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 33 {zero_extendhisi2}
     (nil))
(insn 29 28 30 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 54 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 44 {movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 44 {movsi_internal}
     (nil))
(call_insn 31 30 32 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 32 31 33 2 (set (reg:SI 43 [ D.6191 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 33 32 34 2 NOTE_INSN_DELETED)
(insn 34 33 35 2 (set (reg:SI 10 a10)
        (plus:SI (reg/v/f:SI 54 [ pdu ])
            (reg:SI 56))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 56)
        (expr_list:REG_DEAD (reg/v/f:SI 54 [ pdu ])
            (nil))))
(call_insn/i 35 34 36 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rmsbf4") [flags 0x3]  <function_decl 0x140efa948 os_rmsbf4>) [0 os_rmsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 36 35 37 2 NOTE_INSN_DELETED)
(insn 37 36 39 2 (set (reg:SI 66)
        (minus:SI (reg:SI 43 [ D.6191 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6191 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 39 37 51 2 (set (reg:SI 68)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 51 39 40 2 (set (reg:SI 67)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 40 51 42 2 (set (reg:SI 65)
        (if_then_else:SI (eq (reg:SI 66)
                (const_int 0 [0]))
            (reg:SI 67)
            (reg:SI 68))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:150 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 68)
        (expr_list:REG_DEAD (reg:SI 67)
            (expr_list:REG_DEAD (reg:SI 66)
                (expr_list:REG_EQUAL (eq:SI (reg:SI 66)
                        (const_int 0 [0]))
                    (nil))))))
(note 42 40 48 2 NOTE_INSN_DELETED)
(insn 48 42 49 2 (set (reg/i:SI 2 a2)
        (reg:SI 65)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:151 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65)
        (nil)))
(insn 49 48 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:151 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_cipher (aes_cipher, funcdef_no=42, decl_uid=3458, cgraph_uid=42, symbol_order=43)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 51: def dominates all uses has unique first use
Reg 45: def dominates all uses has unique first use
Reg 46: def dominates all uses has unique first use
Reg 47: def dominates all uses has unique first use
Reg 49: def dominates all uses has unique first use
Reg 50 uninteresting
Reg 52: local to bb 3 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 58 uninteresting
Reg 63 uninteresting
Reg 62 uninteresting
Reg 45 not local to one basic block
Reg 46 not local to one basic block
Reg 47 not local to one basic block
Reg 49 not local to one basic block
Reg 51 not local to one basic block
Ignoring reg 52 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 63: (insn_list:REG_DEP_TRUE 30 (nil))

Pass 0 for finding pseudo/allocno costs

    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r62,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r58,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:4899,4899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26128,26128 MEM:6532,6532
  a1(r51,l0) costs: ACC_REG:7899,7899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:42128,42128 MEM:10532,10532
  a2(r45,l0) costs: ACC_REG:4899,4899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26128,26128 MEM:6532,6532
  a3(r47,l0) costs: ACC_REG:4899,4899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26128,26128 MEM:6532,6532
  a4(r46,l0) costs: ACC_REG:4899,4899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26128,26128 MEM:6532,6532
  a5(r52,l0) costs: ACC_REG:15192,15192 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:81024,81024 MEM:15192,15192
  a6(r62,l0) costs: ACC_REG:3798,3798 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20256,20256 MEM:5064,5064
  a7(r53,l0) costs: ACC_REG:11394,11394 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:60768,60768 MEM:15192,15192
  a8(r63,l0) costs: ACC_REG:3798,3798 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20256,20256 MEM:5064,5064
  a9(r48,l0) costs: ACC_REG:4899,4899 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26128,26128 MEM:6532,6532
  a10(r58,l0) costs: ACC_REG:5697,5697 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30384,30384 MEM:7596,7596
  a11(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 58(l0): point = 1
   Insn 57(l0): point = 3
   Insn 56(l0): point = 5
   Insn 55(l0): point = 7
   Insn 52(l0): point = 9
   Insn 51(l0): point = 11
   Insn 50(l0): point = 13
   Insn 49(l0): point = 15
   Insn 44(l0): point = 17
   Insn 43(l0): point = 19
   Insn 42(l0): point = 21
   Insn 40(l0): point = 23
   Insn 39(l0): point = 25
   Insn 38(l0): point = 27
   Insn 36(l0): point = 29
   Insn 32(l0): point = 31
   Insn 30(l0): point = 33
   Insn 29(l0): point = 35
   Insn 26(l0): point = 37
   Insn 25(l0): point = 39
   Insn 23(l0): point = 41
   Insn 21(l0): point = 43
   Insn 19(l0): point = 45
   Insn 17(l0): point = 47
   Insn 16(l0): point = 49
   Insn 15(l0): point = 51
   Insn 13(l0): point = 54
   Insn 9(l0): point = 56
   Insn 6(l0): point = 58
   Insn 5(l0): point = 60
   Insn 4(l0): point = 62
   Insn 3(l0): point = 64
   Insn 2(l0): point = 66
   Insn 8(l0): point = 68
   Insn 7(l0): point = 70
 a0(r49): [6..58]
 a1(r51): [8..70]
 a2(r45): [14..66]
 a3(r47): [22..62]
 a4(r46): [28..64]
 a5(r52): [30..51]
 a6(r62): [30..31]
 a7(r53): [32..49]
 a8(r63): [32..33]
 a9(r48): [32..60]
 a10(r58): [36..39]
 a11(r50): [55..56]
Compressing live ranges: from 73 to 8 - 10%
Ranges after the compression:
 a0(r49): [0..7]
 a1(r51): [0..7]
 a2(r45): [0..7]
 a3(r47): [0..7]
 a4(r46): [0..7]
 a5(r52): [0..5]
 a6(r62): [0..1]
 a7(r53): [2..5]
 a8(r63): [2..3]
 a9(r48): [2..7]
 a10(r58): [4..5]
 a11(r50): [6..7]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r49,l0) conflicts: a6(r62,l0) a5(r52,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r51,l0) conflicts: a6(r62,l0) a5(r52,l0) a0(r49,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 2-6 8-15
;;     conflict hard regs: 2-6 8-15

;; a2(r45,l0) conflicts: a6(r62,l0) a5(r52,l0) a0(r49,l0) a1(r51,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 3-6 8-15
;;     conflict hard regs: 3-6 8-15

;; a3(r47,l0) conflicts: a6(r62,l0) a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 5 6 8-15
;;     conflict hard regs: 5 6 8-15

;; a4(r46,l0) conflicts: a6(r62,l0) a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 4-6
;;     conflict hard regs: 4-6

;; a5(r52,l0) conflicts: a6(r62,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a9(r48,l0) a10(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r62,l0) conflicts: a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r53,l0) conflicts: a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a9(r48,l0) a10(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r63,l0) conflicts: a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a7(r53,l0) a9(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r48,l0) conflicts: a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a8(r63,l0) a7(r53,l0) a10(r58,l0) a11(r50,l0)
;;     total conflict hard regs: 6
;;     conflict hard regs: 6

;; a10(r58,l0) conflicts: a5(r52,l0) a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a7(r53,l0) a9(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r50,l0) conflicts: a0(r49,l0) a1(r51,l0) a2(r45,l0) a3(r47,l0) a4(r46,l0) a9(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a6(r62)<->a9(r48)@79:shuffle
  cp1:a6(r62)<->a8(r63)@79:shuffle
  cp2:a6(r62)<->a7(r53)@79:shuffle
  pref0:a4(r46)<-hr11@1266
  pref1:a3(r47)<-hr11@1266
  pref2:a2(r45)<-hr11@1266
  pref3:a0(r49)<-hr11@1266
  pref4:a1(r51)<-hr7@1000
  pref5:a2(r45)<-hr2@2000
  pref6:a4(r46)<-hr3@2000
  pref7:a3(r47)<-hr4@2000
  pref8:a9(r48)<-hr5@2000
  pref9:a0(r49)<-hr6@2000
  pref10:a1(r51)<-hr12@79
  regions=1, blocks=5, points=8
    allocnos=12 (big 0), copies=3, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r49 1r51 2r45 3r47 4r46 5r52 6r62 7r53 8r63 9r48 10r58 11r50
    modified regnos: 45 46 47 48 49 50 51 52 53 58 62 63
    border:
    Pressure: AR_REGS=9
 Removing pref3:hr11@1266
 Removing pref10:hr12@79
 Removing pref2:hr11@1266
 Removing pref1:hr11@1266
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@112216
          2:( 2-7)@21064
            3:( 2-4 7)@21064
              4:( 2 7)@21064
                5:( 7)@12532
      Allocno a0r49 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r51 of AR_REGS(14) has 1 avail. regs  7, node:  7 (confl regs =  0-6 8-34)
      Allocno a2r45 of AR_REGS(14) has 2 avail. regs  2 7, node:  2 7 (confl regs =  0 1 3-6 8-34)
      Allocno a3r47 of AR_REGS(14) has 4 avail. regs  2-4 7, node:  2-4 7 (confl regs =  0 1 5 6 8-34)
      Allocno a4r46 of AR_REGS(14) has 11 avail. regs  2 3 7-15, ^node:  2-15 (confl regs =  0 1 4-6 16-34)
      Allocno a5r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r48 of AR_REGS(14) has 13 avail. regs  2-5 7-15, ^node:  2-15 (confl regs =  0 1 6 16-34)
      Allocno a10r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a6r62-a9r48 (freq=79):
        Result (freq=2899): a6r62(1266) a9r48(1633)
      Pushing a8(r63,l0)(cost 0)
      Pushing a4(r46,l0)(cost 0)
      Pushing a10(r58,l0)(cost 0)
      Pushing a11(r50,l0)(cost 0)
      Pushing a6(r62,l0)(cost 0)
      Pushing a9(r48,l0)(cost 0)
        Making a0(r49,l0) colorable
      Pushing a0(r49,l0)(cost 10532)
      Pushing a7(r53,l0)(cost 0)
        Making a3(r47,l0) colorable
      Pushing a3(r47,l0)(cost 10532)
      Pushing a5(r52,l0)(cost 0)
        Making a2(r45,l0) colorable
      Pushing a2(r45,l0)(cost 10532)
        Making a1(r51,l0) colorable
      Pushing a1(r51,l0)(cost 12532)
      Popping a1(r51,l0)  -- assign reg 7
      Popping a2(r45,l0)  -- assign reg 2
      Popping a5(r52,l0)  -- assign reg 8
      Popping a3(r47,l0)  -- assign reg 4
      Popping a7(r53,l0)  -- assign reg 9
      Popping a0(r49,l0)  -- assign reg 6
      Popping a9(r48,l0)  -- assign reg 5
      Popping a6(r62,l0)  -- assign reg 5
      Popping a11(r50,l0)  -- assign reg 8
      Popping a10(r58,l0)  -- assign reg 10
      Popping a4(r46,l0)  -- assign reg 3
      Popping a8(r63,l0)  -- assign reg 10
Disposition:
    2:r45  l0     2    4:r46  l0     3    3:r47  l0     4    9:r48  l0     5
    0:r49  l0     6   11:r50  l0     8    1:r51  l0     7    5:r52  l0     8
    7:r53  l0     9   10:r58  l0    10    6:r62  l0     5    8:r63  l0    10
New iteration of spill/restore move
+++Costs: overall -22000, reg -22000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_cipher

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 6[a6] 7[a7] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={5d} r1={1d,8u} r2={1d,1u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={2d,5u} r8={4d} r9={4d} r10={8d,4u} r11={8d,4u} r12={6d,2u} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={1d,3u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r45={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u,1e} r49={1d,1u} r50={1d,1u} r51={1d,2u} r52={1d,7u} r53={1d,5u} r58={1d,2u} r62={1d,1u} r63={1d,1u} 
;;    total ref usage 201{141d,59u,1e} in 35{31 regular + 4 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 7 [a7] 45 46 47 48 49 50 51
(note 11 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 7 11 8 2 (set (reg:SI 51)
        (reg:SI 7 a7)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (nil))
(insn 8 7 2 2 (set (reg/f:SI 7 a7 [ len ])
        (unspec_volatile:SI [
                (const_int 0 [0])
            ] 1)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 90 {set_frame_ptr}
     (nil))
(insn 2 8 3 2 (set (reg/v/f:SI 45 [ key ])
        (reg:SI 2 a2 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ key ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 46 [ devaddr ])
        (reg:SI 3 a3 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ devaddr ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 47 [ seqno ])
        (reg:SI 4 a4 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ seqno ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:SI 48 [ dndir ])
        (reg:SI 5 a5 [ dndir ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ dndir ])
        (nil)))
(insn 6 5 9 2 (set (reg/v/f:SI 49 [ payload ])
        (reg:SI 6 a6 [ payload ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 a6 [ payload ])
        (nil)))
(insn 9 6 10 2 (set (reg/v:SI 50 [ len ])
        (reg:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:180 44 {movsi_internal}
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 13 10 14 2 (set (pc)
        (if_then_else (ge (reg/v:SI 50 [ len ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref:SI 61))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:181 57 {*bfalse}
     (expr_list:REG_DEAD (reg/v:SI 50 [ len ])
        (int_list:REG_BR_PROB 3667 (nil)))
 -> 61)
;;  succ:       4 [36.7%] 
;;              3 [63.3%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46 47 48 49 51

;; basic block 3, loop depth 0, count 0, freq 6333, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [63.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(1){ }u13(7){ }u14(16){ }u15(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46 47 48 49 51
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46 47 48 49 51
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 52 53 58 62 63
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC99") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
        (nil)))
(insn 16 15 17 3 (set (reg:SI 53)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 17 16 19 3 (set (mem:SI (reg/f:SI 52) [0 MEM[(void *)&AESAUX]+0 S4 A32])
        (reg:SI 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (nil))
(insn 19 17 21 3 (set (mem:SI (plus:SI (reg/f:SI 52)
                (const_int 4 [0x4])) [0 MEM[(void *)&AESAUX]+4 S4 A32])
        (reg:SI 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (nil))
(insn 21 19 23 3 (set (mem:SI (plus:SI (reg/f:SI 52)
                (const_int 8 [0x8])) [0 MEM[(void *)&AESAUX]+8 S4 A32])
        (reg:SI 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (nil))
(insn 23 21 25 3 (set (mem:SI (plus:SI (reg/f:SI 52)
                (const_int 12 [0xc])) [0 MEM[(void *)&AESAUX]+12 S4 A32])
        (reg:SI 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:183 44 {movsi_internal}
     (nil))
(insn 25 23 26 3 (set (reg:QI 58)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:184 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 26 25 29 3 (set (mem:QI (plus:SI (reg/f:SI 52)
                (const_int 15 [0xf])) [0 MEM[(u1_t *)&AESAUX + 15B]+0 S1 A8])
        (reg:QI 58)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:184 46 {movqi_internal}
     (nil))
(insn 29 26 30 3 (set (mem:QI (reg/f:SI 52) [0 MEM[(u1_t *)&AESAUX]+0 S1 A32])
        (reg:QI 58)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:184 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 58)
        (nil)))
(insn 30 29 32 3 (set (reg:SI 63)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:185 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 32 30 34 3 (set (reg:SI 62)
        (if_then_else:SI (ne (reg/v:SI 48 [ dndir ])
                (const_int 0 [0]))
            (reg:SI 63)
            (reg:SI 53))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:185 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 63)
        (expr_list:REG_DEAD (reg:SI 53)
            (expr_list:REG_DEAD (reg/v:SI 48 [ dndir ])
                (expr_list:REG_EQUAL (ne:SI (reg/v:SI 48 [ dndir ])
                        (const_int 0 [0]))
                    (nil))))))
(note 34 32 36 3 NOTE_INSN_DELETED)
(insn 36 34 37 3 (set (mem:QI (plus:SI (reg/f:SI 52)
                (const_int 5 [0x5])) [0 MEM[(u1_t *)&AESAUX + 5B]+0 S1 A8])
        (subreg:QI (reg:SI 62) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:185 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 62)
        (expr_list:REG_DEAD (reg/f:SI 52)
            (nil))))
(note 37 36 38 3 NOTE_INSN_DELETED)
(insn 38 37 39 3 (set (reg:SI 11 a11)
        (reg/v:SI 46 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:186 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 46 [ devaddr ])
        (nil)))
(insn 39 38 40 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC100") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:186 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
                (const_int 6 [0x6])))
        (nil)))
(call_insn 40 39 41 3 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:186 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 41 40 42 3 NOTE_INSN_DELETED)
(insn 42 41 43 3 (set (reg:SI 11 a11)
        (reg/v:SI 47 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:187 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 47 [ seqno ])
        (nil)))
(insn 43 42 44 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC101") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:187 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("AESAUX") [flags 0x40]  <var_decl 0x140ed9360 AESAUX>)
                (const_int 10 [0xa])))
        (nil)))
(call_insn 44 43 45 3 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:187 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 45 44 48 3 NOTE_INSN_DELETED)
(note 48 45 49 3 NOTE_INSN_DELETED)
(insn 49 48 50 3 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:188 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 50 49 51 3 (set (reg:SI 11 a11)
        (reg/v/f:SI 45 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:188 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 45 [ key ])
        (nil)))
(insn 51 50 52 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC102") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:188 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 52 51 54 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:188 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(note 54 52 55 3 NOTE_INSN_DELETED)
(insn 55 54 56 3 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg:SI 51) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:189 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 51)
        (nil)))
(insn 56 55 57 3 (set (reg:SI 11 a11)
        (reg/v/f:SI 49 [ payload ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:189 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 49 [ payload ])
        (nil)))
(insn 57 56 58 3 (set (reg:SI 10 a10)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:189 44 {movsi_internal}
     (nil))
(call_insn 58 57 61 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:189 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              2 [36.7%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u59(1){ }u60(7){ }u61(16){ }u62(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 61 58 62 4 131 "" [1 uses])
(note 62 61 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function os_wmsbf4 (os_wmsbf4, funcdef_no=33, decl_uid=2748, cgraph_uid=33, symbol_order=34)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 49: local to bb 2 def dominates all uses has unique first use
Reg 50 uninteresting
Reg 43 uninteresting
Reg 45 uninteresting
Reg 47 uninteresting
Found def insn 2 for 49 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a1(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r50,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a3(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r49): [1..16]
 a1(r47): [1..2]
 a2(r50): [3..14]
 a3(r45): [5..6]
 a4(r43): [9..10]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r49): [0..5]
 a1(r47): [0..1]
 a2(r50): [2..5]
 a3(r45): [2..3]
 a4(r43): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r49,l0) conflicts: a1(r47,l0) a3(r45,l0) a2(r50,l0) a4(r43,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a1(r47,l0) conflicts: a0(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r50,l0) conflicts: a0(r49,l0) a3(r45,l0) a4(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r45,l0) conflicts: a0(r49,l0) a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r43,l0) conflicts: a0(r49,l0) a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r47)<->a2(r50)@125:shuffle
  pref0:a0(r49)<-hr2@2000
  pref1:a2(r50)<-hr3@2000
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=1, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r49 1r47 2r50 3r45 4r43
    modified regnos: 43 45 47 49 50
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@96000
          2:( 2 4-15)@48000
      Allocno a0r49 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r47-a2r50 (freq=125):
        Result (freq=7000): a1r47(2000) a2r50(5000)
      Pushing a4(r43,l0)(cost 0)
      Pushing a3(r45,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Pushing a2(r50,l0)(cost 0)
      Popping a2(r50,l0)  -- assign reg 3
      Popping a1(r47,l0)  -- assign reg 3
      Popping a0(r49,l0)  -- assign reg 2
      Popping a3(r45,l0)  -- assign reg 8
      Popping a4(r43,l0)  -- assign reg 8
Disposition:
    4:r43  l0     8    3:r45  l0     8    1:r47  l0     3    0:r49  l0     2
    2:r50  l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_wmsbf4

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r43={1d,1u} r45={1d,1u} r47={1d,1u} r49={1d,4u} r50={1d,4u} 
;;    total ref usage 35{15d,20u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 45 47 49 50
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 49 [ buf ])
        (reg:SI 2 a2 [ buf ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:97 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ buf ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 50 [ v ])
        (reg:SI 3 a3 [ v ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:97 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ v ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 3 [0x3])) [0 MEM[(u1_t *)buf_1(D) + 3B]+0 S1 A8])
        (subreg:QI (reg/v:SI 50 [ v ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:98 46 {movqi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 43 [ D.6205 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:99 53 {lshrsi3}
     (nil))
(insn 9 8 10 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 2 [0x2])) [0 MEM[(u1_t *)buf_1(D) + 2B]+0 S1 A8])
        (subreg:QI (reg:SI 43 [ D.6205 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:99 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6205 ])
        (nil)))
(insn 10 9 11 2 (set (reg:SI 45 [ D.6205 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:100 53 {lshrsi3}
     (nil))
(insn 11 10 12 2 (set (mem:QI (plus:SI (reg/v/f:SI 49 [ buf ])
                (const_int 1 [0x1])) [0 MEM[(u1_t *)buf_1(D) + 1B]+0 S1 A8])
        (subreg:QI (reg:SI 45 [ D.6205 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:100 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6205 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 47 [ D.6205 ])
        (lshiftrt:SI (reg/v:SI 50 [ v ])
            (const_int 24 [0x18]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:101 53 {lshrsi3}
     (expr_list:REG_DEAD (reg/v:SI 50 [ v ])
        (nil)))
(insn 13 12 0 2 (set (mem:QI (reg/v/f:SI 49 [ buf ]) [0 *buf_1(D)+0 S1 A8])
        (subreg:QI (reg:SI 47 [ D.6205 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:101 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 49 [ buf ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6205 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_appendMic0 (aes_appendMic0, funcdef_no=39, decl_uid=3442, cgraph_uid=39, symbol_order=40)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 46: local to bb 2 def dominates all uses has unique first use
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 43: local to bb 2 def dominates all uses has unique first use
Examining insn 10, def for 43
  all ok
Found def insn 2 for 46 to be not moveable
Found def insn 3 for 47 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r46,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r46,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a2(r47,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 17(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r43): [3..14]
 a1(r46): [11..22]
 a2(r47): [13..20]
Compressing live ranges: from 25 to 2 - 8%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r46): [0..1]
 a2(r47): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r43,l0) conflicts: a1(r46,l0) a2(r47,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r46,l0) conflicts: a0(r43,l0) a2(r47,l0)
;;     total conflict hard regs: 3 8-15
;;     conflict hard regs: 3 8-15

;; a2(r47,l0) conflicts: a0(r43,l0) a1(r46,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

  pref0:a1(r46)<-hr2@2000
  pref1:a2(r47)<-hr3@2000
  pref2:a1(r46)<-hr11@2000
  pref3:a0(r43)<-hr10@2000
  pref4:a2(r47)<-hr12@125
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r46 2r47
    modified regnos: 43 46 47
    border:
    Pressure: AR_REGS=4
 Removing pref3:hr10@2000
 Removing pref2:hr11@2000
 Removing pref4:hr12@125
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-7)@56000
          2:( 2 4-7)@32000
      Allocno a0r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r46 of AR_REGS(14) has 5 avail. regs  2 4-7, node:  2 4-7 (confl regs =  0 1 3 8-34)
      Allocno a2r47 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Pushing a0(r43,l0)(cost 0)
      Pushing a2(r47,l0)(cost 0)
      Pushing a1(r46,l0)(cost 0)
      Popping a1(r46,l0)  -- assign reg 2
      Popping a2(r47,l0)  -- assign reg 3
      Popping a0(r43,l0)  -- assign reg 4
Disposition:
    0:r43  l0     4    1:r46  l0     2    2:r47  l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_appendMic0

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={4d} r1={1d,5u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={3d} r9={3d} r10={6d,4u} r11={5d,2u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={1d,2u} r17={1d,1u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r43={1d,1u} r46={1d,2u} r47={1d,2u} 
;;    total ref usage 124{100d,24u,0e} in 12{9 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 46 47
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 46 [ pdu ])
        (reg:SI 2 a2 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:162 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ pdu ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 47 [ len ])
        (reg:SI 3 a3 [ len ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:162 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ len ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 4 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC103") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:163 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 9 8 10 2 (call (mem:SI (symbol_ref:SI ("os_getDevKey") [flags 0x41]  <function_decl 0x140eefe58 os_getDevKey>) [0 os_getDevKey S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:163 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 43 [ D.6207 ])
        (plus:SI (reg/v/f:SI 46 [ pdu ])
            (reg/v:SI 47 [ len ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 1 {addsi3}
     (nil))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 13 2 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg/v:SI 47 [ len ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/v:SI 47 [ len ])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 46 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 46 [ pdu ])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 10 a10)
        (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 44 {movsi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(note 16 15 17 2 NOTE_INSN_DELETED)
(insn 17 16 18 2 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 10 a10)
        (reg/f:SI 43 [ D.6207 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 43 [ D.6207 ])
        (nil)))
(call_insn 19 18 0 2 (call (mem:SI (symbol_ref:SI ("os_wmsbf4") [flags 0x3]  <function_decl 0x140efaa20 os_wmsbf4>) [0 os_wmsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:164 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function buildJoinRequest (buildJoinRequest, funcdef_no=94, decl_uid=3842, cgraph_uid=94, symbol_order=102)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 48 uninteresting
Reg 49 uninteresting
Reg 57 uninteresting
Reg 44 uninteresting
Reg 60 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 48: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 29 (nil))

Pass 0 for finding pseudo/allocno costs

    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r60,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r57,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r48,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r48,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a1(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r49,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a4(r57,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 32(l0): point = 4
   Insn 30(l0): point = 6
   Insn 29(l0): point = 8
   Insn 26(l0): point = 10
   Insn 25(l0): point = 12
   Insn 24(l0): point = 14
   Insn 22(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
 a0(r48): [1..34]
 a1(r60): [1..2]
 a2(r44): [3..4]
 a3(r49): [7..32]
 a4(r57): [7..8]
Compressing live ranges: from 37 to 6 - 16%
Ranges after the compression:
 a0(r48): [0..5]
 a1(r60): [0..1]
 a2(r44): [2..3]
 a3(r49): [4..5]
 a4(r57): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r48,l0) conflicts: a1(r60,l0) a2(r44,l0) a3(r49,l0) a4(r57,l0)
;;     total conflict hard regs: 2 8-15
;;     conflict hard regs: 2 8-15

;; a1(r60,l0) conflicts: a0(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r44,l0) conflicts: a0(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r49,l0) conflicts: a0(r48,l0) a4(r57,l0)
;;     total conflict hard regs: 2 8-15
;;     conflict hard regs: 2 8-15

;; a4(r57,l0) conflicts: a0(r48,l0) a3(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r60)<->a2(r44)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=1, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r48 1r60 2r44 3r49 4r57
    modified regnos: 44 48 49 57 60
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@48000
          2:( 3-7)@48000
      Allocno a0r48 of AR_REGS(14) has 5 avail. regs  3-7, node:  3-7 (confl regs =  0-2 8-34)
      Allocno a1r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r49 of AR_REGS(14) has 5 avail. regs  3-7, node:  3-7 (confl regs =  0-2 8-34)
      Allocno a4r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r60-a2r44 (freq=125):
        Result (freq=4000): a1r60(2000) a2r44(2000)
      Pushing a4(r57,l0)(cost 0)
      Pushing a3(r49,l0)(cost 0)
      Pushing a2(r44,l0)(cost 0)
      Pushing a1(r60,l0)(cost 0)
      Pushing a0(r48,l0)(cost 0)
      Popping a0(r48,l0)  -- assign reg 3
      Popping a1(r60,l0)  -- assign reg 8
      Popping a2(r44,l0)  -- assign reg 8
      Popping a3(r49,l0)  -- assign reg 4
      Popping a4(r57,l0)  -- assign reg 8
Disposition:
    2:r44  l0     8    0:r48  l0     3    3:r49  l0     4    4:r57  l0     8
    1:r60  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


buildJoinRequest

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11]
;;  ref usage 	r0={5d} r1={1d,6u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={4d} r9={4d} r10={8d,4u} r11={6d,2u} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,2u} r17={1d,1u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r44={1d,1u} r48={1d,4u} r49={1d,2u} r57={1d,1u} r60={1d,1u} 
;;    total ref usage 156{129d,27u,0e} in 19{15 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 48 49 57 60
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:SI d (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
            (const_int 332 [0x14c])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1821 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 48)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC104") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1822 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 9 8 10 2 (set:SI (reg/f:SI 49)
        (plus:SI (reg/f:SI 48)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1822 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 49)
                (const_int 76 [0x4c])) [0 MEM[(u1_t *)&LMIC + 332B]+0 S1 A32])
        (reg:QI 2 a2 [ ftype ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1822 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ ftype ])
        (nil)))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 13 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC105") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1823 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 333 [0x14d])))
        (nil)))
(call_insn 13 12 14 2 (call (mem:SI (symbol_ref:SI ("os_getArtEui") [flags 0x41]  <function_decl 0x140efa000 os_getArtEui>) [0 os_getArtEui S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1823 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 14 13 15 2 NOTE_INSN_DELETED)
(insn 15 14 16 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC106") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1824 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 341 [0x155])))
        (nil)))
(call_insn 16 15 18 2 (call (mem:SI (symbol_ref:SI ("os_getDevEui") [flags 0x41]  <function_decl 0x140efa0d8 os_getDevEui>) [0 os_getDevEui S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1824 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 18 16 19 2 NOTE_INSN_DELETED)
(note 19 18 20 2 NOTE_INSN_DELETED)
(insn 20 19 21 2 (set (reg:SI 11 a11)
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 48)
                    (const_int 244 [0xf4])) [0 LMIC.devNonce+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1825 33 {zero_extendhisi2}
     (nil))
(insn 21 20 22 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC107") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1825 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 349 [0x15d])))
        (nil)))
(call_insn 22 21 23 2 (call (mem:SI (symbol_ref:SI ("os_wlsbf2") [flags 0x3]  <function_decl 0x140efabd0 os_wlsbf2>) [0 os_wlsbf2 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1825 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 23 22 24 2 NOTE_INSN_DELETED)
(insn 24 23 25 2 (set (reg:SI 11 a11)
        (const_int 19 [0x13])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1826 44 {movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC108") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1826 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn 26 25 29 2 (call (mem:SI (symbol_ref:SI ("aes_appendMic0") [flags 0x3]  <function_decl 0x100b50798 aes_appendMic0>) [0 aes_appendMic0 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1826 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 29 26 30 2 (set (reg:QI 57)
        (const_int 23 [0x17])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1836 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 23 [0x17])
        (nil)))
(insn 30 29 32 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 57)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1836 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 57)
        (expr_list:REG_DEAD (reg/f:SI 49)
            (nil))))
(insn 32 30 34 2 (set (reg:SI 44 [ D.6210 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 48)
                    (const_int 244 [0xf4])) [0 LMIC.devNonce+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1837 33 {zero_extendhisi2}
     (nil))
(insn 34 32 35 2 (set (reg:SI 60)
        (plus:SI (reg:SI 44 [ D.6210 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1837 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6210 ])
        (nil)))
(insn 35 34 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 48)
                (const_int 244 [0xf4])) [0 LMIC.devNonce+0 S2 A32])
        (subreg:HI (reg:SI 60) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1837 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 60)
        (expr_list:REG_DEAD (reg/f:SI 48)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function aes_appendMic (aes_appendMic, funcdef_no=38, decl_uid=3438, cgraph_uid=38, symbol_order=39)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52: local to bb 2 def dominates all uses has unique first use
Reg 46: local to bb 2 def dominates all uses has unique first use
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 43: local to bb 2 def dominates all uses has unique first use
Examining insn 27, def for 43
  all ok
Found def insn 2 for 46 to be not moveable
Found def insn 6 for 50 to be not moveable
Found def insn 7 for 52 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r50,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r46,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r50,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a2(r52,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a3(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 36(l0): point = 0
   Insn 35(l0): point = 2
   Insn 34(l0): point = 4
   Insn 32(l0): point = 6
   Insn 31(l0): point = 8
   Insn 30(l0): point = 10
   Insn 29(l0): point = 12
   Insn 27(l0): point = 14
   Insn 25(l0): point = 16
   Insn 24(l0): point = 18
   Insn 23(l0): point = 20
   Insn 22(l0): point = 22
   Insn 17(l0): point = 24
   Insn 16(l0): point = 26
   Insn 15(l0): point = 28
   Insn 14(l0): point = 30
   Insn 13(l0): point = 32
   Insn 6(l0): point = 34
   Insn 2(l0): point = 36
   Insn 8(l0): point = 38
   Insn 7(l0): point = 40
 a0(r43): [3..14]
 a1(r50): [11..34]
 a2(r52): [13..40]
 a3(r46): [21..36]
Compressing live ranges: from 43 to 4 - 9%
Ranges after the compression:
 a0(r43): [0..1]
 a1(r50): [0..3]
 a2(r52): [0..3]
 a3(r46): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r43,l0) conflicts: a1(r50,l0) a2(r52,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r50,l0) conflicts: a0(r43,l0) a2(r52,l0) a3(r46,l0)
;;     total conflict hard regs: 3-5 8-15
;;     conflict hard regs: 3-5 8-15

;; a2(r52,l0) conflicts: a0(r43,l0) a1(r50,l0) a3(r46,l0)
;;     total conflict hard regs: 2-6 8-15
;;     conflict hard regs: 2-6 8-15

;; a3(r46,l0) conflicts: a1(r50,l0) a2(r52,l0)
;;     total conflict hard regs: 3-6 8-15
;;     conflict hard regs: 3-6 8-15

  pref0:a2(r52)<-hr7@1000
  pref1:a3(r46)<-hr2@2000
  pref2:a1(r50)<-hr6@2000
  pref3:a2(r52)<-hr13@1000
  pref4:a3(r46)<-hr11@2000
  pref5:a1(r50)<-hr11@2000
  pref6:a0(r43)<-hr10@2000
  pref7:a2(r52)<-hr12@125
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r43 1r50 2r52 3r46
    modified regnos: 43 46 50 52
    border:
    Pressure: AR_REGS=7
 Removing pref6:hr10@2000
 Removing pref5:hr11@2000
 Removing pref7:hr12@125
 Removing pref3:hr13@1000
 Removing pref4:hr11@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-7)@24000
          2:( 2 6 7)@32000
            3:( 2 7)@24000
              4:( 7)@18000
      Allocno a0r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r50 of AR_REGS(14) has 3 avail. regs  2 6 7, node:  2 6 7 (confl regs =  0 1 3-5 8-34)
      Allocno a2r52 of AR_REGS(14) has 1 avail. regs  7, node:  7 (confl regs =  0-6 8-34)
      Allocno a3r46 of AR_REGS(14) has 2 avail. regs  2 7, node:  2 7 (confl regs =  0 1 3-6 8-34)
      Pushing a0(r43,l0)(cost 0)
        Making a1(r50,l0) colorable
      Pushing a1(r50,l0)(cost 16000)
        Making a3(r46,l0) colorable
      Pushing a3(r46,l0)(cost 12000)
        Making a2(r52,l0) colorable
      Pushing a2(r52,l0)(cost 18000)
      Popping a2(r52,l0)  -- assign reg 7
      Popping a3(r46,l0)  -- assign reg 2
      Popping a1(r50,l0)  -- assign reg 6
      Popping a0(r43,l0)  -- assign reg 2
Disposition:
    0:r43  l0     2    3:r46  l0     2    1:r50  l0     6    2:r52  l0     7
New iteration of spill/restore move
+++Costs: overall -10000, reg -10000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


aes_appendMic

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 6[a6] 7[a7] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={5d} r1={1d,6u} r2={1d,1u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,1u} r7={2d,3u} r8={4d} r9={4d} r10={8d,5u} r11={8d,4u} r12={7d,3u} r13={5d,1u} r14={4d} r15={4d} r16={1d,2u} r17={1d,1u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r43={1d,1u} r46={1d,1u} r50={1d,2u} r52={1d,3u} 
;;    total ref usage 172{135d,37u,0e} in 21{17 regular + 4 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 7 [a7] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 46 50 52
(note 11 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 7 11 8 2 (set (reg:SI 52)
        (reg:SI 7 a7)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:154 44 {movsi_internal}
     (nil))
(insn 8 7 2 2 (set (reg/f:SI 7 a7 [ len ])
        (unspec_volatile:SI [
                (const_int 0 [0])
            ] 1)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:154 90 {set_frame_ptr}
     (nil))
(insn 2 8 3 2 (set (reg/v/f:SI 46 [ key ])
        (reg:SI 2 a2 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:154 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ key ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 6 2 NOTE_INSN_DELETED)
(insn 6 5 10 2 (set (reg/v/f:SI 50 [ pdu ])
        (reg:SI 6 a6 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:154 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 a6 [ pdu ])
        (nil)))
(note 10 6 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (reg:SI 13 a13)
        (reg:SI 52)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:155 44 {movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 12 a12)
        (reg:SI 5 a5 [ dndir ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:155 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ dndir ])
        (nil)))
(insn 15 14 16 2 (set (reg:SI 11 a11)
        (reg:SI 4 a4 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:155 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ seqno ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 10 a10)
        (reg:SI 3 a3 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:155 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ devaddr ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:SI (symbol_ref:SI ("micB0") [flags 0x3]  <function_decl 0x100b50ca8 micB0>) [0 micB0 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:155 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_DEAD (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(note 18 17 21 2 NOTE_INSN_DELETED)
(note 21 18 22 2 NOTE_INSN_DELETED)
(insn 22 21 23 2 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:156 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 23 22 24 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 46 [ key ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:156 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 46 [ key ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC109") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:156 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("AESKEY") [flags 0x40]  <var_decl 0x140ed93f0 AESKEY>)
        (nil)))
(call_insn 25 24 27 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:156 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(insn 27 25 28 2 (set (reg/f:SI 43 [ D.6214 ])
        (plus:SI (reg/v/f:SI 50 [ pdu ])
            (reg:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 1 {addsi3}
     (nil))
(note 28 27 29 2 NOTE_INSN_DELETED)
(insn 29 28 30 2 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg:SI 52) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 52)
        (nil)))
(insn 30 29 31 2 (set (reg:SI 11 a11)
        (reg/v/f:SI 50 [ pdu ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 50 [ pdu ])
        (nil)))
(insn 31 30 32 2 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 44 {movsi_internal}
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_aes") [flags 0x41]  <function_decl 0x100ae0a20 os_aes>) [0 os_aes S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(note 33 32 34 2 NOTE_INSN_DELETED)
(insn 34 33 35 2 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 35 34 36 2 (set (reg:SI 10 a10)
        (reg/f:SI 43 [ D.6214 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 43 [ D.6214 ])
        (nil)))
(call_insn 36 35 0 2 (call (mem:SI (symbol_ref:SI ("os_wmsbf4") [flags 0x3]  <function_decl 0x140efaa20 os_wmsbf4>) [0 os_wmsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:158 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function os_getBattLevel (os_getBattLevel, funcdef_no=34, decl_uid=2738, cgraph_uid=34, symbol_order=35)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_getBattLevel

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} 
;;    total ref usage 20{11d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(note 5 2 9 2 NOTE_INSN_DELETED)
(insn 9 5 10 2 (set (reg/i:SI 2 a2)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:108 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))
(insn 10 9 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:108 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function buildDataFrame (buildDataFrame, funcdef_no=89, decl_uid=3823, cgraph_uid=89, symbol_order=97)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 47 n_edges 66 count 47 (    1)
scanning new insn with uid = 466.
verify found no changes in insn with uid = 466.
deleting insn with uid = 374.
scanning new insn with uid = 467.
verify found no changes in insn with uid = 467.
deleting insn with uid = 373.
scanning new insn with uid = 468.
verify found no changes in insn with uid = 468.
deleting insn with uid = 209.
scanning new insn with uid = 469.
verify found no changes in insn with uid = 469.
deleting insn with uid = 208.
scanning new insn with uid = 470.
verify found no changes in insn with uid = 470.
deleting insn with uid = 203.
scanning new insn with uid = 471.
verify found no changes in insn with uid = 471.
deleting insn with uid = 202.
scanning new insn with uid = 472.
verify found no changes in insn with uid = 472.
deleting insn with uid = 35.
scanning new insn with uid = 473.
verify found no changes in insn with uid = 473.
deleting insn with uid = 20.
scanning new insn with uid = 474.
verify found no changes in insn with uid = 474.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 47 n_edges 66 count 47 (    1)
Reg 118 uninteresting
Reg 49: def dominates all uses has unique first use
Reg 119 uninteresting
Reg 52 uninteresting
Reg 125: local to bb 2 def dominates all uses has unique first use
Reg 124 uninteresting
Reg 122 uninteresting
Reg 126 uninteresting
Reg 127 uninteresting
Reg 130: local to bb 5 def dominates all uses has unique first use
Reg 131 uninteresting
Reg 132 uninteresting
Reg 133: local to bb 6 def dominates all uses has unique first use
Reg 134 uninteresting
Reg 53: local to bb 6 def dominates all uses has unique first use
Reg 55 uninteresting
Reg 57 uninteresting
Reg 143 uninteresting
Reg 144 uninteresting
Reg 145 uninteresting
Reg 61 uninteresting
Reg 146 uninteresting
Reg 148 uninteresting
Reg 149: local to bb 9 def dominates all uses has unique first use
Reg 150 uninteresting
Reg 152: local to bb 9 def dominates all uses has unique first use
Reg 153 uninteresting
Reg 154 uninteresting
Reg 155 uninteresting
Reg 62 uninteresting
Reg 156 uninteresting
Reg 158 uninteresting
Reg 159: local to bb 11 def dominates all uses has unique first use
Reg 160 uninteresting
Reg 63 uninteresting
Reg 164: local to bb 11 def dominates all uses has unique first use
Reg 165 uninteresting
Reg 167: local to bb 11 def dominates all uses has unique first use
Reg 168 uninteresting
Reg 169 uninteresting
Reg 170 uninteresting
Reg 65 uninteresting
Reg 171 uninteresting
Reg 173 uninteresting
Reg 174: local to bb 13 def dominates all uses has unique first use
Reg 175 uninteresting
Reg 66: local to bb 13 def dominates all uses has unique first use
Reg 180 uninteresting
Reg 68: local to bb 13 def dominates all uses has unique first use
Reg 182 uninteresting
Reg 69: local to bb 13 def dominates all uses has unique first use
Reg 186 uninteresting
Reg 189 uninteresting
Reg 190 uninteresting
Reg 191 uninteresting
Reg 70 uninteresting
Reg 192 uninteresting
Reg 194 uninteresting
Reg 195: local to bb 15 def dominates all uses has unique first use
Reg 196 uninteresting
Reg 71 uninteresting
Reg 200: local to bb 15 def dominates all uses has unique first use
Reg 201 uninteresting
Reg 203: local to bb 15 def dominates all uses has unique first use
Reg 204 uninteresting
Reg 205 uninteresting
Reg 206 uninteresting
Reg 73 uninteresting
Reg 207 uninteresting
Reg 209 uninteresting
Reg 210: local to bb 17 def dominates all uses has unique first use
Reg 211 uninteresting
Reg 212 uninteresting
Reg 213 uninteresting
Reg 74 uninteresting
Reg 214 uninteresting
Reg 215 uninteresting
Reg 75 uninteresting
Reg 216 uninteresting
Reg 219: local to bb 20 def dominates all uses has unique first use
Reg 217 uninteresting
Reg 218 uninteresting
Reg 222: local to bb 21 def dominates all uses has unique first use
Reg 220 uninteresting
Reg 221 uninteresting
Reg 223 uninteresting
Reg 224 uninteresting
Reg 76 uninteresting
Reg 225 uninteresting
Reg 227 uninteresting
Reg 228: local to bb 23 def dominates all uses has unique first use
Reg 229 uninteresting
Reg 77 uninteresting
Reg 233: local to bb 23 def dominates all uses has unique first use
Reg 234 uninteresting
Reg 236: local to bb 23 def dominates all uses has unique first use
Reg 237 uninteresting
Reg 238 uninteresting
Reg 239 uninteresting
Reg 79 uninteresting
Reg 240 uninteresting
Reg 242 uninteresting
Reg 243: local to bb 25 def dominates all uses has unique first use
Reg 244 uninteresting
Reg 80 uninteresting
Reg 248: local to bb 25 def dominates all uses has unique first use
Reg 249 uninteresting
Reg 251: local to bb 25 def dominates all uses has unique first use
Reg 252 uninteresting
Reg 253 uninteresting
Reg 255 uninteresting
Reg 82 uninteresting (no unique first use)
Reg 256 uninteresting
Reg 257 uninteresting
Reg 258 uninteresting
Reg 259 uninteresting
Reg 260: local to bb 33 def dominates all uses has unique first use
Reg 261 uninteresting
Reg 83: local to bb 33 def dominates all uses has unique first use
Reg 84 uninteresting
Reg 86: def dominates all uses has unique first use
Reg 87 uninteresting
Reg 269 uninteresting
Reg 270 uninteresting
Reg 271: local to bb 36 def dominates all uses has unique first use
Reg 274: local to bb 36 def dominates all uses has unique first use
Reg 275 uninteresting
Reg 278 uninteresting
Reg 94 uninteresting
Ignoring reg 286, has equiv memory
Ignoring reg 285, has equiv memory
Ignoring reg 97, has equiv memory
Reg 289 uninteresting
Reg 293: local to bb 38 def dominates all uses has unique first use
Reg 294 uninteresting
Reg 295 uninteresting
Reg 101 uninteresting
Reg 296 uninteresting
Reg 297: local to bb 40 def dominates all uses has unique first use
Reg 298 uninteresting
Reg 102 uninteresting
Reg 303: local to bb 41 def dominates all uses has unique first use
Reg 301 uninteresting
Reg 302 uninteresting
Reg 304 uninteresting
Reg 103: local to bb 42 def dominates all uses has unique first use
Reg 307 uninteresting
Reg 308 uninteresting
Reg 309: local to bb 42 def dominates all uses has unique first use
Reg 310 uninteresting
Reg 106: def dominates all uses has unique first use
Reg 108 uninteresting
Ignoring reg 110, has equiv memory
Ignoring reg 114, has equiv memory
Reg 327 uninteresting
Reg 49 not local to one basic block
Found def insn 48 for 53 to be not moveable
Examining insn 121, def for 66
  input reg 43 modified between def and use
  all ok
Examining insn 130, def for 68
  input reg 43 modified between def and use
  all ok
Found def insn 133 for 69 to be not moveable
Found def insn 304 for 83 to be not moveable
Reg 86 not local to one basic block
Found def insn 380 for 103 to be not moveable
Reg 106 not local to one basic block
Ignoring reg 125 with equiv init insn
Examining insn 38, def for 130
  all ok
Ignoring reg 133 with equiv init insn
Examining insn 71, def for 149
  all ok
Ignoring reg 152 with equiv init insn
Examining insn 91, def for 159
  all ok
Examining insn 98, def for 164
  all ok
Ignoring reg 167 with equiv init insn
Examining insn 118, def for 174
  all ok
Examining insn 156, def for 195
  all ok
Examining insn 163, def for 200
  all ok
Ignoring reg 203 with equiv init insn
Examining insn 183, def for 210
  all ok
Ignoring reg 219 with equiv init insn
Ignoring reg 222 with equiv init insn
Examining insn 222, def for 228
  all ok
Examining insn 229, def for 233
  all ok
Ignoring reg 236 with equiv init insn
Examining insn 249, def for 243
  all ok
Examining insn 256, def for 248
  all ok
Ignoring reg 251 with equiv init insn
Ignoring reg 260 with equiv init insn
Ignoring reg 271 with equiv init insn
Examining insn 322, def for 274
  all ok
Ignoring reg 293 with equiv init insn
Ignoring reg 297 with equiv init insn
Ignoring reg 303 with equiv init insn
Examining insn 386, def for 309
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 46 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 45 }
;; 44 succs { 45 }
;; 45 succs { 46 }
;; 46 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 97: (insn_list:REG_DEP_TRUE 346 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 405 (nil))
init_insns for 114: (insn_list:REG_DEP_TRUE 418 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 119: (insn_list:REG_DEP_TRUE 474 (nil))
init_insns for 124: (insn_list:REG_DEP_TRUE 473 (nil))
init_insns for 125: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 126: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 127: (insn_list:REG_DEP_TRUE 472 (nil))
init_insns for 131: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 132: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 133: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 134: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 64 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 83 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 84 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 88 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 90 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 92 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 104 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 105 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 110 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 111 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 119 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 132 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 143 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 148 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 149 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 153 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 155 (nil))
init_insns for 196: (insn_list:REG_DEP_TRUE 157 (nil))
init_insns for 203: (insn_list:REG_DEP_TRUE 169 (nil))
init_insns for 204: (insn_list:REG_DEP_TRUE 170 (nil))
init_insns for 205: (insn_list:REG_DEP_TRUE 175 (nil))
init_insns for 206: (insn_list:REG_DEP_TRUE 176 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 182 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 184 (nil))
init_insns for 212: (insn_list:REG_DEP_TRUE 191 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 192 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 196 (nil))
init_insns for 215: (insn_list:REG_DEP_TRUE 197 (nil))
init_insns for 217: (insn_list:REG_DEP_TRUE 471 (nil))
init_insns for 218: (insn_list:REG_DEP_TRUE 470 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 204 (nil))
init_insns for 220: (insn_list:REG_DEP_TRUE 469 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 468 (nil))
init_insns for 222: (insn_list:REG_DEP_TRUE 210 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 214 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 215 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 227: (insn_list:REG_DEP_TRUE 221 (nil))
init_insns for 229: (insn_list:REG_DEP_TRUE 223 (nil))
init_insns for 236: (insn_list:REG_DEP_TRUE 235 (nil))
init_insns for 237: (insn_list:REG_DEP_TRUE 236 (nil))
init_insns for 238: (insn_list:REG_DEP_TRUE 241 (nil))
init_insns for 239: (insn_list:REG_DEP_TRUE 242 (nil))
init_insns for 240: (insn_list:REG_DEP_TRUE 246 (nil))
init_insns for 242: (insn_list:REG_DEP_TRUE 248 (nil))
init_insns for 244: (insn_list:REG_DEP_TRUE 250 (nil))
init_insns for 251: (insn_list:REG_DEP_TRUE 262 (nil))
init_insns for 252: (insn_list:REG_DEP_TRUE 263 (nil))
init_insns for 253: (insn_list:REG_DEP_TRUE 268 (nil))
init_insns for 257: (insn_list:REG_DEP_TRUE 287 (nil))
init_insns for 259: (insn_list:REG_DEP_TRUE 298 (nil))
init_insns for 260: (insn_list:REG_DEP_TRUE 299 (nil))
init_insns for 261: (insn_list:REG_DEP_TRUE 300 (nil))
init_insns for 270: (insn_list:REG_DEP_TRUE 318 (nil))
init_insns for 271: (insn_list:REG_DEP_TRUE 319 (nil))
init_insns for 283: (insn_list:REG_DEP_TRUE 338 (nil))
init_insns for 285: (insn_list:REG_DEP_TRUE 342 (nil))
init_insns for 286: (insn_list:REG_DEP_TRUE 340 (nil))
init_insns for 287: (insn_list:REG_DEP_TRUE 345 (nil))
init_insns for 293: (insn_list:REG_DEP_TRUE 355 (nil))
init_insns for 294: (insn_list:REG_DEP_TRUE 356 (nil))
init_insns for 295: (insn_list:REG_DEP_TRUE 360 (nil))
init_insns for 296: (insn_list:REG_DEP_TRUE 364 (nil))
init_insns for 297: (insn_list:REG_DEP_TRUE 365 (nil))
init_insns for 298: (insn_list:REG_DEP_TRUE 366 (nil))
init_insns for 301: (insn_list:REG_DEP_TRUE 467 (nil))
init_insns for 302: (insn_list:REG_DEP_TRUE 466 (nil))
init_insns for 303: (insn_list:REG_DEP_TRUE 375 (nil))
init_insns for 304: (insn_list:REG_DEP_TRUE 379 (nil))
init_insns for 307: (insn_list:REG_DEP_TRUE 383 (nil))
init_insns for 310: (insn_list:REG_DEP_TRUE 387 (nil))
init_insns for 317: (insn_list:REG_DEP_TRUE 404 (nil))
init_insns for 320: (insn_list:REG_DEP_TRUE 417 (nil))
init_insns for 327: (insn_list:REG_DEP_TRUE 432 (nil))

Pass 0 for finding pseudo/allocno costs

    r327: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r327,l0) best AR_REGS, allocno AR_REGS
    r320: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r320,l0) best AR_REGS, allocno AR_REGS
    r317: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r317,l0) best AR_REGS, allocno AR_REGS
    r310: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r310,l0) best AR_REGS, allocno AR_REGS
    r309: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r309,l0) best AR_REGS, allocno AR_REGS
    r308: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r308,l0) best AR_REGS, allocno AR_REGS
    r307: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r307,l0) best AR_REGS, allocno AR_REGS
    r306: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r306,l0) best AR_REGS, allocno AR_REGS
    r304: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r304,l0) best AR_REGS, allocno AR_REGS
    r303: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r303,l0) best AR_REGS, allocno AR_REGS
    r302: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r302,l0) best AR_REGS, allocno AR_REGS
    r301: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r301,l0) best AR_REGS, allocno AR_REGS
    r298: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r298,l0) best AR_REGS, allocno AR_REGS
    r297: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r297,l0) best AR_REGS, allocno AR_REGS
    r296: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r296,l0) best AR_REGS, allocno AR_REGS
    r295: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r295,l0) best AR_REGS, allocno AR_REGS
    r294: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r294,l0) best AR_REGS, allocno AR_REGS
    r293: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r293,l0) best AR_REGS, allocno AR_REGS
    r289: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r289,l0) best AR_REGS, allocno AR_REGS
    r287: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r287,l0) best AR_REGS, allocno AR_REGS
    r286: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r286,l0) best AR_REGS, allocno AR_REGS
    r285: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r285,l0) best AR_REGS, allocno AR_REGS
    r283: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r283,l0) best AR_REGS, allocno AR_REGS
    r278: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r278,l0) best AR_REGS, allocno AR_REGS
    r275: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r275,l0) best AR_REGS, allocno AR_REGS
    r274: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r274,l0) best AR_REGS, allocno AR_REGS
    r271: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r271,l0) best AR_REGS, allocno AR_REGS
    r270: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r270,l0) best AR_REGS, allocno AR_REGS
    r269: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r269,l0) best AR_REGS, allocno AR_REGS
    r261: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r261,l0) best AR_REGS, allocno AR_REGS
    r260: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r260,l0) best AR_REGS, allocno AR_REGS
    r259: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r259,l0) best AR_REGS, allocno AR_REGS
    r258: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r258,l0) best AR_REGS, allocno AR_REGS
    r257: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r257,l0) best AR_REGS, allocno AR_REGS
    r256: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r256,l0) best AR_REGS, allocno AR_REGS
    r255: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r255,l0) best AR_REGS, allocno AR_REGS
    r253: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r253,l0) best AR_REGS, allocno AR_REGS
    r252: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r252,l0) best AR_REGS, allocno AR_REGS
    r251: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r251,l0) best AR_REGS, allocno AR_REGS
    r249: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r249,l0) best AR_REGS, allocno AR_REGS
    r248: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r248,l0) best AR_REGS, allocno AR_REGS
    r246: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a66 (r246,l0) best AR_REGS, allocno AR_REGS
    r244: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r244,l0) best AR_REGS, allocno AR_REGS
    r243: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r243,l0) best AR_REGS, allocno AR_REGS
    r242: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r242,l0) best AR_REGS, allocno AR_REGS
    r241: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r241,l0) best AR_REGS, allocno AR_REGS
    r240: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r240,l0) best AR_REGS, allocno AR_REGS
    r239: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r239,l0) best AR_REGS, allocno AR_REGS
    r238: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r238,l0) best AR_REGS, allocno AR_REGS
    r237: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r237,l0) best AR_REGS, allocno AR_REGS
    r236: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r236,l0) best AR_REGS, allocno AR_REGS
    r234: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r234,l0) best AR_REGS, allocno AR_REGS
    r233: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r233,l0) best AR_REGS, allocno AR_REGS
    r231: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r231,l0) best AR_REGS, allocno AR_REGS
    r229: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a83 (r229,l0) best AR_REGS, allocno AR_REGS
    r228: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a82 (r228,l0) best AR_REGS, allocno AR_REGS
    r227: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r227,l0) best AR_REGS, allocno AR_REGS
    r226: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a84 (r226,l0) best AR_REGS, allocno AR_REGS
    r225: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r225,l0) best AR_REGS, allocno AR_REGS
    r224: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a85 (r224,l0) best AR_REGS, allocno AR_REGS
    r223: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a86 (r223,l0) best AR_REGS, allocno AR_REGS
    r222: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a88 (r222,l0) best AR_REGS, allocno AR_REGS
    r221: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a87 (r221,l0) best AR_REGS, allocno AR_REGS
    r220: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a89 (r220,l0) best AR_REGS, allocno AR_REGS
    r219: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a91 (r219,l0) best AR_REGS, allocno AR_REGS
    r218: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a90 (r218,l0) best AR_REGS, allocno AR_REGS
    r217: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a92 (r217,l0) best AR_REGS, allocno AR_REGS
    r216: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a93 (r216,l0) best AR_REGS, allocno AR_REGS
    r215: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a95 (r215,l0) best AR_REGS, allocno AR_REGS
    r214: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a96 (r214,l0) best AR_REGS, allocno AR_REGS
    r213: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a98 (r213,l0) best AR_REGS, allocno AR_REGS
    r212: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a99 (r212,l0) best AR_REGS, allocno AR_REGS
    r211: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a101 (r211,l0) best AR_REGS, allocno AR_REGS
    r210: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a100 (r210,l0) best AR_REGS, allocno AR_REGS
    r209: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a102 (r209,l0) best AR_REGS, allocno AR_REGS
    r208: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a103 (r208,l0) best AR_REGS, allocno AR_REGS
    r207: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a104 (r207,l0) best AR_REGS, allocno AR_REGS
    r206: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a106 (r206,l0) best AR_REGS, allocno AR_REGS
    r205: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a107 (r205,l0) best AR_REGS, allocno AR_REGS
    r204: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a109 (r204,l0) best AR_REGS, allocno AR_REGS
    r203: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a108 (r203,l0) best AR_REGS, allocno AR_REGS
    r201: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a112 (r201,l0) best AR_REGS, allocno AR_REGS
    r200: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a111 (r200,l0) best AR_REGS, allocno AR_REGS
    r198: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a115 (r198,l0) best AR_REGS, allocno AR_REGS
    r196: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a118 (r196,l0) best AR_REGS, allocno AR_REGS
    r195: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a117 (r195,l0) best AR_REGS, allocno AR_REGS
    r194: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a114 (r194,l0) best AR_REGS, allocno AR_REGS
    r193: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a119 (r193,l0) best AR_REGS, allocno AR_REGS
    r192: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a110 (r192,l0) best AR_REGS, allocno AR_REGS
    r191: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a120 (r191,l0) best AR_REGS, allocno AR_REGS
    r190: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a121 (r190,l0) best AR_REGS, allocno AR_REGS
    r189: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a123 (r189,l0) best AR_REGS, allocno AR_REGS
    r186: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a124 (r186,l0) best AR_REGS, allocno AR_REGS
    r184: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a127 (r184,l0) best AR_REGS, allocno AR_REGS
    r182: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a122 (r182,l0) best AR_REGS, allocno AR_REGS
    r180: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a130 (r180,l0) best AR_REGS, allocno AR_REGS
    r178: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a131 (r178,l0) best AR_REGS, allocno AR_REGS
    r175: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a134 (r175,l0) best AR_REGS, allocno AR_REGS
    r174: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a133 (r174,l0) best AR_REGS, allocno AR_REGS
    r173: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a126 (r173,l0) best AR_REGS, allocno AR_REGS
    r172: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a135 (r172,l0) best AR_REGS, allocno AR_REGS
    r171: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a129 (r171,l0) best AR_REGS, allocno AR_REGS
    r170: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a137 (r170,l0) best AR_REGS, allocno AR_REGS
    r169: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a138 (r169,l0) best AR_REGS, allocno AR_REGS
    r168: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a140 (r168,l0) best AR_REGS, allocno AR_REGS
    r167: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a139 (r167,l0) best AR_REGS, allocno AR_REGS
    r165: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a143 (r165,l0) best AR_REGS, allocno AR_REGS
    r164: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a142 (r164,l0) best AR_REGS, allocno AR_REGS
    r162: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a146 (r162,l0) best AR_REGS, allocno AR_REGS
    r160: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a149 (r160,l0) best AR_REGS, allocno AR_REGS
    r159: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a148 (r159,l0) best AR_REGS, allocno AR_REGS
    r158: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a145 (r158,l0) best AR_REGS, allocno AR_REGS
    r157: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a150 (r157,l0) best AR_REGS, allocno AR_REGS
    r156: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a141 (r156,l0) best AR_REGS, allocno AR_REGS
    r155: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a151 (r155,l0) best AR_REGS, allocno AR_REGS
    r154: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a152 (r154,l0) best AR_REGS, allocno AR_REGS
    r153: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a154 (r153,l0) best AR_REGS, allocno AR_REGS
    r152: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a153 (r152,l0) best AR_REGS, allocno AR_REGS
    r150: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a157 (r150,l0) best AR_REGS, allocno AR_REGS
    r149: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a156 (r149,l0) best AR_REGS, allocno AR_REGS
    r148: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a158 (r148,l0) best AR_REGS, allocno AR_REGS
    r147: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a159 (r147,l0) best AR_REGS, allocno AR_REGS
    r146: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a155 (r146,l0) best AR_REGS, allocno AR_REGS
    r145: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a161 (r145,l0) best AR_REGS, allocno AR_REGS
    r144: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a162 (r144,l0) best AR_REGS, allocno AR_REGS
    r143: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a164 (r143,l0) best AR_REGS, allocno AR_REGS
    r134: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a168 (r134,l0) best AR_REGS, allocno AR_REGS
    r133: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a163 (r133,l0) best AR_REGS, allocno AR_REGS
    r132: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a169 (r132,l0) best AR_REGS, allocno AR_REGS
    r131: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a170 (r131,l0) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a171 (r130,l0) best AR_REGS, allocno AR_REGS
    r127: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a172 (r127,l0) best AR_REGS, allocno AR_REGS
    r126: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a174 (r126,l0) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a176 (r125,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a177 (r124,l0) best AR_REGS, allocno AR_REGS
    r123: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a178 (r123,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a175 (r122,l0) best AR_REGS, allocno AR_REGS
    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a179 (r119,l0) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a180 (r118,l0) best AR_REGS, allocno AR_REGS
    r114: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r114,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r110,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r108,l0) best AR_REGS, allocno AR_REGS
    r106: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r106,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r103,l0) best AR_REGS, allocno AR_REGS
    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r102,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r101,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r97,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r94,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r87,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r86,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r84,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r82,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r80,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r79,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r77,l0) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r76,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a94 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a97 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a105 (r73,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a116 (r71,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a113 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a125 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a128 (r68,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a132 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a136 (r65,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a147 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a144 (r62,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a160 (r61,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a165 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a167 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a166 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r52,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a173 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r327,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:13500,13500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:72000,72000 MEM:18000,18000
  a2(r320,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a3(r114,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a4(r48,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a5(r317,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:4880,4880
  a6(r110,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a7(r106,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a8(r45,l0) costs: ACC_REG:8820,8820 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:47040,47040 MEM:11760,11760
  a9(r108,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a10(r304,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:4880,4880
  a11(r310,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a12(r309,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a13(r43,l0) costs: ACC_REG:53160,53160 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:283520,283520 MEM:70880,70880
  a14(r308,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a15(r103,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a16(r307,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a17(r306,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a18(r302,l0) costs: ACC_REG:912,912 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4864,4864 MEM:1216,1216
  a19(r303,l0) costs: ACC_REG:912,912 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4864,4864 MEM:1216,1216
  a20(r301,l0) costs: ACC_REG:912,912 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4864,4864 MEM:0,0
  a21(r102,l0) costs: ACC_REG:1830,1830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9760,9760 MEM:2440,2440
  a22(r297,l0) costs: ACC_REG:2745,2745 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14640,14640 MEM:3660,3660
  a23(r298,l0) costs: ACC_REG:1830,1830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9760,9760 MEM:2440,2440
  a24(r296,l0) costs: ACC_REG:1830,1830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9760,9760 MEM:0,0
  a25(r101,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a26(r295,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a27(r42,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a28(r293,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a29(r294,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a30(r287,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a31(r289,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a32(r97,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a33(r283,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:4000,4000
  a34(r285,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a35(r286,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a36(r94,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a37(r271,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a38(r270,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a39(r278,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a40(r275,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a41(r274,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a42(r82,l0) costs: ACC_REG:10500,10500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:56000,56000 MEM:14000,14000
  a43(r86,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a44(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a45(r269,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a46(r87,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a47(r260,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:20000,20000
  a48(r84,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a49(r83,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a50(r261,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a51(r259,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a52(r258,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a53(r257,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a54(r256,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a55(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a56(r255,l0) costs: ACC_REG:4320,4320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23040,23040 MEM:5760,5760
  a57(r52,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a58(r253,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a59(r251,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a60(r252,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a61(r240,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:4000,4000
  a62(r248,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a63(r249,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a64(r79,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a65(r242,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a66(r246,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a67(r80,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a68(r243,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a69(r244,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a70(r241,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a71(r239,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a72(r238,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a73(r236,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a74(r237,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a75(r225,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:4000,4000
  a76(r233,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a77(r234,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a78(r76,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a79(r227,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a80(r231,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a81(r77,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a82(r228,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a83(r229,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a84(r226,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a85(r224,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a86(r223,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a87(r221,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a88(r222,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a89(r220,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a90(r218,l0) costs: ACC_REG:810,810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4320,4320 MEM:1080,1080
  a91(r219,l0) costs: ACC_REG:810,810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4320,4320 MEM:1080,1080
  a92(r217,l0) costs: ACC_REG:810,810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4320,4320 MEM:0,0
  a93(r216,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a94(r75,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a95(r215,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a96(r214,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a97(r74,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a98(r213,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a99(r212,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a100(r210,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a101(r211,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a102(r209,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a103(r208,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a104(r207,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a105(r73,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a106(r206,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a107(r205,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a108(r203,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a109(r204,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a110(r192,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:4000,4000
  a111(r200,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a112(r201,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a113(r70,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a114(r194,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a115(r198,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a116(r71,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a117(r195,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a118(r196,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a119(r193,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a120(r191,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a121(r190,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a122(r182,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a123(r189,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a124(r186,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a125(r69,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a126(r173,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a127(r184,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a128(r68,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a129(r171,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:6000,6000
  a130(r180,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a131(r178,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a132(r66,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a133(r174,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a134(r175,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a135(r172,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a136(r65,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a137(r170,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a138(r169,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a139(r167,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a140(r168,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a141(r156,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:4000,4000
  a142(r164,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a143(r165,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a144(r62,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a145(r158,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a146(r162,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a147(r63,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a148(r159,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a149(r160,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a150(r157,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a151(r155,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a152(r154,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a153(r152,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a154(r153,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a155(r146,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:2000,2000
  a156(r149,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a157(r150,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a158(r148,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a159(r147,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a160(r61,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a161(r145,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a162(r144,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a163(r133,l0) costs: ACC_REG:4200,4200 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22400,22400 MEM:5600,5600
  a164(r143,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a165(r57,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a166(r53,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a167(r55,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a168(r134,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:2240,2240
  a169(r132,l0) costs: ACC_REG:1680,1680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8960,8960 MEM:0,0
  a170(r131,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a171(r130,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a172(r127,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a173(r49,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a174(r126,l0) costs: ACC_REG:4320,4320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23040,23040 MEM:0,0
  a175(r122,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a176(r125,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a177(r124,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a178(r123,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a179(r119,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a180(r118,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 433(l0): point = 0
   Insn 432(l0): point = 2
   Insn 430(l0): point = 4
   Insn 429(l0): point = 6
   Insn 428(l0): point = 8
   Insn 427(l0): point = 10
   Insn 426(l0): point = 12
   Insn 425(l0): point = 14
   Insn 424(l0): point = 16
   Insn 418(l0): point = 18
   Insn 417(l0): point = 20
   Insn 414(l0): point = 23
   Insn 413(l0): point = 25
   Insn 412(l0): point = 27
   Insn 411(l0): point = 29
   Insn 410(l0): point = 31
   Insn 409(l0): point = 33
   Insn 408(l0): point = 35
   Insn 405(l0): point = 37
   Insn 404(l0): point = 39
   Insn 11(l0): point = 42
   Insn 464(l0): point = 45
   Insn 10(l0): point = 47
   Insn 400(l0): point = 50
   Insn 399(l0): point = 52
   Insn 396(l0): point = 54
   Insn 395(l0): point = 56
   Insn 394(l0): point = 58
   Insn 393(l0): point = 60
   Insn 388(l0): point = 62
   Insn 387(l0): point = 64
   Insn 386(l0): point = 66
   Insn 385(l0): point = 68
   Insn 384(l0): point = 70
   Insn 383(l0): point = 72
   Insn 382(l0): point = 74
   Insn 380(l0): point = 76
   Insn 379(l0): point = 78
   Insn 376(l0): point = 81
   Insn 466(l0): point = 83
   Insn 467(l0): point = 85
   Insn 375(l0): point = 87
   Insn 371(l0): point = 90
   Insn 370(l0): point = 92
   Insn 367(l0): point = 94
   Insn 366(l0): point = 96
   Insn 365(l0): point = 98
   Insn 364(l0): point = 100
   Insn 362(l0): point = 103
   Insn 361(l0): point = 105
   Insn 360(l0): point = 107
   Insn 358(l0): point = 110
   Insn 357(l0): point = 112
   Insn 356(l0): point = 114
   Insn 355(l0): point = 116
   Insn 353(l0): point = 118
   Insn 352(l0): point = 120
   Insn 351(l0): point = 122
   Insn 348(l0): point = 124
   Insn 346(l0): point = 126
   Insn 345(l0): point = 128
   Insn 342(l0): point = 131
   Insn 341(l0): point = 133
   Insn 340(l0): point = 135
   Insn 338(l0): point = 137
   Insn 336(l0): point = 140
   Insn 335(l0): point = 142
   Insn 332(l0): point = 144
   Insn 331(l0): point = 146
   Insn 330(l0): point = 148
   Insn 327(l0): point = 150
   Insn 326(l0): point = 152
   Insn 323(l0): point = 154
   Insn 322(l0): point = 156
   Insn 319(l0): point = 158
   Insn 318(l0): point = 160
   Insn 9(l0): point = 163
   Insn 462(l0): point = 166
   Insn 8(l0): point = 168
   Insn 314(l0): point = 171
   Insn 313(l0): point = 173
   Insn 312(l0): point = 175
   Insn 309(l0): point = 177
   Insn 307(l0): point = 179
   Insn 304(l0): point = 181
   Insn 301(l0): point = 183
   Insn 300(l0): point = 185
   Insn 299(l0): point = 187
   Insn 298(l0): point = 189
   Insn 7(l0): point = 192
   Insn 292(l0): point = 194
   Insn 291(l0): point = 196
   Insn 288(l0): point = 199
   Insn 287(l0): point = 201
   Insn 285(l0): point = 203
   Insn 284(l0): point = 205
   Insn 283(l0): point = 207
   Insn 6(l0): point = 210
   Insn 460(l0): point = 213
   Insn 280(l0): point = 215
   Insn 279(l0): point = 217
   Insn 277(l0): point = 220
   Insn 274(l0): point = 223
   Insn 273(l0): point = 225
   Insn 272(l0): point = 227
   Insn 269(l0): point = 230
   Insn 268(l0): point = 232
   Insn 264(l0): point = 235
   Insn 263(l0): point = 237
   Insn 262(l0): point = 239
   Insn 259(l0): point = 241
   Insn 258(l0): point = 243
   Insn 257(l0): point = 245
   Insn 256(l0): point = 247
   Insn 254(l0): point = 249
   Insn 252(l0): point = 251
   Insn 251(l0): point = 253
   Insn 250(l0): point = 255
   Insn 249(l0): point = 257
   Insn 248(l0): point = 259
   Insn 247(l0): point = 261
   Insn 246(l0): point = 263
   Insn 244(l0): point = 266
   Insn 243(l0): point = 268
   Insn 242(l0): point = 270
   Insn 241(l0): point = 272
   Insn 237(l0): point = 275
   Insn 236(l0): point = 277
   Insn 235(l0): point = 279
   Insn 232(l0): point = 281
   Insn 231(l0): point = 283
   Insn 230(l0): point = 285
   Insn 229(l0): point = 287
   Insn 227(l0): point = 289
   Insn 225(l0): point = 291
   Insn 224(l0): point = 293
   Insn 223(l0): point = 295
   Insn 222(l0): point = 297
   Insn 221(l0): point = 299
   Insn 220(l0): point = 301
   Insn 219(l0): point = 303
   Insn 217(l0): point = 306
   Insn 216(l0): point = 308
   Insn 215(l0): point = 310
   Insn 214(l0): point = 312
   Insn 211(l0): point = 315
   Insn 468(l0): point = 317
   Insn 469(l0): point = 319
   Insn 210(l0): point = 321
   Insn 205(l0): point = 324
   Insn 470(l0): point = 326
   Insn 471(l0): point = 328
   Insn 204(l0): point = 330
   Insn 200(l0): point = 333
   Insn 199(l0): point = 335
   Insn 198(l0): point = 337
   Insn 197(l0): point = 339
   Insn 196(l0): point = 341
   Insn 194(l0): point = 344
   Insn 193(l0): point = 346
   Insn 192(l0): point = 348
   Insn 191(l0): point = 350
   Insn 186(l0): point = 353
   Insn 185(l0): point = 355
   Insn 184(l0): point = 357
   Insn 183(l0): point = 359
   Insn 182(l0): point = 361
   Insn 181(l0): point = 363
   Insn 180(l0): point = 365
   Insn 178(l0): point = 368
   Insn 177(l0): point = 370
   Insn 176(l0): point = 372
   Insn 175(l0): point = 374
   Insn 171(l0): point = 377
   Insn 170(l0): point = 379
   Insn 169(l0): point = 381
   Insn 166(l0): point = 383
   Insn 165(l0): point = 385
   Insn 164(l0): point = 387
   Insn 163(l0): point = 389
   Insn 161(l0): point = 391
   Insn 159(l0): point = 393
   Insn 158(l0): point = 395
   Insn 157(l0): point = 397
   Insn 156(l0): point = 399
   Insn 155(l0): point = 401
   Insn 154(l0): point = 403
   Insn 153(l0): point = 405
   Insn 151(l0): point = 408
   Insn 150(l0): point = 410
   Insn 149(l0): point = 412
   Insn 148(l0): point = 414
   Insn 144(l0): point = 417
   Insn 143(l0): point = 419
   Insn 139(l0): point = 421
   Insn 138(l0): point = 423
   Insn 137(l0): point = 425
   Insn 135(l0): point = 427
   Insn 133(l0): point = 429
   Insn 132(l0): point = 431
   Insn 130(l0): point = 433
   Insn 129(l0): point = 435
   Insn 128(l0): point = 437
   Insn 126(l0): point = 439
   Insn 122(l0): point = 441
   Insn 121(l0): point = 443
   Insn 120(l0): point = 445
   Insn 119(l0): point = 447
   Insn 118(l0): point = 449
   Insn 117(l0): point = 451
   Insn 116(l0): point = 453
   Insn 115(l0): point = 455
   Insn 113(l0): point = 458
   Insn 112(l0): point = 460
   Insn 111(l0): point = 462
   Insn 110(l0): point = 464
   Insn 106(l0): point = 467
   Insn 105(l0): point = 469
   Insn 104(l0): point = 471
   Insn 101(l0): point = 473
   Insn 100(l0): point = 475
   Insn 99(l0): point = 477
   Insn 98(l0): point = 479
   Insn 96(l0): point = 481
   Insn 94(l0): point = 483
   Insn 93(l0): point = 485
   Insn 92(l0): point = 487
   Insn 91(l0): point = 489
   Insn 90(l0): point = 491
   Insn 89(l0): point = 493
   Insn 88(l0): point = 495
   Insn 86(l0): point = 498
   Insn 85(l0): point = 500
   Insn 84(l0): point = 502
   Insn 83(l0): point = 504
   Insn 79(l0): point = 507
   Insn 78(l0): point = 509
   Insn 77(l0): point = 511
   Insn 74(l0): point = 513
   Insn 73(l0): point = 515
   Insn 72(l0): point = 517
   Insn 71(l0): point = 519
   Insn 70(l0): point = 521
   Insn 69(l0): point = 523
   Insn 68(l0): point = 525
   Insn 66(l0): point = 528
   Insn 65(l0): point = 530
   Insn 64(l0): point = 532
   Insn 63(l0): point = 534
   Insn 4(l0): point = 537
   Insn 458(l0): point = 540
   Insn 5(l0): point = 542
   Insn 58(l0): point = 544
   Insn 57(l0): point = 546
   Insn 52(l0): point = 548
   Insn 51(l0): point = 550
   Insn 48(l0): point = 552
   Insn 45(l0): point = 554
   Insn 44(l0): point = 556
   Insn 43(l0): point = 558
   Insn 42(l0): point = 560
   Insn 40(l0): point = 563
   Insn 39(l0): point = 565
   Insn 38(l0): point = 567
   Insn 472(l0): point = 569
   Insn 3(l0): point = 572
   Insn 456(l0): point = 575
   Insn 30(l0): point = 577
   Insn 29(l0): point = 579
   Insn 27(l0): point = 582
   Insn 24(l0): point = 584
   Insn 22(l0): point = 586
   Insn 473(l0): point = 588
   Insn 21(l0): point = 590
   Insn 19(l0): point = 592
   Insn 18(l0): point = 594
   Insn 474(l0): point = 596
   Insn 15(l0): point = 598
   Insn 14(l0): point = 600
 a0(r327): [1..2]
 a1(r44): [199..203] [1..194]
 a2(r320): [3..20]
 a3(r114): [11..18]
 a4(r48): [45..47] [26..42]
 a5(r317): [28..39]
 a6(r110): [30..37]
 a7(r106): [34..62]
 a8(r45): [575..577] [36..572]
 a9(r108): [51..52]
 a10(r304): [53..78]
 a11(r310): [63..64]
 a12(r309): [63..66]
 a13(r43): [540..542] [67..537]
 a14(r308): [69..70]
 a15(r103): [69..76]
 a16(r307): [71..72]
 a17(r306): [71..74]
 a18(r302): [82..83]
 a19(r303): [82..87]
 a20(r301): [84..85]
 a21(r102): [91..92]
 a22(r297): [93..98]
 a23(r298): [95..96]
 a24(r296): [99..100]
 a25(r101): [104..105]
 a26(r295): [106..107]
 a27(r42): [199..584] [111..192]
 a28(r293): [113..116]
 a29(r294): [113..114]
 a30(r287): [117..128]
 a31(r289): [123..124]
 a32(r97): [125..126]
 a33(r283): [132..137]
 a34(r285): [132..133]
 a35(r286): [134..135]
 a36(r94): [141..142]
 a37(r271): [143..158]
 a38(r270): [149..160]
 a39(r278): [151..152]
 a40(r275): [153..154]
 a41(r274): [153..156]
 a42(r82): [155..207]
 a43(r86): [157..177]
 a44(r47): [166..168] [157..163]
 a45(r269): [172..173]
 a46(r87): [174..175]
 a47(r260): [176..187]
 a48(r84): [178..179]
 a49(r83): [178..181]
 a50(r261): [184..185]
 a51(r259): [188..189]
 a52(r258): [195..196]
 a53(r257): [200..201]
 a54(r256): [204..205]
 a55(r46): [213..215] [206..210]
 a56(r255): [216..217]
 a57(r52): [221..594]
 a58(r253): [231..232]
 a59(r251): [236..239]
 a60(r252): [236..237]
 a61(r240): [240..263]
 a62(r248): [244..247]
 a63(r249): [244..245]
 a64(r79): [246..268]
 a65(r242): [248..259]
 a66(r246): [248..249]
 a67(r80): [250..251]
 a68(r243): [254..257]
 a69(r244): [254..255]
 a70(r241): [258..261]
 a71(r239): [269..270]
 a72(r238): [271..272]
 a73(r236): [276..279]
 a74(r237): [276..277]
 a75(r225): [280..303]
 a76(r233): [284..287]
 a77(r234): [284..285]
 a78(r76): [286..308]
 a79(r227): [288..299]
 a80(r231): [288..289]
 a81(r77): [290..291]
 a82(r228): [294..297]
 a83(r229): [294..295]
 a84(r226): [298..301]
 a85(r224): [309..310]
 a86(r223): [311..312]
 a87(r221): [316..317]
 a88(r222): [316..321]
 a89(r220): [318..319]
 a90(r218): [325..326]
 a91(r219): [325..330]
 a92(r217): [327..328]
 a93(r216): [334..335]
 a94(r75): [336..337]
 a95(r215): [338..339]
 a96(r214): [340..341]
 a97(r74): [345..346]
 a98(r213): [347..348]
 a99(r212): [349..350]
 a100(r210): [356..359]
 a101(r211): [356..357]
 a102(r209): [360..361]
 a103(r208): [360..363]
 a104(r207): [364..365]
 a105(r73): [369..370]
 a106(r206): [371..372]
 a107(r205): [373..374]
 a108(r203): [378..381]
 a109(r204): [378..379]
 a110(r192): [382..405]
 a111(r200): [386..389]
 a112(r201): [386..387]
 a113(r70): [388..410]
 a114(r194): [390..401]
 a115(r198): [390..391]
 a116(r71): [392..393]
 a117(r195): [396..399]
 a118(r196): [396..397]
 a119(r193): [400..403]
 a120(r191): [411..412]
 a121(r190): [413..414]
 a122(r182): [418..431]
 a123(r189): [418..419]
 a124(r186): [424..425]
 a125(r69): [424..429]
 a126(r173): [426..451]
 a127(r184): [426..427]
 a128(r68): [428..433]
 a129(r171): [428..455]
 a130(r180): [436..437]
 a131(r178): [438..439]
 a132(r66): [440..443]
 a133(r174): [446..449]
 a134(r175): [446..447]
 a135(r172): [450..453]
 a136(r65): [459..460]
 a137(r170): [461..462]
 a138(r169): [463..464]
 a139(r167): [468..471]
 a140(r168): [468..469]
 a141(r156): [472..495]
 a142(r164): [476..479]
 a143(r165): [476..477]
 a144(r62): [478..500]
 a145(r158): [480..491]
 a146(r162): [480..481]
 a147(r63): [482..483]
 a148(r159): [486..489]
 a149(r160): [486..487]
 a150(r157): [490..493]
 a151(r155): [501..502]
 a152(r154): [503..504]
 a153(r152): [508..511]
 a154(r153): [508..509]
 a155(r146): [512..525]
 a156(r149): [516..519]
 a157(r150): [516..517]
 a158(r148): [520..521]
 a159(r147): [520..523]
 a160(r61): [529..530]
 a161(r145): [531..532]
 a162(r144): [533..534]
 a163(r133): [545..558]
 a164(r143): [545..546]
 a165(r57): [547..548]
 a166(r53): [547..552]
 a167(r55): [549..550]
 a168(r134): [555..556]
 a169(r132): [559..560]
 a170(r131): [564..565]
 a171(r130): [564..567]
 a172(r127): [568..569]
 a173(r49): [568..598]
 a174(r126): [578..579]
 a175(r122): [585..586]
 a176(r125): [587..590]
 a177(r124): [587..588]
 a178(r123): [587..592]
 a179(r119): [595..596]
 a180(r118): [599..600]
Compressing live ranges: from 603 to 250 - 41%
Ranges after the compression:
 a0(r327): [0..1]
 a1(r44): [68..69] [0..65]
 a2(r320): [2..3]
 a3(r114): [2..3]
 a4(r48): [4..7]
 a5(r317): [4..5]
 a6(r110): [4..5]
 a7(r106): [4..11]
 a8(r45): [4..239]
 a9(r108): [8..9]
 a10(r304): [10..17]
 a11(r310): [12..13]
 a12(r309): [12..13]
 a13(r43): [14..223]
 a14(r308): [14..15]
 a15(r103): [14..17]
 a16(r307): [16..17]
 a17(r306): [16..17]
 a18(r302): [18..19]
 a19(r303): [18..21]
 a20(r301): [20..21]
 a21(r102): [22..23]
 a22(r297): [24..25]
 a23(r298): [24..25]
 a24(r296): [26..27]
 a25(r101): [28..29]
 a26(r295): [30..31]
 a27(r42): [68..241] [32..65]
 a28(r293): [32..33]
 a29(r294): [32..33]
 a30(r287): [34..37]
 a31(r289): [34..35]
 a32(r97): [36..37]
 a33(r283): [38..41]
 a34(r285): [38..39]
 a35(r286): [40..41]
 a36(r94): [42..43]
 a37(r271): [44..51]
 a38(r270): [44..51]
 a39(r278): [44..45]
 a40(r275): [46..47]
 a41(r274): [46..49]
 a42(r82): [48..73]
 a43(r86): [50..59]
 a44(r47): [50..53]
 a45(r269): [54..55]
 a46(r87): [56..57]
 a47(r260): [58..63]
 a48(r84): [60..61]
 a49(r83): [60..61]
 a50(r261): [62..63]
 a51(r259): [64..65]
 a52(r258): [66..67]
 a53(r257): [68..69]
 a54(r256): [70..71]
 a55(r46): [72..75]
 a56(r255): [76..77]
 a57(r52): [78..245]
 a58(r253): [78..79]
 a59(r251): [80..81]
 a60(r252): [80..81]
 a61(r240): [82..93]
 a62(r248): [82..85]
 a63(r249): [82..83]
 a64(r79): [84..93]
 a65(r242): [86..93]
 a66(r246): [86..87]
 a67(r80): [88..89]
 a68(r243): [90..91]
 a69(r244): [90..91]
 a70(r241): [92..93]
 a71(r239): [94..95]
 a72(r238): [96..97]
 a73(r236): [98..99]
 a74(r237): [98..99]
 a75(r225): [100..111]
 a76(r233): [100..103]
 a77(r234): [100..101]
 a78(r76): [102..111]
 a79(r227): [104..111]
 a80(r231): [104..105]
 a81(r77): [106..107]
 a82(r228): [108..109]
 a83(r229): [108..109]
 a84(r226): [110..111]
 a85(r224): [112..113]
 a86(r223): [114..115]
 a87(r221): [116..117]
 a88(r222): [116..119]
 a89(r220): [118..119]
 a90(r218): [120..121]
 a91(r219): [120..123]
 a92(r217): [122..123]
 a93(r216): [124..125]
 a94(r75): [126..127]
 a95(r215): [128..129]
 a96(r214): [130..131]
 a97(r74): [132..133]
 a98(r213): [134..135]
 a99(r212): [136..137]
 a100(r210): [138..139]
 a101(r211): [138..139]
 a102(r209): [140..141]
 a103(r208): [140..141]
 a104(r207): [142..143]
 a105(r73): [144..145]
 a106(r206): [146..147]
 a107(r205): [148..149]
 a108(r203): [150..151]
 a109(r204): [150..151]
 a110(r192): [152..163]
 a111(r200): [152..155]
 a112(r201): [152..153]
 a113(r70): [154..163]
 a114(r194): [156..163]
 a115(r198): [156..157]
 a116(r71): [158..159]
 a117(r195): [160..161]
 a118(r196): [160..161]
 a119(r193): [162..163]
 a120(r191): [164..165]
 a121(r190): [166..167]
 a122(r182): [168..175]
 a123(r189): [168..169]
 a124(r186): [170..171]
 a125(r69): [170..175]
 a126(r173): [172..185]
 a127(r184): [172..173]
 a128(r68): [174..175]
 a129(r171): [174..185]
 a130(r180): [176..177]
 a131(r178): [178..179]
 a132(r66): [180..181]
 a133(r174): [182..183]
 a134(r175): [182..183]
 a135(r172): [184..185]
 a136(r65): [186..187]
 a137(r170): [188..189]
 a138(r169): [190..191]
 a139(r167): [192..193]
 a140(r168): [192..193]
 a141(r156): [194..205]
 a142(r164): [194..197]
 a143(r165): [194..195]
 a144(r62): [196..205]
 a145(r158): [198..205]
 a146(r162): [198..199]
 a147(r63): [200..201]
 a148(r159): [202..203]
 a149(r160): [202..203]
 a150(r157): [204..205]
 a151(r155): [206..207]
 a152(r154): [208..209]
 a153(r152): [210..211]
 a154(r153): [210..211]
 a155(r146): [212..215]
 a156(r149): [212..213]
 a157(r150): [212..213]
 a158(r148): [214..215]
 a159(r147): [214..215]
 a160(r61): [216..217]
 a161(r145): [218..219]
 a162(r144): [220..221]
 a163(r133): [224..231]
 a164(r143): [224..225]
 a165(r57): [226..227]
 a166(r53): [226..229]
 a167(r55): [228..229]
 a168(r134): [230..231]
 a169(r132): [232..233]
 a170(r131): [234..235]
 a171(r130): [234..235]
 a172(r127): [236..237]
 a173(r49): [236..247]
 a174(r126): [240..241]
 a175(r122): [242..243]
 a176(r125): [244..245]
 a177(r124): [244..245]
 a178(r123): [244..245]
 a179(r119): [246..247]
 a180(r118): [248..249]
+++Allocating 2656 bytes for conflict table (uncompressed size 4344)
;; a0(r327,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r327,l0) a2(r320,l0) a3(r114,l0) a5(r317,l0) a6(r110,l0) a4(r48,l0) a7(r106,l0) a8(r45,l0) a9(r108,l0) a10(r304,l0) a11(r310,l0) a12(r309,l0) a14(r308,l0) a15(r103,l0) a13(r43,l0) a16(r307,l0) a17(r306,l0) a18(r302,l0) a19(r303,l0) a20(r301,l0) a21(r102,l0) a22(r297,l0) a23(r298,l0) a24(r296,l0) a25(r101,l0) a26(r295,l0) a28(r293,l0) a29(r294,l0) a27(r42,l0) a31(r289,l0) a30(r287,l0) a32(r97,l0) a34(r285,l0) a33(r283,l0) a35(r286,l0) a36(r94,l0) a39(r278,l0) a37(r271,l0) a38(r270,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0) a51(r259,l0) a53(r257,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r320,l0) conflicts: a1(r44,l0) a3(r114,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r114,l0) conflicts: a1(r44,l0) a2(r320,l0)
;;     total conflict hard regs: 13-15
;;     conflict hard regs: 13-15

;; a4(r48,l0) conflicts: a1(r44,l0) a5(r317,l0) a6(r110,l0) a7(r106,l0) a8(r45,l0)
;;     total conflict hard regs: 11-15
;;     conflict hard regs: 11-15

;; a5(r317,l0) conflicts: a1(r44,l0) a6(r110,l0) a4(r48,l0) a7(r106,l0) a8(r45,l0)
;;     total conflict hard regs: 12-15
;;     conflict hard regs: 12-15

;; a6(r110,l0) conflicts: a1(r44,l0) a5(r317,l0) a4(r48,l0) a7(r106,l0) a8(r45,l0)
;;     total conflict hard regs: 13-15
;;     conflict hard regs: 13-15

;; a7(r106,l0) conflicts: a1(r44,l0) a5(r317,l0) a6(r110,l0) a4(r48,l0) a8(r45,l0) a9(r108,l0) a10(r304,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a8(r45,l0) conflicts: a1(r44,l0) a5(r317,l0) a6(r110,l0) a4(r48,l0) a7(r106,l0) a9(r108,l0) a10(r304,l0) a11(r310,l0) a12(r309,l0) a14(r308,l0) a15(r103,l0) a13(r43,l0) a16(r307,l0) a17(r306,l0) a18(r302,l0) a19(r303,l0) a20(r301,l0) a21(r102,l0) a22(r297,l0) a23(r298,l0) a24(r296,l0) a25(r101,l0) a26(r295,l0) a28(r293,l0) a29(r294,l0) a27(r42,l0) a31(r289,l0) a30(r287,l0) a32(r97,l0) a34(r285,l0) a33(r283,l0) a35(r286,l0) a36(r94,l0) a39(r278,l0) a37(r271,l0) a38(r270,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0) a51(r259,l0) a52(r258,l0) a53(r257,l0) a54(r256,l0) a55(r46,l0) a56(r255,l0) a58(r253,l0) a57(r52,l0) a59(r251,l0) a60(r252,l0) a63(r249,l0) a62(r248,l0) a61(r240,l0) a64(r79,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0) a71(r239,l0) a72(r238,l0) a73(r236,l0) a74(r237,l0) a77(r234,l0) a76(r233,l0) a75(r225,l0) a78(r76,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0) a85(r224,l0) a86(r223,l0) a87(r221,l0) a88(r222,l0) a89(r220,l0) a90(r218,l0) a91(r219,l0) a92(r217,l0) a93(r216,l0) a94(r75,l0) a95(r215,l0) a96(r214,l0) a97(r74,l0) a98(r213,l0) a99(r212,l0) a100(r210,l0) a101(r211,l0) a102(r209,l0) a103(r208,l0) a104(r207,l0) a105(r73,l0) a106(r206,l0) a107(r205,l0) a108(r203,l0) a109(r204,l0) a112(r201,l0) a111(r200,l0) a110(r192,l0) a113(r70,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0) a120(r191,l0) a121(r190,l0) a123(r189,l0) a122(r182,l0) a124(r186,l0) a125(r69,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0) a136(r65,l0) a137(r170,l0) a138(r169,l0) a139(r167,l0) a140(r168,l0) a143(r165,l0) a142(r164,l0) a141(r156,l0) a144(r62,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0) a151(r155,l0) a152(r154,l0) a153(r152,l0) a154(r153,l0) a156(r149,l0) a157(r150,l0) a155(r146,l0) a158(r148,l0) a159(r147,l0) a160(r61,l0) a161(r145,l0) a162(r144,l0) a164(r143,l0) a163(r133,l0) a165(r57,l0) a166(r53,l0) a167(r55,l0) a168(r134,l0) a169(r132,l0) a170(r131,l0) a171(r130,l0) a172(r127,l0) a173(r49,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a9(r108,l0) conflicts: a1(r44,l0) a7(r106,l0) a8(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r304,l0) conflicts: a1(r44,l0) a7(r106,l0) a8(r45,l0) a11(r310,l0) a12(r309,l0) a14(r308,l0) a15(r103,l0) a13(r43,l0) a16(r307,l0) a17(r306,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a11(r310,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a12(r309,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r309,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a11(r310,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r43,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a14(r308,l0) a15(r103,l0) a16(r307,l0) a17(r306,l0) a18(r302,l0) a19(r303,l0) a20(r301,l0) a21(r102,l0) a22(r297,l0) a23(r298,l0) a24(r296,l0) a25(r101,l0) a26(r295,l0) a28(r293,l0) a29(r294,l0) a27(r42,l0) a31(r289,l0) a30(r287,l0) a32(r97,l0) a34(r285,l0) a33(r283,l0) a35(r286,l0) a36(r94,l0) a39(r278,l0) a37(r271,l0) a38(r270,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0) a51(r259,l0) a52(r258,l0) a53(r257,l0) a54(r256,l0) a55(r46,l0) a56(r255,l0) a58(r253,l0) a57(r52,l0) a59(r251,l0) a60(r252,l0) a63(r249,l0) a62(r248,l0) a61(r240,l0) a64(r79,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0) a71(r239,l0) a72(r238,l0) a73(r236,l0) a74(r237,l0) a77(r234,l0) a76(r233,l0) a75(r225,l0) a78(r76,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0) a85(r224,l0) a86(r223,l0) a87(r221,l0) a88(r222,l0) a89(r220,l0) a90(r218,l0) a91(r219,l0) a92(r217,l0) a93(r216,l0) a94(r75,l0) a95(r215,l0) a96(r214,l0) a97(r74,l0) a98(r213,l0) a99(r212,l0) a100(r210,l0) a101(r211,l0) a102(r209,l0) a103(r208,l0) a104(r207,l0) a105(r73,l0) a106(r206,l0) a107(r205,l0) a108(r203,l0) a109(r204,l0) a112(r201,l0) a111(r200,l0) a110(r192,l0) a113(r70,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0) a120(r191,l0) a121(r190,l0) a123(r189,l0) a122(r182,l0) a124(r186,l0) a125(r69,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0) a136(r65,l0) a137(r170,l0) a138(r169,l0) a139(r167,l0) a140(r168,l0) a143(r165,l0) a142(r164,l0) a141(r156,l0) a144(r62,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0) a151(r155,l0) a152(r154,l0) a153(r152,l0) a154(r153,l0) a156(r149,l0) a157(r150,l0) a155(r146,l0) a158(r148,l0) a159(r147,l0) a160(r61,l0) a161(r145,l0) a162(r144,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a14(r308,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a15(r103,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r103,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a14(r308,l0) a13(r43,l0) a16(r307,l0) a17(r306,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r307,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a15(r103,l0) a13(r43,l0) a17(r306,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r306,l0) conflicts: a1(r44,l0) a8(r45,l0) a10(r304,l0) a15(r103,l0) a13(r43,l0) a16(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r302,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a19(r303,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r303,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a18(r302,l0) a20(r301,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r301,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a19(r303,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r102,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r297,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a23(r298,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r298,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a22(r297,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r296,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r101,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r295,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r42,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a28(r293,l0) a29(r294,l0) a31(r289,l0) a30(r287,l0) a32(r97,l0) a34(r285,l0) a33(r283,l0) a35(r286,l0) a36(r94,l0) a39(r278,l0) a37(r271,l0) a38(r270,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0) a51(r259,l0) a53(r257,l0) a54(r256,l0) a55(r46,l0) a56(r255,l0) a58(r253,l0) a57(r52,l0) a59(r251,l0) a60(r252,l0) a63(r249,l0) a62(r248,l0) a61(r240,l0) a64(r79,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0) a71(r239,l0) a72(r238,l0) a73(r236,l0) a74(r237,l0) a77(r234,l0) a76(r233,l0) a75(r225,l0) a78(r76,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0) a85(r224,l0) a86(r223,l0) a87(r221,l0) a88(r222,l0) a89(r220,l0) a90(r218,l0) a91(r219,l0) a92(r217,l0) a93(r216,l0) a94(r75,l0) a95(r215,l0) a96(r214,l0) a97(r74,l0) a98(r213,l0) a99(r212,l0) a100(r210,l0) a101(r211,l0) a102(r209,l0) a103(r208,l0) a104(r207,l0) a105(r73,l0) a106(r206,l0) a107(r205,l0) a108(r203,l0) a109(r204,l0) a112(r201,l0) a111(r200,l0) a110(r192,l0) a113(r70,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0) a120(r191,l0) a121(r190,l0) a123(r189,l0) a122(r182,l0) a124(r186,l0) a125(r69,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0) a136(r65,l0) a137(r170,l0) a138(r169,l0) a139(r167,l0) a140(r168,l0) a143(r165,l0) a142(r164,l0) a141(r156,l0) a144(r62,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0) a151(r155,l0) a152(r154,l0) a153(r152,l0) a154(r153,l0) a156(r149,l0) a157(r150,l0) a155(r146,l0) a158(r148,l0) a159(r147,l0) a160(r61,l0) a161(r145,l0) a162(r144,l0) a164(r143,l0) a163(r133,l0) a165(r57,l0) a166(r53,l0) a167(r55,l0) a168(r134,l0) a169(r132,l0) a170(r131,l0) a171(r130,l0) a172(r127,l0) a173(r49,l0) a174(r126,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a28(r293,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a29(r294,l0) a27(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r294,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a28(r293,l0) a27(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r287,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a31(r289,l0) a32(r97,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a31(r289,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a30(r287,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r97,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a30(r287,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r283,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a34(r285,l0) a35(r286,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r285,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a33(r283,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r286,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a33(r283,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r94,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r271,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a39(r278,l0) a38(r270,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a38(r270,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a39(r278,l0) a37(r271,l0) a40(r275,l0) a41(r274,l0) a42(r82,l0) a44(r47,l0) a43(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r278,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r275,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0) a41(r274,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r274,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0) a40(r275,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r82,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0) a41(r274,l0) a44(r47,l0) a43(r86,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0) a51(r259,l0) a52(r258,l0) a53(r257,l0) a54(r256,l0) a55(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r86,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0) a42(r82,l0) a44(r47,l0) a45(r269,l0) a46(r87,l0) a47(r260,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r47,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a37(r271,l0) a38(r270,l0) a42(r82,l0) a43(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r269,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a43(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r87,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a43(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r260,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a43(r86,l0) a48(r84,l0) a49(r83,l0) a50(r261,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r84,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a47(r260,l0) a49(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r83,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a47(r260,l0) a48(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r261,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0) a47(r260,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r259,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r258,l0) conflicts: a8(r45,l0) a13(r43,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r257,l0) conflicts: a1(r44,l0) a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r256,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r46,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a42(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r255,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r52,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a58(r253,l0) a59(r251,l0) a60(r252,l0) a63(r249,l0) a62(r248,l0) a61(r240,l0) a64(r79,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0) a71(r239,l0) a72(r238,l0) a73(r236,l0) a74(r237,l0) a77(r234,l0) a76(r233,l0) a75(r225,l0) a78(r76,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0) a85(r224,l0) a86(r223,l0) a87(r221,l0) a88(r222,l0) a89(r220,l0) a90(r218,l0) a91(r219,l0) a92(r217,l0) a93(r216,l0) a94(r75,l0) a95(r215,l0) a96(r214,l0) a97(r74,l0) a98(r213,l0) a99(r212,l0) a100(r210,l0) a101(r211,l0) a102(r209,l0) a103(r208,l0) a104(r207,l0) a105(r73,l0) a106(r206,l0) a107(r205,l0) a108(r203,l0) a109(r204,l0) a112(r201,l0) a111(r200,l0) a110(r192,l0) a113(r70,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0) a120(r191,l0) a121(r190,l0) a123(r189,l0) a122(r182,l0) a124(r186,l0) a125(r69,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0) a136(r65,l0) a137(r170,l0) a138(r169,l0) a139(r167,l0) a140(r168,l0) a143(r165,l0) a142(r164,l0) a141(r156,l0) a144(r62,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0) a151(r155,l0) a152(r154,l0) a153(r152,l0) a154(r153,l0) a156(r149,l0) a157(r150,l0) a155(r146,l0) a158(r148,l0) a159(r147,l0) a160(r61,l0) a161(r145,l0) a162(r144,l0) a164(r143,l0) a163(r133,l0) a165(r57,l0) a166(r53,l0) a167(r55,l0) a168(r134,l0) a169(r132,l0) a170(r131,l0) a171(r130,l0) a172(r127,l0) a173(r49,l0) a174(r126,l0) a175(r122,l0) a176(r125,l0) a177(r124,l0) a178(r123,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a58(r253,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r251,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a60(r252,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r252,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a59(r251,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r240,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a63(r249,l0) a62(r248,l0) a64(r79,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r248,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a63(r249,l0) a61(r240,l0) a64(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r249,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a62(r248,l0) a61(r240,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r79,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a62(r248,l0) a61(r240,l0) a66(r246,l0) a65(r242,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r242,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a66(r246,l0) a67(r80,l0) a68(r243,l0) a69(r244,l0) a70(r241,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r246,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a65(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r80,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a65(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r243,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a65(r242,l0) a69(r244,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r244,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a65(r242,l0) a68(r243,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r241,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a61(r240,l0) a64(r79,l0) a65(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r239,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r238,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r236,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a74(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r237,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a73(r236,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r225,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a77(r234,l0) a76(r233,l0) a78(r76,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r233,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a77(r234,l0) a75(r225,l0) a78(r76,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r234,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a76(r233,l0) a75(r225,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r76,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a76(r233,l0) a75(r225,l0) a80(r231,l0) a79(r227,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r227,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a80(r231,l0) a81(r77,l0) a82(r228,l0) a83(r229,l0) a84(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r231,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a79(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r77,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a79(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r228,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a79(r227,l0) a83(r229,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r229,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a79(r227,l0) a82(r228,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r226,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a75(r225,l0) a78(r76,l0) a79(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r224,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r223,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r221,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a88(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r222,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a87(r221,l0) a89(r220,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r220,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a88(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a90(r218,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a91(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a91(r219,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a90(r218,l0) a92(r217,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r217,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a91(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r216,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r75,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r215,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r214,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r74,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r213,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r212,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r210,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a101(r211,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r211,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a100(r210,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r209,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a103(r208,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r208,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a102(r209,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r207,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r73,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r206,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a107(r205,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r203,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a109(r204,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r204,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a108(r203,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r192,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a112(r201,l0) a111(r200,l0) a113(r70,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r200,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a112(r201,l0) a110(r192,l0) a113(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r201,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a111(r200,l0) a110(r192,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r70,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a111(r200,l0) a110(r192,l0) a115(r198,l0) a114(r194,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a114(r194,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a115(r198,l0) a116(r71,l0) a117(r195,l0) a118(r196,l0) a119(r193,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a115(r198,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a114(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r71,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a114(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r195,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a114(r194,l0) a118(r196,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r196,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a114(r194,l0) a117(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a119(r193,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a110(r192,l0) a113(r70,l0) a114(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a120(r191,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r190,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a122(r182,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a123(r189,l0) a124(r186,l0) a125(r69,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a123(r189,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a124(r186,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a125(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a125(r69,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a124(r186,l0) a127(r184,l0) a126(r173,l0) a128(r68,l0) a129(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a126(r173,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a125(r69,l0) a127(r184,l0) a128(r68,l0) a129(r171,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a127(r184,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a125(r69,l0) a126(r173,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a128(r68,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a125(r69,l0) a126(r173,l0) a129(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a129(r171,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a122(r182,l0) a125(r69,l0) a126(r173,l0) a128(r68,l0) a130(r180,l0) a131(r178,l0) a132(r66,l0) a133(r174,l0) a134(r175,l0) a135(r172,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a130(r180,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a131(r178,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a132(r66,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a133(r174,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0) a134(r175,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a134(r175,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0) a133(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a135(r172,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a126(r173,l0) a129(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a136(r65,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a137(r170,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a138(r169,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a139(r167,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a140(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a140(r168,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a139(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a141(r156,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a143(r165,l0) a142(r164,l0) a144(r62,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a142(r164,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a143(r165,l0) a141(r156,l0) a144(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a143(r165,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a142(r164,l0) a141(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a144(r62,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a142(r164,l0) a141(r156,l0) a146(r162,l0) a145(r158,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a145(r158,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a146(r162,l0) a147(r63,l0) a148(r159,l0) a149(r160,l0) a150(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a146(r162,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a145(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a147(r63,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a145(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a148(r159,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a145(r158,l0) a149(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a149(r160,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a145(r158,l0) a148(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a150(r157,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a141(r156,l0) a144(r62,l0) a145(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r155,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a152(r154,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r152,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a154(r153,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r153,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a153(r152,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r146,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a156(r149,l0) a157(r150,l0) a158(r148,l0) a159(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r149,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a157(r150,l0) a155(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r150,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a156(r149,l0) a155(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a158(r148,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a155(r146,l0) a159(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a159(r147,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0) a155(r146,l0) a158(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r61,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r145,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r144,l0) conflicts: a8(r45,l0) a13(r43,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r133,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a164(r143,l0) a165(r57,l0) a166(r53,l0) a167(r55,l0) a168(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a164(r143,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a163(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r57,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a163(r133,l0) a166(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a166(r53,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a163(r133,l0) a165(r57,l0) a167(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r55,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a163(r133,l0) a166(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a168(r134,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a163(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a169(r132,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a170(r131,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a171(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a171(r130,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a170(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a172(r127,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a173(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a173(r49,l0) conflicts: a8(r45,l0) a27(r42,l0) a57(r52,l0) a172(r127,l0) a174(r126,l0) a175(r122,l0) a176(r125,l0) a177(r124,l0) a178(r123,l0) a179(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a174(r126,l0) conflicts: a27(r42,l0) a57(r52,l0) a173(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a175(r122,l0) conflicts: a57(r52,l0) a173(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r125,l0) conflicts: a57(r52,l0) a173(r49,l0) a177(r124,l0) a178(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a177(r124,l0) conflicts: a57(r52,l0) a173(r49,l0) a176(r125,l0) a178(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a178(r123,l0) conflicts: a57(r52,l0) a173(r49,l0) a176(r125,l0) a177(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r119,l0) conflicts: a173(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a180(r118,l0) conflicts:  cp0:a0(r327)<->a2(r320)@125:shuffle
  cp1:a14(r308)<->a16(r307)@76:shuffle
  cp2:a14(r308)<->a17(r306)@76:shuffle
  cp3:a12(r309)<->a13(r43)@76:shuffle
  cp4:a7(r106)<->a11(r310)@76:shuffle
  cp5:a7(r106)<->a12(r309)@76:shuffle
  cp6:a18(r302)<->a20(r301)@19:shuffle
  cp7:a22(r297)<->a24(r296)@38:shuffle
  cp8:a31(r289)<->a32(r97)@125:shuffle
  cp9:a28(r293)<->a30(r287)@125:shuffle
  cp10:a34(r285)<->a35(r286)@62:shuffle
  cp11:a41(r274)<->a43(r86)@125:shuffle
  cp12:a41(r274)<->a44(r47)@125:shuffle
  cp13:a40(r275)<->a42(r82)@125:shuffle
  cp14:a39(r278)<->a40(r275)@125:shuffle
  cp15:a39(r278)<->a41(r274)@125:shuffle
  cp16:a47(r260)<->a51(r259)@125:shuffle
  cp17:a43(r86)<->a48(r84)@125:shuffle
  cp18:a43(r86)<->a49(r83)@125:shuffle
  cp19:a45(r269)<->a46(r87)@125:shuffle
  cp20:a1(r44)<->a52(r258)@62:shuffle
  cp21:a54(r256)<->a55(r46)@125:shuffle
  cp22:a1(r44)<->a54(r256)@125:shuffle
  cp23:a55(r46)<->a56(r255)@90:shuffle
  cp24:a68(r243)<->a70(r241)@62:shuffle
  cp25:a66(r246)<->a67(r80)@62:shuffle
  cp26:a62(r248)<->a65(r242)@62:shuffle
  cp27:a62(r248)<->a66(r246)@62:shuffle
  cp28:a63(r249)<->a64(r79)@62:shuffle
  cp29:a59(r251)<->a61(r240)@62:shuffle
  cp30:a71(r239)<->a72(r238)@125:shuffle
  cp31:a82(r228)<->a84(r226)@62:shuffle
  cp32:a80(r231)<->a81(r77)@62:shuffle
  cp33:a76(r233)<->a79(r227)@62:shuffle
  cp34:a76(r233)<->a80(r231)@62:shuffle
  cp35:a77(r234)<->a78(r76)@62:shuffle
  cp36:a73(r236)<->a75(r225)@62:shuffle
  cp37:a85(r224)<->a86(r223)@125:shuffle
  cp38:a87(r221)<->a89(r220)@62:shuffle
  cp39:a90(r218)<->a92(r217)@16:shuffle
  cp40:a95(r215)<->a96(r214)@62:shuffle
  cp41:a93(r216)<->a94(r75)@62:shuffle
  cp42:a98(r213)<->a99(r212)@125:shuffle
  cp43:a103(r208)<->a104(r207)@62:shuffle
  cp44:a100(r210)<->a102(r209)@62:shuffle
  cp45:a100(r210)<->a103(r208)@62:shuffle
  cp46:a106(r206)<->a107(r205)@125:shuffle
  cp47:a117(r195)<->a119(r193)@62:shuffle
  cp48:a115(r198)<->a116(r71)@62:shuffle
  cp49:a111(r200)<->a114(r194)@62:shuffle
  cp50:a111(r200)<->a115(r198)@62:shuffle
  cp51:a112(r201)<->a113(r70)@62:shuffle
  cp52:a108(r203)<->a110(r192)@62:shuffle
  cp53:a120(r191)<->a121(r190)@125:shuffle
  cp54:a133(r174)<->a135(r172)@62:shuffle
  cp55:a131(r178)<->a132(r66)@62:shuffle
  cp56:a130(r180)<->a131(r178)@62:shuffle
  cp57:a127(r184)<->a128(r68)@62:shuffle
  cp58:a127(r184)<->a129(r171)@62:shuffle
  cp59:a124(r186)<->a126(r173)@62:shuffle
  cp60:a124(r186)<->a127(r184)@62:shuffle
  cp61:a137(r170)<->a138(r169)@125:shuffle
  cp62:a148(r159)<->a150(r157)@62:shuffle
  cp63:a146(r162)<->a147(r63)@62:shuffle
  cp64:a142(r164)<->a145(r158)@62:shuffle
  cp65:a142(r164)<->a146(r162)@62:shuffle
  cp66:a143(r165)<->a144(r62)@62:shuffle
  cp67:a139(r167)<->a141(r156)@62:shuffle
  cp68:a151(r155)<->a152(r154)@125:shuffle
  cp69:a156(r149)<->a158(r148)@62:shuffle
  cp70:a156(r149)<->a159(r147)@62:shuffle
  cp71:a153(r152)<->a155(r146)@62:shuffle
  cp72:a161(r145)<->a162(r144)@125:shuffle
  cp73:a163(r133)<->a169(r132)@35:shuffle
  cp74:a165(r57)<->a167(r55)@35:shuffle
  cp75:a164(r143)<->a165(r57)@35:shuffle
  cp76:a164(r143)<->a166(r53)@35:shuffle
  cp77:a171(r130)<->a172(r127)@125:shuffle
  cp78:a171(r130)<->a173(r49)@125:shuffle
  cp79:a57(r52)<->a179(r119)@125:shuffle
  cp80:a175(r122)<->a178(r123)@125:shuffle
  cp81:a175(r122)<->a177(r124)@125:shuffle
  cp82:a175(r122)<->a176(r125)@125:shuffle
  cp83:a27(r42)<->a175(r122)@125:shuffle
  pref0:a8(r45)<-hr15@1220
  pref1:a7(r106)<-hr14@1220
  pref2:a4(r48)<-hr10@1220
  pref3:a8(r45)<-hr12@610
  pref4:a7(r106)<-hr10@610
  pref5:a3(r114)<-hr12@125
  pref6:a6(r110)<-hr12@76
  pref7:a31(r289)<-hr11@125
  regions=1, blocks=47, points=250
    allocnos=181 (big 0), copies=84, conflicts=6, ranges=183

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r327 1r44 2r320 3r114 4r48 5r317 6r110 7r106 8r45 9r108 10r304 11r310 12r309 13r43 14r308 15r103 16r307 17r306 18r302 19r303 20r301 21r102 22r297 23r298 24r296 25r101 26r295 27r42 28r293 29r294 30r287 31r289 32r97 33r283 34r285 35r286 36r94 37r271 38r270 39r278 40r275 41r274 42r82 43r86 44r47 45r269 46r87 47r260 48r84 49r83 50r261 51r259 52r258 53r257 54r256 55r46 56r255 57r52 58r253 59r251 60r252 61r240 62r248 63r249 64r79 65r242 66r246 67r80 68r243 69r244 70r241 71r239 72r238 73r236 74r237 75r225 76r233 77r234 78r76 79r227 80r231 81r77 82r228 83r229 84r226 85r224 86r223 87r221 88r222 89r220 90r218 91r219 92r217 93r216 94r75 95r215 96r214 97r74 98r213 99r212 100r210 101r211 102r209 103r208 104r207 105r73 106r206 107r205 108r203 109r204 110r192 111r200 112r201 113r70 114r194 115r198 116r71 117r195 118r196 119r193 120r191 121r190 122r182 123r189 124r186 125r69 126r173 127r184 128r68 129r171 130r180 131r178 132r66 133r174 134r175 135r172 136r65 137r170 138r169 139r167 140r168 141r156 142r164 143r165 144r62 145r158 146r162 147r63 148r159 149r160 150r157 151r155 152r154 153r152 154r153 155r146 156r149 157r150 158r148 159r147 160r61 161r145 162r144 163r133 164r143 165r57 166r53 167r55 168r134 169r132 170r131 171r130 172r127 173r49 174r126 175r122 176r125 177r124 178r123 179r119 180r118
    modified regnos
    border:
    Pressure: AR_REGS=9
 Removing pref4:hr10@610
 Removing pref1:hr14@1220
 Removing pref3:hr12@610
 Removing pref0:hr15@1220
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@1536204
          2:( 2-9 11-15)@16000
            3:( 2-7)@382560
      Allocno a0r327 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r320 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r114 of AR_REGS(14) has 11 avail. regs  2-12, ^node:  2-15 (confl regs =  0 1 13-34)
      Allocno a4r48 of AR_REGS(14) has 9 avail. regs  2-10, ^node:  2-15 (confl regs =  0 1 11-34)
      Allocno a5r317 of AR_REGS(14) has 10 avail. regs  2-11, ^node:  2-15 (confl regs =  0 1 12-34)
      Allocno a6r110 of AR_REGS(14) has 11 avail. regs  2-12, ^node:  2-15 (confl regs =  0 1 13-34)
      Allocno a7r106 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a8r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a9r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r304 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a11r310 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r309 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a14r308 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r307 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r306 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r302 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r303 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r301 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r297 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r298 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r296 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r295 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a28r293 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r294 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r287 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a31r289 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r283 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r285 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r286 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r271 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a38r270 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r278 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r275 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r274 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r269 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r260 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r261 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r259 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r258 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r257 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r256 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r255 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r52 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a58r253 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r251 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r252 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r240 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a62r248 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a63r249 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r242 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r246 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r243 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a69r244 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a70r241 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a71r239 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r238 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r236 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r237 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r225 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a76r233 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r234 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a78r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a79r227 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a80r231 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a81r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a82r228 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a83r229 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a84r226 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a85r224 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a86r223 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a87r221 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a88r222 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a89r220 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a90r218 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a91r219 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a92r217 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a93r216 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a94r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a95r215 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a96r214 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a97r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a98r213 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a99r212 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a100r210 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a101r211 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a102r209 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a103r208 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a104r207 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a105r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a106r206 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a107r205 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a108r203 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a109r204 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a110r192 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a111r200 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a112r201 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a113r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a114r194 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a115r198 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a116r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a117r195 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a118r196 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a119r193 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a120r191 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a121r190 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a122r182 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a123r189 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a124r186 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a125r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a126r173 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a127r184 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a128r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a129r171 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a130r180 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a131r178 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a132r66 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a133r174 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a134r175 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a135r172 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a136r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a137r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a138r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a139r167 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a140r168 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a141r156 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a142r164 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a143r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a144r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a145r158 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a146r162 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a147r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a148r159 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a149r160 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a150r157 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a151r155 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a152r154 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a153r152 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a154r153 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a155r146 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a156r149 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a157r150 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a158r148 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a159r147 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a160r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a161r145 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a162r144 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a163r133 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a164r143 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a165r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a166r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a167r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a168r134 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a169r132 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a170r131 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a171r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a172r127 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a173r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a174r126 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a175r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a176r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a177r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a178r123 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a179r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a180r118 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r327-a2r320 (freq=125):
        Result (freq=6000): a0r327(2000) a2r320(4000)
      Forming thread by copy 8:a31r289-a32r97 (freq=125):
        Result (freq=4000): a31r289(2000) a32r97(2000)
      Forming thread by copy 9:a28r293-a30r287 (freq=125):
        Result (freq=5000): a28r293(2000) a30r287(3000)
      Forming thread by copy 11:a41r274-a43r86 (freq=125):
        Result (freq=4000): a41r274(2000) a43r86(2000)
      Forming thread by copy 13:a40r275-a42r82 (freq=125):
        Result (freq=5500): a40r275(2000) a42r82(3500)
      Forming thread by copy 14:a39r278-a40r275 (freq=125):
        Result (freq=7500): a39r278(2000) a40r275(2000) a42r82(3500)
      Forming thread by copy 16:a47r260-a51r259 (freq=125):
        Result (freq=7000): a47r260(5000) a51r259(2000)
      Forming thread by copy 17:a43r86-a48r84 (freq=125):
        Result (freq=6000): a41r274(2000) a48r84(2000) a43r86(2000)
      Forming thread by copy 19:a45r269-a46r87 (freq=125):
        Result (freq=4000): a45r269(2000) a46r87(2000)
      Forming thread by copy 21:a54r256-a55r46 (freq=125):
        Result (freq=4000): a54r256(2000) a55r46(2000)
      Forming thread by copy 30:a71r239-a72r238 (freq=125):
        Result (freq=4000): a71r239(2000) a72r238(2000)
      Forming thread by copy 37:a85r224-a86r223 (freq=125):
        Result (freq=4000): a85r224(2000) a86r223(2000)
      Forming thread by copy 42:a98r213-a99r212 (freq=125):
        Result (freq=4000): a98r213(2000) a99r212(2000)
      Forming thread by copy 46:a106r206-a107r205 (freq=125):
        Result (freq=4000): a106r206(2000) a107r205(2000)
      Forming thread by copy 53:a120r191-a121r190 (freq=125):
        Result (freq=4000): a120r191(2000) a121r190(2000)
      Forming thread by copy 61:a137r170-a138r169 (freq=125):
        Result (freq=4000): a137r170(2000) a138r169(2000)
      Forming thread by copy 68:a151r155-a152r154 (freq=125):
        Result (freq=4000): a151r155(2000) a152r154(2000)
      Forming thread by copy 72:a161r145-a162r144 (freq=125):
        Result (freq=4000): a161r145(2000) a162r144(2000)
      Forming thread by copy 77:a171r130-a172r127 (freq=125):
        Result (freq=4000): a171r130(2000) a172r127(2000)
      Forming thread by copy 80:a175r122-a178r123 (freq=125):
        Result (freq=4000): a175r122(2000) a178r123(2000)
      Forming thread by copy 23:a55r46-a56r255 (freq=90):
        Result (freq=5440): a54r256(2000) a56r255(1440) a55r46(2000)
      Forming thread by copy 1:a14r308-a16r307 (freq=76):
        Result (freq=2440): a14r308(1220) a16r307(1220)
      Forming thread by copy 3:a12r309-a13r43 (freq=76):
        Result (freq=18940): a12r309(1220) a13r43(17720)
      Forming thread by copy 10:a34r285-a35r286 (freq=62):
        Result (freq=2000): a34r285(1000) a35r286(1000)
      Forming thread by copy 24:a68r243-a70r241 (freq=62):
        Result (freq=2000): a68r243(1000) a70r241(1000)
      Forming thread by copy 25:a66r246-a67r80 (freq=62):
        Result (freq=2000): a66r246(1000) a67r80(1000)
      Forming thread by copy 26:a62r248-a65r242 (freq=62):
        Result (freq=2500): a62r248(1000) a65r242(1500)
      Forming thread by copy 28:a63r249-a64r79 (freq=62):
        Result (freq=3500): a63r249(1000) a64r79(2500)
      Forming thread by copy 29:a59r251-a61r240 (freq=62):
        Result (freq=3000): a59r251(1000) a61r240(2000)
      Forming thread by copy 31:a82r228-a84r226 (freq=62):
        Result (freq=2000): a82r228(1000) a84r226(1000)
      Forming thread by copy 32:a80r231-a81r77 (freq=62):
        Result (freq=2000): a80r231(1000) a81r77(1000)
      Forming thread by copy 33:a76r233-a79r227 (freq=62):
        Result (freq=2500): a76r233(1000) a79r227(1500)
      Forming thread by copy 35:a77r234-a78r76 (freq=62):
        Result (freq=3500): a77r234(1000) a78r76(2500)
      Forming thread by copy 36:a73r236-a75r225 (freq=62):
        Result (freq=3000): a73r236(1000) a75r225(2000)
      Forming thread by copy 38:a87r221-a89r220 (freq=62):
        Result (freq=2000): a87r221(1000) a89r220(1000)
      Forming thread by copy 40:a95r215-a96r214 (freq=62):
        Result (freq=2000): a95r215(1000) a96r214(1000)
      Forming thread by copy 41:a93r216-a94r75 (freq=62):
        Result (freq=2000): a93r216(1000) a94r75(1000)
      Forming thread by copy 43:a103r208-a104r207 (freq=62):
        Result (freq=2000): a103r208(1000) a104r207(1000)
      Forming thread by copy 44:a100r210-a102r209 (freq=62):
        Result (freq=2000): a100r210(1000) a102r209(1000)
      Forming thread by copy 47:a117r195-a119r193 (freq=62):
        Result (freq=2000): a117r195(1000) a119r193(1000)
      Forming thread by copy 48:a115r198-a116r71 (freq=62):
        Result (freq=2000): a115r198(1000) a116r71(1000)
      Forming thread by copy 49:a111r200-a114r194 (freq=62):
        Result (freq=2500): a111r200(1000) a114r194(1500)
      Forming thread by copy 51:a112r201-a113r70 (freq=62):
        Result (freq=3500): a112r201(1000) a113r70(2500)
      Forming thread by copy 52:a108r203-a110r192 (freq=62):
        Result (freq=3000): a108r203(1000) a110r192(2000)
      Forming thread by copy 54:a133r174-a135r172 (freq=62):
        Result (freq=2000): a133r174(1000) a135r172(1000)
      Forming thread by copy 55:a131r178-a132r66 (freq=62):
        Result (freq=2000): a131r178(1000) a132r66(1000)
      Forming thread by copy 56:a130r180-a131r178 (freq=62):
        Result (freq=3000): a130r180(1000) a131r178(1000) a132r66(1000)
      Forming thread by copy 57:a127r184-a128r68 (freq=62):
        Result (freq=2000): a127r184(1000) a128r68(1000)
      Forming thread by copy 59:a124r186-a126r173 (freq=62):
        Result (freq=3000): a124r186(1000) a126r173(2000)
      Forming thread by copy 62:a148r159-a150r157 (freq=62):
        Result (freq=2000): a148r159(1000) a150r157(1000)
      Forming thread by copy 63:a146r162-a147r63 (freq=62):
        Result (freq=2000): a146r162(1000) a147r63(1000)
      Forming thread by copy 64:a142r164-a145r158 (freq=62):
        Result (freq=2500): a142r164(1000) a145r158(1500)
      Forming thread by copy 66:a143r165-a144r62 (freq=62):
        Result (freq=3500): a143r165(1000) a144r62(2500)
      Forming thread by copy 67:a139r167-a141r156 (freq=62):
        Result (freq=3000): a139r167(1000) a141r156(2000)
      Forming thread by copy 69:a156r149-a158r148 (freq=62):
        Result (freq=2000): a156r149(1000) a158r148(1000)
      Forming thread by copy 71:a153r152-a155r146 (freq=62):
        Result (freq=2500): a153r152(1000) a155r146(1500)
      Forming thread by copy 7:a22r297-a24r296 (freq=38):
        Result (freq=1525): a22r297(915) a24r296(610)
      Forming thread by copy 73:a163r133-a169r132 (freq=35):
        Result (freq=1960): a163r133(1400) a169r132(560)
      Forming thread by copy 74:a165r57-a167r55 (freq=35):
        Result (freq=1120): a165r57(560) a167r55(560)
      Forming thread by copy 75:a164r143-a165r57 (freq=35):
        Result (freq=1680): a164r143(560) a165r57(560) a167r55(560)
      Forming thread by copy 6:a18r302-a20r301 (freq=19):
        Result (freq=608): a18r302(304) a20r301(304)
      Forming thread by copy 39:a90r218-a92r217 (freq=16):
        Result (freq=540): a90r218(270) a92r217(270)
      Pushing a91(r219,l0)(cost 0)
      Pushing a19(r303,l0)(cost 0)
      Pushing a92(r217,l0)(cost 0)
      Pushing a90(r218,l0)(cost 0)
      Pushing a168(r134,l0)(cost 0)
      Pushing a166(r53,l0)(cost 0)
      Pushing a20(r301,l0)(cost 0)
      Pushing a18(r302,l0)(cost 0)
      Pushing a23(r298,l0)(cost 0)
      Pushing a21(r102,l0)(cost 0)
      Pushing a159(r147,l0)(cost 0)
      Pushing a157(r150,l0)(cost 0)
      Pushing a154(r153,l0)(cost 0)
      Pushing a149(r160,l0)(cost 0)
      Pushing a140(r168,l0)(cost 0)
      Pushing a134(r175,l0)(cost 0)
      Pushing a125(r69,l0)(cost 0)
      Pushing a123(r189,l0)(cost 0)
      Pushing a118(r196,l0)(cost 0)
      Pushing a109(r204,l0)(cost 0)
      Pushing a101(r211,l0)(cost 0)
      Pushing a88(r222,l0)(cost 0)
      Pushing a83(r229,l0)(cost 0)
      Pushing a74(r237,l0)(cost 0)
      Pushing a69(r244,l0)(cost 0)
      Pushing a60(r252,l0)(cost 0)
      Pushing a52(r258,l0)(cost 0)
      Pushing a26(r295,l0)(cost 0)
      Pushing a25(r101,l0)(cost 0)
      Pushing a17(r306,l0)(cost 0)
      Pushing a15(r103,l0)(cost 0)
      Pushing a11(r310,l0)(cost 0)
      Pushing a9(r108,l0)(cost 0)
      Pushing a6(r110,l0)(cost 0)
      Forming thread by copy 4:a7r106-a11r310 (freq=76):
        Result (freq=3050): a7r106(1830) a11r310(1220)
        Making a7(r106,l0) colorable
      Pushing a4(r48,l0)(cost 0)
      Pushing a174(r126,l0)(cost 0)
      Pushing a122(r182,l0)(cost 0)
      Pushing a33(r283,l0)(cost 0)
      Pushing a24(r296,l0)(cost 0)
      Pushing a22(r297,l0)(cost 0)
      Pushing a167(r55,l0)(cost 0)
      Pushing a165(r57,l0)(cost 0)
      Pushing a164(r143,l0)(cost 0)
      Pushing a5(r317,l0)(cost 0)
      Pushing a169(r132,l0)(cost 0)
      Pushing a163(r133,l0)(cost 0)
      Pushing a180(r118,l0)(cost 0)
      Pushing a179(r119,l0)(cost 0)
      Pushing a177(r124,l0)(cost 0)
      Pushing a176(r125,l0)(cost 0)
      Pushing a170(r131,l0)(cost 0)
      Pushing a160(r61,l0)(cost 0)
      Pushing a158(r148,l0)(cost 0)
      Pushing a156(r149,l0)(cost 0)
      Pushing a150(r157,l0)(cost 0)
      Pushing a148(r159,l0)(cost 0)
      Pushing a147(r63,l0)(cost 0)
      Pushing a146(r162,l0)(cost 0)
      Pushing a136(r65,l0)(cost 0)
      Pushing a135(r172,l0)(cost 0)
      Pushing a133(r174,l0)(cost 0)
      Pushing a128(r68,l0)(cost 0)
      Pushing a127(r184,l0)(cost 0)
      Pushing a119(r193,l0)(cost 0)
      Pushing a117(r195,l0)(cost 0)
      Pushing a116(r71,l0)(cost 0)
      Pushing a115(r198,l0)(cost 0)
      Pushing a105(r73,l0)(cost 0)
      Pushing a104(r207,l0)(cost 0)
      Pushing a103(r208,l0)(cost 0)
      Pushing a102(r209,l0)(cost 0)
      Pushing a100(r210,l0)(cost 0)
      Pushing a97(r74,l0)(cost 0)
      Pushing a96(r214,l0)(cost 0)
      Pushing a95(r215,l0)(cost 0)
      Pushing a94(r75,l0)(cost 0)
      Pushing a93(r216,l0)(cost 0)
      Pushing a89(r220,l0)(cost 0)
      Pushing a87(r221,l0)(cost 0)
      Pushing a84(r226,l0)(cost 0)
      Pushing a82(r228,l0)(cost 0)
      Pushing a81(r77,l0)(cost 0)
      Pushing a80(r231,l0)(cost 0)
      Pushing a70(r241,l0)(cost 0)
      Pushing a68(r243,l0)(cost 0)
      Pushing a67(r80,l0)(cost 0)
      Pushing a66(r246,l0)(cost 0)
      Pushing a58(r253,l0)(cost 0)
      Pushing a53(r257,l0)(cost 0)
      Pushing a50(r261,l0)(cost 0)
      Pushing a49(r83,l0)(cost 0)
      Pushing a44(r47,l0)(cost 0)
      Pushing a36(r94,l0)(cost 0)
      Pushing a35(r286,l0)(cost 0)
      Pushing a34(r285,l0)(cost 0)
      Pushing a29(r294,l0)(cost 0)
      Pushing a3(r114,l0)(cost 0)
      Pushing a16(r307,l0)(cost 0)
      Pushing a14(r308,l0)(cost 0)
        Making a10(r304,l0) colorable
      Pushing a10(r304,l0)(cost 4880)
      Pushing a153(r152,l0)(cost 0)
      Pushing a155(r146,l0)(cost 0)
      Pushing a142(r164,l0)(cost 0)
      Pushing a145(r158,l0)(cost 0)
      Pushing a111(r200,l0)(cost 0)
      Pushing a114(r194,l0)(cost 0)
      Pushing a76(r233,l0)(cost 0)
      Pushing a79(r227,l0)(cost 0)
      Pushing a62(r248,l0)(cost 0)
      Pushing a65(r242,l0)(cost 0)
      Pushing a173(r49,l0)(cost 0)
      Pushing a139(r167,l0)(cost 0)
      Pushing a141(r156,l0)(cost 0)
      Pushing a131(r178,l0)(cost 0)
      Pushing a130(r180,l0)(cost 0)
      Pushing a124(r186,l0)(cost 0)
      Pushing a108(r203,l0)(cost 0)
      Pushing a110(r192,l0)(cost 0)
      Pushing a73(r236,l0)(cost 0)
      Pushing a75(r225,l0)(cost 0)
      Pushing a59(r251,l0)(cost 0)
      Pushing a61(r240,l0)(cost 0)
      Pushing a38(r270,l0)(cost 0)
      Pushing a7(r106,l0)(cost 9760)
      Pushing a143(r165,l0)(cost 0)
      Pushing a144(r62,l0)(cost 0)
      Pushing a112(r201,l0)(cost 0)
      Pushing a113(r70,l0)(cost 0)
      Pushing a77(r234,l0)(cost 0)
      Pushing a78(r76,l0)(cost 0)
      Pushing a63(r249,l0)(cost 0)
      Pushing a64(r79,l0)(cost 0)
      Pushing a178(r123,l0)(cost 0)
      Pushing a175(r122,l0)(cost 0)
      Pushing a172(r127,l0)(cost 0)
      Pushing a171(r130,l0)(cost 0)
      Pushing a162(r144,l0)(cost 0)
      Pushing a161(r145,l0)(cost 0)
      Pushing a152(r154,l0)(cost 0)
      Pushing a151(r155,l0)(cost 0)
      Pushing a138(r169,l0)(cost 0)
      Pushing a137(r170,l0)(cost 0)
      Pushing a121(r190,l0)(cost 0)
      Pushing a120(r191,l0)(cost 0)
      Pushing a107(r205,l0)(cost 0)
      Pushing a106(r206,l0)(cost 0)
      Pushing a99(r212,l0)(cost 0)
      Pushing a98(r213,l0)(cost 0)
      Pushing a86(r223,l0)(cost 0)
      Pushing a85(r224,l0)(cost 0)
      Pushing a72(r238,l0)(cost 0)
      Pushing a71(r239,l0)(cost 0)
      Pushing a46(r87,l0)(cost 0)
        Making a42(r82,l0) colorable
      Pushing a45(r269,l0)(cost 0)
      Pushing a32(r97,l0)(cost 0)
        Making a30(r287,l0) colorable
      Pushing a31(r289,l0)(cost 0)
      Pushing a28(r293,l0)(cost 0)
      Pushing a30(r287,l0)(cost 8000)
      Pushing a56(r255,l0)(cost 0)
      Pushing a55(r46,l0)(cost 0)
      Pushing a54(r256,l0)(cost 0)
      Pushing a48(r84,l0)(cost 0)
      Pushing a43(r86,l0)(cost 0)
      Pushing a41(r274,l0)(cost 0)
      Pushing a0(r327,l0)(cost 0)
      Pushing a2(r320,l0)(cost 0)
      Pushing a51(r259,l0)(cost 0)
      Pushing a47(r260,l0)(cost 0)
      Pushing a40(r275,l0)(cost 0)
      Pushing a39(r278,l0)(cost 0)
        Making a37(r271,l0) colorable
      Pushing a37(r271,l0)(cost 12000)
      Forming thread by copy 22:a1r44-a54r256 (freq=125):
        Result (freq=9940): a1r44(4500) a54r256(2000) a56r255(1440) a55r46(2000)
      Forming thread by copy 20:a1r44-a52r258 (freq=62):
        Result (freq=10940): a1r44(4500) a52r258(1000) a54r256(2000) a56r255(1440) a55r46(2000)
        Making a1(r44,l0) colorable
      Pushing a42(r82,l0)(cost 14000)
      Pushing a1(r44,l0)(cost 18000)
      Pushing a12(r309,l0)(cost 0)
      Pushing a129(r171,l0)(potential spill: pri=6000, cost=6000)
        Making a8(r45,l0) colorable
        Making a13(r43,l0) colorable
      Forming thread by copy 83:a27r42-a175r122 (freq=125):
        Result (freq=6500): a27r42(2500) a175r122(2000) a178r123(2000)
        Making a27(r42,l0) colorable
      Forming thread by copy 79:a57r52-a179r119 (freq=125):
        Result (freq=6000): a57r52(4000) a179r119(2000)
        Making a57(r52,l0) colorable
        Making a126(r173,l0) colorable
        Making a132(r66,l0) colorable
      Pushing a8(r45,l0)(cost 11760)
      Pushing a132(r66,l0)(cost 4000)
      Pushing a126(r173,l0)(cost 8000)
      Pushing a57(r52,l0)(cost 16000)
      Pushing a27(r42,l0)(cost 10000)
      Pushing a13(r43,l0)(cost 70880)
      Popping a13(r43,l0)  -- assign reg 2
      Popping a27(r42,l0)  -- assign reg 3
      Popping a57(r52,l0)  -- assign reg 4
      Popping a126(r173,l0)  -- assign reg 5
      Popping a132(r66,l0)  -- assign reg 6
      Popping a8(r45,l0)  -- assign reg 7
      Popping a129(r171,l0)  -- spill
      Popping a12(r309,l0)  -- assign reg 2
      Popping a1(r44,l0)  -- assign reg 4
      Popping a42(r82,l0)  -- assign reg 5
      Popping a37(r271,l0)  -- assign reg 6
      Popping a39(r278,l0)  -- assign reg 5
      Popping a40(r275,l0)  -- assign reg 5
      Popping a47(r260,l0)  -- assign reg 6
      Popping a51(r259,l0)  -- assign reg 6
      Popping a2(r320,l0)  -- assign reg 2
      Popping a0(r327,l0)  -- assign reg 2
      Popping a41(r274,l0)  -- assign reg 8
      Popping a43(r86,l0)  -- assign reg 8
      Popping a48(r84,l0)  -- assign reg 8
      Popping a54(r256,l0)  -- assign reg 4
      Popping a55(r46,l0)  -- assign reg 4
      Popping a56(r255,l0)  -- assign reg 4
      Popping a30(r287,l0)  -- assign reg 5
      Popping a28(r293,l0)  -- assign reg 5
      Popping a31(r289,l0)  -- assign reg 11
      Popping a32(r97,l0)  -- assign reg 11
      Popping a45(r269,l0)  -- assign reg 6
      Popping a46(r87,l0)  -- assign reg 6
      Popping a71(r239,l0)  -- assign reg 5
      Popping a72(r238,l0)  -- assign reg 5
      Popping a85(r224,l0)  -- assign reg 5
      Popping a86(r223,l0)  -- assign reg 5
      Popping a98(r213,l0)  -- assign reg 5
      Popping a99(r212,l0)  -- assign reg 5
      Popping a106(r206,l0)  -- assign reg 5
      Popping a107(r205,l0)  -- assign reg 5
      Popping a120(r191,l0)  -- assign reg 5
      Popping a121(r190,l0)  -- assign reg 5
      Popping a137(r170,l0)  -- assign reg 5
      Popping a138(r169,l0)  -- assign reg 5
      Popping a151(r155,l0)  -- assign reg 5
      Popping a152(r154,l0)  -- assign reg 5
      Popping a161(r145,l0)  -- assign reg 5
      Popping a162(r144,l0)  -- assign reg 5
      Popping a171(r130,l0)  -- assign reg 2
      Popping a172(r127,l0)  -- assign reg 2
      Popping a175(r122,l0)  -- assign reg 3
      Popping a178(r123,l0)  -- assign reg 5
      Popping a64(r79,l0)  -- assign reg 5
      Popping a63(r249,l0)  -- assign reg 5
      Popping a78(r76,l0)  -- assign reg 5
      Popping a77(r234,l0)  -- assign reg 5
      Popping a113(r70,l0)  -- assign reg 5
      Popping a112(r201,l0)  -- assign reg 5
      Popping a144(r62,l0)  -- assign reg 5
      Popping a143(r165,l0)  -- assign reg 5
      Popping a7(r106,l0)  -- assign reg 2
      Popping a38(r270,l0)  -- assign reg 9
      Popping a61(r240,l0)  -- assign reg 6
      Popping a59(r251,l0)  -- assign reg 6
      Popping a75(r225,l0)  -- assign reg 6
      Popping a73(r236,l0)  -- assign reg 6
      Popping a110(r192,l0)  -- assign reg 6
      Popping a108(r203,l0)  -- assign reg 6
      Popping a124(r186,l0)  -- assign reg 5
      Popping a130(r180,l0)  -- assign reg 6
      Popping a131(r178,l0)  -- assign reg 6
      Popping a141(r156,l0)  -- assign reg 6
      Popping a139(r167,l0)  -- assign reg 6
      Popping a173(r49,l0)  -- assign reg 6
      Popping a65(r242,l0)  -- assign reg 8
      Popping a62(r248,l0)  -- assign reg 8
      Popping a79(r227,l0)  -- assign reg 8
      Popping a76(r233,l0)  -- assign reg 8
      Popping a114(r194,l0)  -- assign reg 8
      Popping a111(r200,l0)  -- assign reg 8
      Popping a145(r158,l0)  -- assign reg 8
      Popping a142(r164,l0)  -- assign reg 8
      Popping a155(r146,l0)  -- assign reg 5
      Popping a153(r152,l0)  -- assign reg 5
      Popping a10(r304,l0)  -- assign reg 3
      Popping a14(r308,l0)  -- assign reg 5
      Popping a16(r307,l0)  -- assign reg 5
      Popping a3(r114,l0)  -- assign reg 12
      Popping a29(r294,l0)  -- assign reg 6
      Popping a34(r285,l0)  -- assign reg 5
      Popping a35(r286,l0)  -- assign reg 5
      Popping a36(r94,l0)  -- assign reg 5
      Popping a44(r47,l0)  -- assign reg 10
      Popping a49(r83,l0)  -- assign reg 9
      Popping a50(r261,l0)  -- assign reg 8
      Popping a53(r257,l0)  -- assign reg 6
      Popping a58(r253,l0)  -- assign reg 5
      Popping a66(r246,l0)  -- assign reg 9
      Popping a67(r80,l0)  -- assign reg 9
      Popping a68(r243,l0)  -- assign reg 9
      Popping a70(r241,l0)  -- assign reg 9
      Popping a80(r231,l0)  -- assign reg 9
      Popping a81(r77,l0)  -- assign reg 9
      Popping a82(r228,l0)  -- assign reg 9
      Popping a84(r226,l0)  -- assign reg 9
      Popping a87(r221,l0)  -- assign reg 5
      Popping a89(r220,l0)  -- assign reg 5
      Popping a93(r216,l0)  -- assign reg 5
      Popping a94(r75,l0)  -- assign reg 5
      Popping a95(r215,l0)  -- assign reg 5
      Popping a96(r214,l0)  -- assign reg 5
      Popping a97(r74,l0)  -- assign reg 5
      Popping a100(r210,l0)  -- assign reg 5
      Popping a102(r209,l0)  -- assign reg 5
      Popping a103(r208,l0)  -- assign reg 6
      Popping a104(r207,l0)  -- assign reg 5
      Popping a105(r73,l0)  -- assign reg 5
      Popping a115(r198,l0)  -- assign reg 9
      Popping a116(r71,l0)  -- assign reg 9
      Popping a117(r195,l0)  -- assign reg 9
      Popping a119(r193,l0)  -- assign reg 9
      Popping a127(r184,l0)  -- assign reg 6
      Popping a128(r68,l0)  -- assign reg 6
      Popping a133(r174,l0)  -- assign reg 6
      Popping a135(r172,l0)  -- assign reg 6
      Popping a136(r65,l0)  -- assign reg 5
      Popping a146(r162,l0)  -- assign reg 9
      Popping a147(r63,l0)  -- assign reg 9
      Popping a148(r159,l0)  -- assign reg 9
      Popping a150(r157,l0)  -- assign reg 9
      Popping a156(r149,l0)  -- assign reg 6
      Popping a158(r148,l0)  -- assign reg 6
      Popping a160(r61,l0)  -- assign reg 5
      Popping a170(r131,l0)  -- assign reg 5
      Popping a176(r125,l0)  -- assign reg 2
      Popping a177(r124,l0)  -- assign reg 3
      Popping a179(r119,l0)  -- assign reg 4
      Popping a180(r118,l0)  -- assign reg 2
      Popping a163(r133,l0)  -- assign reg 2
      Popping a169(r132,l0)  -- assign reg 2
      Popping a5(r317,l0)  -- assign reg 3
      Popping a164(r143,l0)  -- assign reg 5
      Popping a165(r57,l0)  -- assign reg 5
      Popping a167(r55,l0)  -- assign reg 5
      Popping a22(r297,l0)  -- assign reg 3
      Popping a24(r296,l0)  -- assign reg 3
      Popping a33(r283,l0)  -- assign reg 6
      Popping a122(r182,l0)  -- assign reg 8
      Popping a174(r126,l0)  -- assign reg 2
      Popping a4(r48,l0)  -- assign reg 10
      Popping a6(r110,l0)  -- assign reg 12
      Popping a9(r108,l0)  -- assign reg 3
      Popping a11(r310,l0)  -- assign reg 5
      Popping a15(r103,l0)  -- assign reg 6
      Popping a17(r306,l0)  -- assign reg 8
      Popping a25(r101,l0)  -- assign reg 3
      Popping a26(r295,l0)  -- assign reg 3
      Popping a52(r258,l0)  -- assign reg 4
      Popping a60(r252,l0)  -- assign reg 5
      Popping a69(r244,l0)  -- assign reg 10
      Popping a74(r237,l0)  -- assign reg 5
      Popping a83(r229,l0)  -- assign reg 10
      Popping a88(r222,l0)  -- assign reg 6
      Popping a101(r211,l0)  -- assign reg 6
      Popping a109(r204,l0)  -- assign reg 5
      Popping a118(r196,l0)  -- assign reg 10
      Popping a123(r189,l0)  -- assign reg 5
      Popping a125(r69,l0)  -- assign reg 9
      Popping a134(r175,l0)  -- assign reg 8
      Popping a140(r168,l0)  -- assign reg 5
      Popping a149(r160,l0)  -- assign reg 10
      Popping a154(r153,l0)  -- assign reg 6
      Popping a157(r150,l0)  -- assign reg 8
      Popping a159(r147,l0)  -- assign reg 8
      Popping a21(r102,l0)  -- assign reg 3
      Popping a23(r298,l0)  -- assign reg 5
      Popping a18(r302,l0)  -- assign reg 3
      Popping a20(r301,l0)  -- assign reg 3
      Popping a166(r53,l0)  -- assign reg 6
      Popping a168(r134,l0)  -- assign reg 5
      Popping a90(r218,l0)  -- assign reg 5
      Popping a92(r217,l0)  -- assign reg 5
      Popping a19(r303,l0)  -- assign reg 5
      Popping a91(r219,l0)  -- assign reg 6
Disposition:
   27:r42  l0     3   13:r43  l0     2    1:r44  l0     4    8:r45  l0     7
   55:r46  l0     4   44:r47  l0    10    4:r48  l0    10  173:r49  l0     6
   57:r52  l0     4  166:r53  l0     6  167:r55  l0     5  165:r57  l0     5
  160:r61  l0     5  144:r62  l0     5  147:r63  l0     9  136:r65  l0     5
  132:r66  l0     6  128:r68  l0     6  125:r69  l0     9  113:r70  l0     5
  116:r71  l0     9  105:r73  l0     5   97:r74  l0     5   94:r75  l0     5
   78:r76  l0     5   81:r77  l0     9   64:r79  l0     5   67:r80  l0     9
   42:r82  l0     5   49:r83  l0     9   48:r84  l0     8   43:r86  l0     8
   46:r87  l0     6   36:r94  l0     5   32:r97  l0    11   25:r101 l0     3
   21:r102 l0     3   15:r103 l0     6    7:r106 l0     2    9:r108 l0     3
    6:r110 l0    12    3:r114 l0    12  180:r118 l0     2  179:r119 l0     4
  175:r122 l0     3  178:r123 l0     5  177:r124 l0     3  176:r125 l0     2
  174:r126 l0     2  172:r127 l0     2  171:r130 l0     2  170:r131 l0     5
  169:r132 l0     2  163:r133 l0     2  168:r134 l0     5  164:r143 l0     5
  162:r144 l0     5  161:r145 l0     5  155:r146 l0     5  159:r147 l0     8
  158:r148 l0     6  156:r149 l0     6  157:r150 l0     8  153:r152 l0     5
  154:r153 l0     6  152:r154 l0     5  151:r155 l0     5  141:r156 l0     6
  150:r157 l0     9  145:r158 l0     8  148:r159 l0     9  149:r160 l0    10
  146:r162 l0     9  142:r164 l0     8  143:r165 l0     5  139:r167 l0     6
  140:r168 l0     5  138:r169 l0     5  137:r170 l0     5  129:r171 l0   mem
  135:r172 l0     6  126:r173 l0     5  133:r174 l0     6  134:r175 l0     8
  131:r178 l0     6  130:r180 l0     6  122:r182 l0     8  127:r184 l0     6
  124:r186 l0     5  123:r189 l0     5  121:r190 l0     5  120:r191 l0     5
  110:r192 l0     6  119:r193 l0     9  114:r194 l0     8  117:r195 l0     9
  118:r196 l0    10  115:r198 l0     9  111:r200 l0     8  112:r201 l0     5
  108:r203 l0     6  109:r204 l0     5  107:r205 l0     5  106:r206 l0     5
  104:r207 l0     5  103:r208 l0     6  102:r209 l0     5  100:r210 l0     5
  101:r211 l0     6   99:r212 l0     5   98:r213 l0     5   96:r214 l0     5
   95:r215 l0     5   93:r216 l0     5   92:r217 l0     5   90:r218 l0     5
   91:r219 l0     6   89:r220 l0     5   87:r221 l0     5   88:r222 l0     6
   86:r223 l0     5   85:r224 l0     5   75:r225 l0     6   84:r226 l0     9
   79:r227 l0     8   82:r228 l0     9   83:r229 l0    10   80:r231 l0     9
   76:r233 l0     8   77:r234 l0     5   73:r236 l0     6   74:r237 l0     5
   72:r238 l0     5   71:r239 l0     5   61:r240 l0     6   70:r241 l0     9
   65:r242 l0     8   68:r243 l0     9   69:r244 l0    10   66:r246 l0     9
   62:r248 l0     8   63:r249 l0     5   59:r251 l0     6   60:r252 l0     5
   58:r253 l0     5   56:r255 l0     4   54:r256 l0     4   53:r257 l0     6
   52:r258 l0     4   51:r259 l0     6   47:r260 l0     6   50:r261 l0     8
   45:r269 l0     6   38:r270 l0     9   37:r271 l0     6   41:r274 l0     8
   40:r275 l0     5   39:r278 l0     5   33:r283 l0     6   34:r285 l0     5
   35:r286 l0     5   30:r287 l0     5   31:r289 l0    11   28:r293 l0     5
   29:r294 l0     6   26:r295 l0     3   24:r296 l0     3   22:r297 l0     3
   23:r298 l0     5   20:r301 l0     3   18:r302 l0     3   19:r303 l0     5
   10:r304 l0     3   17:r306 l0     8   16:r307 l0     5   14:r308 l0     5
   12:r309 l0     2   11:r310 l0     5    5:r317 l0     3    2:r320 l0     2
    0:r327 l0     2
New iteration of spill/restore move
+++Costs: overall 2908, reg -3092, mem 6000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


buildDataFrame

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12] 13[a13] 14[a14] 15[a15]
;;  ref usage 	r0={8d} r1={1d,53u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,46u} r8={7d} r9={7d} r10={13d,7u} r11={13d,6u} r12={10d,3u} r13={9d,2u} r14={9d,2u} r15={9d,2u} r16={1d,46u} r17={1d,45u} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r42={2d,3u} r43={9d,39u} r44={2d,6u} r45={2d,4u} r46={2d,1u} r47={2d,1u} r48={2d,1u} r49={1d,2u} r52={1d,3u} r53={1d,1u} r55={1d,1u} r57={1d,1u} r61={1d,1u} r62={1d,2u} r63={1d,1u} r65={1d,1u} r66={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,2u} r71={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,2u} r77={1d,1u} r79={1d,2u} r80={1d,1u} r82={1d,3u} r83={1d,1u} r84={1d,1u} r86={1d,1u} r87={1d,1u} r94={1d,1u} r97={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r106={1d,2u} r108={1d,1u} r110={1d,1u} r114={1d,1u} r118={1d,1u} r119={1d,1u} r122={1d,1u} r123={1d,1u,1e} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,4u} r134={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u,1e} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,3u} r157={1d,1u,1e} r158={1d,2u} r159={1d,1u} r160={1d,1u} r162={1d,1u,1e} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,4u} r172={1d,1u,1e} r173={1d,3u} r174={1d,1u} r175={1d,1u} r178={1d,1u,1e} r180={1d,1u} r182={1d,2u} r184={1d,1u,1e} r186={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,3u} r193={1d,1u,1e} r194={1d,2u} r195={1d,1u} r196={1d,1u} r198={1d,1u,1e} r200={1d,1u} r201={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u,1e} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,3u} r226={1d,1u,1e} r227={1d,2u} r228={1d,1u} r229={1d,1u} r231={1d,1u,1e} r233={1d,1u} r234={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,3u} r241={1d,1u,1e} r242={1d,2u} r243={1d,1u} r244={1d,1u} r246={1d,1u,1e} r248={1d,1u} r249={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,4u} r261={1d,1u} r269={1d,1u} r270={1d,2u} r271={1d,2u} r274={1d,1u} r275={1d,1u} r278={1d,1u} r283={1d,2u,2e} r285={1d,1u} r286={1d,1u} r287={1d,2u,1e} r289={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,2u} r298={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,3u} r306={1d,1u,1e} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r317={1d,2u,1e} r320={1d,3u,1e} r327={1d,1u} 
;;    total ref usage 921{415d,486u,20e} in 303{296 regular + 7 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 49 52 118 119 122 123 124 125
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 12 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 2 15 2 (set (reg/f:SI 118)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 15 14 17 2 (set (reg:SI 49 [ D.6223 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 118)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(note 17 15 474 2 NOTE_INSN_DELETED)
(insn 474 17 18 2 (set (reg:HI 119)
        (const_int 24 [0x18])) 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 24 [0x18])
        (nil)))
(insn 18 474 19 2 (set (reg:SI 52 [ D.6223 ])
        (and:SI (reg:SI 49 [ D.6223 ])
            (subreg:SI (reg:HI 119) 0))) 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 119)
        (nil)))
(insn 19 18 21 2 (set (reg:SI 123)
        (plus:SI (reg:SI 52 [ D.6223 ])
            (const_int -16 [0xfffffffffffffff0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 1 {addsi3}
     (nil))
(insn 21 19 473 2 (set (reg:SI 125)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 473 21 22 2 (set (reg:SI 124)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 22 473 24 2 (set (reg:SI 122)
        (if_then_else:SI (ne (reg:SI 123)
                (const_int 0 [0]))
            (reg:SI 124)
            (reg:SI 125))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_DEAD (reg:SI 124)
            (expr_list:REG_DEAD (reg:SI 123)
                (expr_list:REG_EQUAL (ne:SI (reg:SI 123)
                        (const_int 0 [0]))
                    (nil))))))
(insn 24 22 26 2 (set (reg/v:SI 42 [ txdata ])
        (zero_extend:SI (subreg:QI (reg:SI 122) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(debug_insn 26 24 27 2 (var_location:QI txdata (subreg:QI (reg/v:SI 42 [ txdata ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1616 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (eq (reg:SI 52 [ D.6223 ])
                (const_int 16 [0x10]))
            (label_ref:SI 439)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1617 56 {*btrue}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 439)
;;  succ:       3 [72.0%]  (FALLTHRU)
;;              4 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 52

;; basic block 3, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [72.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(1){ }u18(7){ }u19(16){ }u20(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 126
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 3 (set (reg/f:SI 126)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1617 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 30 29 456 3 (set (reg/v:SI 45 [ dlen ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 126)
                    (const_int 190 [0xbe])) [0 LMIC.pendTxLen+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1617 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(jump_insn 456 30 457 3 (set (pc)
        (label_ref 31)) 78 {jump}
     (nil)
 -> 31)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 49 52

(barrier 457 456 439)
;; basic block 4, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [28.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(1){ }u23(7){ }u24(16){ }u25(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 49 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45
(code_label 439 457 438 4 158 "" [1 uses])
(note 438 439 3 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 3 438 31 4 (set (reg/v:SI 45 [ dlen ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1617 44 {movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 49 52

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 49 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 127 130 131
(code_label 31 3 32 5 139 "" [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 34 5 (var_location:QI dlen (subreg:QI (reg/v:SI 45 [ dlen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1617 -1
     (nil))
(debug_insn 34 33 36 5 (var_location:SI end (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1621 -1
     (nil))
(note 36 34 472 5 NOTE_INSN_DELETED)
(insn 472 36 38 5 (set (reg:HI 127)
        (const_int 1026 [0x402])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1623 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 1026 [0x402])
        (nil)))
(insn 38 472 39 5 (set (reg:SI 130)
        (and:SI (reg:SI 49 [ D.6223 ])
            (subreg:SI (reg:HI 127) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1623 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 127)
        (expr_list:REG_DEAD (reg:SI 49 [ D.6223 ])
            (nil))))
(insn 39 38 40 5 (set (reg:SI 131)
        (const_int 1026 [0x402])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1623 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1026 [0x402])
        (nil)))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ne (reg:SI 130)
                (reg:SI 131))
            (label_ref:SI 443)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1623 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg:SI 130)
            (int_list:REG_BR_PROB 7200 (nil))))
 -> 443)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 52

;; basic block 6, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(1){ }u38(7){ }u39(16){ }u40(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 53 55 57 132 133 134 143
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 132)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1625 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 43 42 44 6 (set:SI (reg/f:SI 133)
        (plus:SI (reg/f:SI 132)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1625 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 44 43 45 6 (set (reg:QI 134)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1625 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 16 [0x10])
        (nil)))
(insn 45 44 48 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 133)
                (const_int 84 [0x54])) [0 LMIC.frame+8 S1 A32])
        (reg:QI 134)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1625 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 134)
        (nil)))
(insn 48 45 51 6 (set (reg:SI 53 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 133)
                    (const_int 56 [0x38])) [0 LMIC.ping.dr+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1626 34 {zero_extendqisi2}
     (nil))
(insn 51 48 52 6 (set (reg:SI 55 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 133)
                    (const_int 57 [0x39])) [0 LMIC.ping.intvExp+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1626 34 {zero_extendqisi2}
     (nil))
(insn 52 51 57 6 (set (reg:SI 57 [ D.6226 ])
        (ashift:SI (reg:SI 55 [ D.6225 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1626 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 55 [ D.6225 ])
        (nil)))
(insn 57 52 58 6 (set (reg:SI 143)
        (ior:SI (reg:SI 53 [ D.6225 ])
            (reg:SI 57 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1626 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6226 ])
        (expr_list:REG_DEAD (reg:SI 53 [ D.6225 ])
            (nil))))
(insn 58 57 59 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 133)
                (const_int 85 [0x55])) [0 LMIC.frame+9 S1 A8])
        (subreg:QI (reg:SI 143) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1626 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (nil))))
(debug_insn 59 58 5 6 (var_location:SI end (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1627 -1
     (nil))
(insn 5 59 458 6 (set (reg/v:SI 43 [ end ])
        (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1627 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 10 [0xa])
        (nil)))
(jump_insn 458 5 459 6 (set (pc)
        (label_ref 60)) 78 {jump}
     (nil)
 -> 60)
;;  succ:       8 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

(barrier 459 458 443)
;; basic block 7, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u51(1){ }u52(7){ }u53(16){ }u54(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 443 459 442 7 159 "" [1 uses])
(note 442 443 4 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 4 442 60 7 (set (reg/v:SI 43 [ end ])
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1621 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(1){ }u56(7){ }u57(16){ }u58(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 61 144 145
(code_label 60 4 61 8 140 "" [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 61 63 8 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 63 62 64 8 (set (reg/f:SI 144)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1631 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 64 63 65 8 (set:SI (reg/f:SI 145)
        (plus:SI (reg/f:SI 144)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1631 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 65 64 66 8 (set (reg:SI 61 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 145)
                    (const_int 45 [0x2d])) [0 LMIC.dutyCapAns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1631 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(jump_insn 66 65 67 8 (set (pc)
        (if_then_else (eq (reg:SI 61 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1631 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 80)
;;  succ:       9 [50.0%]  (FALLTHRU)
;;              10 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 9, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(1){ }u64(7){ }u65(16){ }u66(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 43 146 147 148 149 150 152 153
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg/f:SI 146)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 69 68 70 9 (set (reg:SI 147)
        (plus:SI (reg/f:SI 146)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 1 {addsi3}
     (nil))
(insn 70 69 71 9 (set (reg:SI 148)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 71 70 72 9 (set (reg/f:SI 149)
        (plus:SI (reg:SI 147)
            (reg:SI 148))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg:SI 147)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 147)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 72 71 73 9 (set (reg:QI 150)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))
(insn 73 72 74 9 (set (mem/j:QI (reg/f:SI 149) [0 LMIC.frame S1 A16])
        (reg:QI 150)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1632 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 150)
        (expr_list:REG_DEAD (reg/f:SI 149)
            (nil))))
(insn 74 73 75 9 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1633 1 {addsi3}
     (nil))
(debug_insn 75 74 77 9 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1633 -1
     (nil))
(insn 77 75 78 9 (set:SI (reg/f:SI 152)
        (plus:SI (reg/f:SI 146)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1634 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 78 77 79 9 (set (reg:QI 153)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1634 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 79 78 80 9 (set (mem/j/c:QI (plus:SI (reg/f:SI 152)
                (const_int 45 [0x2d])) [0 LMIC.dutyCapAns+0 S1 A8])
        (reg:QI 153)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1634 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 153)
        (expr_list:REG_DEAD (reg/f:SI 152)
            (nil))))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [50.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(1){ }u80(7){ }u81(16){ }u82(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 62 154 155
(code_label 80 79 81 10 141 "" [1 uses])
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 82 81 83 10 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 83 82 84 10 (set (reg/f:SI 154)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1638 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 84 83 85 10 (set:SI (reg/f:SI 155)
        (plus:SI (reg/f:SI 154)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1638 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 85 84 86 10 (set (reg:SI 62 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 155)
                    (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1638 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (nil)))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:SI 62 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1638 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 107)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 62

;; basic block 11, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(1){ }u88(7){ }u89(16){ }u90(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 62
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 62
;; lr  def 	 43 63 156 157 158 159 160 162 164 165 167 168
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg/f:SI 156)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 89 88 90 11 (set (reg:SI 157)
        (plus:SI (reg/f:SI 156)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 1 {addsi3}
     (nil))
(insn 90 89 91 11 (set (reg:SI 158)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 91 90 92 11 (set (reg/f:SI 159)
        (plus:SI (reg:SI 157)
            (reg:SI 158))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 157)
                (const_int 332 [0x14c]))
            (nil))))
(insn 92 91 93 11 (set (reg:QI 160)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))
(insn 93 92 94 11 (set (mem/j:QI (reg/f:SI 159) [0 LMIC.frame S1 A8])
        (reg:QI 160)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1639 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 160)
        (expr_list:REG_DEAD (reg/f:SI 159)
            (nil))))
(insn 94 93 96 11 (set (reg:SI 63 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1640 1 {addsi3}
     (nil))
(insn 96 94 98 11 (set (reg:SI 162)
        (plus:SI (reg/f:SI 156)
            (reg:SI 63 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1640 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6226 ])
        (nil)))
(insn 98 96 99 11 (set (reg/f:SI 164)
        (plus:SI (reg:SI 162)
            (reg:SI 158))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1640 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 158)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 162)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 99 98 100 11 (set (reg:SI 165)
        (and:SI (reg:SI 62 [ D.6225 ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1640 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6225 ])
        (nil)))
(insn 100 99 101 11 (set (mem/j:QI (reg/f:SI 164) [0 LMIC.frame S1 A8])
        (subreg:QI (reg:SI 165) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1640 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg/f:SI 164)
            (nil))))
(insn 101 100 102 11 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1641 1 {addsi3}
     (nil))
(debug_insn 102 101 104 11 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1641 -1
     (nil))
(insn 104 102 105 11 (set:SI (reg/f:SI 167)
        (plus:SI (reg/f:SI 156)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1642 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 105 104 106 11 (set (reg:QI 168)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1642 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 106 105 107 11 (set (mem/j/c:QI (plus:SI (reg/f:SI 167)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])
        (reg:QI 168)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1642 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 168)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (nil))))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10 [50.0%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(1){ }u113(7){ }u114(16){ }u115(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 65 169 170
(code_label 107 106 108 12 142 "" [1 uses])
(note 108 107 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 109 108 110 12 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 110 109 111 12 (set (reg/f:SI 169)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1645 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 111 110 112 12 (set:SI (reg/f:SI 170)
        (plus:SI (reg/f:SI 169)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1645 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 112 111 113 12 (set (reg:SI 65 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 170)
                    (const_int 42 [0x2a])) [0 LMIC.devsAns+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1645 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 170)
        (nil)))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (eq (reg:SI 65 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1645 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 145)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 13, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(1){ }u121(7){ }u122(16){ }u123(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 66 68 69 171 172 173 174 175 178 180 182 184 186 189
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (set (reg/f:SI 171)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 116 115 117 13 (set (reg:SI 172)
        (plus:SI (reg/f:SI 171)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 1 {addsi3}
     (nil))
(insn 117 116 118 13 (set (reg:SI 173)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 118 117 119 13 (set (reg/f:SI 174)
        (plus:SI (reg:SI 172)
            (reg:SI 173))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 172)
                (const_int 332 [0x14c]))
            (nil))))
(insn 119 118 120 13 (set (reg:QI 175)
        (const_int 6 [0x6])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 6 [0x6])
        (nil)))
(insn 120 119 121 13 (set (mem/j:QI (reg/f:SI 174) [0 LMIC.frame S1 A8])
        (reg:QI 175)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1646 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 175)
        (expr_list:REG_DEAD (reg/f:SI 174)
            (nil))))
(insn 121 120 122 13 (set (reg:SI 66 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1647 1 {addsi3}
     (nil))
(call_insn/u 122 121 123 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getBattLevel") [flags 0x3]  <function_decl 0x140efa6c0 os_getBattLevel>) [0 os_getBattLevel S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1647 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(note 123 122 126 13 NOTE_INSN_DELETED)
(insn 126 123 128 13 (set (reg:SI 178)
        (plus:SI (reg/f:SI 171)
            (reg:SI 66 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1647 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 66 [ D.6226 ])
        (nil)))
(insn 128 126 129 13 (set (reg/f:SI 180)
        (plus:SI (reg:SI 178)
            (reg:SI 173))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1647 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 178)
                (const_int 332 [0x14c]))
            (nil))))
(insn 129 128 130 13 (set (mem/j:QI (reg/f:SI 180) [0 LMIC.frame S1 A8])
        (reg:QI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1647 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_DEAD (reg:QI 10 a10)
            (nil))))
(insn 130 129 132 13 (set (reg:SI 68 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 1 {addsi3}
     (nil))
(insn 132 130 133 13 (set:SI (reg/f:SI 182)
        (plus:SI (reg/f:SI 171)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 133 132 135 13 (set (reg:SI 69 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 182)
                    (const_int 40 [0x28])) [0 LMIC.margin+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 34 {zero_extendqisi2}
     (nil))
(insn 135 133 137 13 (set (reg:SI 184)
        (plus:SI (reg/f:SI 171)
            (reg:SI 68 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_DEAD (reg:SI 68 [ D.6226 ])
            (nil))))
(insn 137 135 138 13 (set (reg/f:SI 186)
        (plus:SI (reg:SI 184)
            (reg:SI 173))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_DEAD (reg:SI 173)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 184)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 138 137 139 13 (set (mem/j:QI (reg/f:SI 186) [0 LMIC.frame S1 A8])
        (subreg/s/v:QI (reg:SI 69 [ D.6225 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1648 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_DEAD (reg:SI 69 [ D.6225 ])
            (nil))))
(insn 139 138 140 13 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1649 1 {addsi3}
     (nil))
(debug_insn 140 139 143 13 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1649 -1
     (nil))
(insn 143 140 144 13 (set (reg:QI 189)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1650 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 144 143 145 13 (set (mem/j/c:QI (plus:SI (reg/f:SI 182)
                (const_int 42 [0x2a])) [0 LMIC.devsAns+0 S1 A16])
        (reg:QI 189)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1650 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 189)
        (expr_list:REG_DEAD (reg/f:SI 182)
            (nil))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 14, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [50.0%] 
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u155(1){ }u156(7){ }u157(16){ }u158(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 70 190 191
(code_label 145 144 146 14 143 "" [1 uses])
(note 146 145 147 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 147 146 148 14 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 148 147 149 14 (set (reg/f:SI 190)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1652 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 149 148 150 14 (set:SI (reg/f:SI 191)
        (plus:SI (reg/f:SI 190)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1652 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 150 149 151 14 (set (reg:SI 70 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 191)
                    (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1652 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 191)
        (nil)))
(jump_insn 151 150 152 14 (set (pc)
        (if_then_else (eq (reg:SI 70 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1652 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 172)
;;  succ:       15 [50.0%]  (FALLTHRU)
;;              16 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 70

;; basic block 15, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [50.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u163(1){ }u164(7){ }u165(16){ }u166(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 70
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 70
;; lr  def 	 43 71 192 193 194 195 196 198 200 201 203 204
(note 152 151 153 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 15 (set (reg/f:SI 192)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 154 153 155 15 (set (reg:SI 193)
        (plus:SI (reg/f:SI 192)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 1 {addsi3}
     (nil))
(insn 155 154 156 15 (set (reg:SI 194)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 156 155 157 15 (set (reg/f:SI 195)
        (plus:SI (reg:SI 193)
            (reg:SI 194))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 193)
                (const_int 332 [0x14c]))
            (nil))))
(insn 157 156 158 15 (set (reg:QI 196)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 158 157 159 15 (set (mem/j:QI (reg/f:SI 195) [0 LMIC.frame S1 A8])
        (reg:QI 196)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1653 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 196)
        (expr_list:REG_DEAD (reg/f:SI 195)
            (nil))))
(insn 159 158 161 15 (set (reg:SI 71 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1654 1 {addsi3}
     (nil))
(insn 161 159 163 15 (set (reg:SI 198)
        (plus:SI (reg/f:SI 192)
            (reg:SI 71 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1654 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 71 [ D.6226 ])
        (nil)))
(insn 163 161 164 15 (set (reg/f:SI 200)
        (plus:SI (reg:SI 198)
            (reg:SI 194))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1654 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 194)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 198)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 164 163 165 15 (set (reg:SI 201)
        (and:SI (reg:SI 70 [ D.6225 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1654 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 70 [ D.6225 ])
        (nil)))
(insn 165 164 166 15 (set (mem/j:QI (reg/f:SI 200) [0 LMIC.frame S1 A8])
        (subreg:QI (reg:SI 201) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1654 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_DEAD (reg/f:SI 200)
            (nil))))
(insn 166 165 167 15 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1655 1 {addsi3}
     (nil))
(debug_insn 167 166 169 15 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1655 -1
     (nil))
(insn 169 167 170 15 (set:SI (reg/f:SI 203)
        (plus:SI (reg/f:SI 192)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1656 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 192)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 170 169 171 15 (set (reg:QI 204)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1656 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 171 170 172 15 (set (mem/j/c:QI (plus:SI (reg/f:SI 203)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])
        (reg:QI 204)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1656 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 204)
        (expr_list:REG_DEAD (reg/f:SI 203)
            (nil))))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 16, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [50.0%] 
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u188(1){ }u189(7){ }u190(16){ }u191(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 73 205 206
(code_label 172 171 173 16 144 "" [1 uses])
(note 173 172 174 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 174 173 175 16 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 175 174 176 16 (set (reg/f:SI 205)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1659 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 176 175 177 16 (set:SI (reg/f:SI 206)
        (plus:SI (reg/f:SI 205)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1659 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 177 176 178 16 (set (reg:SI 73 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 206)
                    (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1659 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (nil)))
(jump_insn 178 177 179 16 (set (pc)
        (if_then_else (eq (reg:SI 73 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1659 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 73 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 188)
;;  succ:       17 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 17, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [50.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u196(1){ }u197(7){ }u198(16){ }u199(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 43 207 208 209 210 211
(note 179 178 180 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 17 (set (reg/f:SI 207)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 181 180 182 17 (set (reg:SI 208)
        (plus:SI (reg/f:SI 207)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 207)
        (nil)))
(insn 182 181 183 17 (set (reg:SI 209)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 183 182 184 17 (set (reg/f:SI 210)
        (plus:SI (reg:SI 208)
            (reg:SI 209))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg:SI 208)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 208)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 184 183 185 17 (set (reg:QI 211)
        (const_int 18 [0x12])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 18 [0x12])
        (nil)))
(insn 185 184 186 17 (set (mem/j:QI (reg/f:SI 210) [0 LMIC.frame S1 A8])
        (reg:QI 211)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1660 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 211)
        (expr_list:REG_DEAD (reg/f:SI 210)
            (nil))))
(insn 186 185 187 17 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1661 1 {addsi3}
     (nil))
(debug_insn 187 186 188 17 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1661 -1
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 18, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [50.0%] 
;;              17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u209(1){ }u210(7){ }u211(16){ }u212(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 74 212 213
(code_label 188 187 189 18 145 "" [1 uses])
(note 189 188 190 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 190 189 191 18 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 191 190 192 18 (set (reg/f:SI 212)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1664 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 192 191 193 18 (set:SI (reg/f:SI 213)
        (plus:SI (reg/f:SI 212)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1664 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 193 192 194 18 (set (reg:SI 74 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 213)
                    (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1664 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 213)
        (nil)))
(jump_insn 194 193 195 18 (set (pc)
        (if_then_else (eq (reg:SI 74 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1664 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 212)
;;  succ:       19 [50.0%]  (FALLTHRU)
;;              22 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 19, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [50.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u217(1){ }u218(7){ }u219(16){ }u220(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 75 214 215 216
(note 195 194 196 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 19 (set (reg/f:SI 214)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1665 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 197 196 198 19 (set:SI (reg/f:SI 215)
        (plus:SI (reg/f:SI 214)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1665 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 198 197 199 19 (set (reg:SI 75 [ D.6227 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 215)
                    (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1665 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 215)
        (nil)))
(insn 199 198 200 19 (set (reg:SI 216 [ D.6227 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 75 [ D.6227 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1665 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 75 [ D.6227 ])
        (nil)))
(jump_insn 200 199 201 19 (set (pc)
        (if_then_else (ge (reg:SI 216 [ D.6227 ])
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1665 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 216 [ D.6227 ])
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 206)
;;  succ:       20 [27.0%]  (FALLTHRU)
;;              21 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 20, loop depth 0, count 0, freq 1350, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 [27.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u225(1){ }u226(7){ }u227(16){ }u228(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 217 218 219
(note 201 200 204 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 204 201 471 20 (set (reg:QI 219)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1666 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 471 204 470 20 (set (reg/f:SI 217)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1666 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 470 471 205 20 (set:SI (reg/f:SI 218)
        (plus:SI (reg/f:SI 217)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1666 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 217)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 205 470 206 20 (set (mem/j/c:QI (plus:SI (reg/f:SI 218)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (reg:QI 219)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1666 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 219)
        (expr_list:REG_DEAD (reg/f:SI 218)
            (nil))))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 21, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       19 [73.0%] 
;;              20 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(1){ }u233(7){ }u234(16){ }u235(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 220 221 222
(code_label 206 205 207 21 147 "" [1 uses])
(note 207 206 210 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 210 207 469 21 (set (reg:QI 222)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1667 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 469 210 468 21 (set (reg/f:SI 220)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1667 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 468 469 211 21 (set:SI (reg/f:SI 221)
        (plus:SI (reg/f:SI 220)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1667 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 211 468 212 21 (set (mem/j/c:QI (plus:SI (reg/f:SI 221)
                (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16])
        (reg:QI 222)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1667 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 222)
        (expr_list:REG_DEAD (reg/f:SI 221)
            (nil))))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 22, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       18 [50.0%] 
;;              21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u239(1){ }u240(7){ }u241(16){ }u242(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 76 223 224
(code_label 212 211 213 22 146 "" [1 uses])
(note 213 212 214 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 22 (set (reg/f:SI 223)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1670 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 215 214 216 22 (set:SI (reg/f:SI 224)
        (plus:SI (reg/f:SI 223)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1670 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 216 215 217 22 (set (reg:SI 76 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 224)
                    (const_int 55 [0x37])) [0 LMIC.pingSetAns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1670 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (nil)))
(jump_insn 217 216 218 22 (set (pc)
        (if_then_else (eq (reg:SI 76 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1670 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 238)
;;  succ:       23 [50.0%]  (FALLTHRU)
;;              24 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 76

;; basic block 23, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [50.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u246(1){ }u247(7){ }u248(16){ }u249(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 76
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 76
;; lr  def 	 43 77 225 226 227 228 229 231 233 234 236 237
(note 218 217 219 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 23 (set (reg/f:SI 225)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 220 219 221 23 (set (reg:SI 226)
        (plus:SI (reg/f:SI 225)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 1 {addsi3}
     (nil))
(insn 221 220 222 23 (set (reg:SI 227)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 222 221 223 23 (set (reg/f:SI 228)
        (plus:SI (reg:SI 226)
            (reg:SI 227))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 226)
                (const_int 332 [0x14c]))
            (nil))))
(insn 223 222 224 23 (set (reg:QI 229)
        (const_int 17 [0x11])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 17 [0x11])
        (nil)))
(insn 224 223 225 23 (set (mem/j:QI (reg/f:SI 228) [0 LMIC.frame S1 A8])
        (reg:QI 229)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1671 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 229)
        (expr_list:REG_DEAD (reg/f:SI 228)
            (nil))))
(insn 225 224 227 23 (set (reg:SI 77 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1672 1 {addsi3}
     (nil))
(insn 227 225 229 23 (set (reg:SI 231)
        (plus:SI (reg/f:SI 225)
            (reg:SI 77 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1672 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6226 ])
        (nil)))
(insn 229 227 230 23 (set (reg/f:SI 233)
        (plus:SI (reg:SI 231)
            (reg:SI 227))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1672 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg:SI 227)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 231)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 230 229 231 23 (set (reg:SI 234)
        (and:SI (reg:SI 76 [ D.6225 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1672 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 76 [ D.6225 ])
        (nil)))
(insn 231 230 232 23 (set (mem/j:QI (reg/f:SI 233) [0 LMIC.frame S1 A8])
        (subreg:QI (reg:SI 234) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1672 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 234)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (nil))))
(insn 232 231 233 23 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1673 1 {addsi3}
     (nil))
(debug_insn 233 232 235 23 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1673 -1
     (nil))
(insn 235 233 236 23 (set:SI (reg/f:SI 236)
        (plus:SI (reg/f:SI 225)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1674 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 225)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 236 235 237 23 (set (reg:QI 237)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1674 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 237 236 238 23 (set (mem/j/c:QI (plus:SI (reg/f:SI 236)
                (const_int 55 [0x37])) [0 LMIC.pingSetAns+0 S1 A8])
        (reg:QI 237)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1674 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 237)
        (expr_list:REG_DEAD (reg/f:SI 236)
            (nil))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 24, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [50.0%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u271(1){ }u272(7){ }u273(16){ }u274(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 79 238 239
(code_label 238 237 239 24 148 "" [1 uses])
(note 239 238 240 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 240 239 241 24 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 241 240 242 24 (set (reg/f:SI 238)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1678 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 242 241 243 24 (set:SI (reg/f:SI 239)
        (plus:SI (reg/f:SI 238)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1678 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 238)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 243 242 244 24 (set (reg:SI 79 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 239)
                    (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1678 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 239)
        (nil)))
(jump_insn 244 243 245 24 (set (pc)
        (if_then_else (eq (reg:SI 79 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1678 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 265)
;;  succ:       25 [50.0%]  (FALLTHRU)
;;              26 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 79

;; basic block 25, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u279(1){ }u280(7){ }u281(16){ }u282(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52 79
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 79
;; lr  def 	 43 80 240 241 242 243 244 246 248 249 251 252
(note 245 244 246 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 25 (set (reg/f:SI 240)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 247 246 248 25 (set (reg:SI 241)
        (plus:SI (reg/f:SI 240)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 1 {addsi3}
     (nil))
(insn 248 247 249 25 (set (reg:SI 242)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 249 248 250 25 (set (reg/f:SI 243)
        (plus:SI (reg:SI 241)
            (reg:SI 242))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 241)
                (const_int 332 [0x14c]))
            (nil))))
(insn 250 249 251 25 (set (reg:QI 244)
        (const_int 7 [0x7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 7 [0x7])
        (nil)))
(insn 251 250 252 25 (set (mem/j:QI (reg/f:SI 243) [0 LMIC.frame S1 A8])
        (reg:QI 244)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1679 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 244)
        (expr_list:REG_DEAD (reg/f:SI 243)
            (nil))))
(insn 252 251 254 25 (set (reg:SI 80 [ D.6226 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1680 1 {addsi3}
     (nil))
(insn 254 252 256 25 (set (reg:SI 246)
        (plus:SI (reg/f:SI 240)
            (reg:SI 80 [ D.6226 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1680 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 80 [ D.6226 ])
        (nil)))
(insn 256 254 257 25 (set (reg/f:SI 248)
        (plus:SI (reg:SI 246)
            (reg:SI 242))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1680 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 242)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 246)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 257 256 258 25 (set (reg:SI 249)
        (and:SI (reg:SI 79 [ D.6225 ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1680 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 79 [ D.6225 ])
        (nil)))
(insn 258 257 259 25 (set (mem/j:QI (reg/f:SI 248) [0 LMIC.frame S1 A8])
        (subreg:QI (reg:SI 249) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1680 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 249)
        (expr_list:REG_DEAD (reg/f:SI 248)
            (nil))))
(insn 259 258 260 25 (set (reg/v:SI 43 [ end ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1681 1 {addsi3}
     (nil))
(debug_insn 260 259 262 25 (var_location:SI end (reg/v:SI 43 [ end ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1681 -1
     (nil))
(insn 262 260 263 25 (set:SI (reg/f:SI 251)
        (plus:SI (reg/f:SI 240)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1682 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 263 262 264 25 (set (reg:QI 252)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1682 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 264 263 265 25 (set (mem/j/c:QI (plus:SI (reg/f:SI 251)
                (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16])
        (reg:QI 252)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1682 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 252)
        (expr_list:REG_DEAD (reg/f:SI 251)
            (nil))))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24 [50.0%] 
;;              25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u304(1){ }u305(7){ }u306(16){ }u307(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 253
(code_label 265 264 266 26 149 "" [1 uses])
(note 266 265 267 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 267 266 268 26 (var_location:SI end (reg/v:SI 43 [ end ])) -1
     (nil))
(insn 268 267 269 26 (set (reg:SI 253)
        (const_int 24 [0x18])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1685 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 24 [0x18])
        (nil)))
(jump_insn 269 268 270 26 (set (pc)
        (if_then_else (ge (reg:SI 253)
                (reg/v:SI 43 [ end ]))
            (label_ref 275)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1685 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 253)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 275)
;;  succ:       27 [29.0%]  (FALLTHRU)
;;              28 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 27, loop depth 0, count 0, freq 2900, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 [29.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u311(1){ }u312(7){ }u313(16){ }u314(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 270 269 271 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 271 270 272 27 NOTE_INSN_DELETED)
(insn 272 271 273 27 (set (reg:SI 11 a11)
        (const_int 1685 [0x695])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1685 44 {movsi_internal}
     (nil))
(insn 273 272 274 27 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC113") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1685 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 274 273 275 27 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1685 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52

;; basic block 28, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [71.0%] 
;;              27 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u319(1){ }u320(7){ }u321(16){ }u322(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 52
;; lr  def 	
(code_label 275 274 276 28 150 "" [1 uses])
(note 276 275 277 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 277 276 278 28 (set (pc)
        (if_then_else (eq (reg:SI 52 [ D.6223 ])
                (const_int 16 [0x10]))
            (label_ref:SI 447)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6223 ])
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 447)
;;  succ:       29 [72.0%]  (FALLTHRU)
;;              30 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45

;; basic block 29, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 [72.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u324(1){ }u325(7){ }u326(16){ }u327(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	 46 255
(note 278 277 279 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 29 (set (reg:SI 255)
        (plus:SI (reg/v:SI 45 [ dlen ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 1 {addsi3}
     (nil))
(insn 280 279 460 29 (set (reg:SI 46 [ D.6220 ])
        (zero_extend:SI (subreg:QI (reg:SI 255) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 255)
        (nil)))
(jump_insn 460 280 461 29 (set (pc)
        (label_ref 281)) 78 {jump}
     (nil)
 -> 281)
;;  succ:       31 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 46

(barrier 461 460 447)
;; basic block 30, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       28 [28.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u330(1){ }u331(7){ }u332(16){ }u333(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46
(code_label 447 461 446 30 160 "" [1 uses])
(note 446 447 6 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 6 446 281 30 (set (reg:SI 46 [ D.6220 ])
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 44 {movsi_internal}
     (nil))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 46

;; basic block 31, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [100.0%]  (FALLTHRU)
;;              29 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u334(1){ }u335(7){ }u336(16){ }u337(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 46
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 46
;; lr  def 	 44 82 256 257
(code_label 281 6 282 31 151 "" [1 uses])
(note 282 281 283 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 31 (set (reg:SI 82 [ D.6225 ])
        (zero_extend:SI (subreg:QI (reg/v:SI 43 [ end ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 34 {zero_extendqisi2}
     (nil))
(insn 284 283 285 31 (set (reg:SI 256)
        (plus:SI (reg:SI 46 [ D.6220 ])
            (reg:SI 82 [ D.6225 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6220 ])
        (nil)))
(insn 285 284 286 31 (set (reg/v:SI 44 [ flen ])
        (zero_extend:SI (subreg:QI (reg:SI 256) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(debug_insn 286 285 287 31 (var_location:QI flen (subreg:QI (reg/v:SI 44 [ flen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1687 -1
     (nil))
(insn 287 286 288 31 (set (reg:SI 257)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1688 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(jump_insn 288 287 289 31 (set (pc)
        (if_then_else (geu (reg:SI 257)
                (reg/v:SI 44 [ flen ]))
            (label_ref 294)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1688 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 257)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 294)
;;  succ:       32 [50.0%]  (FALLTHRU)
;;              33 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82

;; basic block 32, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 [50.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u345(1){ }u346(7){ }u347(16){ }u348(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 45 82
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 82
;; lr  def 	 42 44 258
(note 289 288 290 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(debug_insn 290 289 291 32 (var_location:QI txdata (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1690 -1
     (nil))
(insn 291 290 292 32 (set (reg:SI 258)
        (plus:SI (reg:SI 82 [ D.6225 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1691 1 {addsi3}
     (nil))
(insn 292 291 293 32 (set (reg/v:SI 44 [ flen ])
        (zero_extend:SI (subreg:QI (reg:SI 258) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1691 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 258)
        (nil)))
(debug_insn 293 292 7 32 (var_location:QI flen (subreg:QI (reg/v:SI 44 [ flen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1691 -1
     (nil))
(insn 7 293 294 32 (set (reg/v:SI 42 [ txdata ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1690 44 {movsi_internal}
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82

;; basic block 33, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       31 [50.0%] 
;;              32 [100.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u352(1){ }u353(7){ }u354(16){ }u355(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 83 84 86 87 259 260 261 269
(code_label 294 7 295 33 152 "" [1 uses])
(note 295 294 296 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(debug_insn 296 295 297 33 (var_location:QI flen (subreg:QI (reg/v:SI 44 [ flen ]) 0)) -1
     (nil))
(debug_insn 297 296 298 33 (var_location:QI txdata (subreg:QI (reg/v:SI 42 [ txdata ]) 0)) -1
     (nil))
(insn 298 297 299 33 (set (reg/f:SI 259)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1693 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 299 298 300 33 (set:SI (reg/f:SI 260)
        (plus:SI (reg/f:SI 259)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1693 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 259)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 300 299 301 33 (set (reg:QI 261)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1693 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(insn 301 300 304 33 (set (mem/j/c:QI (plus:SI (reg/f:SI 260)
                (const_int 76 [0x4c])) [0 LMIC.frame+0 S1 A32])
        (reg:QI 261)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1693 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 261)
        (nil)))
(insn 304 301 307 33 (set (reg:SI 83 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 260)
                    (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 34 {zero_extendqisi2}
     (nil))
(insn 307 304 308 33 (set (reg:SI 84 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 260)
                    (const_int 43 [0x2b])) [0 LMIC.adrEnabled+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 34 {zero_extendqisi2}
     (nil))
(note 308 307 309 33 NOTE_INSN_DELETED)
(insn 309 308 312 33 (set (reg:SI 86 [ D.6221 ])
        (ior:SI (reg:SI 83 [ D.6225 ])
            (reg:SI 84 [ D.6225 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 84 [ D.6225 ])
        (expr_list:REG_DEAD (reg:SI 83 [ D.6225 ])
            (nil))))
(insn 312 309 313 33 (set (reg:SI 87 [ D.6227 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 260)
                    (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1695 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 260)
        (nil)))
(insn 313 312 314 33 (set (reg:SI 269 [ D.6227 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 87 [ D.6227 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6227 ])
        (nil)))
(jump_insn 314 313 315 33 (set (pc)
        (if_then_else (lt (reg:SI 269 [ D.6227 ])
                (const_int 0 [0]))
            (label_ref:SI 451)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 269 [ D.6227 ])
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 451)
;;  succ:       34 [73.0%]  (FALLTHRU)
;;              35 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82 86

;; basic block 34, loop depth 0, count 0, freq 7300, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 [73.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u369(1){ }u370(7){ }u371(16){ }u372(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82 86
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(note 315 314 8 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 8 315 462 34 (set (reg:SI 47 [ D.6221 ])
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
(jump_insn 462 8 463 34 (set (pc)
        (label_ref 316)) 78 {jump}
     (nil)
 -> 316)
;;  succ:       36 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 47 82 86

(barrier 463 462 451)
;; basic block 35, loop depth 0, count 0, freq 2700, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       33 [27.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u373(1){ }u374(7){ }u375(16){ }u376(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 82 86
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(code_label 451 463 450 35 161 "" [1 uses])
(note 450 451 9 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 9 450 316 35 (set (reg:SI 47 [ D.6221 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       36 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 47 82 86

;; basic block 36, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU)
;;              34 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u377(1){ }u378(7){ }u379(16){ }u380(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45 47 82 86
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 82 86
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 94 270 271 274 275 278
(code_label 316 9 317 36 153 "" [1 uses])
(note 317 316 318 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 36 (set (reg/f:SI 270)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 319 318 322 36 (set:SI (reg/f:SI 271)
        (plus:SI (reg/f:SI 270)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 322 319 323 36 (set (reg:SI 274)
        (ior:SI (reg:SI 47 [ D.6221 ])
            (reg:SI 86 [ D.6221 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 86 [ D.6221 ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6221 ])
            (nil))))
(insn 323 322 326 36 (set (reg:SI 275)
        (plus:SI (reg:SI 82 [ D.6225 ])
            (const_int -8 [0xfffffffffffffff8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 82 [ D.6225 ])
        (nil)))
(insn 326 323 327 36 (set (reg:SI 278)
        (ior:SI (reg:SI 274)
            (reg:SI 275))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 275)
        (expr_list:REG_DEAD (reg:SI 274)
            (nil))))
(insn 327 326 329 36 (set (mem/j/c:QI (plus:SI (reg/f:SI 271)
                (const_int 81 [0x51])) [0 LMIC.frame+5 S1 A8])
        (subreg:QI (reg:SI 278) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1694 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(note 329 327 330 36 NOTE_INSN_DELETED)
(insn 330 329 331 36 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 270)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1697 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 270)
        (nil)))
(insn 331 330 332 36 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC114") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1697 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 333 [0x14d])))
        (nil)))
(call_insn 332 331 335 36 (call (mem:SI (symbol_ref:SI ("os_wlsbf4") [flags 0x3]  <function_decl 0x140efa870 os_wlsbf4>) [0 os_wlsbf4 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1697 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 335 332 336 36 (set (reg:SI 94 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 271)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1699 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 271)
        (nil)))
(jump_insn 336 335 337 36 (set (pc)
        (if_then_else (ne (reg:SI 94 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1699 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 94 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 343)
;;  succ:       37 [50.0%]  (FALLTHRU)
;;              38 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45

;; basic block 37, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 [50.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u396(1){ }u397(7){ }u398(16){ }u399(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 283 285 286
(note 337 336 338 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 340 37 (set (reg/f:SI 283)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1700 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 340 338 341 37 (set (reg:SI 286 [ LMIC.seqnoUp ])
        (mem/j/c:SI (plus:SI (reg/f:SI 283)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1700 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 283)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (nil)))
(insn 341 340 342 37 (set (reg:SI 285 [ D.6229 ])
        (plus:SI (reg:SI 286 [ LMIC.seqnoUp ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1700 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 286 [ LMIC.seqnoUp ])
        (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 283)
                    (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
            (nil))))
(insn 342 341 343 37 (set (mem/j/c:SI (plus:SI (reg/f:SI 283)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (reg:SI 285 [ D.6229 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1700 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 285 [ D.6229 ])
        (expr_list:REG_DEAD (reg/f:SI 283)
            (nil))))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45

;; basic block 38, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       36 [50.0%] 
;;              37 [100.0%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u404(1){ }u405(7){ }u406(16){ }u407(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 97 287 289 293 294
(code_label 343 342 344 38 154 "" [1 uses])
(note 344 343 345 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 38 (set (reg/f:SI 287)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 346 345 348 38 (set (reg:SI 97 [ D.6229 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 287)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 287)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (nil)))
(insn 348 346 349 38 (set (reg:SI 289)
        (plus:SI (reg:SI 97 [ D.6229 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 97 [ D.6229 ])
        (nil)))
(note 349 348 350 38 NOTE_INSN_DELETED)
(note 350 349 351 38 NOTE_INSN_DELETED)
(insn 351 350 352 38 (set (reg:SI 11 a11)
        (zero_extend:SI (subreg:HI (reg:SI 289) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 289)
        (nil)))
(insn 352 351 353 38 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC115") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 338 [0x152])))
        (nil)))
(call_insn 353 352 355 38 (call (mem:SI (symbol_ref:SI ("os_wlsbf2") [flags 0x3]  <function_decl 0x140efabd0 os_wlsbf2>) [0 os_wlsbf2 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1710 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 355 353 356 38 (set:SI (reg/f:SI 293)
        (plus:SI (reg/f:SI 287)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1713 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 287)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 356 355 357 38 (set (reg:QI 294)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1713 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 357 356 358 38 (set (mem/j/c:QI (plus:SI (reg/f:SI 293)
                (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32])
        (reg:QI 294)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1713 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 294)
        (expr_list:REG_DEAD (reg/f:SI 293)
            (nil))))
(jump_insn 358 357 359 38 (set (pc)
        (if_then_else (eq (reg/v:SI 42 [ txdata ])
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1715 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 42 [ txdata ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 415)
;;  succ:       39 [61.0%]  (FALLTHRU)
;;              46 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45

;; basic block 39, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       38 [61.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u420(1){ }u421(7){ }u422(16){ }u423(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 101 295
(note 359 358 360 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 39 (set (reg/f:SI 295)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1716 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 361 360 362 39 (set (reg:SI 101 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 295)
                    (const_int 189 [0xbd])) [0 LMIC.pendTxConf+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1716 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 295)
        (nil)))
(jump_insn 362 361 363 39 (set (pc)
        (if_then_else (eq (reg:SI 101 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1716 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 101 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 377)
;;  succ:       40 [50.0%]  (FALLTHRU)
;;              42 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45

;; basic block 40, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 39, next block 41, flags: (RTL)
;;  pred:       39 [50.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u426(1){ }u427(7){ }u428(16){ }u429(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 102 296 297 298
(note 363 362 364 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 40 (set (reg/f:SI 296)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1718 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 365 364 366 40 (set:SI (reg/f:SI 297)
        (plus:SI (reg/f:SI 296)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1718 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 296)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 366 365 367 40 (set (reg:QI 298)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1718 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(insn 367 366 370 40 (set (mem/j/c:QI (plus:SI (reg/f:SI 297)
                (const_int 76 [0x4c])) [0 LMIC.frame+0 S1 A32])
        (reg:QI 298)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1718 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 298)
        (nil)))
(insn 370 367 371 40 (set (reg:SI 102 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 297)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 297)
        (nil)))
(jump_insn 371 370 372 40 (set (pc)
        (if_then_else (ne (reg:SI 102 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 102 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 377)
;;  succ:       41 [50.0%]  (FALLTHRU)
;;              42 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45

;; basic block 41, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 [50.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u435(1){ }u436(7){ }u437(16){ }u438(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 301 302 303
(note 372 371 375 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 375 372 467 41 (set (reg:QI 303)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 467 375 466 41 (set (reg/f:SI 301)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 466 467 376 41 (set:SI (reg/f:SI 302)
        (plus:SI (reg/f:SI 301)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 301)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 376 466 377 41 (set (mem/j/c:QI (plus:SI (reg/f:SI 302)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (reg:QI 303)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1719 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 303)
        (expr_list:REG_DEAD (reg/f:SI 302)
            (nil))))
;;  succ:       42 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45

;; basic block 42, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       39 [50.0%] 
;;              40 [50.0%] 
;;              41 [100.0%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u442(1){ }u443(7){ }u444(16){ }u445(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 45
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 103 106 108 304 306 307 308 309 310
(code_label 377 376 378 42 156 "" [2 uses])
(note 378 377 379 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 42 (set (reg/f:SI 304)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 380 379 382 42 (set (reg:SI 103 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 304)
                    (const_int 188 [0xbc])) [0 LMIC.pendTxPort+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 34 {zero_extendqisi2}
     (nil))
(insn 382 380 383 42 (set (reg:SI 306)
        (plus:SI (reg/f:SI 304)
            (reg/v:SI 43 [ end ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 1 {addsi3}
     (nil))
(insn 383 382 384 42 (set (reg:SI 307)
        (const_int 332 [0x14c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 332 [0x14c])
        (nil)))
(insn 384 383 385 42 (set (reg/f:SI 308)
        (plus:SI (reg:SI 306)
            (reg:SI 307))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_DEAD (reg:SI 306)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 306)
                    (const_int 332 [0x14c]))
                (nil)))))
(insn 385 384 386 42 (set (mem/j:QI (reg/f:SI 308) [0 LMIC.frame S1 A8])
        (subreg/s/v:QI (reg:SI 103 [ D.6225 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1721 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 308)
        (expr_list:REG_DEAD (reg:SI 103 [ D.6225 ])
            (nil))))
(insn 386 385 387 42 (set (reg:SI 309 [ D.6230 ])
        (plus:SI (reg/v:SI 43 [ end ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 43 [ end ])
        (nil)))
(insn 387 386 388 42 (set (reg/f:SI 310)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC116") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 388 387 389 42 (set (reg/f:SI 106 [ D.6231 ])
        (plus:SI (reg:SI 309 [ D.6230 ])
            (reg/f:SI 310))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 310)
        (expr_list:REG_DEAD (reg:SI 309 [ D.6230 ])
            (nil))))
(note 389 388 393 42 NOTE_INSN_DELETED)
(insn 393 389 394 42 (set (reg:SI 12 a12)
        (reg/v:SI 45 [ dlen ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 44 {movsi_internal}
     (nil))
(insn 394 393 395 42 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC117") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 191 [0xbf])))
        (nil)))
(insn 395 394 396 42 (set (reg:SI 10 a10)
        (reg/f:SI 106 [ D.6231 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 44 {movsi_internal}
     (nil))
(call_insn 396 395 399 42 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1722 82 {call_value_internal}
     (expr_list:REG_RETURNED (reg/f:SI 106 [ D.6231 ])
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_UNUSED (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
(insn 399 396 400 42 (set (reg:SI 108 [ D.6225 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 304)
                    (const_int 188 [0xbc])) [0 LMIC.pendTxPort+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 304)
        (nil)))
(jump_insn 400 399 401 42 (set (pc)
        (if_then_else (ne (reg:SI 108 [ D.6225 ])
                (const_int 0 [0]))
            (label_ref:SI 455)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 108 [ D.6225 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 455)
;;  succ:       43 [50.0%]  (FALLTHRU)
;;              44 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 106

;; basic block 43, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 [50.0%]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u466(1){ }u467(7){ }u468(16){ }u469(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 106
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48
(note 401 400 10 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 10 401 464 43 (set (reg/f:SI 48 [ D.6222 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC110") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 246 [0xf6])))
        (nil)))
(jump_insn 464 10 465 43 (set (pc)
        (label_ref 402)) 78 {jump}
     (nil)
 -> 402)
;;  succ:       45 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 48 106

(barrier 465 464 455)
;; basic block 44, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 43, next block 45, flags: (RTL)
;;  pred:       42 [50.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u470(1){ }u471(7){ }u472(16){ }u473(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 106
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48
(code_label 455 465 454 44 162 "" [1 uses])
(note 454 455 11 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 11 454 402 44 (set (reg/f:SI 48 [ D.6222 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC111") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 262 [0x106])))
        (nil)))
;;  succ:       45 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 48 106

;; basic block 45, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 [100.0%]  (FALLTHRU)
;;              43 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u474(1){ }u475(7){ }u476(16){ }u477(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 45 48 106
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 48 106
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 110 317
(code_label 402 11 403 45 157 "" [1 uses])
(note 403 402 404 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 45 (set (reg/f:SI 317)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1724 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 405 404 406 45 (set (reg:SI 110 [ D.6229 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 317)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1724 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 317)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (nil)))
(note 406 405 408 45 NOTE_INSN_DELETED)
(insn 408 406 409 45 (set (reg:SI 15 a15)
        (reg/v:SI 45 [ dlen ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 45 [ dlen ])
        (nil)))
(insn 409 408 410 45 (set (reg:SI 14 a14)
        (reg/f:SI 106 [ D.6231 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ D.6231 ])
        (nil)))
(insn 410 409 411 45 (set (reg:SI 13 a13)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (nil))
(insn 411 410 412 45 (set (reg:SI 12 a12)
        (plus:SI (reg:SI 110 [ D.6229 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 110 [ D.6229 ])
        (nil)))
(insn 412 411 413 45 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 317)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 317)
        (nil)))
(insn 413 412 414 45 (set (reg:SI 10 a10)
        (reg/f:SI 48 [ D.6222 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 48 [ D.6222 ])
        (nil)))
(call_insn 414 413 415 45 (call (mem:SI (symbol_ref:SI ("aes_cipher") [flags 0x3]  <function_decl 0x100b50a20 aes_cipher>) [0 aes_cipher S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1723 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 15 a15)
        (expr_list:REG_DEAD (reg:SI 14 a14)
            (expr_list:REG_DEAD (reg:SI 13 a13)
                (expr_list:REG_DEAD (reg:SI 12 a12)
                    (expr_list:REG_DEAD (reg:SI 11 a11)
                        (expr_list:REG_DEAD (reg:SI 10 a10)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (expr_list:SI (use (reg:SI 15 a15))
                            (nil))))))))
;;  succ:       46 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

;; basic block 46, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 45, next block 1, flags: (RTL, MODIFIED)
;;  pred:       38 [39.0%] 
;;              45 [100.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u492(1){ }u493(7){ }u494(16){ }u495(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 114 320 327
(code_label 415 414 416 46 155 "" [1 uses])
(note 416 415 417 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 46 (set (reg/f:SI 320)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC112") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 418 417 419 46 (set (reg:SI 114 [ D.6229 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 320)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 320)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])
        (nil)))
(note 419 418 420 46 NOTE_INSN_DELETED)
(note 420 419 421 46 NOTE_INSN_DELETED)
(note 421 420 423 46 NOTE_INSN_DELETED)
(note 423 421 424 46 NOTE_INSN_DELETED)
(insn 424 423 425 46 (set (reg:SI 15 a15)
        (plus:SI (reg/v:SI 44 [ flen ])
            (const_int -4 [0xfffffffffffffffc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 1 {addsi3}
     (nil))
(insn 425 424 426 46 (set (reg:SI 14 a14)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC116") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 426 425 427 46 (set (reg:SI 13 a13)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (nil))
(insn 427 426 428 46 (set (reg:SI 12 a12)
        (plus:SI (reg:SI 114 [ D.6229 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 114 [ D.6229 ])
        (nil)))
(insn 428 427 429 46 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 320)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (nil))
(insn 429 428 430 46 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC110") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 246 [0xf6])))
        (nil)))
(call_insn 430 429 432 46 (call (mem:SI (symbol_ref:SI ("aes_appendMic") [flags 0x3]  <function_decl 0x100b505e8 aes_appendMic>) [0 aes_appendMic S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1727 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 15 a15)
        (expr_list:REG_DEAD (reg:SI 14 a14)
            (expr_list:REG_DEAD (reg:SI 13 a13)
                (expr_list:REG_DEAD (reg:SI 12 a12)
                    (expr_list:REG_DEAD (reg:SI 11 a11)
                        (expr_list:REG_DEAD (reg:SI 10 a10)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (expr_list:SI (use (reg:SI 15 a15))
                            (nil))))))))
(insn 432 430 433 46 (set:SI (reg/f:SI 327)
        (plus:SI (reg/f:SI 320)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1740 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 320)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 433 432 0 46 (set (mem/j/c:QI (plus:SI (reg/f:SI 327)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 44 [ flen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1740 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 327)
        (expr_list:REG_DEAD (reg/v:SI 44 [ flen ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function os_crc16 (os_crc16, funcdef_no=35, decl_uid=2756, cgraph_uid=35, symbol_order=36)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 25 (  2.1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 58: def dominates all uses has unique first use
Reg 59: def dominates all uses has unique first use
Reg 60 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
Reg 52 uninteresting
Reg 54: local to bb 5 def dominates all uses has unique first use
Reg 66 uninteresting
Reg 65 uninteresting
Reg 67 uninteresting
Reg 68 uninteresting
Examining insn 32, def for 54
  all ok
Reg 58 not local to one basic block
Reg 59 not local to one basic block
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 8 7 3 6 5 4
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 2, outer 1
;;  nodes: 8 7 6 5 4
;; 2 succs { 10 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 4 9 }
;; 9 succs { 10 }
;; 10 succs { 3 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 66: (insn_list:REG_DEP_TRUE 34 (nil))

Pass 0 for finding pseudo/allocno costs

    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r68,l2) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r67,l2) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r66,l2) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r65,l2) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r60,l1) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r59,l2) best AR_REGS, allocno AR_REGS
    a7 (r59,l1) best AR_REGS, allocno AR_REGS
    a2 (r59,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r58,l2) best AR_REGS, allocno AR_REGS
    a6 (r58,l1) best AR_REGS, allocno AR_REGS
    a3 (r58,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r54,l2) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r52,l2) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r48,l1) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r46,l1) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r44,l2) best AR_REGS, allocno AR_REGS
    a8 (r44,l1) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r43,l2) best AR_REGS, allocno AR_REGS
    a5 (r43,l1) best AR_REGS, allocno AR_REGS
    a1 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r42,l2) best AR_REGS, allocno AR_REGS
    a4 (r42,l1) best AR_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:66,8724 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:352,46528 MEM:88,11632
  a1(r43,l0) costs: ACC_REG:66,1431 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:352,7632 MEM:88,1908
  a2(r59,l0) costs: ACC_REG:33,399 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:176,2128 MEM:44,532
  a3(r58,l0) costs: ACC_REG:33,366 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:176,1952 MEM:44,488
  a4(r42,l1) costs: ACC_REG:666,8658 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3552,46176 MEM:888,11544
  a5(r43,l1) costs: ACC_REG:1365,1365 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7280,7280 MEM:1820,1820
  a6(r58,l1) costs: ACC_REG:333,333 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1776,1776 MEM:444,444
  a7(r59,l1) costs: ACC_REG:366,366 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1952,1952 MEM:488,488
  a8(r44,l1) costs: ACC_REG:333,8661 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1776,46192 MEM:444,11548
  a9(r48,l1) costs: ACC_REG:666,666 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3552,3552 MEM:888,888
  a10(r46,l1) costs: ACC_REG:666,666 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3552,3552 MEM:888,888
  a11(r60,l1) costs: ACC_REG:666,666 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3552,3552 MEM:888,888
  a12(r42,l2) costs: ACC_REG:7992,7992 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:42624,42624 MEM:10656,10656
  a13(r43,l2) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a14(r44,l2) costs: ACC_REG:8328,8328 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:44416,44416 MEM:11104,11104
  a15(r58,l2) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a16(r59,l2) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a17(r68,l2) costs: ACC_REG:5328,5328 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28416,28416 MEM:7104,7104
  a18(r67,l2) costs: ACC_REG:3888,3888 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20736,20736 MEM:5184,5184
  a19(r65,l2) costs: ACC_REG:1440,1440 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7680,7680 MEM:1920,1920
  a20(r66,l2) costs: ACC_REG:1440,1440 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7680,7680 MEM:0,0
  a21(r54,l2) costs: ACC_REG:1440,1440 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7680,7680 MEM:1920,1920
  a22(r52,l2) costs: ACC_REG:5328,5328 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28416,28416 MEM:7104,7104

   Insn 72(l0): point = 0
   Insn 71(l0): point = 2
   Insn 74(l0): point = 5
   Insn 7(l0): point = 7
   Insn 6(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 76(l1): point = 16
   Insn 5(l1): point = 18
   Insn 23(l1): point = 20
   Insn 18(l1): point = 22
   Insn 17(l1): point = 24
   Insn 16(l1): point = 26
   Insn 65(l1): point = 29
   Insn 58(l1): point = 32
   Insn 30(l2): point = 35
   Insn 29(l2): point = 37
   Insn 56(l2): point = 40
   Insn 49(l2): point = 43
   Insn 48(l2): point = 45
   Insn 43(l2): point = 48
   Insn 42(l2): point = 50
   Insn 78(l2): point = 53
   Insn 36(l2): point = 55
   Insn 35(l2): point = 57
   Insn 34(l2): point = 59
   Insn 32(l2): point = 61
 a0(r42): [3..7]
 a1(r43): [5..9]
 a2(r59): [5..11]
 a3(r58): [5..13]
 a4(r42): [16..34]
 a5(r43): [16..34]
 a6(r58): [16..34]
 a7(r59): [16..34]
 a8(r44): [16..18]
 a9(r48): [21..22]
 a10(r46): [23..24]
 a11(r60): [25..26]
 a12(r42): [62..63] [51..55] [35..48]
 a13(r43): [35..63]
 a14(r44): [46..63] [35..43]
 a15(r58): [35..63]
 a16(r59): [35..63]
 a17(r68): [44..45]
 a18(r67): [49..50]
 a19(r65): [56..57]
 a20(r66): [58..59]
 a21(r54): [58..61]
 a22(r52): [36..37]
 Rebuilding regno allocno list for 68
 Rebuilding regno allocno list for 67
 Rebuilding regno allocno list for 66
 Rebuilding regno allocno list for 65
 Rebuilding regno allocno list for 60
      Moving ranges of a16r59 to a7r59:  [35..63]
      Moving ranges of a7r59 to a2r59:  [16..63]
      Moving ranges of a15r58 to a6r58:  [35..63]
      Moving ranges of a6r58 to a3r58:  [16..63]
 Rebuilding regno allocno list for 54
 Rebuilding regno allocno list for 52
 Rebuilding regno allocno list for 48
 Rebuilding regno allocno list for 46
      Moving ranges of a14r44 to a8r44:  [46..63] [35..43]
 Rebuilding regno allocno list for 44
      Moving ranges of a13r43 to a5r43:  [35..63]
      Moving ranges of a5r43 to a1r43:  [16..63]
      Moving ranges of a12r42 to a4r42:  [62..63] [51..55] [35..48]
      Moving ranges of a4r42 to a0r42:  [62..63] [51..55] [16..48]
Compressing live ranges: from 64 to 26 - 40%
Ranges after the compression:
 a0(r42): [24..25] [18..19] [0..15]
 a1(r43): [0..25]
 a2(r59): [0..25]
 a3(r58): [0..25]
 a8(r44): [14..25] [10..11] [2..3]
 a9(r48): [4..5]
 a10(r46): [6..7]
 a11(r60): [8..9]
 a17(r68): [12..13]
 a18(r67): [16..17]
 a19(r65): [20..21]
 a20(r66): [22..23]
 a21(r54): [22..23]
 a22(r52): [10..11]
+++Allocating 112 bytes for conflict table (uncompressed size 184)
;; a0(r42,l0) conflicts: a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0) a9(r48,l0) a10(r46,l0) a11(r60,l0) a22(r52,l0) a17(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r43,l0) conflicts: a0(r42,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0) a9(r48,l0) a10(r46,l0) a11(r60,l0) a22(r52,l0) a17(r68,l0) a18(r67,l0) a19(r65,l0) a20(r66,l0) a21(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r59,l0) conflicts: a0(r42,l0) a1(r43,l0) a3(r58,l0) a8(r44,l0) a9(r48,l0) a10(r46,l0) a11(r60,l0) a22(r52,l0) a17(r68,l0) a18(r67,l0) a19(r65,l0) a20(r66,l0) a21(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r58,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a8(r44,l0) a9(r48,l0) a10(r46,l0) a11(r60,l0) a22(r52,l0) a17(r68,l0) a18(r67,l0) a19(r65,l0) a20(r66,l0) a21(r54,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a8(r44,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0) a22(r52,l0) a18(r67,l0) a19(r65,l0) a20(r66,l0) a21(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r48,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r46,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r60,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r68,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r67,l0) conflicts: a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r65,l0) conflicts: a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r66,l0) conflicts: a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0) a21(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r54,l0) conflicts: a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0) a20(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r52,l0) conflicts: a0(r42,l0) a1(r43,l0) a2(r59,l0) a3(r58,l0) a8(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a8(r44)<->a17(r68)@222:shuffle
  cp1:a0(r42)<->a18(r67)@162:shuffle
  cp2:a0(r42)<->a21(r54)@30:shuffle
  cp3:a19(r65)<->a20(r66)@30:shuffle
  cp4:a19(r65)<->a21(r54)@30:shuffle
  cp5:a0(r42)<->a19(r65)@30:shuffle
  cp6:a9(r48)<->a10(r46)@13:shuffle
  pref0:a0(r42)<-hr2@22
  pref1:a3(r58)<-hr2@22
  pref2:a2(r59)<-hr3@22
  regions=3, blocks=12, points=26
    allocnos=23 (big 0), copies=7, conflicts=0, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r43 2r59 3r58 8r44 9r48 10r46 11r60 17r68 18r67 19r65 20r66 21r54 22r52
    modified regnos: 42 43 44 46 48 52 54 58 59 60 65 66 67 68
    border:
    Pressure: AR_REGS=6
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@103208
          2:( 2 4-15)@1064
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r58 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a8r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a8r44-a17r68 (freq=222):
        Result (freq=4663): a8r44(2887) a17r68(1776)
      Forming thread by copy 1:a0r42-a18r67 (freq=162):
        Result (freq=4204): a0r42(2908) a18r67(1296)
      Forming thread by copy 2:a0r42-a21r54 (freq=30):
        Result (freq=4684): a0r42(2908) a21r54(480) a18r67(1296)
      Forming thread by copy 3:a19r65-a20r66 (freq=30):
        Result (freq=960): a19r65(480) a20r66(480)
      Forming thread by copy 6:a9r48-a10r46 (freq=13):
        Result (freq=444): a9r48(222) a10r46(222)
      Pushing a2(r59,l0)(cost 0)
        Making a3(r58,l0) colorable
      Pushing a3(r58,l0)(cost 532)
      Pushing a11(r60,l0)(cost 0)
      Pushing a10(r46,l0)(cost 0)
      Pushing a9(r48,l0)(cost 0)
      Pushing a1(r43,l0)(cost 0)
      Pushing a20(r66,l0)(cost 0)
      Pushing a19(r65,l0)(cost 0)
      Pushing a22(r52,l0)(cost 0)
      Pushing a17(r68,l0)(cost 0)
      Pushing a8(r44,l0)(cost 0)
      Pushing a21(r54,l0)(cost 0)
      Pushing a18(r67,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Popping a0(r42,l0)  -- assign reg 8
      Popping a18(r67,l0)  -- assign reg 8
      Popping a21(r54,l0)  -- assign reg 8
      Popping a8(r44,l0)  -- assign reg 9
      Popping a17(r68,l0)  -- assign reg 9
      Popping a22(r52,l0)  -- assign reg 10
      Popping a19(r65,l0)  -- assign reg 8
      Popping a20(r66,l0)  -- assign reg 10
      Popping a1(r43,l0)  -- assign reg 11
      Popping a9(r48,l0)  -- assign reg 9
      Popping a10(r46,l0)  -- assign reg 9
      Popping a11(r60,l0)  -- assign reg 9
      Popping a3(r58,l0)  -- assign reg 2
      Popping a2(r59,l0)  -- assign reg 3
Disposition:
    0:r42  l0     8    1:r43  l0    11    8:r44  l0     9   10:r46  l0     9
    9:r48  l0     9   22:r52  l0    10   21:r54  l0     8    3:r58  l0     2
    2:r59  l0     3   11:r60  l0     9   19:r65  l0     8   20:r66  l0    10
   18:r67  l0     8   17:r68  l0     9
New iteration of spill/restore move
+++Costs: overall -88, reg -88, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


os_crc16

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,11u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,11u} r16={1d,11u} r17={1d,10u} r42={4d,11u} r43={2d,6u} r44={2d,4u} r46={1d,1u} r48={1d,1u} r52={1d,1u} r54={1d,1u} r58={1d,1u} r59={1d,1u} r60={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 109{30d,79u,0e} in 41{41 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 110, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 43 58 59
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:SI 58 [ data ])
        (reg:SI 2 a2 [ data ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:113 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ data ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 59 [ len ])
        (reg:SI 3 a3 [ len ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:113 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ len ])
        (nil)))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 10 4 11 2 (var_location:HI remainder (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:114 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:HI polynomial (const_int 4129 [0x1021])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:115 -1
     (nil))
(debug_insn 12 11 6 2 (var_location:SI i (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 -1
     (nil))
(insn 6 12 7 2 (set (reg/v:SI 43 [ i ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 7 6 74 2 (set (reg/v:SI 42 [ remainder ])
        (reg/v:SI 43 [ i ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:114 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 74 7 75 2 (set (pc)
        (label_ref 60)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 78 {jump}
     (nil)
 -> 60)
;;  succ:       10 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59

(barrier 75 74 64)
;; basic block 3, loop depth 1, count 0, freq 1111, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       10 [91.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58
;; lr  def 	 42 44 46 48 60
(code_label 64 75 15 3 169 "" [1 uses])
(note 15 64 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 60)
        (plus:SI (reg/v/f:SI 58 [ data ])
            (reg/v:SI 43 [ i ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:117 1 {addsi3}
     (nil))
(insn 17 16 18 3 (set (reg:SI 46 [ D.6236 ])
        (zero_extend:SI (mem:QI (reg/f:SI 60) [0 *_8+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:117 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 60)
        (nil)))
(insn 18 17 21 3 (set (reg:SI 48 [ D.6237 ])
        (ashift:SI (reg:SI 46 [ D.6236 ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:117 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6236 ])
        (nil)))
(note 21 18 22 3 NOTE_INSN_DELETED)
(note 22 21 23 3 NOTE_INSN_DELETED)
(insn 23 22 24 3 (set (reg/v:SI 42 [ remainder ])
        (xor:SI (reg:SI 48 [ D.6237 ])
            (reg/v:SI 42 [ remainder ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:117 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6237 ])
        (nil)))
(debug_insn 24 23 25 3 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:117 -1
     (nil))
(debug_insn 25 24 5 3 (var_location:QI bit (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 -1
     (nil))
(insn 5 25 76 3 (set (reg/v:SI 44 [ bit ])
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(jump_insn 76 5 77 3 (set (pc)
        (label_ref 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 78 {jump}
     (nil)
 -> 51)
;;  succ:       8 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

(barrier 77 76 55)
;; basic block 4, loop depth 2, count 0, freq 8889, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       8 [88.9%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 52
(code_label 55 77 28 4 168 "" [1 uses])
(note 28 55 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 52 [ D.6238 ])
        (sign_extend:SI (subreg/v:HI (reg/v:SI 42 [ remainder ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:119 35 {extendhisi2_internal}
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ge (reg:SI 52 [ D.6238 ])
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:119 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6238 ])
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 40)
;;  succ:       5 [27.0%]  (FALLTHRU)
;;              6 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

;; basic block 5, loop depth 2, count 0, freq 2400, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [27.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 42 54 65 66
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 5 (set (reg:SI 54 [ D.6237 ])
        (ashift:SI (reg/v:SI 42 [ remainder ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:120 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ remainder ])
        (nil)))
(insn 34 32 35 5 (set (reg:SI 66)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC118") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:120 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 4129 [0x1021])
        (nil)))
(insn 35 34 36 5 (set (reg:SI 65)
        (xor:SI (reg:SI 54 [ D.6237 ])
            (reg:SI 66))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:120 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 66)
        (expr_list:REG_DEAD (reg:SI 54 [ D.6237 ])
            (nil))))
(insn 36 35 37 5 (set (reg/v:SI 42 [ remainder ])
        (zero_extend:SI (subreg:HI (reg:SI 65) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:120 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 65)
        (nil)))
(debug_insn 37 36 78 5 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:120 -1
     (nil))
(jump_insn 78 37 79 5 (set (pc)
        (label_ref 45)) 78 {jump}
     (nil)
 -> 45)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

(barrier 79 78 40)
;; basic block 6, loop depth 2, count 0, freq 6489, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [73.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 42 67
(code_label 40 79 41 6 166 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 67)
        (ashift:SI (reg/v:SI 42 [ remainder ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:122 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ remainder ])
        (nil)))
(insn 43 42 44 6 (set (reg/v:SI 42 [ remainder ])
        (zero_extend:SI (subreg:HI (reg:SI 67) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:122 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
(debug_insn 44 43 45 6 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:122 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

;; basic block 7, loop depth 2, count 0, freq 8889, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(1){ }u43(7){ }u44(16){ }u45(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 44 68
(code_label 45 44 46 7 167 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 47 46 48 7 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 68)
        (plus:SI (reg/v:SI 44 [ bit ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 44 [ bit ])
        (nil)))
(insn 49 48 50 7 (set (reg/v:SI 44 [ bit ])
        (zero_extend:SI (subreg:QI (reg:SI 68) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 68)
        (nil)))
(debug_insn 50 49 51 7 (var_location:QI bit (subreg:QI (reg/v:SI 44 [ bit ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

;; basic block 8, loop depth 2, count 0, freq 10000, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(1){ }u51(7){ }u52(16){ }u53(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	
(code_label 51 50 52 8 165 "" [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 53 52 54 8 (var_location:QI bit (subreg:QI (reg/v:SI 44 [ bit ]) 0)) -1
     (nil))
(debug_insn 54 53 56 8 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) -1
     (nil))
(jump_insn 56 54 57 8 (set (pc)
        (if_then_else (ne (reg/v:SI 44 [ bit ])
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:118 56 {*btrue}
     (int_list:REG_BR_PROB 8889 (nil))
 -> 55)
;;  succ:       4 [88.9%] 
;;              9 [11.1%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 58 59

;; basic block 9, loop depth 1, count 0, freq 1111, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [11.1%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(1){ }u58(7){ }u59(16){ }u60(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 43
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/v:SI 43 [ i ])
        (plus:SI (reg/v:SI 43 [ i ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 1 {addsi3}
     (nil))
(debug_insn 59 58 60 9 (var_location:SI i (reg/v:SI 43 [ i ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59

;; basic block 10, loop depth 1, count 0, freq 1221, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [100.0%]  (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u63(1){ }u64(7){ }u65(16){ }u66(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 59
;; lr  def 	
(code_label 60 59 61 10 164 "" [1 uses])
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 61 63 10 (var_location:SI i (reg/v:SI 43 [ i ])) -1
     (nil))
(debug_insn 63 62 65 10 (var_location:HI remainder (subreg:HI (reg/v:SI 42 [ remainder ]) 0)) -1
     (nil))
(jump_insn 65 63 66 10 (set (pc)
        (if_then_else (ltu (reg/v:SI 43 [ i ])
                (reg/v:SI 59 [ len ]))
            (label_ref 64)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:116 58 {*ubtrue}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 64)
;;  succ:       3 [91.0%] 
;;              11 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 58 59

;; basic block 11, loop depth 0, count 0, freq 110, maybe hot
;;  prev block 10, next block 1, flags: (RTL)
;;  pred:       10 [9.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u71(1){ }u72(7){ }u73(16){ }u74(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(note 66 65 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 66 72 11 (set (reg/i:SI 2 a2)
        (reg/v:SI 42 [ remainder ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:126 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ remainder ])
        (nil)))
(insn 72 71 0 11 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:126 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function decodeBeacon (decodeBeacon, funcdef_no=71, decl_uid=3706, cgraph_uid=71, symbol_order=79)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
scanning new insn with uid = 150.
verify found no changes in insn with uid = 150.
deleting insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Reg 69 uninteresting
Reg 70 uninteresting
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 72 uninteresting
Reg 74 uninteresting
Reg 75 uninteresting
Reg 44: local to bb 4 def dominates all uses has unique first use
Reg 46 uninteresting
Reg 79 uninteresting
Reg 48: local to bb 5 def dominates all uses has unique first use
Reg 80 uninteresting
Reg 49 uninteresting
Reg 82 uninteresting
Reg 83 uninteresting
Reg 85 uninteresting
Reg 52 uninteresting
Reg 53 uninteresting
Ignoring reg 54, has equiv memory
Reg 95 uninteresting
Ignoring reg 55, has equiv memory
Reg 99 uninteresting
Reg 100 uninteresting
Reg 104: local to bb 6 def dominates all uses has unique first use
Reg 62: local to bb 7 def dominates all uses has unique first use
Ignoring reg 65, has equiv memory
Ignoring reg 115, has equiv memory
Reg 118 uninteresting
Reg 119 uninteresting
Found def insn 11 for 43 to be not moveable
Found def insn 25 for 44 to be not moveable
Found def insn 40 for 48 to be not moveable
Found def insn 101 for 62 to be not moveable
Found def insn 86 for 104 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 8 5 }
;; 5 succs { 9 6 }
;; 6 succs { 10 7 }
;; 7 succs { 11 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 54: (insn_list:REG_DEP_TRUE 66 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 65: (insn_list:REG_DEP_TRUE 111 (nil))
init_insns for 69: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 75: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 79: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 80: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 81: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 82: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 150 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 108: (insn_list:REG_DEP_TRUE 102 (nil))
init_insns for 112: (insn_list:REG_DEP_TRUE 113 (nil))
init_insns for 115: (insn_list:REG_DEP_TRUE 116 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 120 (nil))

Pass 0 for finding pseudo/allocno costs

    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r119,l0) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r118,l0) best AR_REGS, allocno AR_REGS
    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r115,l0) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r112,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r108,l0) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r104,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r100,l0) best AR_REGS, allocno AR_REGS
    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r99,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r95,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r85,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r84,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r82,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r81,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r80,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r79,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r74,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r72,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r69,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r65,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r62,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r48,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5991,5991 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31952,31952 MEM:7988,7988
  a1(r112,l0) costs: ACC_REG:2250,2250 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12000,12000 MEM:3000,3000
  a2(r119,l0) costs: ACC_REG:900,900 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4800,4800 MEM:1200,1200
  a3(r118,l0) costs: ACC_REG:900,900 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4800,4800 MEM:1200,1200
  a4(r57,l0) costs: ACC_REG:2496,2496 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:13312,13312 MEM:3328,3328
  a5(r115,l0) costs: ACC_REG:900,900 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4800,4800 MEM:0,0
  a6(r108,l0) costs: ACC_REG:1800,1800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9600,9600 MEM:1200,1200
  a7(r65,l0) costs: ACC_REG:900,900 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4800,4800 MEM:1200,1200
  a8(r62,l0) costs: ACC_REG:900,900 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4800,4800 MEM:1200,1200
  a9(r104,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a10(r82,l0) costs: ACC_REG:6138,6138 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32736,32736 MEM:8184,8184
  a11(r100,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a12(r99,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a13(r51,l0) costs: ACC_REG:3069,3069 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16368,16368 MEM:4092,4092
  a14(r81,l0) costs: ACC_REG:8184,8184 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:43648,43648 MEM:8184,8184
  a15(r55,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a16(r95,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:0,0
  a17(r54,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:0,0
  a18(r53,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a19(r52,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a20(r85,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a21(r83,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a22(r84,l0) costs: ACC_REG:2046,2046 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10912,10912 MEM:2728,2728
  a23(r49,l0) costs: ACC_REG:2268,2268 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12096,12096 MEM:3024,3024
  a24(r48,l0) costs: ACC_REG:2268,2268 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12096,12096 MEM:3024,3024
  a25(r80,l0) costs: ACC_REG:2268,2268 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12096,12096 MEM:0,0
  a26(r79,l0) costs: ACC_REG:2268,2268 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12096,12096 MEM:0,0
  a27(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a28(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a29(r75,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a30(r74,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a31(r72,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a32(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a33(r70,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a34(r69,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 130(l0): point = 0
   Insn 129(l0): point = 2
   Insn 5(l0): point = 5
   Insn 148(l0): point = 8
   Insn 4(l0): point = 10
   Insn 146(l0): point = 13
   Insn 3(l0): point = 15
   Insn 144(l0): point = 18
   Insn 6(l0): point = 20
   Insn 122(l0): point = 22
   Insn 121(l0): point = 24
   Insn 120(l0): point = 26
   Insn 117(l0): point = 28
   Insn 116(l0): point = 30
   Insn 113(l0): point = 32
   Insn 111(l0): point = 34
   Insn 109(l0): point = 36
   Insn 106(l0): point = 38
   Insn 105(l0): point = 40
   Insn 103(l0): point = 42
   Insn 102(l0): point = 44
   Insn 101(l0): point = 46
   Insn 98(l0): point = 48
   Insn 97(l0): point = 50
   Insn 94(l0): point = 53
   Insn 91(l0): point = 55
   Insn 90(l0): point = 57
   Insn 89(l0): point = 59
   Insn 86(l0): point = 61
   Insn 85(l0): point = 63
   Insn 84(l0): point = 65
   Insn 82(l0): point = 67
   Insn 79(l0): point = 69
   Insn 78(l0): point = 71
   Insn 77(l0): point = 73
   Insn 76(l0): point = 75
   Insn 73(l0): point = 77
   Insn 72(l0): point = 79
   Insn 70(l0): point = 81
   Insn 68(l0): point = 83
   Insn 67(l0): point = 85
   Insn 66(l0): point = 87
   Insn 64(l0): point = 89
   Insn 61(l0): point = 91
   Insn 59(l0): point = 93
   Insn 56(l0): point = 95
   Insn 54(l0): point = 97
   Insn 51(l0): point = 99
   Insn 50(l0): point = 101
   Insn 150(l0): point = 103
   Insn 49(l0): point = 105
   Insn 47(l0): point = 107
   Insn 46(l0): point = 109
   Insn 44(l0): point = 112
   Insn 43(l0): point = 114
   Insn 42(l0): point = 116
   Insn 40(l0): point = 118
   Insn 39(l0): point = 120
   Insn 37(l0): point = 122
   Insn 36(l0): point = 124
   Insn 33(l0): point = 127
   Insn 32(l0): point = 129
   Insn 29(l0): point = 131
   Insn 28(l0): point = 133
   Insn 27(l0): point = 135
   Insn 25(l0): point = 137
   Insn 24(l0): point = 139
   Insn 23(l0): point = 141
   Insn 19(l0): point = 144
   Insn 18(l0): point = 146
   Insn 17(l0): point = 148
   Insn 14(l0): point = 151
   Insn 13(l0): point = 153
   Insn 11(l0): point = 155
   Insn 10(l0): point = 157
   Insn 9(l0): point = 159
 a0(r42): [18..20] [13..15] [8..10] [3..5]
 a1(r112): [23..32]
 a2(r119): [23..24]
 a3(r118): [25..26]
 a4(r57): [25..69]
 a5(r115): [29..30]
 a6(r108): [33..44]
 a7(r65): [35..36]
 a8(r62): [43..46]
 a9(r104): [54..61]
 a10(r82): [68..107]
 a11(r100): [70..71]
 a12(r99): [72..73]
 a13(r51): [72..99]
 a14(r81): [76..109]
 a15(r55): [82..83]
 a16(r95): [84..85]
 a17(r54): [84..87]
 a18(r53): [90..91]
 a19(r52): [94..95]
 a20(r85): [100..101]
 a21(r83): [102..103]
 a22(r84): [102..105]
 a23(r49): [113..114]
 a24(r48): [113..118]
 a25(r80): [115..116]
 a26(r79): [119..120]
 a27(r46): [128..129]
 a28(r44): [128..137]
 a29(r75): [138..139]
 a30(r74): [140..141]
 a31(r72): [152..153]
 a32(r43): [152..155]
 a33(r70): [156..157]
 a34(r69): [158..159]
Compressing live ranges: from 162 to 56 - 34%
Ranges after the compression:
 a0(r42): [0..7]
 a1(r112): [8..13]
 a2(r119): [8..9]
 a3(r118): [10..11]
 a4(r57): [10..21]
 a5(r115): [12..13]
 a6(r108): [14..17]
 a7(r65): [14..15]
 a8(r62): [16..17]
 a9(r104): [18..19]
 a10(r82): [20..37]
 a11(r100): [22..23]
 a12(r99): [24..25]
 a13(r51): [24..33]
 a14(r81): [26..37]
 a15(r55): [26..27]
 a16(r95): [28..29]
 a17(r54): [28..29]
 a18(r53): [30..31]
 a19(r52): [32..33]
 a20(r85): [34..35]
 a21(r83): [36..37]
 a22(r84): [36..37]
 a23(r49): [38..39]
 a24(r48): [38..41]
 a25(r80): [40..41]
 a26(r79): [42..43]
 a27(r46): [44..45]
 a28(r44): [44..45]
 a29(r75): [46..47]
 a30(r74): [48..49]
 a31(r72): [50..51]
 a32(r43): [50..51]
 a33(r70): [52..53]
 a34(r69): [54..55]
+++Allocating 232 bytes for conflict table (uncompressed size 280)
;; a0(r42,l0) conflicts:;; a1(r112,l0) conflicts: a2(r119,l0) a3(r118,l0) a4(r57,l0) a5(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r119,l0) conflicts: a1(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r118,l0) conflicts: a1(r112,l0) a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r57,l0) conflicts: a1(r112,l0) a3(r118,l0) a5(r115,l0) a7(r65,l0) a6(r108,l0) a8(r62,l0) a9(r104,l0) a10(r82,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r115,l0) conflicts: a1(r112,l0) a4(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r108,l0) conflicts: a4(r57,l0) a7(r65,l0) a8(r62,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a7(r65,l0) conflicts: a4(r57,l0) a6(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r62,l0) conflicts: a4(r57,l0) a6(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r104,l0) conflicts: a4(r57,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a10(r82,l0) conflicts: a4(r57,l0) a11(r100,l0) a12(r99,l0) a13(r51,l0) a15(r55,l0) a14(r81,l0) a16(r95,l0) a17(r54,l0) a18(r53,l0) a19(r52,l0) a20(r85,l0) a21(r83,l0) a22(r84,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a11(r100,l0) conflicts: a10(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r99,l0) conflicts: a10(r82,l0) a13(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r51,l0) conflicts: a10(r82,l0) a12(r99,l0) a15(r55,l0) a14(r81,l0) a16(r95,l0) a17(r54,l0) a18(r53,l0) a19(r52,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a14(r81,l0) conflicts: a10(r82,l0) a13(r51,l0) a15(r55,l0) a16(r95,l0) a17(r54,l0) a18(r53,l0) a19(r52,l0) a20(r85,l0) a21(r83,l0) a22(r84,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a15(r55,l0) conflicts: a10(r82,l0) a13(r51,l0) a14(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r95,l0) conflicts: a10(r82,l0) a13(r51,l0) a14(r81,l0) a17(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r54,l0) conflicts: a10(r82,l0) a13(r51,l0) a14(r81,l0) a16(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r53,l0) conflicts: a10(r82,l0) a13(r51,l0) a14(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r52,l0) conflicts: a10(r82,l0) a13(r51,l0) a14(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r85,l0) conflicts: a10(r82,l0) a14(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r83,l0) conflicts: a10(r82,l0) a14(r81,l0) a22(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r84,l0) conflicts: a10(r82,l0) a14(r81,l0) a21(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r49,l0) conflicts: a24(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r48,l0) conflicts: a23(r49,l0) a25(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r80,l0) conflicts: a24(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r79,l0) conflicts:;; a27(r46,l0) conflicts: a28(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r44,l0) conflicts: a27(r46,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a29(r75,l0) conflicts:;; a30(r74,l0) conflicts:;; a31(r72,l0) conflicts: a32(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r43,l0) conflicts: a31(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r70,l0) conflicts:;; a34(r69,l0) conflicts:  cp0:a1(r112)<->a6(r108)@18:shuffle
  cp1:a2(r119)<->a3(r118)@18:shuffle
  cp2:a2(r119)<->a4(r57)@18:shuffle
  cp3:a20(r85)<->a21(r83)@42:shuffle
  cp4:a20(r85)<->a22(r84)@42:shuffle
  cp5:a13(r51)<->a20(r85)@42:shuffle
  cp6:a15(r55)<->a16(r95)@42:shuffle
  cp7:a15(r55)<->a17(r54)@42:shuffle
  cp8:a11(r100)<->a12(r99)@42:shuffle
  cp9:a11(r100)<->a13(r51)@42:shuffle
  cp10:a4(r57)<->a11(r100)@42:shuffle
  cp11:a24(r48)<->a26(r79)@47:shuffle
  cp12:a29(r75)<->a30(r74)@125:shuffle
  cp13:a33(r70)<->a34(r69)@125:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a9(r104)<-hr10@682
  pref2:a8(r62)<-hr10@18
  pref3:a7(r65)<-hr10@18
  pref4:a24(r48)<-hr10@47
  pref5:a27(r46)<-hr10@125
  regions=1, blocks=12, points=56
    allocnos=35 (big 0), copies=14, conflicts=0, ranges=35

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r112 2r119 3r118 4r57 5r115 6r108 7r65 8r62 9r104 10r82 11r100 12r99 13r51 14r81 15r55 16r95 17r54 18r53 19r52 20r85 21r83 22r84 23r49 24r48 25r80 26r79 27r46 28r44 29r75 30r74 31r72 32r43 33r70 34r69
    modified regnos: 42 43 44 46 48 49 51 52 53 54 55 57 62 65 69 70 72 74 75 79 80 81 82 83 84 85 95 99 100 104 108 112 115 118 119
    border:
    Pressure: AR_REGS=5
 Removing pref1:hr10@682
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@176152
          2:( 2-9 11-15)@0
            3:( 2-7)@74160
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r118 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r57 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r108 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a7r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r104 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a10r82 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a11r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r99 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a14r81 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a15r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r79 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a27r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a29r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 12:a29r75-a30r74 (freq=125):
        Result (freq=4000): a29r75(2000) a30r74(2000)
      Forming thread by copy 13:a33r70-a34r69 (freq=125):
        Result (freq=4000): a33r70(2000) a34r69(2000)
      Forming thread by copy 11:a24r48-a26r79 (freq=47):
        Result (freq=1512): a24r48(756) a26r79(756)
      Forming thread by copy 3:a20r85-a21r83 (freq=42):
        Result (freq=1364): a20r85(682) a21r83(682)
      Forming thread by copy 6:a15r55-a16r95 (freq=42):
        Result (freq=1364): a15r55(682) a16r95(682)
      Forming thread by copy 8:a11r100-a12r99 (freq=42):
        Result (freq=1364): a11r100(682) a12r99(682)
      Forming thread by copy 0:a1r112-a6r108 (freq=18):
        Result (freq=1200): a1r112(600) a6r108(600)
      Forming thread by copy 1:a2r119-a3r118 (freq=18):
        Result (freq=600): a2r119(300) a3r118(300)
      Pushing a8(r62,l0)(cost 0)
      Pushing a7(r65,l0)(cost 0)
      Pushing a5(r115,l0)(cost 0)
      Forming thread by copy 10:a4r57-a11r100 (freq=42):
        Result (freq=2196): a4r57(832) a11r100(682) a12r99(682)
        Making a4(r57,l0) colorable
      Pushing a3(r118,l0)(cost 0)
      Pushing a2(r119,l0)(cost 0)
      Pushing a22(r84,l0)(cost 0)
      Pushing a19(r52,l0)(cost 0)
      Pushing a18(r53,l0)(cost 0)
      Pushing a17(r54,l0)(cost 0)
      Forming thread by copy 5:a13r51-a20r85 (freq=42):
        Result (freq=2387): a13r51(1023) a20r85(682) a21r83(682)
        Making a13(r51,l0) colorable
      Pushing a9(r104,l0)(cost 0)
      Pushing a25(r80,l0)(cost 0)
      Pushing a23(r49,l0)(cost 0)
      Pushing a1(r112,l0)(cost 0)
      Pushing a6(r108,l0)(cost 0)
      Pushing a21(r83,l0)(cost 0)
        Making a14(r81,l0) colorable
      Pushing a14(r81,l0)(cost 8184)
      Pushing a20(r85,l0)(cost 0)
      Pushing a16(r95,l0)(cost 0)
        Making a10(r82,l0) colorable
      Pushing a15(r55,l0)(cost 0)
      Pushing a10(r82,l0)(cost 8184)
      Pushing a12(r99,l0)(cost 0)
      Pushing a11(r100,l0)(cost 0)
      Pushing a24(r48,l0)(cost 0)
      Pushing a26(r79,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a32(r43,l0)(cost 0)
      Pushing a31(r72,l0)(cost 0)
      Pushing a28(r44,l0)(cost 0)
      Pushing a27(r46,l0)(cost 0)
      Pushing a4(r57,l0)(cost 3328)
      Pushing a13(r51,l0)(cost 4092)
      Pushing a34(r69,l0)(cost 0)
      Pushing a33(r70,l0)(cost 0)
      Pushing a30(r74,l0)(cost 0)
      Pushing a29(r75,l0)(cost 0)
      Popping a29(r75,l0)  -- assign reg 8
      Popping a30(r74,l0)  -- assign reg 8
      Popping a33(r70,l0)  -- assign reg 8
      Popping a34(r69,l0)  -- assign reg 8
      Popping a13(r51,l0)  -- assign reg 2
      Popping a4(r57,l0)  -- assign reg 2
      Popping a27(r46,l0)  -- assign reg 10
      Popping a28(r44,l0)  -- assign reg 2
      Popping a31(r72,l0)  -- assign reg 2
      Popping a32(r43,l0)  -- assign reg 8
      Popping a0(r42,l0)  -- assign reg 2
      Popping a26(r79,l0)  -- assign reg 2
      Popping a24(r48,l0)  -- assign reg 10
      Popping a11(r100,l0)  -- assign reg 2
      Popping a12(r99,l0)  -- assign reg 8
      Popping a10(r82,l0)  -- assign reg 3
      Popping a15(r55,l0)  -- assign reg 8
      Popping a16(r95,l0)  -- assign reg 8
      Popping a20(r85,l0)  -- assign reg 2
      Popping a14(r81,l0)  -- assign reg 4
      Popping a21(r83,l0)  -- assign reg 2
      Popping a6(r108,l0)  -- assign reg 3
      Popping a1(r112,l0)  -- assign reg 3
      Popping a23(r49,l0)  -- assign reg 2
      Popping a25(r80,l0)  -- assign reg 2
      Popping a9(r104,l0)  -- assign reg 3
      Popping a17(r54,l0)  -- assign reg 9
      Popping a18(r53,l0)  -- assign reg 8
      Popping a19(r52,l0)  -- assign reg 8
      Popping a22(r84,l0)  -- assign reg 8
      Popping a2(r119,l0)  -- assign reg 2
      Popping a3(r118,l0)  -- assign reg 4
      Popping a5(r115,l0)  -- assign reg 4
      Popping a7(r65,l0)  -- assign reg 10
      Popping a8(r62,l0)  -- assign reg 10
Disposition:
    0:r42  l0     2   32:r43  l0     8   28:r44  l0     2   27:r46  l0    10
   24:r48  l0    10   23:r49  l0     2   13:r51  l0     2   19:r52  l0     8
   18:r53  l0     8   17:r54  l0     9   15:r55  l0     8    4:r57  l0     2
    8:r62  l0    10    7:r65  l0    10   34:r69  l0     8   33:r70  l0     8
   31:r72  l0     2   30:r74  l0     8   29:r75  l0     8   26:r79  l0     2
   25:r80  l0     2   14:r81  l0     4   10:r82  l0     3   21:r83  l0     2
   22:r84  l0     8   20:r85  l0     2   16:r95  l0     8   12:r99  l0     8
   11:r100 l0     2    9:r104 l0     3    6:r108 l0     3    1:r112 l0     3
    5:r115 l0     4    3:r118 l0     4    2:r119 l0     2
New iteration of spill/restore move
+++Costs: overall -4416, reg -4416, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


decodeBeacon

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11]
;;  ref usage 	r0={9d} r1={1d,19u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,11u} r8={8d} r9={8d} r10={16d,15u} r11={11d,3u} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,11u} r17={1d,10u} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r42={4d,1u} r43={1d,1u} r44={1d,1u} r46={1d,1u} r48={1d,2u} r49={1d,1u} r51={1d,2u,1e} r52={1d,1u} r53={1d,1u} r54={1d,1u} r55={1d,1u} r57={1d,2u,1e} r62={1d,1u} r65={1d,1u} r69={1d,1u} r70={1d,1u} r72={1d,1u} r74={1d,1u} r75={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,6u,2e} r82={1d,5u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r95={1d,1u} r99={1d,1u} r100={1d,1u} r104={1d,1u} r108={1d,3u,1e} r112={1d,3u,1e} r115={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 405{276d,122u,7e} in 78{70 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 69 70 72
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/f:SI 69)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC119") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 10 9 11 2 (set:SI (reg/f:SI 70)
        (plus:SI (reg/f:SI 69)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 69)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 11 10 13 2 (set (reg:SI 43 [ D.6240 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 70)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 70)
        (nil)))
(insn 13 11 14 2 (set (reg:SI 72)
        (const_int 17 [0x11])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 17 [0x11])
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:SI 43 [ D.6240 ])
                (reg:SI 72))
            (label_ref 20)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6240 ])
            (int_list:REG_BR_PROB 4877 (nil))))
 -> 20)
;;  succ:       3 [51.2%]  (FALLTHRU)
;;              4 [48.8%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 5123, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [51.2%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(1){ }u9(7){ }u10(16){ }u11(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 16 15 17 3 NOTE_INSN_DELETED)
(insn 17 16 18 3 (set (reg:SI 11 a11)
        (const_int 999 [0x3e7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 44 {movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC120") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 19 18 20 3 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:999 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [48.8%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 46 74 75
(code_label 20 19 21 4 171 "" [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 22 21 23 4 (var_location:SI d (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
            (const_int 332 [0x14c])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1000 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 74)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC119") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 24 23 25 4 (set:SI (reg/f:SI 75)
        (plus:SI (reg/f:SI 74)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 74)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 25 24 26 4 (set (reg:SI 44 [ D.6240 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 75)
                    (const_int 83 [0x53])) [0 MEM[(u1_t *)&LMIC + 339B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 75)
        (nil)))
(note 26 25 27 4 NOTE_INSN_DELETED)
(insn 27 26 28 4 (set (reg:SI 11 a11)
        (const_int 7 [0x7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 44 {movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC121") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn/i 29 28 30 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_crc16") [flags 0x3]  <function_decl 0x140efaca8 os_crc16>) [0 os_crc16 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 30 29 32 4 NOTE_INSN_DELETED)
(insn 32 30 33 4 (set (reg:SI 46 [ D.6240 ])
        (zero_extend:SI (reg:QI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1003 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 10 a10)
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:SI 44 [ D.6240 ])
                (reg:SI 46 [ D.6240 ]))
            (label_ref:SI 135)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1001 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6240 ])
        (expr_list:REG_DEAD (reg:SI 44 [ D.6240 ])
            (int_list:REG_BR_PROB 6218 (nil))))
 -> 135)
;;  succ:       8 [62.2%] 
;;              5 [37.8%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 3782, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [37.8%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(1){ }u31(7){ }u32(16){ }u33(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48 49 79 80
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 35 34 36 5 NOTE_INSN_DELETED)
(insn 36 35 37 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC121") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1010 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn/i 37 36 38 5 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1010 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 38 37 39 5 NOTE_INSN_DELETED)
(insn 39 38 40 5 (set (reg:SI 79)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC122") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1010 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 16777215 [0xffffff])
        (nil)))
(insn 40 39 41 5 (set (reg/v:SI 48 [ bcnnetid ])
        (and:SI (reg:SI 10 a10)
            (reg:SI 79))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1010 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 79)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(debug_insn 41 40 42 5 (var_location:SI bcnnetid (reg/v:SI 48 [ bcnnetid ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1010 -1
     (nil))
(insn 42 41 43 5 (set (reg/f:SI 80)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC119") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1011 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 43 42 44 5 (set (reg:SI 49 [ D.6242 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 80)
                (const_int 168 [0xa8])) [0 LMIC.netid+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1011 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 80)
        (nil)))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg/v:SI 48 [ bcnnetid ])
                (reg:SI 49 [ D.6242 ]))
            (label_ref:SI 139)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1011 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 49 [ D.6242 ])
        (expr_list:REG_DEAD (reg/v:SI 48 [ bcnnetid ])
            (int_list:REG_BR_PROB 968 (nil))))
 -> 139)
;;  succ:       9 [9.7%] 
;;              6 [90.3%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 3416, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [90.3%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(1){ }u45(7){ }u46(16){ }u47(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 51 52 53 54 55 57 81 82 83 84 85 95 99 100 104
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:SI 81)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC119") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 47 46 49 6 (set:SI (reg/f:SI 82)
        (plus:SI (reg/f:SI 81)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 49 47 150 6 (set (reg:QI 84 [ LMIC.bcninfo.flags ])
        (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 46 {movqi_internal}
     (nil))
(insn 150 49 50 6 (set (reg:QI 83)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 50 150 51 6 (set (reg:SI 85)
        (and:SI (subreg:SI (reg:QI 84 [ LMIC.bcninfo.flags ]) 0)
            (subreg:SI (reg:QI 83) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 84 [ LMIC.bcninfo.flags ])
        (expr_list:REG_DEAD (reg:QI 83)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:QI 84 [ LMIC.bcninfo.flags ]) 0)
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 51 50 54 6 (set (reg:SI 51 [ D.6240 ])
        (zero_extend:SI (subreg:QI (reg:SI 85) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 54 51 56 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg/s/v:QI (reg:SI 51 [ D.6240 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1014 46 {movqi_internal}
     (nil))
(insn 56 54 59 6 (set (reg:SI 52 [ D.6243 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 81)
                    (const_int 13 [0xd])) [0 LMIC.snr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1016 34 {zero_extendqisi2}
     (nil))
(insn 59 56 61 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 153 [0x99])) [0 LMIC.bcninfo.snr+0 S1 A8])
        (subreg/s/v:QI (reg:SI 52 [ D.6243 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1016 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6243 ])
        (nil)))
(insn 61 59 64 6 (set (reg:SI 53 [ D.6243 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 81)
                    (const_int 12 [0xc])) [0 LMIC.rssi+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1017 34 {zero_extendqisi2}
     (nil))
(insn 64 61 66 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 152 [0x98])) [0 LMIC.bcninfo.rssi+0 S1 A32])
        (subreg/s/v:QI (reg:SI 53 [ D.6243 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1017 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 53 [ D.6243 ])
        (nil)))
(insn 66 64 67 6 (set (reg:SI 54 [ D.6239 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 81)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1018 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 81)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (nil)))
(insn 67 66 68 6 (set (reg:SI 95)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC123") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1018 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -9024 [0xffffffffffffdcc0])
        (nil)))
(insn 68 67 70 6 (set (reg:SI 55 [ D.6239 ])
        (plus:SI (reg:SI 54 [ D.6239 ])
            (reg:SI 95))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1018 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg:SI 54 [ D.6239 ])
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 81)
                        (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
                (nil)))))
(insn 70 68 71 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 81)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (reg:SI 55 [ D.6239 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1018 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 55 [ D.6239 ])
        (nil)))
(note 71 70 72 6 NOTE_INSN_DELETED)
(insn 72 71 73 6 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC124") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1019 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 335 [0x14f])))
        (nil)))
(call_insn/i 73 72 74 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1019 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 74 73 76 6 NOTE_INSN_DELETED)
(insn 76 74 77 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 81)
                (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1019 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 81)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 77 76 78 6 (set (reg:QI 99)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1020 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 78 77 79 6 (set (reg:SI 100)
        (ior:SI (reg:SI 51 [ D.6240 ])
            (subreg:SI (reg:QI 99) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1020 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 99)
        (expr_list:REG_DEAD (reg:SI 51 [ D.6240 ])
            (expr_list:REG_EQUAL (ior:SI (reg:SI 51 [ D.6240 ])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 79 78 82 6 (set (reg:SI 57 [ D.6240 ])
        (zero_extend:SI (subreg:QI (reg:SI 100) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1020 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 82 79 83 6 (set (mem/j/c:QI (plus:SI (reg/f:SI 82)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg/s/v:QI (reg:SI 57 [ D.6240 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1020 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 82)
        (nil)))
(note 83 82 84 6 NOTE_INSN_DELETED)
(insn 84 83 85 6 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC125") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 347 [0x15b])))
        (nil)))
(call_insn/i 85 84 86 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf2") [flags 0x3]  <function_decl 0x140efaaf8 os_rlsbf2>) [0 os_rlsbf2 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 86 85 88 6 (set (reg:SI 104)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 88 86 89 6 NOTE_INSN_DELETED)
(insn 89 88 90 6 (set (reg:SI 11 a11)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 44 {movsi_internal}
     (nil))
(insn 90 89 91 6 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC121") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn/i 91 90 92 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_crc16") [flags 0x3]  <function_decl 0x140efaca8 os_crc16>) [0 os_crc16 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 92 91 94 6 NOTE_INSN_DELETED)
(jump_insn 94 92 95 6 (set (pc)
        (if_then_else (ne (reg:SI 104)
                (reg:SI 10 a10))
            (label_ref:SI 143)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1023 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (int_list:REG_BR_PROB 5588 (nil))))
 -> 143)
;;  succ:       10 [55.9%] 
;;              7 [44.1%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57

;; basic block 7, loop depth 0, count 0, freq 1507, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [44.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(1){ }u91(7){ }u92(16){ }u93(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 62 65 108 112 115 118 119
(note 95 94 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 96 95 97 7 NOTE_INSN_DELETED)
(insn 97 96 98 7 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC126") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1026 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(call_insn/i 98 97 99 7 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1026 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 99 98 101 7 NOTE_INSN_DELETED)
(insn 101 99 102 7 (set (reg:SI 62 [ D.6239 ])
        (ashiftrt:SI (reg:SI 10 a10)
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1026 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 102 101 103 7 (set (reg/f:SI 108)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC119") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1026 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 103 102 104 7 (set (mem/j/c:SI (plus:SI (reg/f:SI 108)
                (const_int 420 [0x1a4])) [0 LMIC.bcninfo.lat+0 S4 A32])
        (reg:SI 62 [ D.6239 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1026 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6239 ])
        (nil)))
(note 104 103 105 7 NOTE_INSN_DELETED)
(insn 105 104 106 7 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC127") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1027 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 343 [0x157])))
        (nil)))
(call_insn/i 106 105 107 7 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1027 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 107 106 109 7 NOTE_INSN_DELETED)
(insn 109 107 111 7 (set (reg:SI 65 [ D.6239 ])
        (ashiftrt:SI (reg:SI 10 a10)
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1027 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 108)
                    (const_int 424 [0x1a8])) [0 LMIC.bcninfo.lon+0 S4 A32])
            (nil))))
(insn 111 109 113 7 (set (mem/j/c:SI (plus:SI (reg/f:SI 108)
                (const_int 424 [0x1a8])) [0 LMIC.bcninfo.lon+0 S4 A32])
        (reg:SI 65 [ D.6239 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1027 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6239 ])
        (nil)))
(insn 113 111 116 7 (set:SI (reg/f:SI 112)
        (plus:SI (reg/f:SI 108)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1028 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 116 113 117 7 (set (reg:QI 115 [ MEM[(u1_t *)&LMIC + 340B] ])
        (mem/c:QI (plus:SI (reg/f:SI 112)
                (const_int 84 [0x54])) [0 MEM[(u1_t *)&LMIC + 340B]+0 S1 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1028 46 {movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:SI (reg/f:SI 112)
                (const_int 84 [0x54])) [0 MEM[(u1_t *)&LMIC + 340B]+0 S1 A32])
        (nil)))
(insn 117 116 120 7 (set (mem/j/c:QI (plus:SI (reg/f:SI 112)
                (const_int 160 [0xa0])) [0 LMIC.bcninfo.info+0 S1 A32])
        (reg:QI 115 [ MEM[(u1_t *)&LMIC + 340B] ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1028 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 115 [ MEM[(u1_t *)&LMIC + 340B] ])
        (nil)))
(insn 120 117 121 7 (set (reg:QI 118)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1029 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 121 120 122 7 (set (reg:SI 119)
        (ior:SI (reg:SI 57 [ D.6240 ])
            (subreg:SI (reg:QI 118) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1029 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 118)
        (expr_list:REG_DEAD (reg:SI 57 [ D.6240 ])
            (expr_list:REG_EQUAL (ior:SI (reg:SI 57 [ D.6240 ])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 122 121 6 7 (set (mem/j/c:QI (plus:SI (reg/f:SI 112)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg:QI (reg:SI 119) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1029 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg/f:SI 112)
            (nil))))
(insn 6 122 144 7 (set (reg:SI 42 [ D.6239 ])
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1030 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(jump_insn 144 6 145 7 (set (pc)
        (label_ref 123)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1030 78 {jump}
     (nil)
 -> 123)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 145 144 135)
;; basic block 8, loop depth 0, count 0, freq 6218, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       4 [62.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u117(1){ }u118(7){ }u119(16){ }u120(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 135 145 134 8 173 "" [1 uses])
(note 134 135 3 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 3 134 146 8 (set (reg:SI 42 [ D.6239 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1008 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 146 3 147 8 (set (pc)
        (label_ref 123)) 78 {jump}
     (nil)
 -> 123)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 147 146 139)
;; basic block 9, loop depth 0, count 0, freq 366, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5 [9.7%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u121(1){ }u122(7){ }u123(16){ }u124(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 139 147 138 9 174 "" [1 uses])
(note 138 139 4 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 4 138 148 9 (set (reg:SI 42 [ D.6239 ])
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1012 44 {movsi_internal}
     (nil))
(jump_insn 148 4 149 9 (set (pc)
        (label_ref 123)) 78 {jump}
     (nil)
 -> 123)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 149 148 143)
;; basic block 10, loop depth 0, count 0, freq 1909, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [55.9%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u125(1){ }u126(7){ }u127(16){ }u128(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 143 149 142 10 175 "" [1 uses])
(note 142 143 5 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 5 142 123 10 (set (reg:SI 42 [ D.6239 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1024 44 {movsi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 1, flags: (RTL)
;;  pred:       8 [100.0%] 
;;              7 [100.0%] 
;;              10 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u129(1){ }u130(7){ }u131(16){ }u132(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 123 5 124 11 172 "" [3 uses])
(note 124 123 129 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 129 124 130 11 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6239 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1031 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6239 ])
        (nil)))
(insn 130 129 0 11 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1031 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function getSensitivity (getSensitivity, funcdef_no=44, decl_uid=3131, cgraph_uid=44, symbol_order=49)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 37.
verify found no changes in insn with uid = 37.
deleting insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 55 uninteresting
Reg 53 uninteresting
Reg 61: local to bb 2 def dominates all uses has unique first use
Reg 62 uninteresting
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 46 uninteresting
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 67 uninteresting
Examining insn 16, def for 43
  all ok
Found def insn 26 for 44 to be not moveable
Examining insn 14, def for 61
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 62: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 37 (nil))

Pass 0 for finding pseudo/allocno costs

    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r67,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r62,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r61,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r51,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r55,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a6(r62,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a7(r61,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r53,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 37(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 21(l0): point = 10
   Insn 16(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 10(l0): point = 18
   Insn 3(l0): point = 20
 a0(r67): [3..4]
 a1(r44): [3..6]
 a2(r46): [7..8]
 a3(r51): [9..10]
 a4(r43): [9..12]
 a5(r55): [11..20]
 a6(r62): [13..14]
 a7(r61): [13..16]
 a8(r53): [17..18]
Compressing live ranges: from 23 to 12 - 52%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r44): [0..1]
 a2(r46): [2..3]
 a3(r51): [4..5]
 a4(r43): [4..7]
 a5(r55): [6..11]
 a6(r62): [8..9]
 a7(r61): [8..9]
 a8(r53): [10..11]
+++Allocating 64 bytes for conflict table (uncompressed size 72)
;; a0(r67,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a0(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts:;; a3(r51,l0) conflicts: a4(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r43,l0) conflicts: a3(r51,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r55,l0) conflicts: a4(r43,l0) a6(r62,l0) a7(r61,l0) a8(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r62,l0) conflicts: a5(r55,l0) a7(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r61,l0) conflicts: a5(r55,l0) a6(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r53,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r61)<->a8(r53)@250:shuffle
  cp1:a4(r43)<->a6(r62)@125:shuffle
  cp2:a4(r43)<->a7(r61)@125:shuffle
  cp3:a3(r51)<->a5(r55)@125:shuffle
  cp4:a2(r46)<->a3(r51)@125:shuffle
  cp5:a2(r46)<->a4(r43)@125:shuffle
  pref0:a5(r55)<-hr2@125
  pref1:a0(r67)<-hr2@125
  pref2:a1(r44)<-hr2@125
  regions=1, blocks=3, points=12
    allocnos=9 (big 0), copies=6, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r67 1r44 2r46 3r51 4r43 5r55 6r62 7r61 8r53
    modified regnos: 43 44 46 51 53 55 61 62 67
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@145500
      Allocno a0r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a7r61-a8r53 (freq=250):
        Result (freq=5000): a7r61(2000) a8r53(3000)
      Forming thread by copy 1:a4r43-a6r62 (freq=125):
        Result (freq=4000): a4r43(2000) a6r62(2000)
      Forming thread by copy 3:a3r51-a5r55 (freq=125):
        Result (freq=5000): a3r51(2000) a5r55(3000)
      Forming thread by copy 4:a2r46-a3r51 (freq=125):
        Result (freq=7000): a2r46(2000) a3r51(2000) a5r55(3000)
      Pushing a1(r44,l0)(cost 0)
      Pushing a0(r67,l0)(cost 0)
      Pushing a6(r62,l0)(cost 0)
      Pushing a4(r43,l0)(cost 0)
      Pushing a7(r61,l0)(cost 0)
      Pushing a8(r53,l0)(cost 0)
      Pushing a3(r51,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Pushing a5(r55,l0)(cost 0)
      Popping a5(r55,l0)  -- assign reg 2
      Popping a2(r46,l0)  -- assign reg 2
      Popping a3(r51,l0)  -- assign reg 2
      Popping a8(r53,l0)  -- assign reg 8
      Popping a7(r61,l0)  -- assign reg 8
      Popping a4(r43,l0)  -- assign reg 8
      Popping a6(r62,l0)  -- assign reg 9
      Popping a0(r67,l0)  -- assign reg 2
      Popping a1(r44,l0)  -- assign reg 8
Disposition:
    4:r43  l0     8    1:r44  l0     8    2:r46  l0     2    3:r51  l0     2
    8:r53  l0     8    5:r55  l0     2    7:r61  l0     8    6:r62  l0     9
    0:r67  l0     2
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getSensitivity

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r43={1d,2u} r44={1d,1u} r46={1d,1u} r51={1d,2u} r53={1d,2u} r55={1d,4u} r61={1d,1u} r62={1d,1u} r67={1d,1u} 
;;    total ref usage 45{20d,25u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 2 [a2] 43 44 46 51 53 55 61 62 67
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 55 [ rps ])
        (zero_extend:SI (reg:HI 2 a2 [ rps ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:277 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ rps ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 9 2 (var_location:HI params (subreg:HI (reg/v:SI 55 [ rps ]) 0)) -1
     (nil))
(note 9 7 10 2 NOTE_INSN_DELETED)
(insn 10 9 13 2 (set (reg:SI 53 [ D.6252 ])
        (and:SI (reg/v:SI 55 [ rps ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:347 30 {andsi3}
     (nil))
(note 13 10 14 2 NOTE_INSN_DELETED)
(insn 14 13 15 2 (set (reg:SI 61)
        (plus:SI (mult:SI (reg:SI 53 [ D.6252 ])
                (const_int 2 [0x2]))
            (reg:SI 53 [ D.6252 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:278 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 53 [ D.6252 ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 62)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC128") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:278 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_SENSITIVITY") [flags 0x2]  <var_decl 0x140ed9f30 constant_table_SENSITIVITY>)
        (nil)))
(insn 16 15 17 2 (set (reg/f:SI 43 [ D.6245 ])
        (plus:SI (reg:SI 61)
            (reg/f:SI 62))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:278 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 62)
        (expr_list:REG_DEAD (reg:SI 61)
            (nil))))
(debug_insn 17 16 18 2 (var_location:HI params (subreg:HI (reg/v:SI 55 [ rps ]) 0)) -1
     (nil))
(note 18 17 20 2 NOTE_INSN_DELETED)
(note 20 18 21 2 NOTE_INSN_DELETED)
(insn 21 20 23 2 (set (reg:SI 51 [ D.6251 ])
        (zero_extract:SI (reg/v:SI 55 [ rps ])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:349 38 {extzv_internal}
     (expr_list:REG_DEAD (reg/v:SI 55 [ rps ])
        (nil)))
(debug_insn 23 21 24 2 (var_location:SI table (reg/f:SI 43 [ D.6245 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:278 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI index (reg:SI 51 [ D.6251 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:278 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 46 [ D.6248 ])
        (plus:SI (reg/f:SI 43 [ D.6245 ])
            (reg:SI 51 [ D.6251 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 51 [ D.6251 ])
        (expr_list:REG_DEAD (reg/f:SI 43 [ D.6245 ])
            (nil))))
(insn 26 25 29 2 (set (reg:SI 44 [ D.6246 ])
        (zero_extend:SI (mem:QI (reg/f:SI 46 [ D.6248 ]) [0 *_7+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 46 [ D.6248 ])
        (nil)))
(note 29 26 37 2 NOTE_INSN_DELETED)
(insn 37 29 34 2 (set (reg:SI 67)
        (const_int -141 [0xffffffffffffff73])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:279 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -141 [0xffffffffffffff73])
        (nil)))
(insn 34 37 35 2 (set (reg/i:SI 2 a2)
        (plus:SI (reg:SI 44 [ D.6246 ])
            (reg:SI 67))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:279 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 67)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6246 ])
            (nil))))
(insn 35 34 0 2 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:279 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function calcAirTime (calcAirTime, funcdef_no=45, decl_uid=3129, cgraph_uid=45, symbol_order=50)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 25 count 20 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: def dominates all uses has unique first use
Reg 96 uninteresting (no unique first use)
Reg 85: def dominates all uses has unique first use
Reg 63 uninteresting
Reg 51: local to bb 3 def dominates all uses has unique first use
Reg 103 uninteresting
Reg 52: local to bb 3 def dominates all uses has unique first use
Reg 105 uninteresting
Reg 128 uninteresting
Reg 107: local to bb 3 def dominates all uses has unique first use
Reg 108 uninteresting
Reg 54 uninteresting
Reg 110 uninteresting
Reg 56: def dominates all uses has unique first use
Reg 111 uninteresting
Reg 57: def dominates all uses has unique first use
Reg 61 uninteresting
Reg 62: def dominates all uses has unique first use
Reg 64: def dominates all uses has unique first use
Reg 66 uninteresting
Reg 68 uninteresting
Reg 69 uninteresting
Reg 70: local to bb 13 def dominates all uses has unique first use
Reg 92 uninteresting
Reg 72 uninteresting
Reg 73 uninteresting
Reg 74 uninteresting
Reg 75: def dominates all uses has unique first use
Reg 118 uninteresting
Reg 120 uninteresting
Reg 78: local to bb 16 def dominates all uses has unique first use
Reg 121 uninteresting
Reg 80: local to bb 18 def dominates all uses has unique first use
Reg 122 uninteresting
Reg 81: local to bb 18 def dominates all uses has unique first use
Reg 123 uninteresting
Reg 124 uninteresting
Reg 125 uninteresting
Reg 83 uninteresting
Examining insn 30, def for 51
  all ok
Examining insn 32, def for 52
  all ok
Reg 56 not local to one basic block
Reg 57 not local to one basic block
Reg 62 not local to one basic block
Reg 64 not local to one basic block
Examining insn 84, def for 70
  all ok
Reg 75 not local to one basic block
Examining insn 110, def for 78
  all ok
Examining insn 119, def for 80
  all ok
Examining insn 121, def for 81
  all ok
Reg 85 not local to one basic block
Reg 94 not local to one basic block
Examining insn 37, def for 107
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;; 2 succs { 3 4 }
;; 3 succs { 19 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 103: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 105: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 111 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 120 (nil))

Pass 0 for finding pseudo/allocno costs

    r128: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r128,l0) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r125,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r124,l0) best AR_REGS, allocno AR_REGS
    r123: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r123,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r122,l0) best AR_REGS, allocno AR_REGS
    r121: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r121,l0) best AR_REGS, allocno AR_REGS
    r120: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r120,l0) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r118,l0) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r111,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r110,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r108,l0) best AR_REGS, allocno AR_REGS
    r107: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r107,l0) best AR_REGS, allocno AR_REGS
    r105: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r105,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r103,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r96,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r94,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r92,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r85,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r83,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r81,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r80,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r78,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r73,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r72,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r68,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r66,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r62,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r61,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r56,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r51,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r44,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:9760,9760
  a2(r83,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a3(r125,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a4(r81,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a5(r124,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a6(r123,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a7(r122,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a8(r80,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a9(r42,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:9760,9760
  a10(r75,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a11(r78,l0) costs: ACC_REG:1830,1830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9760,9760 MEM:2440,2440
  a12(r121,l0) costs: ACC_REG:1830,1830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9760,9760 MEM:0,0
  a13(r120,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a14(r118,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a15(r85,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:6440,6440
  a16(r63,l0) costs: ACC_REG:11490,11490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:61280,61280 MEM:15320,15320
  a17(r74,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a18(r43,l0) costs: ACC_REG:3657,3657 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19504,19504 MEM:4876,4876
  a19(r73,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a20(r72,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a21(r70,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a22(r92,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a23(r94,l0) costs: ACC_REG:13995,13995 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:74640,74640 MEM:18660,18660
  a24(r57,l0) costs: ACC_REG:4500,4500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24000,24000 MEM:6000,6000
  a25(r69,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a26(r68,l0) costs: ACC_REG:2670,2670 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14240,14240 MEM:3560,3560
  a27(r66,l0) costs: ACC_REG:4995,4995 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26640,26640 MEM:6660,6660
  a28(r48,l0) costs: ACC_REG:6405,6405 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:34160,34160 MEM:8540,8540
  a29(r64,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a30(r62,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a31(r47,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a32(r61,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a33(r56,l0) costs: ACC_REG:5490,5490 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29280,29280 MEM:7320,7320
  a34(r96,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a35(r111,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a36(r46,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a37(r110,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a38(r54,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a39(r108,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a40(r107,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a41(r52,l0) costs: ACC_REG:3510,3510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18720,18720 MEM:4680,4680
  a42(r128,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a43(r105,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:0,0
  a44(r103,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:0,0
  a45(r51,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120

   Insn 135(l0): point = 0
   Insn 134(l0): point = 2
   Insn 127(l0): point = 5
   Insn 126(l0): point = 7
   Insn 124(l0): point = 9
   Insn 123(l0): point = 11
   Insn 122(l0): point = 13
   Insn 121(l0): point = 15
   Insn 120(l0): point = 17
   Insn 119(l0): point = 19
   Insn 13(l0): point = 22
   Insn 161(l0): point = 25
   Insn 14(l0): point = 27
   Insn 112(l0): point = 29
   Insn 111(l0): point = 31
   Insn 110(l0): point = 33
   Insn 108(l0): point = 36
   Insn 105(l0): point = 38
   Insn 104(l0): point = 40
   Insn 102(l0): point = 42
   Insn 100(l0): point = 44
   Insn 99(l0): point = 46
   Insn 12(l0): point = 49
   Insn 159(l0): point = 52
   Insn 94(l0): point = 54
   Insn 92(l0): point = 56
   Insn 91(l0): point = 58
   Insn 90(l0): point = 60
   Insn 84(l0): point = 62
   Insn 83(l0): point = 64
   Insn 82(l0): point = 66
   Insn 79(l0): point = 69
   Insn 77(l0): point = 71
   Insn 11(l0): point = 74
   Insn 73(l0): point = 77
   Insn 71(l0): point = 79
   Insn 68(l0): point = 81
   Insn 10(l0): point = 84
   Insn 157(l0): point = 87
   Insn 9(l0): point = 89
   Insn 64(l0): point = 92
   Insn 58(l0): point = 94
   Insn 57(l0): point = 96
   Insn 54(l0): point = 98
   Insn 53(l0): point = 100
   Insn 8(l0): point = 103
   Insn 155(l0): point = 106
   Insn 7(l0): point = 108
   Insn 49(l0): point = 111
   Insn 47(l0): point = 113
   Insn 46(l0): point = 115
   Insn 44(l0): point = 117
   Insn 153(l0): point = 120
   Insn 39(l0): point = 122
   Insn 38(l0): point = 124
   Insn 37(l0): point = 126
   Insn 35(l0): point = 128
   Insn 33(l0): point = 130
   Insn 32(l0): point = 132
   Insn 31(l0): point = 134
   Insn 30(l0): point = 136
   Insn 28(l0): point = 139
   Insn 26(l0): point = 141
   Insn 21(l0): point = 143
   Insn 5(l0): point = 145
   Insn 3(l0): point = 147
 a0(r45): [120..122] [3..5]
 a1(r44): [25..29] [6..22]
 a2(r83): [6..7]
 a3(r125): [8..9]
 a4(r81): [8..15]
 a5(r124): [10..11]
 a6(r123): [12..13]
 a7(r122): [16..17]
 a8(r80): [16..19]
 a9(r42): [34..38] [20..27]
 a10(r75): [20..44]
 a11(r78): [30..33]
 a12(r121): [30..31]
 a13(r120): [39..40]
 a14(r118): [41..42]
 a15(r85): [139..143] [43..119]
 a16(r63): [139..141] [43..119]
 a17(r74): [45..46]
 a18(r43): [52..54] [47..49]
 a19(r73): [55..56]
 a20(r72): [57..58]
 a21(r70): [57..62]
 a22(r92): [59..60]
 a23(r94): [139..147] [61..119]
 a24(r57): [63..98]
 a25(r69): [63..64]
 a26(r68): [65..66]
 a27(r66): [67..71]
 a28(r48): [77..79] [72..74]
 a29(r64): [72..81]
 a30(r62): [82..94]
 a31(r47): [87..89] [82..84]
 a32(r61): [95..96]
 a33(r56): [97..113]
 a34(r96): [137..145] [97..119]
 a35(r111): [99..100]
 a36(r46): [106..108] [101..103]
 a37(r110): [114..115]
 a38(r54): [116..117]
 a39(r108): [123..124]
 a40(r107): [123..126]
 a41(r52): [125..132]
 a42(r128): [127..128]
 a43(r105): [129..130]
 a44(r103): [133..134]
 a45(r51): [133..136]
Compressing live ranges: from 150 to 82 - 54%
Ranges after the compression:
 a0(r45): [68..69] [0..1]
 a1(r44): [2..15]
 a2(r83): [2..3]
 a3(r125): [4..5]
 a4(r81): [4..9]
 a5(r124): [6..7]
 a6(r123): [8..9]
 a7(r122): [10..11]
 a8(r80): [10..11]
 a9(r42): [18..19] [12..15]
 a10(r75): [12..25]
 a11(r78): [16..17]
 a12(r121): [16..17]
 a13(r120): [20..21]
 a14(r118): [22..23]
 a15(r85): [80..81] [24..67]
 a16(r63): [80..81] [24..67]
 a17(r74): [26..27]
 a18(r43): [28..31]
 a19(r73): [32..33]
 a20(r72): [34..35]
 a21(r70): [34..39]
 a22(r92): [36..37]
 a23(r94): [80..81] [38..67]
 a24(r57): [40..57]
 a25(r69): [40..41]
 a26(r68): [42..43]
 a27(r66): [44..45]
 a28(r48): [46..49]
 a29(r64): [46..49]
 a30(r62): [50..53]
 a31(r47): [50..53]
 a32(r61): [54..55]
 a33(r56): [56..63]
 a34(r96): [80..81] [56..67]
 a35(r111): [58..59]
 a36(r46): [60..63]
 a37(r110): [64..65]
 a38(r54): [66..67]
 a39(r108): [70..71]
 a40(r107): [70..73]
 a41(r52): [72..77]
 a42(r128): [74..75]
 a43(r105): [76..77]
 a44(r103): [78..79]
 a45(r51): [78..79]
+++Allocating 368 bytes for conflict table (uncompressed size 368)
;; a0(r45,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r44,l0) conflicts: a2(r83,l0) a3(r125,l0) a4(r81,l0) a5(r124,l0) a6(r123,l0) a7(r122,l0) a8(r80,l0) a9(r42,l0) a10(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r83,l0) conflicts: a1(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r125,l0) conflicts: a1(r44,l0) a4(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r81,l0) conflicts: a1(r44,l0) a3(r125,l0) a5(r124,l0) a6(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r124,l0) conflicts: a1(r44,l0) a4(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r123,l0) conflicts: a1(r44,l0) a4(r81,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r122,l0) conflicts: a1(r44,l0) a8(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r80,l0) conflicts: a1(r44,l0) a7(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r42,l0) conflicts: a1(r44,l0) a10(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r75,l0) conflicts: a1(r44,l0) a9(r42,l0) a11(r78,l0) a12(r121,l0) a13(r120,l0) a14(r118,l0) a15(r85,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r78,l0) conflicts: a10(r75,l0) a12(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r121,l0) conflicts: a10(r75,l0) a11(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r120,l0) conflicts: a10(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r118,l0) conflicts: a10(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r85,l0) conflicts: a10(r75,l0) a16(r63,l0) a17(r74,l0) a18(r43,l0) a19(r73,l0) a20(r72,l0) a21(r70,l0) a22(r92,l0) a23(r94,l0) a25(r69,l0) a24(r57,l0) a26(r68,l0) a27(r66,l0) a28(r48,l0) a29(r64,l0) a30(r62,l0) a31(r47,l0) a32(r61,l0) a33(r56,l0) a34(r96,l0) a35(r111,l0) a36(r46,l0) a37(r110,l0) a38(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r63,l0) conflicts: a10(r75,l0) a15(r85,l0) a17(r74,l0) a18(r43,l0) a19(r73,l0) a20(r72,l0) a21(r70,l0) a22(r92,l0) a23(r94,l0) a25(r69,l0) a24(r57,l0) a26(r68,l0) a27(r66,l0) a28(r48,l0) a29(r64,l0) a30(r62,l0) a31(r47,l0) a32(r61,l0) a33(r56,l0) a34(r96,l0) a35(r111,l0) a36(r46,l0) a37(r110,l0) a38(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r74,l0) conflicts: a15(r85,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r43,l0) conflicts: a15(r85,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r73,l0) conflicts: a15(r85,l0) a16(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r72,l0) conflicts: a15(r85,l0) a16(r63,l0) a21(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r70,l0) conflicts: a15(r85,l0) a16(r63,l0) a20(r72,l0) a22(r92,l0) a23(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r92,l0) conflicts: a15(r85,l0) a16(r63,l0) a21(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r94,l0) conflicts: a15(r85,l0) a16(r63,l0) a21(r70,l0) a25(r69,l0) a24(r57,l0) a26(r68,l0) a27(r66,l0) a28(r48,l0) a29(r64,l0) a30(r62,l0) a31(r47,l0) a32(r61,l0) a33(r56,l0) a34(r96,l0) a35(r111,l0) a36(r46,l0) a37(r110,l0) a38(r54,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3

;; a24(r57,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a25(r69,l0) a26(r68,l0) a27(r66,l0) a28(r48,l0) a29(r64,l0) a30(r62,l0) a31(r47,l0) a32(r61,l0) a33(r56,l0) a34(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r69,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r68,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r66,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r48,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a29(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r64,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a28(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r62,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a31(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r47,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a30(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r61,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r56,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a34(r96,l0) a35(r111,l0) a36(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r96,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a24(r57,l0) a33(r56,l0) a35(r111,l0) a36(r46,l0) a37(r110,l0) a38(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r111,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a33(r56,l0) a34(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r46,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a33(r56,l0) a34(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r110,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a34(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r54,l0) conflicts: a15(r85,l0) a16(r63,l0) a23(r94,l0) a34(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r108,l0) conflicts: a40(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r107,l0) conflicts: a39(r108,l0) a41(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r52,l0) conflicts: a40(r107,l0) a42(r128,l0) a43(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r128,l0) conflicts: a41(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r105,l0) conflicts: a41(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r103,l0) conflicts: a45(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r51,l0) conflicts: a44(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a8(r80)<->a10(r75)@76:shuffle
  cp1:a8(r80)<->a9(r42)@76:shuffle
  cp2:a4(r81)<->a7(r122)@76:shuffle
  cp3:a4(r81)<->a8(r80)@76:shuffle
  cp4:a5(r124)<->a6(r123)@76:shuffle
  cp5:a3(r125)<->a5(r124)@76:shuffle
  cp6:a2(r83)<->a3(r125)@76:shuffle
  cp7:a2(r83)<->a4(r81)@76:shuffle
  cp8:a0(r45)<->a2(r83)@76:shuffle
  cp9:a0(r45)<->a1(r44)@76:shuffle
  cp10:a9(r42)<->a11(r78)@38:shuffle
  cp11:a1(r44)<->a12(r121)@38:shuffle
  cp12:a1(r44)<->a11(r78)@38:shuffle
  cp13:a17(r74)<->a18(r43)@76:shuffle
  cp14:a10(r75)<->a17(r74)@76:shuffle
  cp15:a14(r118)<->a16(r63)@76:shuffle
  cp16:a14(r118)<->a15(r85)@76:shuffle
  cp17:a13(r120)<->a14(r118)@76:shuffle
  cp18:a9(r42)<->a13(r120)@76:shuffle
  cp19:a26(r68)<->a27(r66)@55:shuffle
  cp20:a25(r69)<->a26(r68)@55:shuffle
  cp21:a21(r70)<->a25(r69)@55:shuffle
  cp22:a21(r70)<->a24(r57)@55:shuffle
  cp23:a22(r92)<->a23(r94)@55:shuffle
  cp24:a20(r72)<->a22(r92)@55:shuffle
  cp25:a19(r73)<->a20(r72)@55:shuffle
  cp26:a19(r73)<->a21(r70)@55:shuffle
  cp27:a18(r43)<->a19(r73)@55:shuffle
  cp28:a27(r66)<->a29(r64)@76:shuffle
  cp29:a27(r66)<->a28(r48)@76:shuffle
  cp30:a29(r64)<->a30(r62)@76:shuffle
  cp31:a29(r64)<->a31(r47)@76:shuffle
  cp32:a35(r111)<->a36(r46)@76:shuffle
  cp33:a24(r57)<->a35(r111)@76:shuffle
  cp34:a32(r61)<->a34(r96)@76:shuffle
  cp35:a32(r61)<->a33(r56)@76:shuffle
  cp36:a30(r62)<->a32(r61)@76:shuffle
  cp37:a37(r110)<->a38(r54)@76:shuffle
  cp38:a33(r56)<->a37(r110)@76:shuffle
  cp39:a34(r96)<->a45(r51)@48:shuffle
  cp40:a41(r52)<->a44(r103)@48:shuffle
  cp41:a41(r52)<->a45(r51)@48:shuffle
  cp42:a42(r128)<->a43(r105)@48:shuffle
  cp43:a40(r107)<->a42(r128)@48:shuffle
  cp44:a39(r108)<->a41(r52)@48:shuffle
  cp45:a0(r45)<->a40(r107)@48:shuffle
  cp46:a0(r45)<->a39(r108)@48:shuffle
  pref0:a0(r45)<-hr2@2000
  pref1:a23(r94)<-hr2@125
  pref2:a34(r96)<-hr3@125
  regions=1, blocks=20, points=82
    allocnos=46 (big 0), copies=47, conflicts=0, ranges=52

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r45 1r44 2r83 3r125 4r81 5r124 6r123 7r122 8r80 9r42 10r75 11r78 12r121 13r120 14r118 15r85 16r63 17r74 18r43 19r73 20r72 21r70 22r92 23r94 24r57 25r69 26r68 27r66 28r48 29r64 30r62 31r47 32r61 33r56 34r96 35r111 36r46 37r110 38r54 39r108 40r107 41r52 42r128 43r105 44r103 45r51
    modified regnos: 42 43 44 45 46 47 48 51 52 54 56 57 61 62 63 64 66 68 69 70 72 73 74 75 78 80 81 83 85 92 94 96 103 105 107 108 110 111 118 120 121 122 123 124 125 128
    border:
    Pressure: AR_REGS=6
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@447452
          2:( 2 4-15)@37820
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r123 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r121 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r120 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r118 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r94 of AR_REGS(14) has 13 avail. regs  2 4-15, node:  2 4-15 (confl regs =  0 1 3 16-34)
      Allocno a24r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r128 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r105 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a8r80-a10r75 (freq=76):
        Result (freq=2440): a8r80(1220) a10r75(1220)
      Forming thread by copy 2:a4r81-a7r122 (freq=76):
        Result (freq=2440): a4r81(1220) a7r122(1220)
      Forming thread by copy 4:a5r124-a6r123 (freq=76):
        Result (freq=2440): a5r124(1220) a6r123(1220)
      Forming thread by copy 5:a3r125-a5r124 (freq=76):
        Result (freq=3660): a3r125(1220) a5r124(1220) a6r123(1220)
      Forming thread by copy 6:a2r83-a3r125 (freq=76):
        Result (freq=4880): a2r83(1220) a3r125(1220) a5r124(1220) a6r123(1220)
      Forming thread by copy 8:a0r45-a2r83 (freq=76):
        Result (freq=6880): a0r45(2000) a2r83(1220) a3r125(1220) a5r124(1220) a6r123(1220)
      Forming thread by copy 13:a17r74-a18r43 (freq=76):
        Result (freq=2439): a17r74(1220) a18r43(1219)
      Forming thread by copy 14:a10r75-a17r74 (freq=76):
        Result (freq=4879): a8r80(1220) a17r74(1220) a18r43(1219) a10r75(1220)
      Forming thread by copy 15:a14r118-a16r63 (freq=76):
        Result (freq=5050): a14r118(1220) a16r63(3830)
      Forming thread by copy 17:a13r120-a14r118 (freq=76):
        Result (freq=6270): a13r120(1220) a14r118(1220) a16r63(3830)
      Forming thread by copy 18:a9r42-a13r120 (freq=76):
        Result (freq=8710): a9r42(2440) a13r120(1220) a14r118(1220) a16r63(3830)
      Forming thread by copy 28:a27r66-a29r64 (freq=76):
        Result (freq=2885): a27r66(1665) a29r64(1220)
      Forming thread by copy 30:a29r64-a30r62 (freq=76):
        Result (freq=4105): a27r66(1665) a30r62(1220) a29r64(1220)
      Forming thread by copy 32:a35r111-a36r46 (freq=76):
        Result (freq=2440): a35r111(1220) a36r46(1220)
      Forming thread by copy 33:a24r57-a35r111 (freq=76):
        Result (freq=3940): a24r57(1500) a35r111(1220) a36r46(1220)
      Forming thread by copy 34:a32r61-a34r96 (freq=76):
        Result (freq=3220): a32r61(1220) a34r96(2000)
      Forming thread by copy 36:a30r62-a32r61 (freq=76):
        Result (freq=7325): a27r66(1665) a32r61(1220) a34r96(2000) a30r62(1220) a29r64(1220)
      Forming thread by copy 37:a37r110-a38r54 (freq=76):
        Result (freq=2440): a37r110(1220) a38r54(1220)
      Forming thread by copy 38:a33r56-a37r110 (freq=76):
        Result (freq=4270): a33r56(1830) a37r110(1220) a38r54(1220)
      Forming thread by copy 19:a26r68-a27r66 (freq=55):
        Result (freq=8215): a26r68(890) a27r66(1665) a32r61(1220) a34r96(2000) a30r62(1220) a29r64(1220)
      Forming thread by copy 20:a25r69-a26r68 (freq=55):
        Result (freq=9105): a25r69(890) a26r68(890) a27r66(1665) a32r61(1220) a34r96(2000) a30r62(1220) a29r64(1220)
      Forming thread by copy 21:a21r70-a25r69 (freq=55):
        Result (freq=9995): a21r70(890) a25r69(890) a26r68(890) a27r66(1665) a32r61(1220) a34r96(2000) a30r62(1220) a29r64(1220)
      Forming thread by copy 23:a22r92-a23r94 (freq=55):
        Result (freq=5555): a22r92(890) a23r94(4665)
      Forming thread by copy 24:a20r72-a22r92 (freq=55):
        Result (freq=6445): a20r72(890) a22r92(890) a23r94(4665)
      Forming thread by copy 25:a19r73-a20r72 (freq=55):
        Result (freq=7335): a19r73(890) a20r72(890) a22r92(890) a23r94(4665)
      Forming thread by copy 27:a18r43-a19r73 (freq=55):
        Result (freq=12214): a8r80(1220) a19r73(890) a20r72(890) a22r92(890) a23r94(4665) a17r74(1220) a18r43(1219) a10r75(1220)
      Forming thread by copy 39:a34r96-a45r51 (freq=48):
        Result (freq=10775): a21r70(890) a45r51(780) a25r69(890) a26r68(890) a27r66(1665) a32r61(1220) a34r96(2000) a30r62(1220) a29r64(1220)
      Forming thread by copy 40:a41r52-a44r103 (freq=48):
        Result (freq=1950): a41r52(1170) a44r103(780)
      Forming thread by copy 42:a42r128-a43r105 (freq=48):
        Result (freq=1560): a42r128(780) a43r105(780)
      Forming thread by copy 43:a40r107-a42r128 (freq=48):
        Result (freq=2340): a40r107(780) a42r128(780) a43r105(780)
      Forming thread by copy 44:a39r108-a41r52 (freq=48):
        Result (freq=2730): a39r108(780) a41r52(1170) a44r103(780)
      Forming thread by copy 45:a0r45-a40r107 (freq=48):
        Result (freq=9220): a0r45(2000) a40r107(780) a42r128(780) a43r105(780) a2r83(1220) a3r125(1220) a5r124(1220) a6r123(1220)
      Forming thread by copy 10:a9r42-a11r78 (freq=38):
        Result (freq=9320): a9r42(2440) a11r78(610) a13r120(1220) a14r118(1220) a16r63(3830)
      Forming thread by copy 11:a1r44-a12r121 (freq=38):
        Result (freq=3050): a1r44(2440) a12r121(610)
      Pushing a31(r47,l0)(cost 0)
      Pushing a28(r48,l0)(cost 0)
      Pushing a7(r122,l0)(cost 0)
      Pushing a4(r81,l0)(cost 0)
      Pushing a44(r103,l0)(cost 0)
      Pushing a39(r108,l0)(cost 0)
      Pushing a41(r52,l0)(cost 0)
      Pushing a12(r121,l0)(cost 0)
      Pushing a1(r44,l0)(cost 0)
      Pushing a36(r46,l0)(cost 0)
      Pushing a35(r111,l0)(cost 0)
      Pushing a24(r57,l0)(cost 0)
      Pushing a38(r54,l0)(cost 0)
        Making a23(r94,l0) colorable
      Pushing a37(r110,l0)(cost 0)
      Pushing a33(r56,l0)(cost 0)
      Pushing a43(r105,l0)(cost 0)
      Pushing a42(r128,l0)(cost 0)
      Pushing a40(r107,l0)(cost 0)
      Pushing a6(r123,l0)(cost 0)
      Pushing a5(r124,l0)(cost 0)
      Pushing a3(r125,l0)(cost 0)
      Pushing a2(r83,l0)(cost 0)
      Pushing a0(r45,l0)(cost 0)
      Pushing a11(r78,l0)(cost 0)
      Pushing a14(r118,l0)(cost 0)
      Pushing a13(r120,l0)(cost 0)
      Pushing a9(r42,l0)(cost 0)
      Pushing a45(r51,l0)(cost 0)
      Pushing a26(r68,l0)(cost 0)
      Pushing a25(r69,l0)(cost 0)
      Pushing a21(r70,l0)(cost 0)
        Making a15(r85,l0) colorable
        Making a16(r63,l0) colorable
      Pushing a15(r85,l0)(cost 6440)
      Pushing a16(r63,l0)(cost 15320)
      Pushing a32(r61,l0)(cost 0)
      Pushing a30(r62,l0)(cost 0)
      Pushing a29(r64,l0)(cost 0)
      Pushing a27(r66,l0)(cost 0)
      Pushing a34(r96,l0)(cost 0)
      Pushing a22(r92,l0)(cost 0)
      Pushing a20(r72,l0)(cost 0)
      Pushing a19(r73,l0)(cost 0)
      Pushing a18(r43,l0)(cost 0)
      Pushing a17(r74,l0)(cost 0)
      Pushing a10(r75,l0)(cost 0)
      Pushing a8(r80,l0)(cost 0)
      Pushing a23(r94,l0)(cost 18910)
      Popping a23(r94,l0)  -- assign reg 2
      Popping a8(r80,l0)  -- assign reg 8
      Popping a10(r75,l0)  -- assign reg 9
      Popping a17(r74,l0)  -- assign reg 8
      Popping a18(r43,l0)  -- assign reg 8
      Popping a19(r73,l0)  -- assign reg 8
      Popping a20(r72,l0)  -- assign reg 2
      Popping a22(r92,l0)  -- assign reg 2
      Popping a34(r96,l0)  -- assign reg 3
      Popping a27(r66,l0)  -- assign reg 3
      Popping a29(r64,l0)  -- assign reg 3
      Popping a30(r62,l0)  -- assign reg 3
      Popping a32(r61,l0)  -- assign reg 3
      Popping a16(r63,l0)  -- assign reg 10
      Popping a15(r85,l0)  -- assign reg 11
      Popping a21(r70,l0)  -- assign reg 8
      Popping a25(r69,l0)  -- assign reg 3
      Popping a26(r68,l0)  -- assign reg 3
      Popping a45(r51,l0)  -- assign reg 3
      Popping a9(r42,l0)  -- assign reg 8
      Popping a13(r120,l0)  -- assign reg 8
      Popping a14(r118,l0)  -- assign reg 8
      Popping a11(r78,l0)  -- assign reg 8
      Popping a0(r45,l0)  -- assign reg 2
      Popping a2(r83,l0)  -- assign reg 3
      Popping a3(r125,l0)  -- assign reg 9
      Popping a5(r124,l0)  -- assign reg 9
      Popping a6(r123,l0)  -- assign reg 9
      Popping a40(r107,l0)  -- assign reg 9
      Popping a42(r128,l0)  -- assign reg 2
      Popping a43(r105,l0)  -- assign reg 2
      Popping a33(r56,l0)  -- assign reg 12
      Popping a37(r110,l0)  -- assign reg 12
      Popping a38(r54,l0)  -- assign reg 12
      Popping a24(r57,l0)  -- assign reg 8
      Popping a35(r111,l0)  -- assign reg 8
      Popping a36(r46,l0)  -- assign reg 8
      Popping a1(r44,l0)  -- assign reg 11
      Popping a12(r121,l0)  -- assign reg 2
      Popping a41(r52,l0)  -- assign reg 3
      Popping a39(r108,l0)  -- assign reg 3
      Popping a44(r103,l0)  -- assign reg 2
      Popping a4(r81,l0)  -- assign reg 2
      Popping a7(r122,l0)  -- assign reg 2
      Popping a28(r48,l0)  -- assign reg 9
      Popping a31(r47,l0)  -- assign reg 9
Disposition:
    9:r42  l0     8   18:r43  l0     8    1:r44  l0    11    0:r45  l0     2
   36:r46  l0     8   31:r47  l0     9   28:r48  l0     9   45:r51  l0     3
   41:r52  l0     3   38:r54  l0    12   33:r56  l0    12   24:r57  l0     8
   32:r61  l0     3   30:r62  l0     3   16:r63  l0    10   29:r64  l0     3
   27:r66  l0     3   26:r68  l0     3   25:r69  l0     3   21:r70  l0     8
   20:r72  l0     2   19:r73  l0     8   17:r74  l0     8   10:r75  l0     9
   11:r78  l0     8    8:r80  l0     8    4:r81  l0     2    2:r83  l0     3
   15:r85  l0    11   22:r92  l0     2   23:r94  l0     2   34:r96  l0     3
   44:r103 l0     2   43:r105 l0     2   40:r107 l0     9   39:r108 l0     3
   37:r110 l0    12   35:r111 l0     8   14:r118 l0     8   13:r120 l0     8
   12:r121 l0     2    7:r122 l0     2    6:r123 l0     9    5:r124 l0     9
    3:r125 l0     9   42:r128 l0     2
New iteration of spill/restore move
+++Costs: overall -4500, reg -4500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


calcAirTime

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3]
;;  ref usage 	r0={1d} r1={1d,19u} r2={2d,3u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,19u} r16={1d,19u} r17={1d,18u} r42={2d,5u} r43={2d,3u} r44={2d,5u,1e} r45={2d,1u} r46={2d,1u} r47={2d,1u} r48={2d,2u} r51={1d,1u} r52={1d,2u} r54={1d,1u} r56={1d,3u} r57={1d,3u} r61={1d,1u} r62={1d,1u} r63={1d,4u} r64={1d,1u} r66={1d,3u} r68={1d,1u} r69={1d,1u} r70={1d,2u} r72={1d,1u} r73={1d,2u} r74={1d,1u} r75={1d,2u} r78={1d,1u} r80={1d,1u} r81={1d,1u} r83={1d,1u} r85={1d,1u} r92={1d,1u} r94={1d,10u} r96={1d,2u} r103={1d,1u} r105={1d,1u} r107={1d,1u} r108={1d,1u} r110={1d,1u} r111={1d,1u} r118={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r128={1d,1u} 
;;    total ref usage 224{64d,159u,1e} in 87{87 regular + 0 call} insns.
(note 1 0 15 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 63 85 94 96
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 15 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(insn 3 4 5 2 (set (reg/v:SI 94 [ rps ])
        (zero_extend:SI (reg:HI 2 a2 [ rps ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:281 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 2 a2 [ rps ])
        (nil)))
(insn 5 3 6 2 (set (reg/v:SI 96 [ plen ])
        (zero_extend:SI (reg:QI 3 a3 [ plen ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:281 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ plen ])
        (nil)))
(note 6 5 17 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 17 6 18 2 (var_location:HI params (subreg:HI (reg/v:SI 94 [ rps ]) 0)) -1
     (nil))
(note 18 17 20 2 NOTE_INSN_DELETED)
(note 20 18 21 2 NOTE_INSN_DELETED)
(insn 21 20 22 2 (set (reg:SI 85 [ D.6260 ])
        (zero_extract:SI (reg/v:SI 94 [ rps ])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:349 38 {extzv_internal}
     (nil))
(debug_insn 22 21 23 2 (var_location:QI bw (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:282 -1
     (nil))
(debug_insn 23 22 25 2 (var_location:HI params (subreg:HI (reg/v:SI 94 [ rps ]) 0)) -1
     (nil))
(note 25 23 26 2 NOTE_INSN_DELETED)
(insn 26 25 27 2 (set (reg:SI 63 [ D.6259 ])
        (and:SI (reg/v:SI 94 [ rps ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:347 30 {andsi3}
     (nil))
(debug_insn 27 26 28 2 (var_location:QI sf (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:283 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (ne (reg:SI 63 [ D.6259 ])
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:284 56 {*btrue}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 42)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63 85 94 96

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 96
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 96
;; lr  def 	 45 51 52 103 105 107 108 128
(note 29 28 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (set (reg:SI 51 [ D.6256 ])
        (plus:SI (reg/v:SI 96 [ plen ])
            (const_int 11 [0xb]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 96 [ plen ])
        (nil)))
(insn 31 30 32 3 (set (reg:SI 103)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC130") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:286 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 500000 [0x7a120])
        (nil)))
(insn 32 31 33 3 (set (reg:SI 52 [ D.6256 ])
        (mult:SI (reg:SI 51 [ D.6256 ])
            (reg:SI 103))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:286 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_DEAD (reg:SI 51 [ D.6256 ])
            (nil))))
(insn 33 32 35 3 (set (reg:SI 105)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC131") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 351843721 [0x14f8b589])
        (nil)))
(insn 35 33 37 3 (set (reg:SI 128 [+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 52 [ D.6256 ]))
                    (sign_extend:DI (reg:SI 105)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 7 {mulsi3_highpart}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 37 35 38 3 (set (reg:SI 107)
        (ashiftrt:SI (reg:SI 128 [+4 ])
            (const_int 12 [0xc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 128 [+4 ])
        (nil)))
(insn 38 37 39 3 (set (reg:SI 108)
        (ashiftrt:SI (reg:SI 52 [ D.6256 ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6256 ])
        (nil)))
(insn 39 38 153 3 (set (reg:SI 45 [ D.6254 ])
        (minus:SI (reg:SI 107)
            (reg:SI 108))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg:SI 107)
            (nil))))
(jump_insn 153 39 154 3 (set (pc)
        (label_ref 128)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:285 78 {jump}
     (nil)
 -> 128)
;;  succ:       19 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45

(barrier 154 153 42)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(1){ }u30(7){ }u31(16){ }u32(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63 85 94 96
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63
;; lr  def 	 54 56 110
(code_label 42 154 43 4 178 "" [1 uses])
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 46 4 (set (reg:SI 54 [ D.6256 ])
        (plus:SI (reg:SI 63 [ D.6259 ])
            (const_int 6 [0x6]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:288 1 {addsi3}
     (nil))
(insn 46 44 47 4 (set (reg:SI 110)
        (ashift:SI (reg:SI 54 [ D.6256 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:288 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 54 [ D.6256 ])
        (nil)))
(insn 47 46 48 4 (set (reg/v:SI 56 [ sfx ])
        (zero_extend:SI (subreg:QI (reg:SI 110) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:288 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(debug_insn 48 47 49 4 (var_location:QI sfx (subreg:QI (reg/v:SI 56 [ sfx ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:288 -1
     (nil))
(jump_insn 49 48 50 4 (set (pc)
        (if_then_else (geu (reg:SI 63 [ D.6259 ])
                (const_int 5 [0x5]))
            (pc)
            (label_ref:SI 140))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 59 {*ubfalse}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 140)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 56 63 85 94 96

;; basic block 5, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(1){ }u39(7){ }u40(16){ }u41(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 56 63 85 94 96
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46
(note 50 49 7 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 7 50 155 5 (set (reg:SI 46 [ D.6255 ])
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(jump_insn 155 7 156 5 (set (pc)
        (label_ref 51)) 78 {jump}
     (nil)
 -> 51)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 56 63 85 94 96

(barrier 156 155 140)
;; basic block 6, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(1){ }u43(7){ }u44(16){ }u45(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 56 63 85 94 96
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46
(code_label 140 156 139 6 185 "" [1 uses])
(note 139 140 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 139 51 6 (set (reg:SI 46 [ D.6255 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 56 63 85 94 96

;; basic block 7, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(1){ }u47(7){ }u48(16){ }u49(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 56 63 85 94 96
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 56 94 96
;; lr  def 	 57 61 62 111
(code_label 51 8 52 7 180 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:SI 111)
        (minus:SI (reg/v:SI 56 [ sfx ])
            (reg:SI 46 [ D.6255 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6255 ])
        (nil)))
(insn 54 53 55 7 (set (reg/v:SI 57 [ q ])
        (zero_extend:SI (subreg:QI (reg:SI 111) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(debug_insn 55 54 56 7 (var_location:QI q (subreg:QI (reg/v:SI 57 [ q ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:289 -1
     (nil))
(note 56 55 57 7 NOTE_INSN_DELETED)
(insn 57 56 58 7 (set (reg:SI 61 [ D.6256 ])
        (minus:SI (mult:SI (reg/v:SI 96 [ plen ])
                (const_int 8 [0x8]))
            (reg/v:SI 56 [ sfx ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 5 {*subx}
     (expr_list:REG_DEAD (reg/v:SI 96 [ plen ])
        (expr_list:REG_DEAD (reg/v:SI 56 [ sfx ])
            (nil))))
(insn 58 57 59 7 (set (reg:SI 62 [ D.6256 ])
        (plus:SI (reg:SI 61 [ D.6256 ])
            (const_int 28 [0x1c]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6256 ])
        (nil)))
(debug_insn 59 58 60 7 (var_location:HI params (subreg:HI (reg/v:SI 94 [ rps ]) 0)) -1
     (nil))
(note 60 59 61 7 NOTE_INSN_DELETED)
(note 61 60 62 7 NOTE_INSN_DELETED)
(note 62 61 63 7 NOTE_INSN_DELETED)
(note 63 62 64 7 NOTE_INSN_DELETED)
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg/v:SI 94 [ rps ])
                    (const_int 1 [0x1])
                    (const_int 7 [0x7]))
                (const_int 0 [0]))
            (label_ref:SI 144)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 144)
;;  succ:       8 [50.0%]  (FALLTHRU)
;;              9 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 62 63 85 94

;; basic block 8, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(1){ }u65(7){ }u66(16){ }u67(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 62 63 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(note 65 64 9 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 9 65 157 8 (set (reg:SI 47 [ D.6256 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 157 9 158 8 (set (pc)
        (label_ref 66)) 78 {jump}
     (nil)
 -> 66)
;;  succ:       10 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 57 62 63 85 94

(barrier 158 157 144)
;; basic block 9, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(1){ }u69(7){ }u70(16){ }u71(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 62 63 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(code_label 144 158 143 9 186 "" [1 uses])
(note 143 144 10 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 10 143 66 9 (set (reg:SI 47 [ D.6256 ])
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 57 62 63 85 94

;; basic block 10, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(1){ }u73(7){ }u74(16){ }u75(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 57 62 63 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 62 94
;; lr  def 	 48 64
(code_label 66 10 67 10 181 "" [1 uses])
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg:SI 64 [ D.6256 ])
        (plus:SI (reg:SI 47 [ D.6256 ])
            (reg:SI 62 [ D.6256 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6256 ])
        (expr_list:REG_DEAD (reg:SI 47 [ D.6256 ])
            (nil))))
(debug_insn 69 68 70 10 (var_location:HI params (subreg:HI (reg/v:SI 94 [ rps ]) 0)) -1
     (nil))
(note 70 69 71 10 NOTE_INSN_DELETED)
(insn 71 70 73 10 (set (reg:SI 48 [ D.6256 ])
        (lshiftrt:SI (reg/v:SI 94 [ rps ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:355 53 {lshrsi3}
     (nil))
(jump_insn 73 71 74 10 (set (pc)
        (if_then_else (eq (reg:SI 48 [ D.6256 ])
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 75)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 57 63 64 85 94

;; basic block 11, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u82(1){ }u83(7){ }u84(16){ }u85(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 63 64 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48
(note 74 73 11 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 11 74 75 11 (set (reg:SI 48 [ D.6256 ])
        (const_int 20 [0x14])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 44 {movsi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 57 63 64 85 94

;; basic block 12, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(1){ }u87(7){ }u88(16){ }u89(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 57 63 64 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 64
;; lr  def 	 66
(code_label 75 11 76 12 182 "" [1 uses])
(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 12 (set (reg/v:SI 66 [ tmp ])
        (minus:SI (reg:SI 64 [ D.6256 ])
            (reg:SI 48 [ D.6256 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 64 [ D.6256 ])
        (expr_list:REG_DEAD (reg:SI 48 [ D.6256 ])
            (nil))))
(debug_insn 78 77 79 12 (var_location:SI tmp (reg/v:SI 66 [ tmp ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:290 -1
     (nil))
(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (ge (reg/v:SI 66 [ tmp ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref:SI 148))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:291 57 {*bfalse}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 148)
;;  succ:       13 [73.0%]  (FALLTHRU)
;;              14 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 63 66 85 94

;; basic block 13, loop depth 0, count 0, freq 4453, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 [73.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u94(1){ }u95(7){ }u96(16){ }u97(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 63 66 85 94
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57 66 94
;; lr  def 	 43 68 69 70 72 73 92
(note 80 79 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 80 83 13 (set (reg:SI 68 [ D.6256 ])
        (plus:SI (reg/v:SI 66 [ tmp ])
            (reg/v:SI 57 [ q ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:292 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 66 [ tmp ])
        (nil)))
(insn 83 82 84 13 (set (reg:SI 69 [ D.6256 ])
        (plus:SI (reg:SI 68 [ D.6256 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:292 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6256 ])
        (nil)))
(insn 84 83 85 13 (set (reg/v:SI 70 [ tmp ])
        (div:SI (reg:SI 69 [ D.6256 ])
            (reg/v:SI 57 [ q ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:292 17 {divsi3}
     (expr_list:REG_DEAD (reg:SI 69 [ D.6256 ])
        (expr_list:REG_DEAD (reg/v:SI 57 [ q ])
            (nil))))
(debug_insn 85 84 86 13 (var_location:SI tmp (reg/v:SI 70 [ tmp ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:292 -1
     (nil))
(debug_insn 86 85 87 13 (var_location:HI params (subreg:HI (reg/v:SI 94 [ rps ]) 0)) -1
     (nil))
(note 87 86 89 13 NOTE_INSN_DELETED)
(note 89 87 90 13 NOTE_INSN_DELETED)
(insn 90 89 91 13 (set (reg:SI 92 [ D.6261 ])
        (zero_extract:SI (reg/v:SI 94 [ rps ])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:351 38 {extzv_internal}
     (expr_list:REG_DEAD (reg/v:SI 94 [ rps ])
        (nil)))
(insn 91 90 92 13 (set (reg:SI 72 [ D.6256 ])
        (plus:SI (reg:SI 92 [ D.6261 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:293 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6261 ])
        (nil)))
(insn 92 91 93 13 (set (reg/v:SI 73 [ tmp ])
        (mult:SI (reg/v:SI 70 [ tmp ])
            (reg:SI 72 [ D.6256 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:293 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6256 ])
        (expr_list:REG_DEAD (reg/v:SI 70 [ tmp ])
            (nil))))
(debug_insn 93 92 94 13 (var_location:SI tmp (reg/v:SI 73 [ tmp ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:293 -1
     (nil))
(insn 94 93 95 13 (set (reg/v:SI 43 [ tmp ])
        (plus:SI (reg/v:SI 73 [ tmp ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:294 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 73 [ tmp ])
        (nil)))
(debug_insn 95 94 159 13 (var_location:SI tmp (reg/v:SI 43 [ tmp ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:294 -1
     (nil))
(jump_insn 159 95 160 13 (set (pc)
        (label_ref 96)) 78 {jump}
     (nil)
 -> 96)
;;  succ:       15 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 63 85

(barrier 160 159 148)
;; basic block 14, loop depth 0, count 0, freq 1647, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12 [27.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u114(1){ }u115(7){ }u116(16){ }u117(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 148 160 147 14 187 "" [1 uses])
(note 147 148 12 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 12 147 96 14 (set (reg/v:SI 43 [ tmp ])
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:296 44 {movsi_internal}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 63 85

;; basic block 15, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u118(1){ }u119(7){ }u120(16){ }u121(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 63 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 63 85
;; lr  def 	 42 74 75 118 120
(code_label 96 12 97 15 183 "" [1 uses])
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 98 97 99 15 (var_location:SI tmp (reg/v:SI 43 [ tmp ])) -1
     (nil))
(insn 99 98 100 15 (set (reg:SI 74 [ D.6256 ])
        (ashift:SI (reg/v:SI 43 [ tmp ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:298 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 [ tmp ])
        (nil)))
(insn 100 99 101 15 (set (reg/v:SI 75 [ tmp ])
        (plus:SI (reg:SI 74 [ D.6256 ])
            (const_int 49 [0x31]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:298 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6256 ])
        (nil)))
(debug_insn 101 100 102 15 (var_location:SI tmp (reg/v:SI 75 [ tmp ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:298 -1
     (nil))
(insn 102 101 104 15 (set (reg:SI 118)
        (minus:SI (reg:SI 63 [ D.6259 ])
            (reg:SI 85 [ D.6260 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:308 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 85 [ D.6260 ])
        (expr_list:REG_DEAD (reg:SI 63 [ D.6259 ])
            (nil))))
(insn 104 102 105 15 (set (reg:SI 120)
        (plus:SI (reg:SI 118)
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:308 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 105 104 106 15 (set (reg/v:SI 42 [ sfx ])
        (zero_extend:SI (subreg:QI (reg:SI 120) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:308 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(debug_insn 106 105 107 15 (var_location:QI sfx (subreg:QI (reg/v:SI 42 [ sfx ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:308 -1
     (nil))
(debug_insn 107 106 108 15 (var_location:SI div (const_int 15625 [0x3d09])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:309 -1
     (nil))
(jump_insn 108 107 109 15 (set (pc)
        (if_then_else (geu (reg/v:SI 42 [ sfx ])
                (const_int 5 [0x5]))
            (pc)
            (label_ref:SI 152))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:310 59 {*ubfalse}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 152)
;;  succ:       16 [50.0%]  (FALLTHRU)
;;              17 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 75

;; basic block 16, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u132(1){ }u133(7){ }u134(16){ }u135(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 75
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 42 44 78 121
(note 109 108 110 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 16 (set (reg:SI 78 [ D.6256 ])
        (plus:SI (reg/v:SI 42 [ sfx ])
            (const_int -4 [0xfffffffffffffffc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:312 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 42 [ sfx ])
        (nil)))
(insn 111 110 112 16 (set (reg:SI 121)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC129") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:312 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15625 [0x3d09])
        (nil)))
(insn 112 111 113 16 (set (reg/v:SI 44 [ div ])
        (ashiftrt:SI (reg:SI 121)
            (reg:SI 78 [ D.6256 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:312 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_DEAD (reg:SI 78 [ D.6256 ])
            (nil))))
(debug_insn 113 112 114 16 (var_location:SI div (reg/v:SI 44 [ div ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:312 -1
     (nil))
(debug_insn 114 113 14 16 (var_location:QI sfx (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:313 -1
     (nil))
(insn 14 114 161 16 (set (reg/v:SI 42 [ sfx ])
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:313 44 {movsi_internal}
     (nil))
(jump_insn 161 14 162 16 (set (pc)
        (label_ref 115)) 78 {jump}
     (nil)
 -> 115)
;;  succ:       18 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 44 75

(barrier 162 161 152)
;; basic block 17, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u140(1){ }u141(7){ }u142(16){ }u143(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 75
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(code_label 152 162 151 17 188 "" [1 uses])
(note 151 152 13 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 13 151 115 17 (set (reg/v:SI 44 [ div ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC129") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:309 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 15625 [0x3d09])
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 44 75

;; basic block 18, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u144(1){ }u145(7){ }u146(16){ }u147(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 44 75
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 44 75
;; lr  def 	 45 80 81 83 122 123 124 125
(code_label 115 13 116 18 184 "" [1 uses])
(note 116 115 117 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 117 116 118 18 (var_location:SI div (reg/v:SI 44 [ div ])) -1
     (nil))
(debug_insn 118 117 119 18 (var_location:QI sfx (subreg:QI (reg/v:SI 42 [ sfx ]) 0)) -1
     (nil))
(insn 119 118 120 18 (set (reg:SI 80 [ D.6256 ])
        (ashift:SI (reg/v:SI 75 [ tmp ])
            (reg/v:SI 42 [ sfx ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 75 [ tmp ])
        (expr_list:REG_DEAD (reg/v:SI 42 [ sfx ])
            (nil))))
(insn 120 119 121 18 (set (reg:SI 122)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC132") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 121 120 122 18 (set (reg:SI 81 [ D.6256 ])
        (mult:SI (reg:SI 80 [ D.6256 ])
            (reg:SI 122))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_DEAD (reg:SI 80 [ D.6256 ])
            (nil))))
(insn 122 121 123 18 (set (reg:SI 123)
        (lshiftrt:SI (reg/v:SI 44 [ div ])
            (const_int 31 [0x1f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 53 {lshrsi3}
     (nil))
(insn 123 122 124 18 (set (reg:SI 124)
        (plus:SI (reg:SI 123)
            (reg/v:SI 44 [ div ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 124 123 126 18 (set (reg:SI 125)
        (ashiftrt:SI (reg:SI 124)
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_EQUAL (div:SI (reg/v:SI 44 [ div ])
                (const_int 2 [0x2]))
            (nil))))
(insn 126 124 127 18 (set (reg:SI 83 [ D.6256 ])
        (plus:SI (reg:SI 81 [ D.6256 ])
            (reg:SI 125))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_DEAD (reg:SI 81 [ D.6256 ])
            (nil))))
(insn 127 126 128 18 (set (reg:SI 45 [ D.6254 ])
        (div:SI (reg:SI 83 [ D.6256 ])
            (reg/v:SI 44 [ div ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:316 17 {divsi3}
     (expr_list:REG_DEAD (reg:SI 83 [ D.6256 ])
        (expr_list:REG_DEAD (reg/v:SI 44 [ div ])
            (nil))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 1, flags: (RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u163(1){ }u164(7){ }u165(16){ }u166(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	 2 [a2]
(code_label 128 127 129 19 179 "" [1 uses])
(note 129 128 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 134 129 135 19 (set (reg/i:SI 2 a2)
        (reg:SI 45 [ D.6254 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:317 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6254 ])
        (nil)))
(insn 135 134 0 19 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:317 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function updateTx (updateTx, funcdef_no=62, decl_uid=3661, cgraph_uid=62, symbol_order=70)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
scanning new insn with uid = 96.
verify found no changes in insn with uid = 96.
deleting insn with uid = 86.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Reg 66 uninteresting (no unique first use)
Reg 42 uninteresting
Reg 69 uninteresting
Reg 71 uninteresting
Reg 74 uninteresting
Reg 49 uninteresting (no unique first use)
Reg 50: def dominates all uses has unique first use
Reg 75 uninteresting
Ignoring reg 51, has equiv memory
Reg 78 uninteresting
Reg 52 uninteresting
Reg 53 uninteresting
Reg 55 uninteresting
Ignoring reg 56, has equiv memory
Reg 57 uninteresting
Reg 59 uninteresting
Reg 60: local to bb 3 def dominates all uses has unique first use
Reg 93 uninteresting
Reg 94: local to bb 4 def dominates all uses has unique first use
Reg 95 uninteresting
Reg 97 uninteresting
Reg 63 uninteresting
Reg 101 uninteresting
Reg 50 not local to one basic block
Examining insn 60, def for 60
  all ok
Ignoring reg 94 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 54 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 75: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 94: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 96 (nil))

Pass 0 for finding pseudo/allocno costs

    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r101,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r97,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r95,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r94,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r93,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r80,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r78,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r74,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r71,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r69,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r66,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r63,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r59,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r49,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r101,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:0,0
  a1(r63,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r94,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a3(r66,l0) costs: ACC_REG:10500,10500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:56000,56000 MEM:14000,14000
  a4(r49,l0) costs: ACC_REG:10500,10500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:56000,56000 MEM:14000,14000
  a5(r50,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a6(r97,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r95,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r93,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a9(r60,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a10(r59,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a11(r57,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a12(r67,l0) costs: ACC_REG:27000,27000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:144000,144000 MEM:28000,28000
  a13(r80,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a14(r56,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a15(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a18(r78,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a19(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a20(r75,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a21(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a22(r74,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a23(r71,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a24(r69,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a25(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 91(l0): point = 1
   Insn 90(l0): point = 3
   Insn 89(l0): point = 5
   Insn 88(l0): point = 7
   Insn 96(l0): point = 9
   Insn 84(l0): point = 11
   Insn 82(l0): point = 14
   Insn 81(l0): point = 16
   Insn 79(l0): point = 18
   Insn 78(l0): point = 20
   Insn 77(l0): point = 22
   Insn 76(l0): point = 24
   Insn 75(l0): point = 26
   Insn 74(l0): point = 28
   Insn 73(l0): point = 30
   Insn 70(l0): point = 32
   Insn 68(l0): point = 34
   Insn 67(l0): point = 36
   Insn 65(l0): point = 38
   Insn 62(l0): point = 41
   Insn 61(l0): point = 43
   Insn 60(l0): point = 45
   Insn 59(l0): point = 47
   Insn 57(l0): point = 50
   Insn 56(l0): point = 52
   Insn 54(l0): point = 54
   Insn 48(l0): point = 56
   Insn 47(l0): point = 58
   Insn 46(l0): point = 60
   Insn 41(l0): point = 62
   Insn 39(l0): point = 64
   Insn 37(l0): point = 66
   Insn 35(l0): point = 68
   Insn 33(l0): point = 70
   Insn 31(l0): point = 72
   Insn 30(l0): point = 74
   Insn 27(l0): point = 76
   Insn 25(l0): point = 78
   Insn 24(l0): point = 80
   Insn 23(l0): point = 82
   Insn 22(l0): point = 84
   Insn 19(l0): point = 86
   Insn 13(l0): point = 88
   Insn 12(l0): point = 90
   Insn 10(l0): point = 92
   Insn 7(l0): point = 94
   Insn 6(l0): point = 96
   Insn 2(l0): point = 98
 a0(r101): [8..9]
 a1(r63): [15..16]
 a2(r94): [17..36]
 a3(r66): [25..98]
 a4(r49): [27..78]
 a5(r50): [29..76]
 a6(r97): [31..32]
 a7(r95): [33..34]
 a8(r93): [42..43]
 a9(r60): [42..45]
 a10(r59): [46..47]
 a11(r57): [48..52]
 a12(r67): [53..96]
 a13(r80): [55..66]
 a14(r56): [55..56]
 a15(r55): [57..58]
 a16(r53): [59..60]
 a17(r52): [63..64]
 a18(r78): [67..68]
 a19(r51): [71..72]
 a20(r75): [73..74]
 a21(r44): [73..88]
 a22(r74): [85..86]
 a23(r71): [89..90]
 a24(r69): [91..92]
 a25(r42): [93..94]
Compressing live ranges: from 101 to 36 - 35%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r63): [2..3]
 a2(r94): [4..7]
 a3(r66): [4..35]
 a4(r49): [4..27]
 a5(r50): [4..27]
 a6(r97): [4..5]
 a7(r95): [6..7]
 a8(r93): [8..9]
 a9(r60): [8..9]
 a10(r59): [10..11]
 a11(r57): [12..13]
 a12(r67): [14..35]
 a13(r80): [14..21]
 a14(r56): [14..15]
 a15(r55): [16..17]
 a16(r53): [18..19]
 a17(r52): [20..21]
 a18(r78): [22..23]
 a19(r51): [24..25]
 a20(r75): [26..27]
 a21(r44): [26..29]
 a22(r74): [28..29]
 a23(r71): [30..31]
 a24(r69): [32..33]
 a25(r42): [34..35]
+++Allocating 192 bytes for conflict table (uncompressed size 208)
;; a0(r101,l0) conflicts:;; a1(r63,l0) conflicts:;; a2(r94,l0) conflicts: a6(r97,l0) a4(r49,l0) a5(r50,l0) a3(r66,l0) a7(r95,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r66,l0) conflicts: a6(r97,l0) a2(r94,l0) a4(r49,l0) a5(r50,l0) a7(r95,l0) a8(r93,l0) a9(r60,l0) a10(r59,l0) a11(r57,l0) a14(r56,l0) a13(r80,l0) a12(r67,l0) a15(r55,l0) a16(r53,l0) a17(r52,l0) a18(r78,l0) a19(r51,l0) a20(r75,l0) a21(r44,l0) a22(r74,l0) a23(r71,l0) a24(r69,l0) a25(r42,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a4(r49,l0) conflicts: a6(r97,l0) a2(r94,l0) a5(r50,l0) a3(r66,l0) a7(r95,l0) a8(r93,l0) a9(r60,l0) a10(r59,l0) a11(r57,l0) a14(r56,l0) a13(r80,l0) a12(r67,l0) a15(r55,l0) a16(r53,l0) a17(r52,l0) a18(r78,l0) a19(r51,l0) a20(r75,l0) a21(r44,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r50,l0) conflicts: a6(r97,l0) a2(r94,l0) a4(r49,l0) a3(r66,l0) a7(r95,l0) a8(r93,l0) a9(r60,l0) a10(r59,l0) a11(r57,l0) a14(r56,l0) a13(r80,l0) a12(r67,l0) a15(r55,l0) a16(r53,l0) a17(r52,l0) a18(r78,l0) a19(r51,l0) a20(r75,l0) a21(r44,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r97,l0) conflicts: a2(r94,l0) a4(r49,l0) a5(r50,l0) a3(r66,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a7(r95,l0) conflicts: a2(r94,l0) a4(r49,l0) a5(r50,l0) a3(r66,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a8(r93,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a9(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r60,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a8(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r59,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r57,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r67,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a14(r56,l0) a13(r80,l0) a15(r55,l0) a16(r53,l0) a17(r52,l0) a18(r78,l0) a19(r51,l0) a20(r75,l0) a21(r44,l0) a22(r74,l0) a23(r71,l0) a24(r69,l0) a25(r42,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a13(r80,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a14(r56,l0) a12(r67,l0) a15(r55,l0) a16(r53,l0) a17(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r56,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a13(r80,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r55,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a13(r80,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r53,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a13(r80,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r52,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a13(r80,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r78,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r51,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r75,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a12(r67,l0) a21(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r44,l0) conflicts: a4(r49,l0) a5(r50,l0) a3(r66,l0) a12(r67,l0) a20(r75,l0) a22(r74,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a22(r74,l0) conflicts: a3(r66,l0) a12(r67,l0) a21(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r71,l0) conflicts: a3(r66,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r69,l0) conflicts: a3(r66,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r42,l0) conflicts: a3(r66,l0) a12(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a6(r97)<->a7(r95)@125:shuffle
  cp1:a10(r59)<->a11(r57)@62:shuffle
  cp2:a9(r60)<->a10(r59)@62:shuffle
  cp3:a24(r69)<->a25(r42)@125:shuffle
  cp4:a23(r71)<->a24(r69)@125:shuffle
  cp5:a19(r51)<->a20(r75)@125:shuffle
  cp6:a19(r51)<->a21(r44)@125:shuffle
  cp7:a13(r80)<->a18(r78)@125:shuffle
  cp8:a15(r55)<->a16(r53)@125:shuffle
  cp9:a14(r56)<->a15(r55)@125:shuffle
  pref0:a5(r50)<-hr14@2000
  pref1:a4(r49)<-hr13@2000
  pref2:a3(r66)<-hr12@2000
  pref3:a3(r66)<-hr2@2000
  pref4:a4(r49)<-hr10@2000
  regions=1, blocks=7, points=36
    allocnos=26 (big 0), copies=10, conflicts=0, ranges=26

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r101 1r63 2r94 3r66 4r49 5r50 6r97 7r95 8r93 9r60 10r59 11r57 12r67 13r80 14r56 15r55 16r53 17r52 18r78 19r51 20r75 21r44 22r74 23r71 24r69 25r42
    modified regnos: 42 44 49 50 51 52 53 55 56 57 59 60 63 66 67 69 71 74 75 78 80 93 94 95 97 101
    border:
    Pressure: AR_REGS=7
 Removing pref2:hr12@2000
 Removing pref4:hr10@2000
 Removing pref1:hr13@2000
 Removing pref0:hr14@2000
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@260000
          2:( 2-9 11-15)@32000
            3:( 2-7)@192000
      Allocno a0r101 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a1r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r94 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r66 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a4r49 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r50 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r97 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a7r95 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a8r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r67 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a13r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a22r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a6r97-a7r95 (freq=125):
        Result (freq=4000): a6r97(2000) a7r95(2000)
      Forming thread by copy 3:a24r69-a25r42 (freq=125):
        Result (freq=4000): a24r69(2000) a25r42(2000)
      Forming thread by copy 4:a23r71-a24r69 (freq=125):
        Result (freq=6000): a23r71(2000) a24r69(2000) a25r42(2000)
      Forming thread by copy 5:a19r51-a20r75 (freq=125):
        Result (freq=4000): a19r51(2000) a20r75(2000)
      Forming thread by copy 7:a13r80-a18r78 (freq=125):
        Result (freq=6000): a13r80(4000) a18r78(2000)
      Forming thread by copy 8:a15r55-a16r53 (freq=125):
        Result (freq=4000): a15r55(2000) a16r53(2000)
      Forming thread by copy 9:a14r56-a15r55 (freq=125):
        Result (freq=6000): a14r56(2000) a15r55(2000) a16r53(2000)
      Forming thread by copy 1:a10r59-a11r57 (freq=62):
        Result (freq=3500): a10r59(1000) a11r57(2500)
      Forming thread by copy 2:a9r60-a10r59 (freq=62):
        Result (freq=4500): a9r60(1000) a10r59(1000) a11r57(2500)
      Pushing a0(r101,l0)(cost 0)
      Pushing a8(r93,l0)(cost 0)
      Pushing a22(r74,l0)(cost 0)
        Making a21(r44,l0) colorable
      Pushing a17(r52,l0)(cost 0)
      Pushing a1(r63,l0)(cost 0)
      Pushing a21(r44,l0)(cost 12000)
      Pushing a2(r94,l0)(cost 0)
      Pushing a20(r75,l0)(cost 0)
      Pushing a19(r51,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a6(r97,l0)(cost 0)
      Pushing a10(r59,l0)(cost 0)
      Pushing a9(r60,l0)(cost 0)
      Pushing a11(r57,l0)(cost 0)
      Pushing a25(r42,l0)(cost 0)
      Pushing a24(r69,l0)(cost 0)
      Pushing a23(r71,l0)(cost 0)
      Pushing a16(r53,l0)(cost 0)
      Pushing a15(r55,l0)(cost 0)
      Pushing a14(r56,l0)(cost 0)
        Making a4(r49,l0) colorable
        Making a5(r50,l0) colorable
        Making a3(r66,l0) colorable
        Making a12(r67,l0) colorable
      Pushing a4(r49,l0)(cost 18000)
      Pushing a3(r66,l0)(cost 18000)
      Pushing a5(r50,l0)(cost 16000)
      Pushing a18(r78,l0)(cost 0)
      Pushing a13(r80,l0)(cost 0)
      Pushing a12(r67,l0)(cost 28000)
      Popping a12(r67,l0)  -- assign reg 3
      Popping a13(r80,l0)  -- assign reg 8
      Popping a18(r78,l0)  -- assign reg 8
      Popping a5(r50,l0)  -- assign reg 4
      Popping a3(r66,l0)  -- assign reg 2
      Popping a4(r49,l0)  -- assign reg 5
      Popping a14(r56,l0)  -- assign reg 9
      Popping a15(r55,l0)  -- assign reg 9
      Popping a16(r53,l0)  -- assign reg 9
      Popping a23(r71,l0)  -- assign reg 4
      Popping a24(r69,l0)  -- assign reg 4
      Popping a25(r42,l0)  -- assign reg 4
      Popping a11(r57,l0)  -- assign reg 3
      Popping a9(r60,l0)  -- assign reg 3
      Popping a10(r59,l0)  -- assign reg 3
      Popping a6(r97,l0)  -- assign reg 3
      Popping a7(r95,l0)  -- assign reg 3
      Popping a19(r51,l0)  -- assign reg 8
      Popping a20(r75,l0)  -- assign reg 8
      Popping a2(r94,l0)  -- assign reg 6
      Popping a21(r44,l0)  -- assign reg 6
      Popping a1(r63,l0)  -- assign reg 2
      Popping a17(r52,l0)  -- assign reg 6
      Popping a22(r74,l0)  -- assign reg 4
      Popping a8(r93,l0)  -- assign reg 6
      Popping a0(r101,l0)  -- assign reg 2
Disposition:
   25:r42  l0     4   21:r44  l0     6    4:r49  l0     5    5:r50  l0     4
   19:r51  l0     8   17:r52  l0     6   16:r53  l0     9   15:r55  l0     9
   14:r56  l0     9   11:r57  l0     3   10:r59  l0     3    9:r60  l0     3
    1:r63  l0     2    3:r66  l0     2   12:r67  l0     3   24:r69  l0     4
   23:r71  l0     4   22:r74  l0     4   20:r75  l0     8   18:r78  l0     8
   13:r80  l0     8    8:r93  l0     6    2:r94  l0     6    7:r95  l0     3
    6:r97  l0     3    0:r101 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


updateTx

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12] 13[a13] 14[a14] 15[a15]
;;  ref usage 	r0={6d} r1={1d,11u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,6u} r8={5d} r9={5d} r10={8d,6u} r11={8d,3u} r12={7d,2u} r13={6d,1u} r14={6d,1u} r15={6d,1u} r16={1d,6u} r17={1d,5u} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r42={1d,1u} r44={1d,3u,1e} r49={1d,4u} r50={1d,4u} r51={1d,1u} r52={1d,1u} r53={1d,1u} r55={1d,1u} r56={1d,1u} r57={1d,2u} r59={1d,1u} r60={1d,1u} r63={1d,1u} r66={1d,3u} r67={1d,8u,1e} r69={1d,1u} r71={1d,1u} r74={1d,1u} r75={1d,1u} r78={1d,1u} r80={1d,3u,1e} r93={1d,1u} r94={1d,2u} r95={1d,1u} r97={1d,1u} r101={1d,1u} 
;;    total ref usage 275{182d,90u,3e} in 52{47 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 44 49 50 51 52 53 55 56 57 66 67 69 71 74 75 78 80
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 66 [ txbeg ])
        (reg:SI 2 a2 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:628 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ txbeg ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 67)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC133") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 10 2 (set (reg:SI 42 [ D.6264 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 67)
                    (const_int 162 [0xa2])) [0 LMIC.txChnl+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 34 {zero_extendqisi2}
     (nil))
(insn 10 7 11 2 (set (reg:SI 69)
        (plus:SI (reg:SI 42 [ D.6264 ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6264 ])
        (nil)))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 13 2 (set (reg/f:SI 71)
        (plus:SI (mult:SI (reg:SI 69)
                (const_int 4 [0x4]))
            (reg/f:SI 67))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 69)
        (nil)))
(insn 13 12 14 2 (set (reg/v:SI 44 [ freq ])
        (mem/j:SI (reg/f:SI 71) [0 LMIC.channelFreq S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 71)
        (nil)))
(debug_insn 14 13 16 2 (var_location:SI freq (reg/v:SI 44 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:629 -1
     (nil))
(note 16 14 19 2 NOTE_INSN_DELETED)
(insn 19 16 20 2 (set:SI (reg/f:SI 74)
        (plus:SI (reg/f:SI 67)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(note 20 19 22 2 NOTE_INSN_DELETED)
(insn 22 20 23 2 (set (reg:SI 11 a11)
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 74)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 74)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 10 a10)
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 67)
                    (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 33 {zero_extendhisi2}
     (nil))
(call_insn/u 24 23 25 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("calcAirTime") [flags 0x3]  <function_decl 0x100b18e58 calcAirTime>) [0 calcAirTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 25 24 26 2 (set (reg/v:SI 49 [ airtime ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 26 25 27 2 (var_location:SI airtime (reg/v:SI 49 [ airtime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:631 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 50 [ D.6267 ])
        (and:SI (reg/v:SI 44 [ freq ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:633 30 {andsi3}
     (nil))
(debug_insn 28 27 29 2 (var_location:SI D#1 (plus:SI (ashift:SI (plus:SI (reg:SI 50 [ D.6267 ])
                (const_int 4 [0x4]))
            (const_int 3 [0x3]))
        (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:633 -1
     (nil))
(debug_insn 29 28 30 2 (var_location:SI band (debug_expr:SI D#1)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:633 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 75)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:634 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 31 30 33 2 (set (reg:SI 51 [ D.6267 ])
        (and:SI (reg/v:SI 44 [ freq ])
            (reg:SI 75))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:634 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 75)
        (expr_list:REG_DEAD (reg/v:SI 44 [ freq ])
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 67)
                        (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
                (expr_list:REG_EQUAL (and:SI (reg/v:SI 44 [ freq ])
                        (const_int -4 [0xfffffffffffffffc]))
                    (nil))))))
(insn 33 31 35 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 67)
                (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
        (reg:SI 51 [ D.6267 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:634 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 51 [ D.6267 ])
        (nil)))
(insn 35 33 36 2 (set (reg:SI 78)
        (plus:SI (reg:SI 50 [ D.6267 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:635 1 {addsi3}
     (nil))
(note 36 35 37 2 NOTE_INSN_DELETED)
(insn 37 36 39 2 (set (reg:SI 80)
        (plus:SI (mult:SI (reg:SI 78)
                (const_int 8 [0x8]))
            (reg/f:SI 67))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:635 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 78)
        (nil)))
(insn 39 37 41 2 (set (reg:SI 52 [ D.6268 ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg:SI 80)
                    (const_int 2 [0x2])) [0 MEM[(struct band_t *)&LMIC].bands[_12].txpow+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:635 34 {zero_extendqisi2}
     (nil))
(insn 41 39 46 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 67)
                (const_int 18 [0x12])) [0 LMIC.txpow+0 S1 A16])
        (subreg/s/v:QI (reg:SI 52 [ D.6268 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:635 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6268 ])
        (nil)))
(insn 46 41 47 2 (set (reg:SI 53 [ D.6266 ])
        (zero_extend:SI (mem/j:HI (reg:SI 80) [0 MEM[(struct band_t *)&LMIC].bands[_12].txcap+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:636 33 {zero_extendhisi2}
     (nil))
(insn 47 46 48 2 (set (reg:SI 55 [ D.6265 ])
        (mult:SI (reg:SI 53 [ D.6266 ])
            (reg/v:SI 49 [ airtime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:636 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 53 [ D.6266 ])
        (nil)))
(insn 48 47 54 2 (set (reg:SI 56 [ D.6265 ])
        (plus:SI (reg:SI 55 [ D.6265 ])
            (reg/v:SI 66 [ txbeg ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:636 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 55 [ D.6265 ])
        (expr_list:REG_EQUIV (mem/j:SI (plus:SI (reg:SI 80)
                    (const_int 4 [0x4])) [0 MEM[(struct band_t *)&LMIC].bands[_12].avail+0 S4 A32])
            (nil))))
(insn 54 48 56 2 (set (mem/j:SI (plus:SI (reg:SI 80)
                (const_int 4 [0x4])) [0 MEM[(struct band_t *)&LMIC].bands[_12].avail+0 S4 A32])
        (reg:SI 56 [ D.6265 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:636 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 80)
        (expr_list:REG_DEAD (reg:SI 56 [ D.6265 ])
            (nil))))
(insn 56 54 57 2 (set (reg:SI 57 [ D.6264 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 67)
                    (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:637 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 67)
        (nil)))
(jump_insn 57 56 58 2 (set (pc)
        (if_then_else (eq (reg:SI 57 [ D.6264 ])
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:637 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 63)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              4 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 57 66

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u45(1){ }u46(7){ }u47(16){ }u48(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 57 66
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 57 66
;; lr  def 	 59 60 93
(note 58 57 59 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 3 (set (reg:SI 59 [ D.6265 ])
        (ashift:SI (reg/v:SI 49 [ airtime ])
            (reg:SI 57 [ D.6264 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:638 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6264 ])
        (nil)))
(insn 60 59 61 3 (set (reg:SI 60 [ D.6265 ])
        (plus:SI (reg/v:SI 66 [ txbeg ])
            (reg:SI 59 [ D.6265 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:638 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6265 ])
        (nil)))
(insn 61 60 62 3 (set (reg/f:SI 93)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC133") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:638 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 62 61 63 3 (set (mem/j/c:SI (plus:SI (reg/f:SI 93)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])
        (reg:SI 60 [ D.6265 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:638 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_DEAD (reg:SI 60 [ D.6265 ])
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 66

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u55(1){ }u56(7){ }u57(16){ }u58(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 66
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 50 66
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 63 94 95 97
(code_label 63 62 64 4 190 "" [1 uses])
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 65 64 66 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 82 {call_value_internal}
     (nil)
    (nil))
(note 66 65 67 4 NOTE_INSN_DELETED)
(insn 67 66 68 4 (set (reg/f:SI 94)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC133") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 68 67 69 4 (set (reg:SI 95)
        (plus:SI (reg:SI 50 [ D.6267 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 1 {addsi3}
     (nil))
(note 69 68 70 4 NOTE_INSN_DELETED)
(insn 70 69 72 4 (set (reg:SI 97)
        (plus:SI (mult:SI (reg:SI 95)
                (const_int 8 [0x8]))
            (reg/f:SI 94))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(note 72 70 73 4 NOTE_INSN_DELETED)
(insn 73 72 74 4 (set (reg:SI 15 a15)
        (mem/j:SI (plus:SI (reg:SI 97)
                (const_int 4 [0x4])) [0 MEM[(struct band_t *)&LMIC].bands[_12].avail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 74 73 75 4 (set (reg:SI 14 a14)
        (reg:SI 50 [ D.6267 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6267 ])
        (nil)))
(insn 75 74 76 4 (set (reg:SI 13 a13)
        (reg/v:SI 49 [ airtime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 49 [ airtime ])
        (nil)))
(insn 76 75 77 4 (set (reg:SI 12 a12)
        (reg/v:SI 66 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 66 [ txbeg ])
        (nil)))
(insn 77 76 78 4 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 78 77 79 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC135") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC134") [flags 0x2]  <var_decl 0x10192cc60 *.LC134>)
        (nil)))
(call_insn 79 78 81 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:640 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 15 a15)
        (expr_list:REG_DEAD (reg:SI 14 a14)
            (expr_list:REG_DEAD (reg:SI 13 a13)
                (expr_list:REG_DEAD (reg:SI 12 a12)
                    (expr_list:REG_DEAD (reg:SI 11 a11)
                        (expr_list:REG_UNUSED (reg:SI 10 a10)
                            (nil)))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (expr_list:SI (use (reg:SI 15 a15))
                            (nil))))))))
(insn 81 79 82 4 (set (reg:SI 63 [ D.6264 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 94)
                    (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:641 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(jump_insn 82 81 83 4 (set (pc)
        (if_then_else (eq (reg:SI 63 [ D.6264 ])
                (const_int 0 [0]))
            (label_ref:SI 94)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:641 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6264 ])
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 94)
;;  succ:       5 [39.0%]  (FALLTHRU)
;;              6 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [39.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u80(1){ }u81(7){ }u82(16){ }u83(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 101
(note 83 82 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 84 83 85 5 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 82 {call_value_internal}
     (nil)
    (nil))
(note 85 84 87 5 NOTE_INSN_DELETED)
(note 87 85 96 5 NOTE_INSN_DELETED)
(insn 96 87 88 5 (set (reg/f:SI 101)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC133") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 88 96 89 5 (set (reg:SI 12 a12)
        (mem/j/c:SI (plus:SI (reg/f:SI 101)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 89 88 90 5 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 90 89 91 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC137") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC136") [flags 0x2]  <var_decl 0x10192ccf0 *.LC136>)
        (nil)))
(call_insn 91 90 94 5 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:642 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u93(1){ }u94(7){ }u95(16){ }u96(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 94 91 95 6 189 "" [1 uses])
(note 95 94 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_stopPingable (LMIC_stopPingable, funcdef_no=54, decl_uid=3359, cgraph_uid=54, symbol_order=61)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 13.
verify found no changes in insn with uid = 13.
deleting insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 13(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
 a0(r44): [1..8]
 a1(r48): [1..2]
 a2(r46): [3..4]
 a3(r47): [3..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r44): [0..3]
 a1(r48): [0..1]
 a2(r46): [2..3]
 a3(r47): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r44,l0) conflicts: a1(r48,l0) a2(r46,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r48,l0) conflicts: a0(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a0(r44,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r47,l0) conflicts: a0(r44,l0) a2(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r48)<->a2(r46)@125:shuffle
  cp1:a1(r48)<->a3(r47)@125:shuffle
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r44 1r48 2r46 3r47
    modified regnos: 44 46 47 48
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@56000
      Allocno a0r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r48-a2r46 (freq=125):
        Result (freq=4000): a1r48(2000) a2r46(2000)
      Pushing a3(r47,l0)(cost 0)
      Pushing a0(r44,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Pushing a1(r48,l0)(cost 0)
      Popping a1(r48,l0)  -- assign reg 8
      Popping a2(r46,l0)  -- assign reg 8
      Popping a0(r44,l0)  -- assign reg 9
      Popping a3(r47,l0)  -- assign reg 10
Disposition:
    0:r44  l0     9    2:r46  l0     8    3:r47  l0    10    1:r48  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_stopPingable

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r44={1d,2u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} 
;;    total ref usage 27{14d,12u,1e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 46 47 48
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC138") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:516 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 5 13 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:516 45 {movhi_internal}
     (nil))
(insn 13 8 9 2 (set (reg:HI 46)
        (const_int -1537 [0xfffffffffffff9ff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:516 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -1537 [0xfffffffffffff9ff])
        (nil)))
(insn 9 13 10 2 (set (reg:SI 48)
        (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:516 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int -1537 [0xfffffffffffff9ff]))
                (nil)))))
(insn 10 9 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 48) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:516 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 48)
        (expr_list:REG_DEAD (reg/f:SI 44)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setupBand (LMIC_setupBand, funcdef_no=57, decl_uid=3322, cgraph_uid=57, symbol_order=65)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
scanning new insn with uid = 62.
verify found no changes in insn with uid = 62.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Reg 48: def dominates all uses has unique first use
Reg 50: def dominates all uses has unique first use
Reg 52: def dominates all uses has unique first use
Reg 55: local to bb 3 def dominates all uses has unique first use
Reg 54 uninteresting
Reg 57 uninteresting
Reg 74 uninteresting
Reg 48 not local to one basic block
Reg 50 not local to one basic block
Reg 52 not local to one basic block
Examining insn 19, def for 55
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 54: (insn_list:REG_DEP_TRUE 62 (nil))

Pass 0 for finding pseudo/allocno costs

    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r74,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r48,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r57,l0) costs: ACC_REG:5835,5835 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31120,31120 MEM:7780,7780
  a2(r74,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a3(r52,l0) costs: ACC_REG:4167,4167 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22224,22224 MEM:5556,5556
  a4(r50,l0) costs: ACC_REG:4167,4167 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:22224,22224 MEM:5556,5556
  a5(r54,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:0,0
  a6(r55,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a7(r48,l0) costs: ACC_REG:7167,7167 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38224,38224 MEM:9556,9556

   Insn 54(l0): point = 0
   Insn 53(l0): point = 2
   Insn 9(l0): point = 5
   Insn 60(l0): point = 8
   Insn 10(l0): point = 10
   Insn 46(l0): point = 12
   Insn 45(l0): point = 14
   Insn 37(l0): point = 16
   Insn 36(l0): point = 18
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 23(l0): point = 24
   Insn 21(l0): point = 26
   Insn 62(l0): point = 28
   Insn 19(l0): point = 30
   Insn 13(l0): point = 33
   Insn 7(l0): point = 35
   Insn 5(l0): point = 37
   Insn 3(l0): point = 39
 a0(r42): [8..10] [3..5]
 a1(r57): [13..26]
 a2(r74): [13..14]
 a3(r52): [23..35]
 a4(r50): [25..37]
 a5(r54): [27..28]
 a6(r55): [27..30]
 a7(r48): [31..39]
Compressing live ranges: from 42 to 12 - 28%
Ranges after the compression:
 a0(r42): [0..3]
 a1(r57): [4..7]
 a2(r74): [4..5]
 a3(r52): [6..11]
 a4(r50): [6..11]
 a5(r54): [8..9]
 a6(r55): [8..9]
 a7(r48): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r42,l0) conflicts:;; a1(r57,l0) conflicts: a2(r74,l0) a3(r52,l0) a4(r50,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r74,l0) conflicts: a1(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r52,l0) conflicts: a1(r57,l0) a4(r50,l0) a5(r54,l0) a6(r55,l0) a7(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r50,l0) conflicts: a1(r57,l0) a3(r52,l0) a5(r54,l0) a6(r55,l0) a7(r48,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a5(r54,l0) conflicts: a3(r52,l0) a4(r50,l0) a6(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r55,l0) conflicts: a3(r52,l0) a4(r50,l0) a5(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r48,l0) conflicts: a3(r52,l0) a4(r50,l0)
;;     total conflict hard regs: 3 4
;;     conflict hard regs: 3 4

  cp0:a6(r55)<->a7(r48)@48:shuffle
  cp1:a1(r57)<->a6(r55)@48:shuffle
  cp2:a1(r57)<->a5(r54)@48:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a2(r74)<-hr10@48
  pref2:a7(r48)<-hr2@125
  pref3:a4(r50)<-hr3@125
  pref4:a3(r52)<-hr4@125
  regions=1, blocks=6, points=12
    allocnos=8 (big 0), copies=3, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r42 1r57 2r74 3r52 4r50 5r54 6r55 7r48
    modified regnos: 42 48 50 52 54 55 57 74
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@48244
          2:( 2 5-15)@19612
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r57 of AR_REGS(14) has 6 avail. regs  2-7, ^node:  2-15 (confl regs =  0 1 8-34)
      Allocno a2r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r50 of AR_REGS(14) has 13 avail. regs  2 3 5-15, ^node:  2-15 (confl regs =  0 1 4 16-34)
      Allocno a5r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r48 of AR_REGS(14) has 12 avail. regs  2 5-15, node:  2 5-15 (confl regs =  0 1 3 4 16-34)
      Forming thread by copy 0:a6r55-a7r48 (freq=48):
        Result (freq=3167): a6r55(778) a7r48(2389)
      Forming thread by copy 1:a1r57-a6r55 (freq=48):
        Result (freq=5112): a1r57(1945) a6r55(778) a7r48(2389)
      Pushing a5(r54,l0)(cost 0)
      Pushing a2(r74,l0)(cost 0)
      Pushing a4(r50,l0)(cost 0)
      Pushing a3(r52,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a6(r55,l0)(cost 0)
      Pushing a1(r57,l0)(cost 0)
      Pushing a7(r48,l0)(cost 0)
      Popping a7(r48,l0)  -- assign reg 2
      Popping a1(r57,l0)  -- assign reg 2
      Popping a6(r55,l0)  -- assign reg 2
      Popping a0(r42,l0)  -- assign reg 2
      Popping a3(r52,l0)  -- assign reg 4
      Popping a4(r50,l0)  -- assign reg 3
      Popping a2(r74,l0)  -- assign reg 10
      Popping a5(r54,l0)  -- assign reg 8
Disposition:
    0:r42  l0     2    7:r48  l0     2    4:r50  l0     3    3:r52  l0     4
    5:r54  l0     8    6:r55  l0     2    1:r57  l0     2    2:r74  l0    10
New iteration of spill/restore move
+++Costs: overall -4846, reg -4846, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setupBand

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 10[a10]
;;  ref usage 	r0={3d} r1={1d,7u} r2={2d,3u} r3={1d,1u} r4={1d,1u} r5={1d} r6={1d} r7={1d,5u} r8={2d} r9={2d} r10={2d,2u} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={1d,4u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r42={2d,1u} r48={1d,3u} r50={1d,1u} r52={1d,1u} r54={1d,1u} r55={1d,1u} r57={1d,4u} r74={1d,1u} 
;;    total ref usage 115{74d,41u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48 50 52
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 11 4 2 NOTE_INSN_DELETED)
(note 4 2 6 2 NOTE_INSN_DELETED)
(note 6 4 3 2 NOTE_INSN_DELETED)
(insn 3 6 5 2 (set (reg/v:SI 48 [ bandidx ])
        (zero_extend:SI (reg:QI 2 a2 [ bandidx ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:571 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ bandidx ])
        (nil)))
(insn 5 3 7 2 (set (reg/v:SI 50 [ txpow ])
        (zero_extend:SI (reg:QI 3 a3 [ txpow ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:571 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ txpow ])
        (nil)))
(insn 7 5 8 2 (set (reg/v:SI 52 [ txcap ])
        (zero_extend:SI (reg:HI 4 a4 [ txcap ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:571 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 4 a4 [ txcap ])
        (nil)))
(note 8 7 13 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 13 8 14 2 (set (pc)
        (if_then_else (ltu (reg/v:SI 48 [ bandidx ])
                (const_int 4 [0x4]))
            (pc)
            (label_ref:SI 59))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:572 59 {*ubfalse}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 59)
;;  succ:       4 [61.0%] 
;;              3 [39.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50 52

;; basic block 3, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(1){ }u12(7){ }u13(16){ }u14(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50 52
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 50 52
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 54 55 57 74
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 16 14 17 3 (var_location:SI D#2 (plus:SI (ashift:SI (plus:SI (reg/v:SI 48 [ bandidx ])
                (const_int 4 [0x4]))
            (const_int 3 [0x3]))
        (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:573 -1
     (nil))
(debug_insn 17 16 19 3 (var_location:SI b (debug_expr:SI D#2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:573 -1
     (nil))
(insn 19 17 20 3 (set (reg:SI 55)
        (plus:SI (reg/v:SI 48 [ bandidx ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:574 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 48 [ bandidx ])
        (nil)))
(note 20 19 62 3 NOTE_INSN_DELETED)
(insn 62 20 21 3 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC139") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:574 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 21 62 23 3 (set (reg:SI 57)
        (plus:SI (mult:SI (reg:SI 55)
                (const_int 8 [0x8]))
            (reg/f:SI 54))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:574 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_DEAD (reg/f:SI 54)
            (nil))))
(insn 23 21 28 3 (set (mem/j:QI (plus:SI (reg:SI 57)
                (const_int 2 [0x2])) [0 MEM[(struct band_t *)&LMIC].bands[_5].txpow+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 50 [ txpow ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:574 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 50 [ txpow ])
        (nil)))
(insn 28 23 29 3 (set (mem/j:HI (reg:SI 57) [0 MEM[(struct band_t *)&LMIC].bands[_5].txcap+0 S2 A32])
        (subreg/s/v:HI (reg/v:SI 52 [ txcap ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:575 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/v:SI 52 [ txcap ])
        (nil)))
(call_insn 29 28 30 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:576 82 {call_value_internal}
     (nil)
    (nil))
(note 30 29 36 3 NOTE_INSN_DELETED)
(insn 36 30 37 3 (set (mem/j:SI (plus:SI (reg:SI 57)
                (const_int 4 [0x4])) [0 MEM[(struct band_t *)&LMIC].bands[_5].avail+0 S4 A32])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:576 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(call_insn 37 36 38 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:577 82 {call_value_internal}
     (nil)
    (nil))
(note 38 37 45 3 NOTE_INSN_DELETED)
(insn 45 38 46 3 (set (reg:SI 74)
        (and:SI (reg:SI 10 a10)
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:577 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 46 45 10 3 (set (mem/j:QI (plus:SI (reg:SI 57)
                (const_int 3 [0x3])) [0 MEM[(struct band_t *)&LMIC].bands[_5].lastchnl+0 S1 A8])
        (subreg:QI (reg:SI 74) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:577 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 74)
        (expr_list:REG_DEAD (reg:SI 57)
            (nil))))
(insn 10 46 60 3 (set (reg:SI 42 [ D.6272 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:578 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 60 10 61 3 (set (pc)
        (label_ref 47)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:578 78 {jump}
     (nil)
 -> 47)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 61 60 59)
;; basic block 4, loop depth 0, count 0, freq 6102, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(1){ }u34(7){ }u35(16){ }u36(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 59 61 58 4 195 "" [1 uses])
(note 58 59 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 58 47 4 (set (reg:SI 42 [ D.6272 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:572 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(1){ }u38(7){ }u39(16){ }u40(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 47 9 48 5 194 "" [1 uses])
(note 48 47 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 48 54 5 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6272 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:579 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6272 ])
        (nil)))
(insn 54 53 0 5 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:579 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setupChannel (LMIC_setupChannel, funcdef_no=58, decl_uid=3327, cgraph_uid=58, symbol_order=66)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 21 (    1)
scanning new insn with uid = 132.
verify found no changes in insn with uid = 132.
deleting insn with uid = 75.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 21 (    1)
Reg 63: def dominates all uses has unique first use
Reg 65: def dominates all uses has unique first use
Reg 68 uninteresting
Reg 69 uninteresting
Reg 70 uninteresting
Reg 46: local to bb 4 def dominates all uses has unique first use
Reg 71 uninteresting
Reg 72 uninteresting
Reg 74 uninteresting
Reg 73: local to bb 6 def dominates all uses has unique first use
Reg 77 uninteresting
Reg 48: def dominates all uses has unique first use
Reg 79 uninteresting
Reg 78: local to bb 8 def dominates all uses has unique first use
Reg 82 uninteresting
Reg 50 uninteresting
Reg 51 uninteresting
Reg 84 uninteresting
Reg 85 uninteresting
Reg 86 uninteresting
Reg 44: local to bb 13 def dominates all uses has unique first use
Reg 45 uninteresting
Reg 88: local to bb 14 def dominates all uses has unique first use
Reg 87 uninteresting
Reg 90 uninteresting
Reg 91: local to bb 17 def dominates all uses has unique first use
Reg 92 uninteresting
Reg 94 uninteresting
Reg 95 uninteresting
Reg 55: local to bb 17 def dominates all uses has unique first use
Reg 98 uninteresting
Reg 100 uninteresting
Examining insn 67, def for 44
  all ok
Examining insn 25, def for 46
  all ok
Reg 48 not local to one basic block
Examining insn 90, def for 55
  all ok
Reg 63 not local to one basic block
Reg 65 not local to one basic block
Examining insn 37, def for 73
  all ok
Examining insn 45, def for 78
  all ok
Examining insn 76, def for 88
  all ok and transp
      Creating newreg=102 from oldreg=88
rescanning insn with uid = 76.
scanning new insn with uid = 133.
Ignoring reg 91 with equiv init insn
    New r102: setting preferred AR_REGS, alternative ALL_REGS
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 18 3 }
;; 3 succs { 4 12 }
;; 4 succs { 5 6 }
;; 5 succs { 14 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { 11 14 }
;; 11 succs { 14 }
;; 12 succs { 19 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 20 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 21 (    1)
init_insns for 68: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 70: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 71: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 74: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 77: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 79: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 82: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 84: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 86: (insn_list:REG_DEP_TRUE 66 (nil))
init_insns for 87: (insn_list:REG_DEP_TRUE 132 (nil))
init_insns for 91: (insn_list:REG_DEP_TRUE 84 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 89 (nil))

Pass 0 for finding pseudo/allocno costs

    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r102,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r100,l0) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r98,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r95,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r94,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r92,l0) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r91,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r90,l0) best AR_REGS, allocno AR_REGS
    r88: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r88,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r87,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r86,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r85,l0) best AR_REGS, allocno AR_REGS
    r84: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r84,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r82,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r80,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r79,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r78,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r77,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r75,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r73,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r72,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r71,l0) best AR_REGS, allocno AR_REGS
    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r70,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r68,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r65,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r62,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r60,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r55,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r48,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r95,l0) costs: ACC_REG:3942,3942 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:21024,21024 MEM:5256,5256
  a2(r91,l0) costs: ACC_REG:5256,5256 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28032,28032 MEM:3504,3504
  a3(r100,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a4(r98,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a5(r55,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a6(r60,l0) costs: ACC_REG:9942,9942 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:53024,53024 MEM:13256,13256
  a7(r94,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a8(r43,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a9(r92,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a10(r63,l0) costs: ACC_REG:4971,4971 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26512,26512 MEM:6628,6628
  a11(r90,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a12(r62,l0) costs: ACC_REG:7698,7698 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:41056,41056 MEM:10264,10264
  a13(r87,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:0,0
  a14(r88,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a15(r102,l0) costs: ACC_REG:2628,2628 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14016,14016 MEM:3504,3504
  a16(r45,l0) costs: ACC_REG:1602,1602 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8544,8544 MEM:2136,2136
  a17(r44,l0) costs: ACC_REG:1602,1602 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8544,8544 MEM:2136,2136
  a18(r65,l0) costs: ACC_REG:6948,6948 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:37056,37056 MEM:9264,9264
  a19(r86,l0) costs: ACC_REG:1602,1602 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8544,8544 MEM:2136,2136
  a20(r85,l0) costs: ACC_REG:2634,2634 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14048,14048 MEM:3512,3512
  a21(r84,l0) costs: ACC_REG:252,252 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1344,1344 MEM:336,336
  a22(r51,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a23(r50,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a24(r48,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a25(r80,l0) costs: ACC_REG:636,636 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3392,3392 MEM:848,848
  a26(r78,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a27(r82,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:0,0
  a28(r79,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:0,0
  a29(r75,l0) costs: ACC_REG:636,636 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3392,3392 MEM:848,848
  a30(r73,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a31(r77,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:0,0
  a32(r74,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:0,0
  a33(r72,l0) costs: ACC_REG:510,510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2720,2720 MEM:680,680
  a34(r46,l0) costs: ACC_REG:1020,1020 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5440,5440 MEM:1360,1360
  a35(r71,l0) costs: ACC_REG:1020,1020 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5440,5440 MEM:0,0
  a36(r70,l0) costs: ACC_REG:1020,1020 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5440,5440 MEM:0,0
  a37(r69,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a38(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 104(l0): point = 0
   Insn 103(l0): point = 2
   Insn 13(l0): point = 5
   Insn 130(l0): point = 8
   Insn 12(l0): point = 10
   Insn 128(l0): point = 13
   Insn 14(l0): point = 15
   Insn 96(l0): point = 17
   Insn 95(l0): point = 19
   Insn 93(l0): point = 21
   Insn 90(l0): point = 23
   Insn 89(l0): point = 25
   Insn 88(l0): point = 27
   Insn 87(l0): point = 29
   Insn 85(l0): point = 31
   Insn 84(l0): point = 33
   Insn 10(l0): point = 36
   Insn 126(l0): point = 39
   Insn 11(l0): point = 41
   Insn 80(l0): point = 44
   Insn 79(l0): point = 46
   Insn 78(l0): point = 48
   Insn 133(l0): point = 50
   Insn 132(l0): point = 52
   Insn 76(l0): point = 54
   Insn 69(l0): point = 57
   Insn 68(l0): point = 59
   Insn 67(l0): point = 61
   Insn 66(l0): point = 63
   Insn 64(l0): point = 66
   Insn 63(l0): point = 68
   Insn 124(l0): point = 71
   Insn 57(l0): point = 73
   Insn 56(l0): point = 75
   Insn 54(l0): point = 78
   Insn 53(l0): point = 80
   Insn 51(l0): point = 82
   Insn 49(l0): point = 85
   Insn 48(l0): point = 88
   Insn 47(l0): point = 90
   Insn 46(l0): point = 92
   Insn 45(l0): point = 94
   Insn 44(l0): point = 96
   Insn 43(l0): point = 98
   Insn 41(l0): point = 101
   Insn 40(l0): point = 104
   Insn 39(l0): point = 106
   Insn 38(l0): point = 108
   Insn 37(l0): point = 110
   Insn 36(l0): point = 112
   Insn 122(l0): point = 115
   Insn 30(l0): point = 117
   Insn 29(l0): point = 119
   Insn 27(l0): point = 122
   Insn 26(l0): point = 124
   Insn 25(l0): point = 126
   Insn 24(l0): point = 128
   Insn 22(l0): point = 131
   Insn 21(l0): point = 133
   Insn 19(l0): point = 136
   Insn 18(l0): point = 138
   Insn 8(l0): point = 140
   Insn 6(l0): point = 142
   Insn 3(l0): point = 144
   Insn 4(l0): point = 146
 a0(r42): [13..15] [8..10] [3..5]
 a1(r95): [16..25]
 a2(r91): [18..33]
 a3(r100): [18..19]
 a4(r98): [20..21]
 a5(r55): [20..23]
 a6(r60): [24..144]
 a7(r94): [28..29]
 a8(r43): [39..41] [28..36]
 a9(r92): [30..31]
 a10(r63): [44..142] [37..38]
 a11(r90): [47..48]
 a12(r62): [62..146] [47..57]
 a13(r87): [49..52]
 a14(r88): [49..50]
 a15(r102): [51..54]
 a16(r45): [58..59]
 a17(r44): [58..61]
 a18(r65): [131..140] [60..70]
 a19(r86): [62..63]
 a20(r85): [67..68]
 a21(r84): [74..75]
 a22(r51): [79..80]
 a23(r50): [81..82]
 a24(r48): [81..98]
 a25(r80): [88..92] [83..85]
 a26(r78): [89..94]
 a27(r82): [89..90]
 a28(r79): [95..96]
 a29(r75): [104..108] [99..101]
 a30(r73): [105..110]
 a31(r77): [105..106]
 a32(r74): [111..112]
 a33(r72): [118..119]
 a34(r46): [123..126]
 a35(r71): [123..124]
 a36(r70): [127..128]
 a37(r69): [132..133]
 a38(r68): [137..138]
Compressing live ranges: from 149 to 62 - 41%
Ranges after the compression:
 a0(r42): [0..5]
 a1(r95): [6..11]
 a2(r91): [6..15]
 a3(r100): [6..7]
 a4(r98): [8..9]
 a5(r55): [8..9]
 a6(r60): [10..61]
 a7(r94): [12..13]
 a8(r43): [18..19] [12..15]
 a9(r92): [14..15]
 a10(r63): [20..61] [16..17]
 a11(r90): [20..21]
 a12(r62): [30..61] [20..25]
 a13(r87): [22..25]
 a14(r88): [22..23]
 a15(r102): [24..25]
 a16(r45): [26..27]
 a17(r44): [26..29]
 a18(r65): [58..61] [28..33]
 a19(r86): [30..31]
 a20(r85): [32..33]
 a21(r84): [34..35]
 a22(r51): [36..37]
 a23(r50): [38..39]
 a24(r48): [38..45]
 a25(r80): [40..43]
 a26(r78): [42..43]
 a27(r82): [42..43]
 a28(r79): [44..45]
 a29(r75): [46..49]
 a30(r73): [48..49]
 a31(r77): [48..49]
 a32(r74): [50..51]
 a33(r72): [52..53]
 a34(r46): [54..55]
 a35(r71): [54..55]
 a36(r70): [56..57]
 a37(r69): [58..59]
 a38(r68): [60..61]
+++Allocating 304 bytes for conflict table (uncompressed size 312)
;; a0(r42,l0) conflicts:;; a1(r95,l0) conflicts: a3(r100,l0) a2(r91,l0) a4(r98,l0) a5(r55,l0) a6(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a3(r100,l0) a1(r95,l0) a4(r98,l0) a5(r55,l0) a6(r60,l0) a7(r94,l0) a8(r43,l0) a9(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r100,l0) conflicts: a1(r95,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r98,l0) conflicts: a1(r95,l0) a2(r91,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r55,l0) conflicts: a1(r95,l0) a2(r91,l0) a4(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r60,l0) conflicts: a1(r95,l0) a2(r91,l0) a7(r94,l0) a8(r43,l0) a9(r92,l0) a10(r63,l0) a11(r90,l0) a12(r62,l0) a14(r88,l0) a13(r87,l0) a15(r102,l0) a16(r45,l0) a17(r44,l0) a18(r65,l0) a19(r86,l0) a20(r85,l0) a21(r84,l0) a22(r51,l0) a23(r50,l0) a24(r48,l0) a25(r80,l0) a26(r78,l0) a27(r82,l0) a28(r79,l0) a29(r75,l0) a30(r73,l0) a31(r77,l0) a32(r74,l0) a33(r72,l0) a34(r46,l0) a35(r71,l0) a36(r70,l0) a37(r69,l0) a38(r68,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a7(r94,l0) conflicts: a2(r91,l0) a6(r60,l0) a8(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r43,l0) conflicts: a2(r91,l0) a6(r60,l0) a7(r94,l0) a9(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r92,l0) conflicts: a2(r91,l0) a6(r60,l0) a8(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r63,l0) conflicts: a6(r60,l0) a11(r90,l0) a12(r62,l0) a14(r88,l0) a13(r87,l0) a15(r102,l0) a16(r45,l0) a17(r44,l0) a18(r65,l0) a19(r86,l0) a20(r85,l0) a21(r84,l0) a22(r51,l0) a23(r50,l0) a24(r48,l0) a25(r80,l0) a26(r78,l0) a27(r82,l0) a28(r79,l0) a29(r75,l0) a30(r73,l0) a31(r77,l0) a32(r74,l0) a33(r72,l0) a34(r46,l0) a35(r71,l0) a36(r70,l0) a37(r69,l0) a38(r68,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a11(r90,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r62,l0) conflicts: a6(r60,l0) a10(r63,l0) a11(r90,l0) a14(r88,l0) a13(r87,l0) a15(r102,l0) a18(r65,l0) a19(r86,l0) a20(r85,l0) a21(r84,l0) a22(r51,l0) a23(r50,l0) a24(r48,l0) a25(r80,l0) a26(r78,l0) a27(r82,l0) a28(r79,l0) a29(r75,l0) a30(r73,l0) a31(r77,l0) a32(r74,l0) a33(r72,l0) a34(r46,l0) a35(r71,l0) a36(r70,l0) a37(r69,l0) a38(r68,l0)
;;     total conflict hard regs: 2 4 5
;;     conflict hard regs: 2 4 5

;; a13(r87,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a14(r88,l0) a15(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r88,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a13(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r102,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a13(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r45,l0) conflicts: a6(r60,l0) a10(r63,l0) a17(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r44,l0) conflicts: a6(r60,l0) a10(r63,l0) a16(r45,l0) a18(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r65,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a17(r44,l0) a19(r86,l0) a20(r85,l0) a37(r69,l0) a38(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r86,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a18(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r85,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a18(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r84,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r51,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r50,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a24(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r48,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a23(r50,l0) a25(r80,l0) a26(r78,l0) a27(r82,l0) a28(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r80,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a24(r48,l0) a26(r78,l0) a27(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r78,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a24(r48,l0) a25(r80,l0) a27(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r82,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a24(r48,l0) a25(r80,l0) a26(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r79,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a24(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r75,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a30(r73,l0) a31(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r73,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a29(r75,l0) a31(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r77,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a29(r75,l0) a30(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r74,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r72,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r46,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a35(r71,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r71,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a34(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r70,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r69,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a18(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r68,l0) conflicts: a6(r60,l0) a10(r63,l0) a12(r62,l0) a18(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r94)<->a9(r92)@54:shuffle
  cp1:a5(r55)<->a6(r60)@54:shuffle
  cp2:a3(r100)<->a4(r98)@54:shuffle
  cp3:a3(r100)<->a5(r55)@54:shuffle
  cp4:a0(r42)<->a1(r95)@438:move
  cp5:a8(r43)<->a10(r63)@219:move
  cp6:a14(r88)<->a15(r102)@438:move
  cp7:a11(r90)<->a14(r88)@54:shuffle
  cp8:a11(r90)<->a13(r87)@54:shuffle
  cp9:a17(r44)<->a19(r86)@33:shuffle
  cp10:a12(r62)<->a17(r44)@66:shuffle
  cp11:a16(r45)<->a18(r65)@33:shuffle
  cp12:a12(r62)<->a16(r45)@33:shuffle
  cp13:a23(r50)<->a25(r80)@10:shuffle
  cp14:a22(r51)<->a23(r50)@10:shuffle
  cp15:a22(r51)<->a24(r48)@10:shuffle
  cp16:a24(r48)<->a29(r75)@10:shuffle
  cp17:a26(r78)<->a28(r79)@10:shuffle
  cp18:a30(r73)<->a32(r74)@10:shuffle
  cp19:a34(r46)<->a36(r70)@21:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a12(r62)<-hr3@2000
  pref2:a6(r60)<-hr2@125
  pref3:a10(r63)<-hr4@125
  pref4:a18(r65)<-hr5@125
  regions=1, blocks=21, points=62
    allocnos=39 (big 0), copies=20, conflicts=0, ranges=43

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r95 2r91 3r100 4r98 5r55 6r60 7r94 8r43 9r92 10r63 11r90 12r62 13r87 14r88 15r102 16r45 17r44 18r65 19r86 20r85 21r84 22r51 23r50 24r48 25r80 26r78 27r82 28r79 29r75 30r73 31r77 32r74 33r72 34r46 35r71 36r70 37r69 38r68
    modified regnos: 42 43 44 45 46 48 50 51 55 60 62 63 65 68 69 70 71 72 73 74 75 77 78 79 80 82 84 85 86 87 88 90 91 92 94 95 98 100 102
    border:
    Pressure: AR_REGS=7
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@184156
          2:( 2-4 6-15)@13756
            3:( 2 3 6-15)@27012
              4:( 3 6-15)@28528
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r98 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r60 of AR_REGS(14) has 12 avail. regs  2 3 6-15, node:  2 3 6-15 (confl regs =  0 1 4 5 16-34)
      Allocno a7r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r63 of AR_REGS(14) has 13 avail. regs  2-4 6-15, node:  2-4 6-15 (confl regs =  0 1 5 16-34)
      Allocno a11r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r62 of AR_REGS(14) has 11 avail. regs  3 6-15, node:  3 6-15 (confl regs =  0-2 4 5 16-34)
      Allocno a13r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r88 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r84 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 4:a0r42-a1r95 (freq=438):
        Result (freq=3313): a0r42(1999) a1r95(1314)
      Forming thread by copy 6:a14r88-a15r102 (freq=438):
        Result (freq=1752): a14r88(876) a15r102(876)
      Forming thread by copy 5:a8r43-a10r63 (freq=219):
        Result (freq=2533): a8r43(876) a10r63(1657)
      Forming thread by copy 0:a7r94-a9r92 (freq=54):
        Result (freq=1752): a7r94(876) a9r92(876)
      Forming thread by copy 1:a5r55-a6r60 (freq=54):
        Result (freq=4190): a5r55(876) a6r60(3314)
      Forming thread by copy 2:a3r100-a4r98 (freq=54):
        Result (freq=1752): a3r100(876) a4r98(876)
      Forming thread by copy 7:a11r90-a14r88 (freq=54):
        Result (freq=2628): a11r90(876) a14r88(876) a15r102(876)
      Forming thread by copy 9:a17r44-a19r86 (freq=33):
        Result (freq=1068): a17r44(534) a19r86(534)
      Forming thread by copy 11:a16r45-a18r65 (freq=33):
        Result (freq=2850): a16r45(534) a18r65(2316)
      Forming thread by copy 19:a34r46-a36r70 (freq=21):
        Result (freq=680): a34r46(340) a36r70(340)
      Forming thread by copy 13:a23r50-a25r80 (freq=10):
        Result (freq=382): a23r50(170) a25r80(212)
      Forming thread by copy 14:a22r51-a23r50 (freq=10):
        Result (freq=552): a22r51(170) a23r50(170) a25r80(212)
      Forming thread by copy 16:a24r48-a29r75 (freq=10):
        Result (freq=382): a24r48(170) a29r75(212)
      Forming thread by copy 17:a26r78-a28r79 (freq=10):
        Result (freq=340): a26r78(170) a28r79(170)
      Forming thread by copy 18:a30r73-a32r74 (freq=10):
        Result (freq=340): a30r73(170) a32r74(170)
      Pushing a21(r84,l0)(cost 0)
      Pushing a33(r72,l0)(cost 0)
      Pushing a31(r77,l0)(cost 0)
      Pushing a27(r82,l0)(cost 0)
      Pushing a35(r71,l0)(cost 0)
      Pushing a32(r74,l0)(cost 0)
      Pushing a30(r73,l0)(cost 0)
      Pushing a28(r79,l0)(cost 0)
      Pushing a26(r78,l0)(cost 0)
      Pushing a24(r48,l0)(cost 0)
      Pushing a29(r75,l0)(cost 0)
      Pushing a23(r50,l0)(cost 0)
      Pushing a22(r51,l0)(cost 0)
      Pushing a25(r80,l0)(cost 0)
      Pushing a36(r70,l0)(cost 0)
      Pushing a34(r46,l0)(cost 0)
      Pushing a13(r87,l0)(cost 0)
        Making a10(r63,l0) colorable
        Making a12(r62,l0) colorable
      Pushing a20(r85,l0)(cost 0)
      Pushing a19(r86,l0)(cost 0)
      Pushing a17(r44,l0)(cost 0)
      Pushing a37(r69,l0)(cost 0)
      Pushing a9(r92,l0)(cost 0)
      Pushing a7(r94,l0)(cost 0)
        Making a6(r60,l0) colorable
      Pushing a4(r98,l0)(cost 0)
      Pushing a3(r100,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a38(r68,l0)(cost 0)
      Pushing a8(r43,l0)(cost 0)
      Pushing a10(r63,l0)(cost 6878)
      Pushing a12(r62,l0)(cost 14264)
      Pushing a15(r102,l0)(cost 0)
      Pushing a14(r88,l0)(cost 0)
      Pushing a11(r90,l0)(cost 0)
      Pushing a16(r45,l0)(cost 0)
      Pushing a18(r65,l0)(cost 0)
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a5(r55,l0)(cost 0)
      Pushing a6(r60,l0)(cost 13506)
      Popping a6(r60,l0)  -- assign reg 8
      Popping a5(r55,l0)  -- assign reg 8
      Popping a0(r42,l0)  -- assign reg 2
      Popping a1(r95,l0)  -- assign reg 2
      Popping a18(r65,l0)  -- assign reg 5
      Popping a16(r45,l0)  -- assign reg 5
      Popping a11(r90,l0)  -- assign reg 2
      Popping a14(r88,l0)  -- assign reg 2
      Popping a15(r102,l0)  -- assign reg 2
      Popping a12(r62,l0)  -- assign reg 3
      Popping a10(r63,l0)  -- assign reg 4
      Popping a8(r43,l0)  -- assign reg 4
      Popping a38(r68,l0)  -- assign reg 2
      Popping a2(r91,l0)  -- assign reg 3
      Popping a3(r100,l0)  -- assign reg 8
      Popping a4(r98,l0)  -- assign reg 4
      Popping a7(r94,l0)  -- assign reg 2
      Popping a9(r92,l0)  -- assign reg 2
      Popping a37(r69,l0)  -- assign reg 2
      Popping a17(r44,l0)  -- assign reg 3
      Popping a19(r86,l0)  -- assign reg 2
      Popping a20(r85,l0)  -- assign reg 2
      Popping a13(r87,l0)  -- assign reg 5
      Popping a34(r46,l0)  -- assign reg 2
      Popping a36(r70,l0)  -- assign reg 2
      Popping a25(r80,l0)  -- assign reg 2
      Popping a22(r51,l0)  -- assign reg 2
      Popping a23(r50,l0)  -- assign reg 2
      Popping a29(r75,l0)  -- assign reg 2
      Popping a24(r48,l0)  -- assign reg 5
      Popping a26(r78,l0)  -- assign reg 9
      Popping a28(r79,l0)  -- assign reg 9
      Popping a30(r73,l0)  -- assign reg 5
      Popping a32(r74,l0)  -- assign reg 5
      Popping a35(r71,l0)  -- assign reg 5
      Popping a27(r82,l0)  -- assign reg 10
      Popping a31(r77,l0)  -- assign reg 9
      Popping a33(r72,l0)  -- assign reg 2
      Popping a21(r84,l0)  -- assign reg 2
Disposition:
    0:r42  l0     2    8:r43  l0     4   17:r44  l0     3   16:r45  l0     5
   34:r46  l0     2   24:r48  l0     5   23:r50  l0     2   22:r51  l0     2
    5:r55  l0     8    6:r60  l0     8   12:r62  l0     3   10:r63  l0     4
   18:r65  l0     5   38:r68  l0     2   37:r69  l0     2   36:r70  l0     2
   35:r71  l0     5   33:r72  l0     2   30:r73  l0     5   32:r74  l0     5
   29:r75  l0     2   31:r77  l0     9   26:r78  l0     9   28:r79  l0     9
   25:r80  l0     2   27:r82  l0    10   21:r84  l0     2   20:r85  l0     2
   19:r86  l0     2   13:r87  l0     5   14:r88  l0     2   11:r90  l0     2
    2:r91  l0     3    9:r92  l0     2    7:r94  l0     2    1:r95  l0     2
    4:r98  l0     4    3:r100 l0     8   15:r102 l0     2
New iteration of spill/restore move
+++Costs: overall -8500, reg -8500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setupChannel

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2] 3[a3] 4[a4] 5[a5]
;;  ref usage 	r0={1d} r1={1d,20u} r2={2d,3u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d} r7={1d,20u} r16={1d,20u} r17={1d,19u} r42={3d,1u} r43={2d,1u} r44={1d,1u} r45={1d,1u} r46={1d,1u} r48={1d,1u} r50={1d,1u} r51={1d,1u} r55={1d,1u} r60={1d,4u,1e} r62={4d,11u,1e} r63={1d,2u} r65={1d,3u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={2d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={2d,1u} r82={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r90={1d,1u} r91={1d,3u} r92={1d,1u} r94={1d,1u} r95={1d,2u} r98={1d,1u} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 203{58d,143u,2e} in 69{69 regular + 0 call} insns.
(note 1 0 15 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 60 62 63 65 68
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 15 4 2 NOTE_INSN_DELETED)
(insn 4 2 5 2 (set (reg/v:SI 62 [ freq ])
        (reg:SI 3 a3 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:581 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ freq ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_DELETED)
(note 7 5 3 2 NOTE_INSN_DELETED)
(insn 3 7 6 2 (set (reg/v:SI 60 [ chidx ])
        (zero_extend:SI (reg:QI 2 a2 [ chidx ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:581 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ chidx ])
        (nil)))
(insn 6 3 8 2 (set (reg/v:SI 63 [ drmap ])
        (zero_extend:SI (reg:HI 4 a4 [ drmap ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:581 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 4 a4 [ drmap ])
        (nil)))
(insn 8 6 9 2 (set (reg/v:SI 65 [ band ])
        (zero_extend:SI (reg:QI 5 a5 [ band ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:581 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 5 a5 [ band ])
        (nil)))
(note 9 8 18 2 NOTE_INSN_FUNCTION_BEG)
(insn 18 9 19 2 (set (reg:SI 68)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:582 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ltu (reg:SI 68)
                (reg/v:SI 60 [ chidx ]))
            (label_ref:SI 109)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:582 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 68)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 109)
;;  succ:       18 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  def 	 69
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:SI 69 [ band ])
        (sign_extend:SI (subreg/s/v:QI (reg/v:SI 65 [ band ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:584 36 {extendqisi2_internal}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:SI 69 [ band ])
                (const_int -1 [0xffffffffffffffff]))
            (label_ref 61)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:584 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 69 [ band ])
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 61)
;;  succ:       4 [28.0%]  (FALLTHRU)
;;              12 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65

;; basic block 4, loop depth 0, count 0, freq 1708, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [28.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(1){ }u20(7){ }u21(16){ }u22(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	 46 70 71
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 70)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC140") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:585 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -869400000 [0xffffffffcc2e0240])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 46 [ D.6280 ])
        (plus:SI (reg/v:SI 62 [ freq ])
            (reg:SI 70))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:585 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 70)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 71)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC141") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:585 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 250000 [0x3d090])
        (nil)))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ltu (reg:SI 71)
                (reg:SI 46 [ D.6280 ]))
            (label_ref 34)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:585 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 71)
        (expr_list:REG_DEAD (reg:SI 46 [ D.6280 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 34)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63

;; basic block 5, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(1){ }u28(7){ }u29(16){ }u30(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	 62 72
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:SI 72)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:586 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 30 29 31 5 (set (reg/v:SI 62 [ freq ])
        (ior:SI (reg/v:SI 62 [ freq ])
            (reg:SI 72))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:586 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 72)
        (nil)))
(debug_insn 31 30 122 5 (var_location:SI freq (reg/v:SI 62 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:586 -1
     (nil))
(jump_insn 122 31 123 5 (set (pc)
        (label_ref 71)) 78 {jump}
     (nil)
 -> 71)
;;  succ:       14 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63

(barrier 123 122 34)
;; basic block 6, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(1){ }u35(7){ }u36(16){ }u37(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	 73 74 75 77
(code_label 34 123 35 6 199 "" [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 74)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC142") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -868000000 [0xffffffffcc435f00])
        (nil)))
(insn 37 36 38 6 (set (reg:SI 73 [ D.6280 ])
        (plus:SI (reg/v:SI 62 [ freq ])
            (reg:SI 74))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(insn 38 37 39 6 (set (reg:QI 75)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 39 38 40 6 (set (reg:SI 77)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC143") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 600000 [0x927c0])
        (nil)))
(jump_insn 40 39 118 6 (set (pc)
        (if_then_else (geu (reg:SI 77)
                (reg:SI 73 [ D.6280 ]))
            (label_ref 42)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 77)
        (expr_list:REG_DEAD (reg:SI 73 [ D.6280 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 42)
;;  succ:       8 [50.0%] 
;;              7 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 75

;; basic block 7, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(1){ }u43(7){ }u44(16){ }u45(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 75
(note 118 40 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 118 42 7 (set (reg:QI 75)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 75

;; basic block 8, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6 [50.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(1){ }u47(7){ }u48(16){ }u49(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 75
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62 75
;; lr  def 	 48 78 79 80 82
(code_label 42 41 119 8 201 "" [1 uses])
(note 119 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 119 44 8 (set (reg:SI 48 [ D.6281 ])
        (zero_extend:SI (reg:QI 75))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 75)
        (nil)))
(insn 44 43 45 8 (set (reg:SI 79)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC144") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -869700000 [0xffffffffcc296e60])
        (nil)))
(insn 45 44 46 8 (set (reg:SI 78 [ D.6280 ])
        (plus:SI (reg/v:SI 62 [ freq ])
            (reg:SI 79))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 46 45 47 8 (set (reg:QI 80)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 47 46 48 8 (set (reg:SI 82)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC145") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 300000 [0x493e0])
        (nil)))
(jump_insn 48 47 120 8 (set (pc)
        (if_then_else (geu (reg:SI 82)
                (reg:SI 78 [ D.6280 ]))
            (label_ref 50)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_DEAD (reg:SI 78 [ D.6280 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 50)
;;  succ:       10 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 60 62 63 80

;; basic block 9, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(1){ }u56(7){ }u57(16){ }u58(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 80
(note 120 48 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 120 50 9 (set (reg:QI 80)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 46 {movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 60 62 63 80

;; basic block 10, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(1){ }u60(7){ }u61(16){ }u62(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 60 62 63 80
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48 80
;; lr  def 	 50 51
(code_label 50 49 121 10 202 "" [1 uses])
(note 121 50 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 121 52 10 (set (reg:SI 50 [ D.6281 ])
        (zero_extend:SI (reg:QI 80))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:588 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 80)
        (nil)))
(note 52 51 53 10 NOTE_INSN_DELETED)
(insn 53 52 54 10 (set (reg:SI 51 [ D.6281 ])
        (ior:SI (reg:SI 48 [ D.6281 ])
            (reg:SI 50 [ D.6281 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6281 ])
        (expr_list:REG_DEAD (reg:SI 48 [ D.6281 ])
            (nil))))
(jump_insn 54 53 55 10 (set (pc)
        (if_then_else (eq (reg:SI 51 [ D.6281 ])
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:587 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 51 [ D.6281 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 71)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63

;; basic block 11, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(1){ }u69(7){ }u70(16){ }u71(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	 62 84
(note 55 54 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 11 (set (reg:SI 84)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:589 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 57 56 58 11 (set (reg/v:SI 62 [ freq ])
        (ior:SI (reg/v:SI 62 [ freq ])
            (reg:SI 84))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:589 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(debug_insn 58 57 124 11 (var_location:SI freq (reg/v:SI 62 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:589 -1
     (nil))
(jump_insn 124 58 125 11 (set (pc)
        (label_ref 71)) 78 {jump}
     (nil)
 -> 71)
;;  succ:       14 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63

(barrier 125 124 61)
;; basic block 12, loop depth 0, count 0, freq 4392, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       3 [72.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u75(1){ }u76(7){ }u77(16){ }u78(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  def 	 85
(code_label 61 125 62 12 198 "" [1 uses])
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (set (reg:SI 85 [ band ])
        (sign_extend:SI (subreg/s/v:QI (reg/v:SI 65 [ band ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:593 36 {extendqisi2_internal}
     (nil))
(jump_insn 64 63 65 12 (set (pc)
        (if_then_else (lt (reg:SI 85 [ band ])
                (const_int 4 [0x4]))
            (pc)
            (label_ref:SI 113))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:593 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 85 [ band ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 113)
;;  succ:       19 [39.0%] 
;;              13 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65

;; basic block 13, loop depth 0, count 0, freq 2679, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [61.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u81(1){ }u82(7){ }u83(16){ }u84(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63 65
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62 65
;; lr  def 	 44 45 62 86
(note 65 64 66 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 13 (set (reg:SI 86)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:594 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 67 66 68 13 (set (reg:SI 44 [ D.6280 ])
        (and:SI (reg/v:SI 62 [ freq ])
            (reg:SI 86))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:594 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 86)
        (expr_list:REG_DEAD (reg/v:SI 62 [ freq ])
            (expr_list:REG_EQUAL (and:SI (reg/v:SI 62 [ freq ])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 68 67 69 13 (set (reg:SI 45 [ D.6280 ])
        (sign_extend:SI (subreg/s/v:QI (reg/v:SI 65 [ band ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:594 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg/v:SI 65 [ band ])
        (nil)))
(insn 69 68 70 13 (set (reg/v:SI 62 [ freq ])
        (ior:SI (reg:SI 44 [ D.6280 ])
            (reg:SI 45 [ D.6280 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:594 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6280 ])
        (expr_list:REG_DEAD (reg:SI 44 [ D.6280 ])
            (nil))))
(debug_insn 70 69 71 13 (var_location:SI freq (reg/v:SI 62 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:594 -1
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63

;; basic block 14, loop depth 0, count 0, freq 4387, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;;              13 [100.0%]  (FALLTHRU)
;;              10 [50.0%] 
;;              11 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u92(1){ }u93(7){ }u94(16){ }u95(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 62 63
;; lr  def 	 87 88 90 102
(code_label 71 70 72 14 200 "" [3 uses])
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 76 14 (var_location:SI freq (reg/v:SI 62 [ freq ])) -1
     (nil))
(insn 76 73 77 14 (set (reg:SI 102 [88])
        (plus:SI (reg/v:SI 60 [ chidx ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:596 1 {addsi3}
     (nil))
(note 77 76 132 14 NOTE_INSN_DELETED)
(insn 132 77 133 14 (set (reg/f:SI 87)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC146") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:596 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 133 132 78 14 (set (reg:SI 88)
        (reg:SI 102 [88])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:596 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [88])
        (nil)))
(insn 78 133 79 14 (set (reg/f:SI 90)
        (plus:SI (mult:SI (reg:SI 88)
                (const_int 4 [0x4]))
            (reg/f:SI 87))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:596 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg/f:SI 87)
            (nil))))
(insn 79 78 80 14 (set (mem/j:SI (reg/f:SI 90) [0 LMIC.channelFreq S4 A32])
        (reg/v:SI 62 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:596 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_DEAD (reg/v:SI 62 [ freq ])
            (nil))))
(jump_insn 80 79 81 14 (set (pc)
        (if_then_else (ne (reg/v:SI 63 [ drmap ])
                (const_int 0 [0]))
            (label_ref:SI 117)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 117)
;;  succ:       16 [50.0%] 
;;              15 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 63

;; basic block 15, loop depth 0, count 0, freq 2194, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [50.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u104(1){ }u105(7){ }u106(16){ }u107(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(note 81 80 11 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 11 81 126 15 (set (reg:SI 43 [ D.6279 ])
        (const_int 63 [0x3f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 63 [0x3f])
        (nil)))
(jump_insn 126 11 127 15 (set (pc)
        (label_ref 82)) 78 {jump}
     (nil)
 -> 82)
;;  succ:       17 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 60

(barrier 127 126 117)
;; basic block 16, loop depth 0, count 0, freq 2194, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u108(1){ }u109(7){ }u110(16){ }u111(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63
;; lr  def 	 43
(code_label 117 127 116 16 206 "" [1 uses])
(note 116 117 10 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 10 116 82 16 (set (reg:SI 43 [ D.6279 ])
        (reg/v:SI 63 [ drmap ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 63 [ drmap ])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 60

;; basic block 17, loop depth 0, count 0, freq 4387, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u113(1){ }u114(7){ }u115(16){ }u116(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 60
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 60
;; lr  def 	 42 55 91 92 94 95 98 100
(code_label 82 10 83 17 203 "" [1 uses])
(note 83 82 84 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 17 (set (reg/f:SI 91)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC146") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 85 84 86 17 (set (reg:SI 92)
        (plus:SI (reg/v:SI 60 [ chidx ])
            (const_int 64 [0x40]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 1 {addsi3}
     (nil))
(note 86 85 87 17 NOTE_INSN_DELETED)
(insn 87 86 88 17 (set (reg/f:SI 94)
        (plus:SI (mult:SI (reg:SI 92)
                (const_int 2 [0x2]))
            (reg/f:SI 91))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 88 87 89 17 (set (mem/j:HI (reg/f:SI 94) [0 LMIC.channelDrMap S2 A16])
        (subreg/s/v:HI (reg:SI 43 [ D.6279 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:597 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6279 ])
            (nil))))
(insn 89 88 90 17 (set (reg:SI 95)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:598 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 90 89 93 17 (set (reg:SI 55 [ D.6282 ])
        (ashift:SI (reg:SI 95)
            (reg/v:SI 60 [ chidx ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:598 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg/v:SI 60 [ chidx ])
        (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                (reg/v:SI 60 [ chidx ]))
            (nil))))
(insn 93 90 95 17 (set (reg:HI 98 [ LMIC.channelMap ])
        (mem/j/c:HI (plus:SI (reg/f:SI 91)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:598 45 {movhi_internal}
     (nil))
(insn 95 93 96 17 (set (reg:SI 100)
        (ior:SI (reg:SI 55 [ D.6282 ])
            (subreg:SI (reg:HI 98 [ LMIC.channelMap ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:598 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 98 [ LMIC.channelMap ])
        (expr_list:REG_DEAD (reg:SI 55 [ D.6282 ])
            (nil))))
(insn 96 95 14 17 (set (mem/j/c:HI (plus:SI (reg/f:SI 91)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])
        (subreg:HI (reg:SI 100) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:598 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_DEAD (reg/f:SI 91)
            (nil))))
(insn 14 96 128 17 (set (reg:SI 42 [ D.6278 ])
        (reg:SI 95)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:599 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
(jump_insn 128 14 129 17 (set (pc)
        (label_ref 97)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:599 78 {jump}
     (nil)
 -> 97)
;;  succ:       20 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 129 128 109)
;; basic block 18, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u132(1){ }u133(7){ }u134(16){ }u135(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 109 129 108 18 204 "" [1 uses])
(note 108 109 12 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 12 108 130 18 (set (reg:SI 42 [ D.6278 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:583 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 130 12 131 18 (set (pc)
        (label_ref 97)) 78 {jump}
     (nil)
 -> 97)
;;  succ:       20 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 131 130 113)
;; basic block 19, loop depth 0, count 0, freq 1713, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       12 [39.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u136(1){ }u137(7){ }u138(16){ }u139(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 113 131 112 19 205 "" [1 uses])
(note 112 113 13 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 13 112 97 19 (set (reg:SI 42 [ D.6278 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:593 44 {movsi_internal}
     (nil))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 20, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 19, next block 1, flags: (RTL)
;;  pred:       17 [100.0%] 
;;              19 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u140(1){ }u141(7){ }u142(16){ }u143(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 97 13 98 20 197 "" [2 uses])
(note 98 97 103 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 103 98 104 20 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6278 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:600 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6278 ])
        (nil)))
(insn 104 103 0 20 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:600 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function decodeFrame (decodeFrame, funcdef_no=72, decl_uid=3711, cgraph_uid=72, symbol_order=80)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 848.
verify found no changes in insn with uid = 848.
deleting insn with uid = 746.
scanning new insn with uid = 849.
verify found no changes in insn with uid = 849.
deleting insn with uid = 727.
scanning new insn with uid = 850.
verify found no changes in insn with uid = 850.
deleting insn with uid = 714.
scanning new insn with uid = 851.
verify found no changes in insn with uid = 851.
deleting insn with uid = 713.
scanning new insn with uid = 852.
verify found no changes in insn with uid = 852.
deleting insn with uid = 691.
scanning new insn with uid = 853.
verify found no changes in insn with uid = 853.
deleting insn with uid = 689.
scanning new insn with uid = 854.
verify found no changes in insn with uid = 854.
deleting insn with uid = 634.
scanning new insn with uid = 855.
verify found no changes in insn with uid = 855.
deleting insn with uid = 627.
scanning new insn with uid = 856.
verify found no changes in insn with uid = 856.
deleting insn with uid = 571.
scanning new insn with uid = 857.
verify found no changes in insn with uid = 857.
deleting insn with uid = 558.
scanning new insn with uid = 858.
verify found no changes in insn with uid = 858.
deleting insn with uid = 526.
scanning new insn with uid = 859.
verify found no changes in insn with uid = 859.
deleting insn with uid = 525.
scanning new insn with uid = 860.
verify found no changes in insn with uid = 860.
deleting insn with uid = 485.
scanning new insn with uid = 861.
verify found no changes in insn with uid = 861.
deleting insn with uid = 449.
scanning new insn with uid = 862.
verify found no changes in insn with uid = 862.
deleting insn with uid = 438.
scanning new insn with uid = 863.
verify found no changes in insn with uid = 863.
deleting insn with uid = 437.
scanning new insn with uid = 864.
verify found no changes in insn with uid = 864.
deleting insn with uid = 423.
scanning new insn with uid = 865.
verify found no changes in insn with uid = 865.
deleting insn with uid = 422.
scanning new insn with uid = 866.
verify found no changes in insn with uid = 866.
deleting insn with uid = 416.
scanning new insn with uid = 867.
verify found no changes in insn with uid = 867.
deleting insn with uid = 400.
scanning new insn with uid = 868.
verify found no changes in insn with uid = 868.
deleting insn with uid = 399.
scanning new insn with uid = 869.
verify found no changes in insn with uid = 869.
deleting insn with uid = 392.
scanning new insn with uid = 870.
verify found no changes in insn with uid = 870.
deleting insn with uid = 391.
scanning new insn with uid = 871.
verify found no changes in insn with uid = 871.
deleting insn with uid = 362.
scanning new insn with uid = 872.
verify found no changes in insn with uid = 872.
deleting insn with uid = 337.
scanning new insn with uid = 873.
verify found no changes in insn with uid = 873.
deleting insn with uid = 313.
scanning new insn with uid = 874.
verify found no changes in insn with uid = 874.
deleting insn with uid = 323.
scanning new insn with uid = 875.
verify found no changes in insn with uid = 875.
deleting insn with uid = 322.
scanning new insn with uid = 876.
verify found no changes in insn with uid = 876.
deleting insn with uid = 280.
scanning new insn with uid = 877.
verify found no changes in insn with uid = 877.
deleting insn with uid = 242.
scanning new insn with uid = 878.
verify found no changes in insn with uid = 878.
deleting insn with uid = 241.
scanning new insn with uid = 879.
verify found no changes in insn with uid = 879.
deleting insn with uid = 220.
scanning new insn with uid = 880.
verify found no changes in insn with uid = 880.
deleting insn with uid = 115.
scanning new insn with uid = 881.
verify found no changes in insn with uid = 881.
deleting insn with uid = 112.
scanning new insn with uid = 882.
verify found no changes in insn with uid = 882.
deleting insn with uid = 87.
scanning new insn with uid = 883.
verify found no changes in insn with uid = 883.
deleting insn with uid = 86.
scanning new insn with uid = 884.
verify found no changes in insn with uid = 884.
deleting insn with uid = 28.
rescanning insn with uid = 316.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 134 count 122 (  1.4)
Reg 223 uninteresting
Reg 224 uninteresting
Reg 54: def dominates all uses has unique first use
Reg 225 uninteresting
Reg 57: def dominates all uses has unique first use
Reg 58 uninteresting
Reg 238 uninteresting
Reg 243: local to bb 9 def dominates all uses has unique first use
Reg 244 uninteresting
Reg 241: local to bb 9 def dominates all uses has unique first use
Reg 247 uninteresting
Reg 246 uninteresting
Reg 255: local to bb 10 def dominates all uses has unique first use
Reg 253 uninteresting
Reg 254 uninteresting
Reg 256 uninteresting
Reg 257 uninteresting
Reg 65: def dominates all uses has unique first use
Reg 66: local to bb 11 def dominates all uses has unique first use
Reg 68: def dominates all uses has unique first use
Reg 69 uninteresting (no unique first use)
Reg 262 uninteresting
Reg 267: local to bb 11 def dominates all uses has unique first use
Reg 266 uninteresting
Reg 265 uninteresting
Reg 72: def dominates all uses has unique first use
Reg 73 uninteresting (no unique first use)
Reg 74 uninteresting
Reg 269 uninteresting
Reg 270 uninteresting
Reg 271 uninteresting
Reg 79 uninteresting
Reg 273 uninteresting
Reg 81 uninteresting
Reg 83 uninteresting (no unique first use)
Reg 276 uninteresting
Reg 85 uninteresting
Reg 88 uninteresting
Reg 277 uninteresting
Reg 278 uninteresting
Reg 89 uninteresting
Reg 280 uninteresting
Reg 90: local to bb 23 def dominates all uses has unique first use
Reg 281 uninteresting
Reg 283 uninteresting
Reg 284 uninteresting
Reg 285 uninteresting
Reg 286 uninteresting
Reg 287 uninteresting
Reg 91 uninteresting
Reg 292 uninteresting
Reg 294 uninteresting
Reg 296 uninteresting
Reg 297: local to bb 30 def dominates all uses has unique first use
Reg 298 uninteresting
Reg 300 uninteresting
Reg 95 uninteresting
Reg 305: local to bb 30 def dominates all uses has unique first use
Reg 306 uninteresting
Reg 309: local to bb 31 def dominates all uses has unique first use
Reg 307 uninteresting
Reg 308 uninteresting
Reg 310 uninteresting
Reg 96 uninteresting
Reg 311 uninteresting
Reg 98: local to bb 32 def dominates all uses has unique first use
Reg 313 uninteresting
Reg 104 uninteresting
Reg 314 uninteresting
Reg 315 uninteresting
Reg 105 uninteresting (no unique first use)
Reg 316 uninteresting
Reg 317 uninteresting
Reg 107: def dominates all uses has unique first use
Reg 319 uninteresting
Reg 320 uninteresting
Reg 322 uninteresting
Reg 323 uninteresting
Reg 324: local to bb 38 def dominates all uses has unique first use
Reg 325 uninteresting
Reg 109 uninteresting
Reg 110: def dominates all uses has unique first use
Reg 111 uninteresting
Reg 328 uninteresting
Reg 329 uninteresting
Reg 116 uninteresting
Reg 118: def dominates all uses has unique first use
Reg 335: local to bb 38 def dominates all uses has unique first use
Reg 333 uninteresting
Reg 334 uninteresting
Reg 330 uninteresting
Reg 337 uninteresting
Reg 338 uninteresting
Reg 341 uninteresting
Reg 343 uninteresting
Reg 180 uninteresting
Reg 158: local to bb 40 def dominates all uses has unique first use
Reg 345 uninteresting
Reg 139 uninteresting
Reg 131: local to bb 40 def dominates all uses has unique first use
Reg 346 uninteresting
Reg 347 uninteresting
Reg 348 uninteresting
Reg 351 uninteresting
Reg 353 uninteresting
Reg 354 uninteresting
Reg 355 uninteresting
Reg 128 uninteresting
Reg 357 uninteresting
Reg 358 uninteresting
Reg 130: local to bb 43 def dominates all uses has unique first use
Reg 360 uninteresting
Reg 101 uninteresting
Reg 67 uninteresting
Reg 364: local to bb 44 def dominates all uses has unique first use
Reg 362 uninteresting
Reg 363 uninteresting
Reg 367: local to bb 45 def dominates all uses has unique first use
Reg 365 uninteresting
Reg 366 uninteresting
Reg 368 uninteresting
Reg 369 uninteresting
Reg 135 uninteresting
Reg 136: def dominates all uses has unique first use
Reg 137: local to bb 46 def dominates all uses has unique first use
Reg 371 uninteresting
Reg 140: def dominates all uses has unique first use
Reg 374: local to bb 46 def dominates all uses has unique first use
Reg 372 uninteresting
Reg 373 uninteresting
Reg 218: local to bb 46 def dominates all uses has unique first use
Reg 375 uninteresting
Reg 220 uninteresting
Reg 221: local to bb 46 def dominates all uses has unique first use
Reg 376 uninteresting
Reg 379: local to bb 47 def dominates all uses has unique first use
Reg 377 uninteresting
Reg 378 uninteresting
Reg 380 uninteresting
Reg 381 uninteresting
Reg 384 uninteresting
Reg 386 uninteresting
Reg 387 uninteresting
Reg 388 uninteresting
Reg 145: local to bb 50 def dominates all uses has unique first use
Reg 390 uninteresting
Reg 391 uninteresting
Reg 392 uninteresting
Reg 394: local to bb 53 def dominates all uses has unique first use
Reg 395 uninteresting
Reg 147 uninteresting
Reg 148: def dominates all uses has unique first use
Reg 396 uninteresting
Reg 397 uninteresting
Reg 399 uninteresting
Reg 401 uninteresting
Reg 402: local to bb 55 def dominates all uses has unique first use
Reg 403 uninteresting
Reg 406: local to bb 55 def dominates all uses has unique first use
Reg 407 uninteresting
Reg 408: local to bb 56 def dominates all uses has unique first use
Reg 409 uninteresting
Reg 154 uninteresting
Reg 155: def dominates all uses has unique first use
Reg 156 uninteresting
Reg 159: def dominates all uses has unique first use
Reg 411 uninteresting
Reg 161 uninteresting
Reg 162: def dominates all uses has unique first use
Reg 415: local to bb 56 def dominates all uses has unique first use
Reg 413 uninteresting
Reg 414 uninteresting
Reg 164: local to bb 57 def dominates all uses has unique first use
Reg 417 uninteresting
Reg 165: local to bb 57 def dominates all uses has unique first use
Reg 419 uninteresting
Reg 169 uninteresting
Reg 170 uninteresting
Reg 423: local to bb 57 def dominates all uses has unique first use
Reg 426 uninteresting
Reg 427 uninteresting
Reg 430 uninteresting
Reg 432 uninteresting
Reg 178: local to bb 60 def dominates all uses has unique first use
Reg 433 uninteresting
Reg 181 uninteresting
Reg 434 uninteresting
Reg 435 uninteresting
Reg 436 uninteresting
Reg 437 uninteresting
Reg 442 uninteresting
Reg 443 uninteresting
Reg 185: local to bb 65 def dominates all uses has unique first use
Reg 444 uninteresting
Reg 445 uninteresting
Reg 447 uninteresting
Reg 448 uninteresting
Reg 187 uninteresting
Reg 188: local to bb 67 def dominates all uses has unique first use
Reg 189: local to bb 67 def dominates all uses has unique first use
Reg 453 uninteresting
Reg 454: local to bb 67 def dominates all uses has unique first use
Reg 457 uninteresting
Reg 512: local to bb 67 def dominates all uses has unique first use
Reg 196: local to bb 67 def dominates all uses has unique first use
Reg 467 uninteresting
Ignoring reg 197, has equiv memory
Reg 470: local to bb 67 def dominates all uses has unique first use
Reg 516 uninteresting
Reg 198 uninteresting
Reg 473 uninteresting
Reg 474 uninteresting
Reg 475 uninteresting
Reg 476 uninteresting
Reg 202 uninteresting
Reg 477 uninteresting
Reg 478 uninteresting
Reg 204: def dominates all uses has unique first use
Reg 483: local to bb 81 def dominates all uses has unique first use
Reg 479 uninteresting
Reg 480 uninteresting
Reg 484 uninteresting
Reg 485 uninteresting
Reg 488 uninteresting
Reg 490 uninteresting
Reg 495 uninteresting
Reg 496 uninteresting
Reg 497 uninteresting
Reg 500 uninteresting
Reg 502 uninteresting
Reg 212 uninteresting
Reg 508 uninteresting
Reg 54 not local to one basic block
Reg 57 not local to one basic block
Reg 65 not local to one basic block
Found def insn 101 for 66 to be not moveable
Reg 68 not local to one basic block
Reg 72 not local to one basic block
Examining insn 191, def for 90
  all ok and transp
      Creating newreg=517 from oldreg=90
rescanning insn with uid = 191.
scanning new insn with uid = 885.
Examining insn 250, def for 98
  all ok
Reg 107 not local to one basic block
Reg 110 not local to one basic block
Reg 118 not local to one basic block
Examining insn 378, def for 130
  all ok
Found def insn 354 for 131 to be not moveable
Reg 136 not local to one basic block
Examining insn 415, def for 137
  all ok
Reg 140 not local to one basic block
Found def insn 457 for 145 to be not moveable
Reg 148 not local to one basic block
Reg 155 not local to one basic block
Examining insn 348, def for 158
  all ok
Reg 159 not local to one basic block
Reg 162 not local to one basic block
Examining insn 532, def for 164
  all ok
Examining insn 534, def for 165
  all ok
Examining insn 570, def for 178
  all ok
Found def insn 605 for 185 to be not moveable
Found def insn 625 for 188 to be not moveable
Examining insn 626, def for 189
  all ok
Found def insn 653 for 196 to be not moveable
Reg 204 not local to one basic block
Examining insn 427, def for 218
  all ok
Found def insn 433 for 221 to be not moveable
Examining insn 64, def for 241
  all ok
Ignoring reg 243 with equiv init insn
Ignoring reg 255 with equiv init insn
Ignoring reg 267 with equiv init insn
Ignoring reg 297 with equiv init insn
Examining insn 237, def for 305
  all ok
Ignoring reg 309 with equiv init insn
Examining insn 297, def for 324
  all ok
Ignoring reg 335 with equiv init insn
Ignoring reg 364 with equiv init insn
Ignoring reg 367 with equiv init insn
Ignoring reg 374 with equiv init insn
Ignoring reg 379 with equiv init insn
Examining insn 475, def for 394
  all ok
Ignoring reg 402 with equiv init insn
Ignoring reg 406 with equiv init insn
Examining insn 508, def for 408
  all ok
Ignoring reg 415 with equiv init insn
Examining insn 543, def for 423
  all ok
Found def insn 631 for 454 to be not moveable
Ignoring reg 470 with equiv init insn
Examining insn 717, def for 483
  all ok
Examining insn 642, def for 512
  all ok
    New r517: setting preferred AR_REGS, alternative ALL_REGS
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
;;
;; Loop 1
;;  header 69, multiple latches: 68 59 37 44 45 52 55 63
;;  depth 1, outer 0
;;  nodes: 69 68 59 37 44 45 52 55 63 62 61 60 36 35 53 54 50 51 48 49 46 47 42 43 40 41 38 39 56 57 58 64 67 65 66
;; 2 succs { 3 5 }
;; 3 succs { 4 6 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 86 }
;; 11 succs { 10 12 }
;; 12 succs { 10 13 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 10 17 }
;; 17 succs { 18 23 }
;; 18 succs { 10 19 }
;; 19 succs { 10 20 }
;; 20 succs { 10 21 }
;; 21 succs { 10 22 }
;; 22 succs { 27 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 29 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 69 }
;; 35 succs { 70 36 }
;; 36 succs { 70 37 38 53 46 45 56 60 64 }
;; 37 succs { 69 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 69 }
;; 45 succs { 69 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 69 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 69 }
;; 56 succs { 57 59 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 69 }
;; 60 succs { 61 62 }
;; 61 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 69 }
;; 64 succs { 65 68 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 35 70 }
;; 70 succs { 71 77 }
;; 71 succs { 72 77 }
;; 72 succs { 73 77 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 }
;; 77 succs { 78 82 }
;; 78 succs { 79 80 }
;; 79 succs { 81 }
;; 80 succs { 81 }
;; 81 succs { 82 }
;; 82 succs { 83 84 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 134 count 122 (  1.4)
init_insns for 197: (insn_list:REG_DEP_TRUE 657 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 884 (nil))
init_insns for 238: (insn_list:REG_DEP_TRUE 54 (nil))
init_insns for 243: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 244: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 247: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 253: (insn_list:REG_DEP_TRUE 883 (nil))
init_insns for 254: (insn_list:REG_DEP_TRUE 882 (nil))
init_insns for 255: (insn_list:REG_DEP_TRUE 88 (nil))
init_insns for 256: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 257: (insn_list:REG_DEP_TRUE 95 (nil))
init_insns for 262: (insn_list:REG_DEP_TRUE 881 (nil))
init_insns for 266: (insn_list:REG_DEP_TRUE 880 (nil))
init_insns for 267: (insn_list:REG_DEP_TRUE 116 (nil))
init_insns for 269: (insn_list:REG_DEP_TRUE 138 (nil))
init_insns for 271: (insn_list:REG_DEP_TRUE 147 (nil))
init_insns for 276: (insn_list:REG_DEP_TRUE 167 (nil))
init_insns for 277: (insn_list:REG_DEP_TRUE 178 (nil))
init_insns for 278: (insn_list:REG_DEP_TRUE 179 (nil))
init_insns for 280: (insn_list:REG_DEP_TRUE 184 (nil))
init_insns for 281: (insn_list:REG_DEP_TRUE 192 (nil))
init_insns for 283: (insn_list:REG_DEP_TRUE 195 (nil))
init_insns for 284: (insn_list:REG_DEP_TRUE 200 (nil))
init_insns for 285: (insn_list:REG_DEP_TRUE 201 (nil))
init_insns for 286: (insn_list:REG_DEP_TRUE 206 (nil))
init_insns for 287: (insn_list:REG_DEP_TRUE 207 (nil))
init_insns for 292: (insn_list:REG_DEP_TRUE 218 (nil))
init_insns for 294: (insn_list:REG_DEP_TRUE 879 (nil))
init_insns for 297: (insn_list:REG_DEP_TRUE 226 (nil))
init_insns for 298: (insn_list:REG_DEP_TRUE 227 (nil))
init_insns for 300: (insn_list:REG_DEP_TRUE 230 (nil))
init_insns for 306: (insn_list:REG_DEP_TRUE 238 (nil))
init_insns for 307: (insn_list:REG_DEP_TRUE 878 (nil))
init_insns for 308: (insn_list:REG_DEP_TRUE 877 (nil))
init_insns for 309: (insn_list:REG_DEP_TRUE 243 (nil))
init_insns for 310: (insn_list:REG_DEP_TRUE 247 (nil))
init_insns for 313: (insn_list:REG_DEP_TRUE 260 (nil))
init_insns for 314: (insn_list:REG_DEP_TRUE 265 (nil))
init_insns for 315: (insn_list:REG_DEP_TRUE 266 (nil))
init_insns for 316: (insn_list:REG_DEP_TRUE 274 (nil))
init_insns for 319: (insn_list:REG_DEP_TRUE 278 (nil))
init_insns for 320: (insn_list:REG_DEP_TRUE 876 (nil))
init_insns for 325: (insn_list:REG_DEP_TRUE 298 (nil))
init_insns for 328: (insn_list:REG_DEP_TRUE 310 (nil))
init_insns for 330: (insn_list:REG_DEP_TRUE 873 (nil))
init_insns for 333: (insn_list:REG_DEP_TRUE 875 (nil))
init_insns for 334: (insn_list:REG_DEP_TRUE 874 (nil))
init_insns for 335: (insn_list:REG_DEP_TRUE 324 (nil))
init_insns for 337: (insn_list:REG_DEP_TRUE 333 (nil))
init_insns for 338: (insn_list:REG_DEP_TRUE 334 (nil))
init_insns for 341: (insn_list:REG_DEP_TRUE 872 (nil))
init_insns for 345: (insn_list:REG_DEP_TRUE 352 (nil))
init_insns for 346: (insn_list:REG_DEP_TRUE 355 (nil))
init_insns for 347: (insn_list:REG_DEP_TRUE 358 (nil))
init_insns for 348: (insn_list:REG_DEP_TRUE 359 (nil))
init_insns for 351: (insn_list:REG_DEP_TRUE 871 (nil))
init_insns for 354: (insn_list:REG_DEP_TRUE 368 (nil))
init_insns for 355: (insn_list:REG_DEP_TRUE 369 (nil))
init_insns for 358: (insn_list:REG_DEP_TRUE 375 (nil))
init_insns for 360: (insn_list:REG_DEP_TRUE 381 (nil))
init_insns for 362: (insn_list:REG_DEP_TRUE 870 (nil))
init_insns for 363: (insn_list:REG_DEP_TRUE 869 (nil))
init_insns for 364: (insn_list:REG_DEP_TRUE 393 (nil))
init_insns for 365: (insn_list:REG_DEP_TRUE 868 (nil))
init_insns for 366: (insn_list:REG_DEP_TRUE 867 (nil))
init_insns for 367: (insn_list:REG_DEP_TRUE 401 (nil))
init_insns for 368: (insn_list:REG_DEP_TRUE 409 (nil))
init_insns for 371: (insn_list:REG_DEP_TRUE 866 (nil))
init_insns for 372: (insn_list:REG_DEP_TRUE 865 (nil))
init_insns for 373: (insn_list:REG_DEP_TRUE 864 (nil))
init_insns for 374: (insn_list:REG_DEP_TRUE 424 (nil))
init_insns for 375: (insn_list:REG_DEP_TRUE 431 (nil))
init_insns for 376: (insn_list:REG_DEP_TRUE 434 (nil))
init_insns for 377: (insn_list:REG_DEP_TRUE 863 (nil))
init_insns for 378: (insn_list:REG_DEP_TRUE 862 (nil))
init_insns for 379: (insn_list:REG_DEP_TRUE 439 (nil))
init_insns for 380: (insn_list:REG_DEP_TRUE 445 (nil))
init_insns for 381: (insn_list:REG_DEP_TRUE 446 (nil))
init_insns for 384: (insn_list:REG_DEP_TRUE 861 (nil))
init_insns for 387: (insn_list:REG_DEP_TRUE 455 (nil))
init_insns for 388: (insn_list:REG_DEP_TRUE 456 (nil))
init_insns for 390: (insn_list:REG_DEP_TRUE 459 (nil))
init_insns for 391: (insn_list:REG_DEP_TRUE 462 (nil))
init_insns for 392: (insn_list:REG_DEP_TRUE 463 (nil))
init_insns for 395: (insn_list:REG_DEP_TRUE 476 (nil))
init_insns for 396: (insn_list:REG_DEP_TRUE 480 (nil))
init_insns for 397: (insn_list:REG_DEP_TRUE 483 (nil))
init_insns for 399: (insn_list:REG_DEP_TRUE 860 (nil))
init_insns for 402: (insn_list:REG_DEP_TRUE 491 (nil))
init_insns for 406: (insn_list:REG_DEP_TRUE 499 (nil))
init_insns for 407: (insn_list:REG_DEP_TRUE 500 (nil))
init_insns for 409: (insn_list:REG_DEP_TRUE 509 (nil))
init_insns for 413: (insn_list:REG_DEP_TRUE 859 (nil))
init_insns for 414: (insn_list:REG_DEP_TRUE 858 (nil))
init_insns for 415: (insn_list:REG_DEP_TRUE 527 (nil))
init_insns for 417: (insn_list:REG_DEP_TRUE 533 (nil))
init_insns for 419: (insn_list:REG_DEP_TRUE 537 (nil))
init_insns for 426: (insn_list:REG_DEP_TRUE 554 (nil))
init_insns for 427: (insn_list:REG_DEP_TRUE 555 (nil))
init_insns for 430: (insn_list:REG_DEP_TRUE 857 (nil))
init_insns for 433: (insn_list:REG_DEP_TRUE 856 (nil))
init_insns for 434: (insn_list:REG_DEP_TRUE 581 (nil))
init_insns for 435: (insn_list:REG_DEP_TRUE 586 (nil))
init_insns for 436: (insn_list:REG_DEP_TRUE 587 (nil))
init_insns for 437: (insn_list:REG_DEP_TRUE 595 (nil))
init_insns for 442: (insn_list:REG_DEP_TRUE 603 (nil))
init_insns for 444: (insn_list:REG_DEP_TRUE 606 (nil))
init_insns for 445: (insn_list:REG_DEP_TRUE 607 (nil))
init_insns for 447: (insn_list:REG_DEP_TRUE 610 (nil))
init_insns for 452: (insn_list:REG_DEP_TRUE 624 (nil))
init_insns for 453: (insn_list:REG_DEP_TRUE 855 (nil))
init_insns for 457: (insn_list:REG_DEP_TRUE 635 (nil))
init_insns for 467: (insn_list:REG_DEP_TRUE 654 (nil))
init_insns for 470: (insn_list:REG_DEP_TRUE 659 (nil))
init_insns for 473: (insn_list:REG_DEP_TRUE 853 (nil))
init_insns for 474: (insn_list:REG_DEP_TRUE 852 (nil))
init_insns for 475: (insn_list:REG_DEP_TRUE 701 (nil))
init_insns for 476: (insn_list:REG_DEP_TRUE 702 (nil))
init_insns for 477: (insn_list:REG_DEP_TRUE 706 (nil))
init_insns for 478: (insn_list:REG_DEP_TRUE 707 (nil))
init_insns for 479: (insn_list:REG_DEP_TRUE 851 (nil))
init_insns for 480: (insn_list:REG_DEP_TRUE 850 (nil))
init_insns for 484: (insn_list:REG_DEP_TRUE 723 (nil))
init_insns for 485: (insn_list:REG_DEP_TRUE 724 (nil))
init_insns for 488: (insn_list:REG_DEP_TRUE 849 (nil))
init_insns for 495: (insn_list:REG_DEP_TRUE 736 (nil))
init_insns for 496: (insn_list:REG_DEP_TRUE 742 (nil))
init_insns for 497: (insn_list:REG_DEP_TRUE 743 (nil))
init_insns for 500: (insn_list:REG_DEP_TRUE 848 (nil))
init_insns for 516: (insn_list:REG_DEP_TRUE 854 (nil))

Pass 0 for finding pseudo/allocno costs

    r517: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r517,l0) best AR_REGS, allocno AR_REGS
    r516: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a123 (r516,l1) best AR_REGS, allocno AR_REGS
    r512: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a129 (r512,l1) best AR_REGS, allocno AR_REGS
    r508: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r508,l0) best AR_REGS, allocno AR_REGS
    r502: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r502,l0) best AR_REGS, allocno AR_REGS
    r501: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r501,l0) best AR_REGS, allocno AR_REGS
    r500: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r500,l0) best AR_REGS, allocno AR_REGS
    r497: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r497,l0) best AR_REGS, allocno AR_REGS
    r496: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r496,l0) best AR_REGS, allocno AR_REGS
    r495: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r495,l0) best AR_REGS, allocno AR_REGS
    r490: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r490,l0) best AR_REGS, allocno AR_REGS
    r489: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r489,l0) best AR_REGS, allocno AR_REGS
    r488: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r488,l0) best AR_REGS, allocno AR_REGS
    r485: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r485,l0) best AR_REGS, allocno AR_REGS
    r484: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r484,l0) best AR_REGS, allocno AR_REGS
    r483: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r483,l0) best AR_REGS, allocno AR_REGS
    r480: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r480,l0) best AR_REGS, allocno AR_REGS
    r479: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r479,l0) best AR_REGS, allocno AR_REGS
    r478: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r478,l0) best AR_REGS, allocno AR_REGS
    r477: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r477,l0) best AR_REGS, allocno AR_REGS
    r476: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r476,l0) best AR_REGS, allocno AR_REGS
    r475: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r475,l0) best AR_REGS, allocno AR_REGS
    r474: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r474,l0) best AR_REGS, allocno AR_REGS
    r473: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r473,l0) best AR_REGS, allocno AR_REGS
    r470: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a122 (r470,l1) best AR_REGS, allocno AR_REGS
    r467: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a126 (r467,l1) best AR_REGS, allocno AR_REGS
    r457: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a130 (r457,l1) best AR_REGS, allocno AR_REGS
    r454: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a131 (r454,l1) best AR_REGS, allocno AR_REGS
    r453: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a133 (r453,l1) best AR_REGS, allocno AR_REGS
    r452: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a124 (r452,l1) best AR_REGS, allocno AR_REGS
    r448: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a138 (r448,l1) best AR_REGS, allocno AR_REGS
    r447: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a139 (r447,l1) best AR_REGS, allocno AR_REGS
    r445: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a136 (r445,l1) best AR_REGS, allocno AR_REGS
    r444: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a137 (r444,l1) best AR_REGS, allocno AR_REGS
    r443: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a142 (r443,l1) best AR_REGS, allocno AR_REGS
    r442: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a143 (r442,l1) best AR_REGS, allocno AR_REGS
    r437: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a144 (r437,l1) best AR_REGS, allocno AR_REGS
    r436: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a145 (r436,l1) best AR_REGS, allocno AR_REGS
    r435: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a147 (r435,l1) best AR_REGS, allocno AR_REGS
    r434: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a148 (r434,l1) best AR_REGS, allocno AR_REGS
    r433: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a151 (r433,l1) best AR_REGS, allocno AR_REGS
    r432: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a153 (r432,l1) best AR_REGS, allocno AR_REGS
    r431: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a155 (r431,l1) best AR_REGS, allocno AR_REGS
    r430: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a154 (r430,l1) best AR_REGS, allocno AR_REGS
    r427: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a152 (r427,l1) best AR_REGS, allocno AR_REGS
    r426: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a156 (r426,l1) best AR_REGS, allocno AR_REGS
    r423: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a159 (r423,l1) best AR_REGS, allocno AR_REGS
    r419: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a165 (r419,l1) best AR_REGS, allocno AR_REGS
    r417: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a163 (r417,l1) best AR_REGS, allocno AR_REGS
    r415: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a169 (r415,l1) best AR_REGS, allocno AR_REGS
    r414: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a168 (r414,l1) best AR_REGS, allocno AR_REGS
    r413: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a170 (r413,l1) best AR_REGS, allocno AR_REGS
    r411: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a173 (r411,l1) best AR_REGS, allocno AR_REGS
    r409: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a172 (r409,l1) best AR_REGS, allocno AR_REGS
    r408: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a176 (r408,l1) best AR_REGS, allocno AR_REGS
    r407: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a178 (r407,l1) best AR_REGS, allocno AR_REGS
    r406: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a177 (r406,l1) best AR_REGS, allocno AR_REGS
    r403: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a180 (r403,l1) best AR_REGS, allocno AR_REGS
    r402: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a179 (r402,l1) best AR_REGS, allocno AR_REGS
    r401: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a183 (r401,l1) best AR_REGS, allocno AR_REGS
    r400: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a185 (r400,l1) best AR_REGS, allocno AR_REGS
    r399: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a184 (r399,l1) best AR_REGS, allocno AR_REGS
    r397: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a182 (r397,l1) best AR_REGS, allocno AR_REGS
    r396: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a186 (r396,l1) best AR_REGS, allocno AR_REGS
    r395: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a188 (r395,l1) best AR_REGS, allocno AR_REGS
    r394: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a189 (r394,l1) best AR_REGS, allocno AR_REGS
    r392: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a192 (r392,l1) best AR_REGS, allocno AR_REGS
    r391: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a190 (r391,l1) best AR_REGS, allocno AR_REGS
    r390: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a194 (r390,l1) best AR_REGS, allocno AR_REGS
    r388: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a196 (r388,l1) best AR_REGS, allocno AR_REGS
    r387: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a197 (r387,l1) best AR_REGS, allocno AR_REGS
    r386: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a199 (r386,l1) best AR_REGS, allocno AR_REGS
    r385: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a201 (r385,l1) best AR_REGS, allocno AR_REGS
    r384: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a200 (r384,l1) best AR_REGS, allocno AR_REGS
    r381: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a198 (r381,l1) best AR_REGS, allocno AR_REGS
    r380: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a202 (r380,l1) best AR_REGS, allocno AR_REGS
    r379: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a204 (r379,l1) best AR_REGS, allocno AR_REGS
    r378: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a203 (r378,l1) best AR_REGS, allocno AR_REGS
    r377: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a205 (r377,l1) best AR_REGS, allocno AR_REGS
    r376: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a206 (r376,l1) best AR_REGS, allocno AR_REGS
    r375: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a209 (r375,l1) best AR_REGS, allocno AR_REGS
    r374: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a212 (r374,l1) best AR_REGS, allocno AR_REGS
    r373: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a211 (r373,l1) best AR_REGS, allocno AR_REGS
    r372: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a213 (r372,l1) best AR_REGS, allocno AR_REGS
    r371: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a215 (r371,l1) best AR_REGS, allocno AR_REGS
    r369: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a217 (r369,l1) best AR_REGS, allocno AR_REGS
    r368: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a218 (r368,l1) best AR_REGS, allocno AR_REGS
    r367: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a220 (r367,l1) best AR_REGS, allocno AR_REGS
    r366: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a219 (r366,l1) best AR_REGS, allocno AR_REGS
    r365: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a221 (r365,l1) best AR_REGS, allocno AR_REGS
    r364: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a223 (r364,l1) best AR_REGS, allocno AR_REGS
    r363: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a222 (r363,l1) best AR_REGS, allocno AR_REGS
    r362: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a224 (r362,l1) best AR_REGS, allocno AR_REGS
    r360: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a228 (r360,l1) best AR_REGS, allocno AR_REGS
    r358: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a231 (r358,l1) best AR_REGS, allocno AR_REGS
    r357: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a233 (r357,l1) best AR_REGS, allocno AR_REGS
    r355: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a235 (r355,l1) best AR_REGS, allocno AR_REGS
    r354: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a236 (r354,l1) best AR_REGS, allocno AR_REGS
    r353: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a238 (r353,l1) best AR_REGS, allocno AR_REGS
    r352: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a240 (r352,l1) best AR_REGS, allocno AR_REGS
    r351: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a239 (r351,l1) best AR_REGS, allocno AR_REGS
    r348: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a237 (r348,l1) best AR_REGS, allocno AR_REGS
    r347: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a241 (r347,l1) best AR_REGS, allocno AR_REGS
    r346: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a242 (r346,l1) best AR_REGS, allocno AR_REGS
    r345: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a245 (r345,l1) best AR_REGS, allocno AR_REGS
    r343: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a248 (r343,l1) best AR_REGS, allocno AR_REGS
    r342: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a250 (r342,l1) best AR_REGS, allocno AR_REGS
    r341: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a249 (r341,l1) best AR_REGS, allocno AR_REGS
    r338: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a247 (r338,l1) best AR_REGS, allocno AR_REGS
    r337: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a251 (r337,l1) best AR_REGS, allocno AR_REGS
    r335: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a255 (r335,l1) best AR_REGS, allocno AR_REGS
    r334: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a254 (r334,l1) best AR_REGS, allocno AR_REGS
    r333: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a256 (r333,l1) best AR_REGS, allocno AR_REGS
    r330: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a252 (r330,l1) best AR_REGS, allocno AR_REGS
    r329: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a257 (r329,l1) best AR_REGS, allocno AR_REGS
    r328: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a258 (r328,l1) best AR_REGS, allocno AR_REGS
    r325: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a260 (r325,l1) best AR_REGS, allocno AR_REGS
    r324: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a262 (r324,l1) best AR_REGS, allocno AR_REGS
    r323: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a263 (r323,l1) best AR_REGS, allocno AR_REGS
    r322: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a264 (r322,l1) best AR_REGS, allocno AR_REGS
    r320: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a265 (r320,l1) best AR_REGS, allocno AR_REGS
    r319: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a267 (r319,l1) best AR_REGS, allocno AR_REGS
    r317: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a268 (r317,l1) best AR_REGS, allocno AR_REGS
    r316: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a269 (r316,l1) best AR_REGS, allocno AR_REGS
    r315: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r315,l0) best AR_REGS, allocno AR_REGS
    r314: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r314,l0) best AR_REGS, allocno AR_REGS
    r313: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r313,l0) best AR_REGS, allocno AR_REGS
    r311: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r311,l0) best AR_REGS, allocno AR_REGS
    r310: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r310,l0) best AR_REGS, allocno AR_REGS
    r309: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r309,l0) best AR_REGS, allocno AR_REGS
    r308: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r308,l0) best AR_REGS, allocno AR_REGS
    r307: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r307,l0) best AR_REGS, allocno AR_REGS
    r306: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r306,l0) best AR_REGS, allocno AR_REGS
    r305: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r305,l0) best AR_REGS, allocno AR_REGS
    r300: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r300,l0) best AR_REGS, allocno AR_REGS
    r298: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r298,l0) best AR_REGS, allocno AR_REGS
    r297: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r297,l0) best AR_REGS, allocno AR_REGS
    r296: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r296,l0) best AR_REGS, allocno AR_REGS
    r295: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r295,l0) best AR_REGS, allocno AR_REGS
    r294: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r294,l0) best AR_REGS, allocno AR_REGS
    r292: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r292,l0) best AR_REGS, allocno AR_REGS
    r287: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r287,l0) best AR_REGS, allocno AR_REGS
    r286: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r286,l0) best AR_REGS, allocno AR_REGS
    r285: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r285,l0) best AR_REGS, allocno AR_REGS
    r284: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r284,l0) best AR_REGS, allocno AR_REGS
    r283: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r283,l0) best AR_REGS, allocno AR_REGS
    r281: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r281,l0) best AR_REGS, allocno AR_REGS
    r280: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r280,l0) best AR_REGS, allocno AR_REGS
    r278: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r278,l0) best AR_REGS, allocno AR_REGS
    r277: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r277,l0) best AR_REGS, allocno AR_REGS
    r276: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r276,l0) best AR_REGS, allocno AR_REGS
    r273: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a83 (r273,l0) best AR_REGS, allocno AR_REGS
    r271: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a85 (r271,l0) best AR_REGS, allocno AR_REGS
    r270: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a86 (r270,l0) best AR_REGS, allocno AR_REGS
    r269: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a87 (r269,l0) best AR_REGS, allocno AR_REGS
    r267: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a92 (r267,l0) best AR_REGS, allocno AR_REGS
    r266: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a93 (r266,l0) best AR_REGS, allocno AR_REGS
    r265: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a91 (r265,l0) best AR_REGS, allocno AR_REGS
    r262: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a94 (r262,l0) best AR_REGS, allocno AR_REGS
    r257: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a95 (r257,l0) best AR_REGS, allocno AR_REGS
    r256: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a89 (r256,l0) best AR_REGS, allocno AR_REGS
    r255: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a97 (r255,l0) best AR_REGS, allocno AR_REGS
    r254: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a96 (r254,l0) best AR_REGS, allocno AR_REGS
    r253: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a98 (r253,l0) best AR_REGS, allocno AR_REGS
    r248: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a103 (r248,l0) best AR_REGS, allocno AR_REGS
    r247: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a104 (r247,l0) best AR_REGS, allocno AR_REGS
    r246: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a100 (r246,l0) best AR_REGS, allocno AR_REGS
    r244: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a101 (r244,l0) best AR_REGS, allocno AR_REGS
    r243: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a102 (r243,l0) best AR_REGS, allocno AR_REGS
    r242: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a105 (r242,l0) best AR_REGS, allocno AR_REGS
    r241: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a99 (r241,l0) best AR_REGS, allocno AR_REGS
    r238: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a107 (r238,l0) best AR_REGS, allocno AR_REGS
    r225: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a110 (r225,l0) best AR_REGS, allocno AR_REGS
    r224: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a109 (r224,l0) best AR_REGS, allocno AR_REGS
    r223: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a111 (r223,l0) best AR_REGS, allocno AR_REGS
    r221: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a207 (r221,l1) best AR_REGS, allocno AR_REGS
    r220: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a208 (r220,l1) best AR_REGS, allocno AR_REGS
    r218: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a210 (r218,l1) best AR_REGS, allocno AR_REGS
    r212: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r212,l0) best AR_REGS, allocno AR_REGS
    r204: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r204,l0) best AR_REGS, allocno AR_REGS
    r202: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r202,l0) best AR_REGS, allocno AR_REGS
    r198: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r198,l0) best AR_REGS, allocno AR_REGS
    r197: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a125 (r197,l1) best AR_REGS, allocno AR_REGS
    r196: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a127 (r196,l1) best AR_REGS, allocno AR_REGS
    r189: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a132 (r189,l1) best AR_REGS, allocno AR_REGS
    r188: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a128 (r188,l1) best AR_REGS, allocno AR_REGS
    r187: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a135 (r187,l1) best AR_REGS, allocno AR_REGS
    r185: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a141 (r185,l1) best AR_REGS, allocno AR_REGS
    r182: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a140 (r182,l1) best AR_REGS, allocno AR_REGS
    r181: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a149 (r181,l1) best AR_REGS, allocno AR_REGS
    r180: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a225 (r180,l1) best AR_REGS, allocno AR_REGS
    r178: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a150 (r178,l1) best AR_REGS, allocno AR_REGS
    r170: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a160 (r170,l1) best AR_REGS, allocno AR_REGS
    r169: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a162 (r169,l1) best AR_REGS, allocno AR_REGS
    r168: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a164 (r168,l1) best AR_REGS, allocno AR_REGS
    r165: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a161 (r165,l1) best AR_REGS, allocno AR_REGS
    r164: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a167 (r164,l1) best AR_REGS, allocno AR_REGS
    r162: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a166 (r162,l1) best AR_REGS, allocno AR_REGS
    r161: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a171 (r161,l1) best AR_REGS, allocno AR_REGS
    r159: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a158 (r159,l1) best AR_REGS, allocno AR_REGS
    r158: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a246 (r158,l1) best AR_REGS, allocno AR_REGS
    r156: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a174 (r156,l1) best AR_REGS, allocno AR_REGS
    r155: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a157 (r155,l1) best AR_REGS, allocno AR_REGS
    r154: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a175 (r154,l1) best AR_REGS, allocno AR_REGS
    r148: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a181 (r148,l1) best AR_REGS, allocno AR_REGS
    r147: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a187 (r147,l1) best AR_REGS, allocno AR_REGS
    r145: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a195 (r145,l1) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a191 (r140,l1) best AR_REGS, allocno AR_REGS
    r139: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a244 (r139,l1) best AR_REGS, allocno AR_REGS
    r137: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a214 (r137,l1) best AR_REGS, allocno AR_REGS
    r136: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a193 (r136,l1) best AR_REGS, allocno AR_REGS
    r135: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a216 (r135,l1) best AR_REGS, allocno AR_REGS
    r131: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a243 (r131,l1) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a229 (r130,l1) best AR_REGS, allocno AR_REGS
    r128: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a234 (r128,l1) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a232 (r118,l1) best AR_REGS, allocno AR_REGS
    r116: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a253 (r116,l1) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a259 (r111,l1) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a230 (r110,l1) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a261 (r109,l1) best AR_REGS, allocno AR_REGS
    r107: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a266 (r107,l1) best AR_REGS, allocno AR_REGS
    r105: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a134 (r105,l1) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r104,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r103,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a227 (r101,l1) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r98,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r96,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r95,l0) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r91,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r90,l0) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r89,l0) best AR_REGS, allocno AR_REGS
    r88: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r88,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r85,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a121 (r83,l1) best AR_REGS, allocno AR_REGS
    a32 (r83,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r81,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a82 (r79,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a120 (r73,l1) best AR_REGS, allocno AR_REGS
    a7 (r73,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a119 (r72,l1) best AR_REGS, allocno AR_REGS
    a3 (r72,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a118 (r69,l1) best AR_REGS, allocno AR_REGS
    a40 (r69,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a84 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a226 (r67,l1) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a88 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r65,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a117 (r60,l1) best AR_REGS, allocno AR_REGS
    a24 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a108 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a90 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a106 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a66 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a116 (r47,l1) best AR_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a146 (r46,l1) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a115 (r45,l1) best AR_REGS, allocno AR_REGS
    a36 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a114 (r44,l1) best AR_REGS, allocno AR_REGS
    a35 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a113 (r43,l1) best AR_REGS, allocno AR_REGS
    a2 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a112 (r42,l1) best AR_REGS, allocno AR_REGS
    a8 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r48,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r47,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a2(r43,l0) costs: ACC_REG:375,375 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2000,2000 MEM:500,500
  a3(r72,l0) costs: ACC_REG:948,948 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5056,5056 MEM:1264,1264
  a4(r497,l0) costs: ACC_REG:240,240 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1280,1280 MEM:320,320
  a5(r508,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a6(r212,l0) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192
  a7(r73,l0) costs: ACC_REG:1698,1698 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9056,9056 MEM:2264,2264
  a8(r42,l0) costs: ACC_REG:1728,1728 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9216,9216 MEM:2304,2304
  a9(r502,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a10(r500,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a11(r501,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a12(r496,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:0,0
  a13(r485,l0) costs: ACC_REG:75,75 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:400,400 MEM:100,100
  a14(r495,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a15(r490,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a16(r488,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a17(r489,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a18(r484,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:0,0
  a19(r480,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a20(r483,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a21(r479,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:0,0
  a22(r204,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a23(r52,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a24(r60,l0) costs: ACC_REG:1800,1800 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9600,9600 MEM:2400,2400
  a25(r478,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:80,80
  a26(r477,l0) costs: ACC_REG:60,60 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:320,320 MEM:0,0
  a27(r202,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a28(r476,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a29(r475,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:0,0
  a30(r51,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a31(r474,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:0,0
  a32(r83,l0) costs: ACC_REG:702,702 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3744,3744 MEM:936,936
  a33(r473,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:0,0
  a34(r198,l0) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:84,84
  a35(r44,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a36(r45,l0) costs: ACC_REG:63,2043 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,10896 MEM:84,2724
  a37(r315,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a38(r50,l0) costs: ACC_REG:4908,4908 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:26176,26176 MEM:6544,6544
  a39(r314,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:0,0
  a40(r69,l0) costs: ACC_REG:1872,2304 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9984,12288 MEM:2496,3072
  a41(r104,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a42(r313,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a43(r103,l0) costs: ACC_REG:174,174 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:928,928 MEM:232,232
  a44(r98,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a45(r310,l0) costs: ACC_REG:189,189 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1008,1008 MEM:84,84
  a46(r311,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a47(r96,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a48(r308,l0) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a49(r309,l0) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a50(r307,l0) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a51(r306,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a52(r305,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a53(r95,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a54(r300,l0) costs: ACC_REG:189,189 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1008,1008 MEM:252,252
  a55(r298,l0) costs: ACC_REG:189,189 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1008,1008 MEM:252,252
  a56(r297,l0) costs: ACC_REG:189,189 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1008,1008 MEM:84,84
  a57(r292,l0) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:64,64
  a58(r296,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a59(r294,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a60(r295,l0) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a61(r65,l0) costs: ACC_REG:2685,2685 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14320,14320 MEM:3580,3580
  a62(r91,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a63(r287,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a64(r286,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:0,0
  a65(r285,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a66(r49,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a67(r284,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:0,0
  a68(r283,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a69(r55,l0) costs: ACC_REG:5964,5964 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31808,31808 MEM:7952,7952
  a70(r281,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:0,0
  a71(r90,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a72(r517,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a73(r280,l0) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a74(r89,l0) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a75(r278,l0) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a76(r277,l0) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:0,0
  a77(r88,l0) costs: ACC_REG:72,72 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:384,384 MEM:96,96
  a78(r85,l0) costs: ACC_REG:342,342 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1824,1824 MEM:456,456
  a79(r276,l0) costs: ACC_REG:246,246 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1312,1312 MEM:0,0
  a80(r74,l0) costs: ACC_REG:1974,1974 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10528,10528 MEM:2632,2632
  a81(r81,l0) costs: ACC_REG:408,408 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2176,2176 MEM:544,544
  a82(r79,l0) costs: ACC_REG:612,612 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3264,3264 MEM:816,816
  a83(r273,l0) costs: ACC_REG:408,408 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2176,2176 MEM:544,544
  a84(r68,l0) costs: ACC_REG:1089,1089 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5808,5808 MEM:1452,1452
  a85(r271,l0) costs: ACC_REG:408,408 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2176,2176 MEM:0,0
  a86(r270,l0) costs: ACC_REG:204,204 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1088,1088 MEM:272,272
  a87(r269,l0) costs: ACC_REG:204,204 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1088,1088 MEM:0,0
  a88(r66,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a89(r256,l0) costs: ACC_REG:2655,2655 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14160,14160 MEM:1180,1180
  a90(r57,l0) costs: ACC_REG:6885,6885 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36720,36720 MEM:9180,9180
  a91(r265,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a92(r267,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a93(r266,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a94(r262,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a95(r257,l0) costs: ACC_REG:1770,1770 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9440,9440 MEM:2360,2360
  a96(r254,l0) costs: ACC_REG:5868,5868 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31296,31296 MEM:7824,7824
  a97(r255,l0) costs: ACC_REG:5868,5868 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31296,31296 MEM:7824,7824
  a98(r253,l0) costs: ACC_REG:5868,5868 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31296,31296 MEM:0,0
  a99(r241,l0) costs: ACC_REG:3864,3864 RL_REGS:966,966 AR_REGS:966,966 ALL_REGS:16422,16422 MEM:4830,4830
  a100(r246,l0) costs: ACC_REG:2898,2898 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15456,15456 MEM:3864,3864
  a101(r244,l0) costs: ACC_REG:5313,5313 RL_REGS:966,966 AR_REGS:966,966 ALL_REGS:24150,24150 MEM:6762,6762
  a102(r243,l0) costs: ACC_REG:5313,5313 RL_REGS:966,966 AR_REGS:966,966 ALL_REGS:24150,24150 MEM:6762,6762
  a103(r248,l0) costs: ACC_REG:2898,2898 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15456,15456 MEM:3864,3864
  a104(r247,l0) costs: ACC_REG:2898,2898 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15456,15456 MEM:3864,3864
  a105(r242,l0) costs: ACC_REG:3864,3864 RL_REGS:966,966 AR_REGS:966,966 ALL_REGS:16422,16422 MEM:4830,4830
  a106(r54,l0) costs: ACC_REG:8376,8376 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:44672,44672 MEM:11168,11168
  a107(r238,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a108(r58,l0) costs: ACC_REG:7500,7500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40000,40000 MEM:10000,10000
  a109(r224,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a110(r225,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a111(r223,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a112(r42,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a113(r43,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a114(r44,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a115(r45,l1) costs: ACC_REG:1980,1980 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10560,10560 MEM:2640,2640
  a116(r47,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a117(r60,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a118(r69,l1) costs: ACC_REG:432,432 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2304,2304 MEM:576,576
  a119(r72,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a120(r73,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a121(r83,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a122(r470,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a123(r516,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a124(r452,l1) costs: ACC_REG:84,84 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:448,448 MEM:56,56
  a125(r197,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a126(r467,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a127(r196,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a128(r188,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a129(r512,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a130(r457,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:28,28
  a131(r454,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:84,84
  a132(r189,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a133(r453,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a134(r105,l1) costs: ACC_REG:906,906 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4832,4832 MEM:1208,1208
  a135(r187,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a136(r445,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:84,84
  a137(r444,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:28,28
  a138(r448,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a139(r447,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a140(r182,l1) costs: ACC_REG:111,111 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:592,592 MEM:148,148
  a141(r185,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a142(r443,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a143(r442,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a144(r437,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a145(r436,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a146(r46,l1) costs: ACC_REG:87,87 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:464,464 MEM:116,116
  a147(r435,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a148(r434,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a149(r181,l1) costs: ACC_REG:111,111 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:592,592 MEM:148,148
  a150(r178,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a151(r433,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a152(r427,l1) costs: ACC_REG:18,18 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:96,96 MEM:24,24
  a153(r432,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a154(r430,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a155(r431,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a156(r426,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:0,0
  a157(r155,l1) costs: ACC_REG:57,57 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:304,304 MEM:76,76
  a158(r159,l1) costs: ACC_REG:102,102 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:544,544 MEM:136,136
  a159(r423,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a160(r170,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a161(r165,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a162(r169,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a163(r417,l1) costs: ACC_REG:36,36 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:192,192 MEM:16,16
  a164(r168,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a165(r419,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a166(r162,l1) costs: ACC_REG:69,69 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:368,368 MEM:92,92
  a167(r164,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a168(r414,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a169(r415,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a170(r413,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a171(r161,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a172(r409,l1) costs: ACC_REG:180,180 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:960,960 MEM:120,120
  a173(r411,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a174(r156,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a175(r154,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a176(r408,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a177(r406,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a178(r407,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a179(r402,l1) costs: ACC_REG:180,180 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:960,960 MEM:120,120
  a180(r403,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a181(r148,l1) costs: ACC_REG:135,135 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:720,720 MEM:180,180
  a182(r397,l1) costs: ACC_REG:36,36 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:192,192 MEM:16,16
  a183(r401,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a184(r399,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a185(r400,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a186(r396,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a187(r147,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a188(r395,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a189(r394,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a190(r391,l1) costs: ACC_REG:36,36 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:192,192 MEM:16,16
  a191(r140,l1) costs: ACC_REG:102,102 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:544,544 MEM:136,136
  a192(r392,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a193(r136,l1) costs: ACC_REG:102,102 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:544,544 MEM:136,136
  a194(r390,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a195(r145,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a196(r388,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a197(r387,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a198(r381,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:84,84
  a199(r386,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a200(r384,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a201(r385,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a202(r380,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a203(r378,l1) costs: ACC_REG:66,66 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:352,352 MEM:88,88
  a204(r379,l1) costs: ACC_REG:66,66 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:352,352 MEM:88,88
  a205(r377,l1) costs: ACC_REG:66,66 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:352,352 MEM:0,0
  a206(r376,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a207(r221,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a208(r220,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a209(r375,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a210(r218,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a211(r373,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a212(r374,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a213(r372,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a214(r137,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a215(r371,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a216(r135,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a217(r369,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a218(r368,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a219(r366,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a220(r367,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a221(r365,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a222(r363,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a223(r364,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a224(r362,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a225(r180,l1) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a226(r67,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a227(r101,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a228(r360,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:0,0
  a229(r130,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:16,16
  a230(r110,l1) costs: ACC_REG:96,96 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:512,512 MEM:128,128
  a231(r358,l1) costs: ACC_REG:12,12 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64,64 MEM:0,0
  a232(r118,l1) costs: ACC_REG:51,51 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:272,272 MEM:68,68
  a233(r357,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a234(r128,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a235(r355,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a236(r354,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a237(r348,l1) costs: ACC_REG:36,36 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:192,192 MEM:48,48
  a238(r353,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a239(r351,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a240(r352,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:32,32
  a241(r347,l1) costs: ACC_REG:24,24 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128,128 MEM:0,0
  a242(r346,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a243(r131,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a244(r139,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a245(r345,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a246(r158,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a247(r338,l1) costs: ACC_REG:63,63 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:336,336 MEM:84,84
  a248(r343,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a249(r341,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a250(r342,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:56,56
  a251(r337,l1) costs: ACC_REG:42,42 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:224,224 MEM:0,0
  a252(r330,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a253(r116,l1) costs: ACC_REG:135,135 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:720,720 MEM:180,180
  a254(r334,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a255(r335,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a256(r333,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a257(r329,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a258(r328,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:0,0
  a259(r111,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a260(r325,l1) costs: ACC_REG:135,135 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:720,720 MEM:60,60
  a261(r109,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a262(r324,l1) costs: ACC_REG:90,90 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:480,480 MEM:120,120
  a263(r323,l1) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a264(r322,l1) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a265(r320,l1) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:0,0
  a266(r107,l1) costs: ACC_REG:1218,1218 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6496,6496 MEM:1624,1624
  a267(r319,l1) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a268(r317,l1) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:1104,1104
  a269(r316,l1) costs: ACC_REG:828,828 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4416,4416 MEM:0,0

   Insn 777(l0): point = 0
   Insn 776(l0): point = 2
   Insn 20(l0): point = 5
   Insn 769(l0): point = 7
   Insn 768(l0): point = 9
   Insn 767(l0): point = 11
   Insn 766(l0): point = 13
   Insn 765(l0): point = 15
   Insn 764(l0): point = 17
   Insn 761(l0): point = 19
   Insn 758(l0): point = 22
   Insn 757(l0): point = 24
   Insn 753(l0): point = 26
   Insn 750(l0): point = 28
   Insn 749(l0): point = 30
   Insn 748(l0): point = 32
   Insn 848(l0): point = 34
   Insn 747(l0): point = 36
   Insn 743(l0): point = 38
   Insn 742(l0): point = 40
   Insn 846(l0): point = 43
   Insn 737(l0): point = 45
   Insn 736(l0): point = 47
   Insn 733(l0): point = 49
   Insn 730(l0): point = 51
   Insn 729(l0): point = 53
   Insn 849(l0): point = 55
   Insn 728(l0): point = 57
   Insn 724(l0): point = 59
   Insn 723(l0): point = 61
   Insn 721(l0): point = 64
   Insn 718(l0): point = 67
   Insn 850(l0): point = 69
   Insn 851(l0): point = 71
   Insn 717(l0): point = 73
   Insn 18(l0): point = 76
   Insn 844(l0): point = 79
   Insn 17(l0): point = 81
   Insn 709(l0): point = 84
   Insn 708(l0): point = 86
   Insn 707(l0): point = 88
   Insn 706(l0): point = 90
   Insn 704(l0): point = 93
   Insn 703(l0): point = 95
   Insn 702(l0): point = 97
   Insn 701(l0): point = 99
   Insn 698(l0): point = 102
   Insn 697(l0): point = 104
   Insn 696(l0): point = 106
   Insn 852(l0): point = 108
   Insn 695(l0): point = 110
   Insn 694(l0): point = 112
   Insn 693(l0): point = 114
   Insn 853(l0): point = 116
   Insn 692(l0): point = 118
   Insn 16(l0): point = 121
   Insn 842(l0): point = 124
   Insn 15(l0): point = 126
   Insn 685(l0): point = 129
   Insn 683(l0): point = 132
   Insn 682(l0): point = 134
   Insn 680(l0): point = 137
   Insn 678(l0): point = 140
   Insn 824(l0): point = 143
   Insn 14(l0): point = 145
   Insn 267(l0): point = 147
   Insn 266(l0): point = 149
   Insn 265(l0): point = 151
   Insn 262(l0): point = 154
   Insn 261(l0): point = 156
   Insn 260(l0): point = 158
   Insn 258(l0): point = 161
   Insn 256(l0): point = 163
   Insn 254(l0): point = 165
   Insn 253(l0): point = 167
   Insn 250(l0): point = 169
   Insn 249(l0): point = 171
   Insn 248(l0): point = 173
   Insn 247(l0): point = 175
   Insn 244(l0): point = 178
   Insn 877(l0): point = 180
   Insn 878(l0): point = 182
   Insn 243(l0): point = 184
   Insn 239(l0): point = 187
   Insn 238(l0): point = 189
   Insn 237(l0): point = 191
   Insn 235(l0): point = 193
   Insn 232(l0): point = 195
   Insn 230(l0): point = 197
   Insn 228(l0): point = 199
   Insn 227(l0): point = 201
   Insn 226(l0): point = 203
   Insn 223(l0): point = 206
   Insn 222(l0): point = 208
   Insn 879(l0): point = 210
   Insn 221(l0): point = 212
   Insn 218(l0): point = 214
   Insn 215(l0): point = 217
   Insn 209(l0): point = 220
   Insn 208(l0): point = 222
   Insn 207(l0): point = 224
   Insn 206(l0): point = 226
   Insn 11(l0): point = 229
   Insn 202(l0): point = 231
   Insn 201(l0): point = 233
   Insn 200(l0): point = 235
   Insn 9(l0): point = 238
   Insn 822(l0): point = 241
   Insn 8(l0): point = 243
   Insn 196(l0): point = 246
   Insn 195(l0): point = 248
   Insn 193(l0): point = 250
   Insn 885(l0): point = 252
   Insn 192(l0): point = 254
   Insn 191(l0): point = 256
   Insn 820(l0): point = 259
   Insn 10(l0): point = 261
   Insn 816(l0): point = 264
   Insn 19(l0): point = 266
   Insn 89(l0): point = 268
   Insn 882(l0): point = 270
   Insn 883(l0): point = 272
   Insn 88(l0): point = 274
   Insn 85(l0): point = 276
   Insn 84(l0): point = 278
   Insn 83(l0): point = 280
   Insn 82(l0): point = 282
   Insn 79(l0): point = 284
   Insn 128(l0): point = 287
   Insn 127(l0): point = 289
   Insn 124(l0): point = 291
   Insn 122(l0): point = 293
   Insn 119(l0): point = 295
   Insn 117(l0): point = 297
   Insn 880(l0): point = 299
   Insn 116(l0): point = 301
   Insn 114(l0): point = 303
   Insn 881(l0): point = 305
   Insn 110(l0): point = 307
   Insn 106(l0): point = 309
   Insn 105(l0): point = 311
   Insn 104(l0): point = 313
   Insn 101(l0): point = 315
   Insn 100(l0): point = 317
   Insn 99(l0): point = 319
   Insn 96(l0): point = 321
   Insn 95(l0): point = 323
   Insn 94(l0): point = 325
   Insn 130(l0): point = 328
   Insn 165(l0): point = 331
   Insn 163(l0): point = 333
   Insn 162(l0): point = 335
   Insn 161(l0): point = 337
   Insn 160(l0): point = 339
   Insn 159(l0): point = 341
   Insn 158(l0): point = 343
   Insn 157(l0): point = 345
   Insn 153(l0): point = 347
   Insn 151(l0): point = 349
   Insn 150(l0): point = 351
   Insn 148(l0): point = 353
   Insn 147(l0): point = 355
   Insn 6(l0): point = 358
   Insn 818(l0): point = 361
   Insn 7(l0): point = 363
   Insn 140(l0): point = 365
   Insn 139(l0): point = 367
   Insn 138(l0): point = 369
   Insn 134(l0): point = 372
   Insn 173(l0): point = 375
   Insn 169(l0): point = 378
   Insn 168(l0): point = 380
   Insn 167(l0): point = 382
   Insn 176(l0): point = 385
   Insn 175(l0): point = 387
   Insn 181(l0): point = 390
   Insn 180(l0): point = 392
   Insn 179(l0): point = 394
   Insn 178(l0): point = 396
   Insn 185(l0): point = 399
   Insn 184(l0): point = 401
   Insn 76(l0): point = 404
   Insn 71(l0): point = 406
   Insn 68(l0): point = 408
   Insn 67(l0): point = 410
   Insn 64(l0): point = 412
   Insn 63(l0): point = 414
   Insn 62(l0): point = 416
   Insn 61(l0): point = 418
   Insn 59(l0): point = 421
   Insn 58(l0): point = 423
   Insn 55(l0): point = 426
   Insn 54(l0): point = 428
   Insn 3(l0): point = 431
   Insn 814(l0): point = 434
   Insn 4(l0): point = 436
   Insn 812(l0): point = 439
   Insn 5(l0): point = 441
   Insn 49(l0): point = 444
   Insn 43(l0): point = 447
   Insn 39(l0): point = 449
   Insn 34(l0): point = 451
   Insn 30(l0): point = 453
   Insn 884(l0): point = 455
   Insn 26(l0): point = 457
   Insn 25(l0): point = 459
   Insn 24(l0): point = 461
   Insn 279(l1): point = 464
   Insn 278(l1): point = 466
   Insn 276(l1): point = 468
   Insn 275(l1): point = 470
   Insn 274(l1): point = 472
   Insn 273(l1): point = 474
   Insn 675(l1): point = 477
   Insn 667(l1): point = 480
   Insn 601(l1): point = 483
   Insn 596(l1): point = 485
   Insn 595(l1): point = 487
   Insn 664(l1): point = 490
   Insn 663(l1): point = 492
   Insn 662(l1): point = 494
   Insn 661(l1): point = 496
   Insn 854(l1): point = 498
   Insn 659(l1): point = 500
   Insn 657(l1): point = 502
   Insn 655(l1): point = 504
   Insn 654(l1): point = 506
   Insn 653(l1): point = 508
   Insn 649(l1): point = 510
   Insn 809(l1): point = 512
   Insn 808(l1): point = 514
   Insn 647(l1): point = 516
   Insn 642(l1): point = 518
   Insn 635(l1): point = 520
   Insn 631(l1): point = 522
   Insn 630(l1): point = 524
   Insn 629(l1): point = 526
   Insn 855(l1): point = 528
   Insn 626(l1): point = 530
   Insn 625(l1): point = 532
   Insn 624(l1): point = 534
   Insn 616(l1): point = 537
   Insn 615(l1): point = 539
   Insn 612(l1): point = 541
   Insn 611(l1): point = 543
   Insn 610(l1): point = 545
   Insn 608(l1): point = 547
   Insn 607(l1): point = 549
   Insn 606(l1): point = 551
   Insn 605(l1): point = 553
   Insn 604(l1): point = 555
   Insn 603(l1): point = 557
   Insn 621(l1): point = 560
   Insn 620(l1): point = 562
   Insn 619(l1): point = 564
   Insn 836(l1): point = 567
   Insn 564(l1): point = 569
   Insn 529(l1): point = 572
   Insn 528(l1): point = 574
   Insn 858(l1): point = 576
   Insn 859(l1): point = 578
   Insn 527(l1): point = 580
   Insn 523(l1): point = 582
   Insn 522(l1): point = 584
   Insn 520(l1): point = 586
   Insn 518(l1): point = 588
   Insn 517(l1): point = 590
   Insn 516(l1): point = 592
   Insn 513(l1): point = 594
   Insn 511(l1): point = 596
   Insn 510(l1): point = 598
   Insn 509(l1): point = 600
   Insn 508(l1): point = 602
   Insn 552(l1): point = 605
   Insn 549(l1): point = 607
   Insn 548(l1): point = 609
   Insn 547(l1): point = 611
   Insn 546(l1): point = 613
   Insn 545(l1): point = 615
   Insn 543(l1): point = 617
   Insn 540(l1): point = 619
   Insn 538(l1): point = 621
   Insn 537(l1): point = 623
   Insn 536(l1): point = 625
   Insn 534(l1): point = 627
   Insn 533(l1): point = 629
   Insn 532(l1): point = 631
   Insn 561(l1): point = 634
   Insn 560(l1): point = 636
   Insn 857(l1): point = 638
   Insn 559(l1): point = 640
   Insn 555(l1): point = 642
   Insn 554(l1): point = 644
   Insn 826(l1): point = 647
   Insn 291(l1): point = 649
   Insn 828(l1): point = 652
   Insn 394(l1): point = 654
   Insn 869(l1): point = 656
   Insn 870(l1): point = 658
   Insn 393(l1): point = 660
   Insn 373(l1): point = 663
   Insn 372(l1): point = 665
   Insn 370(l1): point = 667
   Insn 369(l1): point = 669
   Insn 368(l1): point = 671
   Insn 356(l1): point = 674
   Insn 355(l1): point = 676
   Insn 354(l1): point = 678
   Insn 353(l1): point = 680
   Insn 352(l1): point = 682
   Insn 348(l1): point = 684
   Insn 344(l1): point = 686
   Insn 331(l1): point = 689
   Insn 328(l1): point = 691
   Insn 327(l1): point = 693
   Insn 873(l1): point = 695
   Insn 326(l1): point = 697
   Insn 325(l1): point = 699
   Insn 874(l1): point = 701
   Insn 875(l1): point = 703
   Insn 324(l1): point = 705
   Insn 320(l1): point = 707
   Insn 318(l1): point = 709
   Insn 312(l1): point = 711
   Insn 311(l1): point = 713
   Insn 310(l1): point = 715
   Insn 306(l1): point = 717
   Insn 305(l1): point = 719
   Insn 302(l1): point = 721
   Insn 300(l1): point = 723
   Insn 299(l1): point = 725
   Insn 298(l1): point = 727
   Insn 297(l1): point = 729
   Insn 340(l1): point = 732
   Insn 339(l1): point = 734
   Insn 872(l1): point = 736
   Insn 338(l1): point = 738
   Insn 334(l1): point = 740
   Insn 333(l1): point = 742
   Insn 365(l1): point = 745
   Insn 364(l1): point = 747
   Insn 871(l1): point = 749
   Insn 363(l1): point = 751
   Insn 359(l1): point = 753
   Insn 358(l1): point = 755
   Insn 388(l1): point = 758
   Insn 387(l1): point = 760
   Insn 386(l1): point = 762
   Insn 385(l1): point = 764
   Insn 383(l1): point = 766
   Insn 382(l1): point = 768
   Insn 381(l1): point = 770
   Insn 378(l1): point = 772
   Insn 376(l1): point = 774
   Insn 375(l1): point = 776
   Insn 830(l1): point = 779
   Insn 403(l1): point = 781
   Insn 402(l1): point = 783
   Insn 867(l1): point = 785
   Insn 868(l1): point = 787
   Insn 401(l1): point = 789
   Insn 832(l1): point = 792
   Insn 469(l1): point = 794
   Insn 460(l1): point = 797
   Insn 459(l1): point = 799
   Insn 457(l1): point = 801
   Insn 456(l1): point = 803
   Insn 455(l1): point = 805
   Insn 443(l1): point = 808
   Insn 435(l1): point = 811
   Insn 434(l1): point = 813
   Insn 433(l1): point = 815
   Insn 432(l1): point = 817
   Insn 431(l1): point = 819
   Insn 427(l1): point = 821
   Insn 425(l1): point = 823
   Insn 864(l1): point = 825
   Insn 865(l1): point = 827
   Insn 424(l1): point = 829
   Insn 420(l1): point = 831
   Insn 419(l1): point = 833
   Insn 418(l1): point = 835
   Insn 866(l1): point = 837
   Insn 415(l1): point = 839
   Insn 413(l1): point = 841
   Insn 411(l1): point = 843
   Insn 410(l1): point = 845
   Insn 409(l1): point = 847
   Insn 440(l1): point = 850
   Insn 862(l1): point = 852
   Insn 863(l1): point = 854
   Insn 439(l1): point = 856
   Insn 452(l1): point = 859
   Insn 451(l1): point = 861
   Insn 861(l1): point = 863
   Insn 450(l1): point = 865
   Insn 446(l1): point = 867
   Insn 445(l1): point = 869
   Insn 466(l1): point = 872
   Insn 464(l1): point = 874
   Insn 463(l1): point = 876
   Insn 462(l1): point = 878
   Insn 834(l1): point = 881
   Insn 502(l1): point = 883
   Insn 501(l1): point = 885
   Insn 500(l1): point = 887
   Insn 499(l1): point = 889
   Insn 497(l1): point = 891
   Insn 494(l1): point = 893
   Insn 493(l1): point = 895
   Insn 492(l1): point = 897
   Insn 491(l1): point = 899
   Insn 481(l1): point = 902
   Insn 480(l1): point = 904
   Insn 478(l1): point = 906
   Insn 477(l1): point = 908
   Insn 476(l1): point = 910
   Insn 475(l1): point = 912
   Insn 488(l1): point = 915
   Insn 487(l1): point = 917
   Insn 860(l1): point = 919
   Insn 486(l1): point = 921
   Insn 483(l1): point = 923
   Insn 840(l1): point = 926
   Insn 589(l1): point = 928
   Insn 588(l1): point = 930
   Insn 587(l1): point = 932
   Insn 586(l1): point = 934
   Insn 12(l1): point = 937
   Insn 838(l1): point = 940
   Insn 13(l1): point = 942
   Insn 582(l1): point = 944
   Insn 581(l1): point = 946
   Insn 578(l1): point = 949
   Insn 575(l1): point = 951
   Insn 574(l1): point = 953
   Insn 573(l1): point = 955
   Insn 856(l1): point = 957
   Insn 570(l1): point = 959
   Insn 284(l1): point = 962
   Insn 283(l1): point = 964
   Insn 282(l1): point = 966
   Insn 876(l1): point = 968
 a0(r48): [264..266] [3..5]
 a1(r47): [439..441] [434..436] [283..431] [14..263]
 a2(r43): [375..403] [361..365] [331..358] [16..263]
 a3(r72): [328..403] [287..295] [18..263]
 a4(r497): [23..38]
 a5(r508): [23..24]
 a6(r212): [25..28]
 a7(r73): [328..403] [287..291] [64..263] [25..42]
 a8(r42): [368..403] [328..363] [287..293] [50..263] [29..42]
 a9(r502): [31..32]
 a10(r500): [33..34]
 a11(r501): [33..36]
 a12(r496): [39..40]
 a13(r485): [46..59]
 a14(r495): [46..47]
 a15(r490): [52..53]
 a16(r488): [54..55]
 a17(r489): [54..57]
 a18(r484): [60..61]
 a19(r480): [68..69]
 a20(r483): [68..73]
 a21(r479): [70..71]
 a22(r204): [74..86]
 a23(r52): [79..81] [74..76]
 a24(r60): [328..403] [287..303] [85..263]
 a25(r478): [87..88]
 a26(r477): [89..90]
 a27(r202): [94..95]
 a28(r476): [96..97]
 a29(r475): [98..99]
 a30(r51): [124..126] [105..121]
 a31(r474): [107..108]
 a32(r83): [375..403] [331..347] [111..263]
 a33(r473): [115..116]
 a34(r198): [119..134]
 a35(r44): [259..261] [141..229]
 a36(r45): [143..145]
 a37(r315): [148..149]
 a38(r50): [287..423] [161..263] [148..154]
 a39(r314): [150..151]
 a40(r69): [328..403] [287..307] [143..263]
 a41(r104): [155..156]
 a42(r313): [157..158]
 a43(r103): [157..163]
 a44(r98): [164..169]
 a45(r310): [168..175]
 a46(r311): [170..171]
 a47(r96): [172..173]
 a48(r308): [179..180]
 a49(r309): [179..184]
 a50(r307): [181..182]
 a51(r306): [188..189]
 a52(r305): [188..191]
 a53(r95): [192..193]
 a54(r300): [194..197]
 a55(r298): [196..201]
 a56(r297): [198..203]
 a57(r292): [207..214]
 a58(r296): [207..208]
 a59(r294): [209..210]
 a60(r295): [209..212]
 a61(r65): [328..403] [287..321] [218..263]
 a62(r91): [221..222]
 a63(r287): [223..224]
 a64(r286): [225..226]
 a65(r285): [232..233]
 a66(r49): [241..243] [232..238]
 a67(r284): [234..235]
 a68(r283): [247..248]
 a69(r55): [400..453] [287..398] [247..258]
 a70(r281): [251..254]
 a71(r90): [251..252]
 a72(r517): [253..256]
 a73(r280): [400..401]
 a74(r89): [391..392]
 a75(r278): [393..394]
 a76(r277): [395..396]
 a77(r88): [386..387]
 a78(r85): [388..389] [375..380]
 a79(r276): [381..382]
 a80(r74): [338..374] [328..330] [287..289]
 a81(r81): [348..349]
 a82(r79): [348..353]
 a83(r273): [350..351]
 a84(r68): [352..374] [328..330] [287..309]
 a85(r271): [354..355]
 a86(r270): [366..367]
 a87(r269): [368..369]
 a88(r66): [288..315]
 a89(r256): [290..325]
 a90(r57): [404..451] [292..327]
 a91(r265): [296..297]
 a92(r267): [298..301]
 a93(r266): [298..299]
 a94(r262): [304..305]
 a95(r257): [322..323]
 a96(r254): [269..270]
 a97(r255): [269..274]
 a98(r253): [271..272]
 a99(r241): [405..412]
 a100(r246): [405..406]
 a101(r244): [407..414]
 a102(r243): [407..416]
 a103(r248): [407..408]
 a104(r247): [409..410]
 a105(r242): [413..418]
 a106(r54): [424..457]
 a107(r238): [427..428]
 a108(r58): [445..449]
 a109(r224): [450..459]
 a110(r225): [454..455]
 a111(r223): [460..461]
 a112(r42): [464..970]
 a113(r43): [464..970]
 a114(r44): [464..970]
 a115(r45): [464..970]
 a116(r47): [464..970]
 a117(r60): [464..970]
 a118(r69): [464..970]
 a119(r72): [464..970]
 a120(r73): [464..970]
 a121(r83): [464..970]
 a122(r470): [497..500]
 a123(r516): [497..498]
 a124(r452): [501..534]
 a125(r197): [503..504]
 a126(r467): [505..506]
 a127(r196): [505..508]
 a128(r188): [509..532]
 a129(r512): [513..518]
 a130(r457): [515..520]
 a131(r454): [515..522]
 a132(r189): [527..530]
 a133(r453): [527..528]
 a134(r105): [960..970] [913..914] [840..849] [714..731] [587..604] [531..566] [483..489] [464..474]
 a135(r187): [538..539]
 a136(r445): [540..549]
 a137(r444): [542..551]
 a138(r448): [542..543]
 a139(r447): [544..545]
 a140(r182): [544..559] [483..485]
 a141(r185): [548..553]
 a142(r443): [554..555]
 a143(r442): [556..557]
 a144(r437): [486..487]
 a145(r436): [931..932]
 a146(r46): [940..942] [931..937]
 a147(r435): [933..934]
 a148(r434): [945..946]
 a149(r181): [945..951]
 a150(r178): [956..959]
 a151(r433): [956..957]
 a152(r427): [635..642]
 a153(r432): [635..636]
 a154(r430): [637..638]
 a155(r431): [637..640]
 a156(r426): [643..644]
 a157(r155): [610..633] [572..596]
 a158(r159): [612..633] [572..588]
 a159(r423): [614..617]
 a160(r170): [618..619]
 a161(r165): [618..627]
 a162(r169): [620..621]
 a163(r417): [620..629]
 a164(r168): [622..625]
 a165(r419): [622..623]
 a166(r162): [626..633] [572..582]
 a167(r164): [628..631]
 a168(r414): [575..576]
 a169(r415): [575..580]
 a170(r413): [577..578]
 a171(r161): [583..584]
 a172(r409): [585..600]
 a173(r411): [585..586]
 a174(r156): [593..594]
 a175(r154): [597..598]
 a176(r408): [599..602]
 a177(r406): [886..889]
 a178(r407): [886..887]
 a179(r402): [890..899]
 a180(r403): [896..897]
 a181(r148): [915..925] [898..906]
 a182(r397): [916..923]
 a183(r401): [916..917]
 a184(r399): [918..919]
 a185(r400): [918..921]
 a186(r396): [903..904]
 a187(r147): [907..908]
 a188(r395): [909..910]
 a189(r394): [909..912]
 a190(r391): [873..878]
 a191(r140): [873..880] [850..871] [797..831]
 a192(r392): [875..876]
 a193(r136): [875..880] [850..871] [797..841]
 a194(r390): [798..799]
 a195(r145): [798..801]
 a196(r388): [802..803]
 a197(r387): [804..805]
 a198(r381): [860..867]
 a199(r386): [860..861]
 a200(r384): [862..863]
 a201(r385): [862..865]
 a202(r380): [868..869]
 a203(r378): [851..852]
 a204(r379): [851..856]
 a205(r377): [853..854]
 a206(r376): [812..813]
 a207(r221): [812..815]
 a208(r220): [816..817]
 a209(r375): [818..819]
 a210(r218): [818..821]
 a211(r373): [824..825]
 a212(r374): [824..829]
 a213(r372): [826..827]
 a214(r137): [836..839]
 a215(r371): [836..837]
 a216(r135): [842..843]
 a217(r369): [844..845]
 a218(r368): [846..847]
 a219(r366): [784..785]
 a220(r367): [784..789]
 a221(r365): [786..787]
 a222(r363): [655..656]
 a223(r364): [655..660]
 a224(r362): [657..658]
 a225(r180): [763..778] [745..757] [663..686]
 a226(r67): [765..766]
 a227(r101): [767..768]
 a228(r360): [769..770]
 a229(r130): [769..772]
 a230(r110): [773..778] [732..757] [663..723]
 a231(r358): [775..776]
 a232(r118): [775..778] [732..757] [663..709]
 a233(r357): [664..665]
 a234(r128): [666..667]
 a235(r355): [668..669]
 a236(r354): [670..671]
 a237(r348): [746..753]
 a238(r353): [746..747]
 a239(r351): [748..749]
 a240(r352): [748..751]
 a241(r347): [754..755]
 a242(r346): [675..676]
 a243(r131): [675..678]
 a244(r139): [679..680]
 a245(r345): [681..682]
 a246(r158): [681..684]
 a247(r338): [733..740]
 a248(r343): [733..734]
 a249(r341): [735..736]
 a250(r342): [735..738]
 a251(r337): [741..742]
 a252(r330): [694..695]
 a253(r116): [694..711]
 a254(r334): [700..701]
 a255(r335): [700..705]
 a256(r333): [702..703]
 a257(r329): [712..713]
 a258(r328): [714..715]
 a259(r111): [720..721]
 a260(r325): [720..727]
 a261(r109): [724..725]
 a262(r324): [726..729]
 a263(r323): [963..964]
 a264(r322): [965..966]
 a265(r320): [967..968]
 a266(r107): [967..970] [464..468]
 a267(r319): [465..466]
 a268(r317): [469..470]
 a269(r316): [471..472]
Compressing live ranges: from 971 to 376 - 38%
Ranges after the compression:
 a0(r48): [102..103] [0..1]
 a1(r47): [108..169] [2..101]
 a2(r43): [140..155] [124..135] [2..101]
 a3(r72): [122..155] [108..113] [2..101]
 a4(r497): [2..9]
 a5(r508): [2..3]
 a6(r212): [4..5]
 a7(r73): [122..155] [108..111] [20..101] [4..11]
 a8(r42): [138..155] [122..135] [108..113] [14..101] [6..11]
 a9(r502): [6..7]
 a10(r500): [8..9]
 a11(r501): [8..9]
 a12(r496): [10..11]
 a13(r485): [12..17]
 a14(r495): [12..13]
 a15(r490): [14..15]
 a16(r488): [16..17]
 a17(r489): [16..17]
 a18(r484): [18..19]
 a19(r480): [20..21]
 a20(r483): [20..23]
 a21(r479): [22..23]
 a22(r204): [24..29]
 a23(r52): [24..27]
 a24(r60): [122..155] [108..117] [28..101]
 a25(r478): [30..31]
 a26(r477): [32..33]
 a27(r202): [34..35]
 a28(r476): [36..37]
 a29(r475): [38..39]
 a30(r51): [40..47]
 a31(r474): [40..41]
 a32(r83): [140..155] [124..125] [42..101]
 a33(r473): [42..43]
 a34(r198): [44..47]
 a35(r44): [100..101] [48..87]
 a36(r45): [48..49]
 a37(r315): [50..51]
 a38(r50): [108..163] [58..101] [50..53]
 a39(r314): [52..53]
 a40(r69): [122..155] [108..119] [48..101]
 a41(r104): [54..55]
 a42(r313): [56..57]
 a43(r103): [56..59]
 a44(r98): [60..61]
 a45(r310): [60..65]
 a46(r311): [62..63]
 a47(r96): [64..65]
 a48(r308): [66..67]
 a49(r309): [66..69]
 a50(r307): [68..69]
 a51(r306): [70..71]
 a52(r305): [70..71]
 a53(r95): [72..73]
 a54(r300): [74..75]
 a55(r298): [74..77]
 a56(r297): [76..77]
 a57(r292): [78..81]
 a58(r296): [78..79]
 a59(r294): [80..81]
 a60(r295): [80..81]
 a61(r65): [122..155] [108..119] [82..101]
 a62(r91): [82..83]
 a63(r287): [84..85]
 a64(r286): [86..87]
 a65(r285): [88..89]
 a66(r49): [88..93]
 a67(r284): [90..91]
 a68(r283): [94..95]
 a69(r55): [108..173] [94..99]
 a70(r281): [96..99]
 a71(r90): [96..97]
 a72(r517): [98..99]
 a73(r280): [154..155]
 a74(r89): [148..149]
 a75(r278): [150..151]
 a76(r277): [152..153]
 a77(r88): [144..145]
 a78(r85): [146..147] [140..141]
 a79(r276): [142..143]
 a80(r74): [122..139] [108..109]
 a81(r81): [126..127]
 a82(r79): [126..131]
 a83(r273): [128..129]
 a84(r68): [130..139] [122..123] [108..119]
 a85(r271): [132..133]
 a86(r270): [136..137]
 a87(r269): [138..139]
 a88(r66): [108..119]
 a89(r256): [110..121]
 a90(r57): [156..173] [112..121]
 a91(r265): [114..115]
 a92(r267): [116..117]
 a93(r266): [116..117]
 a94(r262): [118..119]
 a95(r257): [120..121]
 a96(r254): [104..105]
 a97(r255): [104..107]
 a98(r253): [106..107]
 a99(r241): [156..161]
 a100(r246): [156..157]
 a101(r244): [158..163]
 a102(r243): [158..163]
 a103(r248): [158..159]
 a104(r247): [160..161]
 a105(r242): [162..163]
 a106(r54): [164..175]
 a107(r238): [164..165]
 a108(r58): [170..171]
 a109(r224): [172..175]
 a110(r225): [174..175]
 a111(r223): [176..177]
 a112(r42): [178..375]
 a113(r43): [178..375]
 a114(r44): [178..375]
 a115(r45): [178..375]
 a116(r47): [178..375]
 a117(r60): [178..375]
 a118(r69): [178..375]
 a119(r72): [178..375]
 a120(r73): [178..375]
 a121(r83): [178..375]
 a122(r470): [188..189]
 a123(r516): [188..189]
 a124(r452): [190..199]
 a125(r197): [190..191]
 a126(r467): [192..193]
 a127(r196): [192..193]
 a128(r188): [194..199]
 a129(r512): [194..195]
 a130(r457): [194..195]
 a131(r454): [194..195]
 a132(r189): [196..197]
 a133(r453): [196..197]
 a134(r105): [370..375] [354..355] [322..329] [272..279] [220..227] [198..211] [178..187]
 a135(r187): [200..201]
 a136(r445): [202..207]
 a137(r444): [202..207]
 a138(r448): [202..203]
 a139(r447): [204..205]
 a140(r182): [204..211] [184..185]
 a141(r185): [206..207]
 a142(r443): [208..209]
 a143(r442): [210..211]
 a144(r437): [186..187]
 a145(r436): [360..361]
 a146(r46): [360..365]
 a147(r435): [362..363]
 a148(r434): [366..367]
 a149(r181): [366..367]
 a150(r178): [368..369]
 a151(r433): [368..369]
 a152(r427): [240..243]
 a153(r432): [240..241]
 a154(r430): [242..243]
 a155(r431): [242..243]
 a156(r426): [244..245]
 a157(r155): [228..239] [212..223]
 a158(r159): [228..239] [212..221]
 a159(r423): [228..229]
 a160(r170): [230..231]
 a161(r165): [230..237]
 a162(r169): [232..233]
 a163(r417): [232..239]
 a164(r168): [234..235]
 a165(r419): [234..235]
 a166(r162): [236..239] [212..215]
 a167(r164): [238..239]
 a168(r414): [212..213]
 a169(r415): [212..215]
 a170(r413): [214..215]
 a171(r161): [216..217]
 a172(r409): [218..227]
 a173(r411): [218..219]
 a174(r156): [222..223]
 a175(r154): [224..225]
 a176(r408): [226..227]
 a177(r406): [342..343]
 a178(r407): [342..343]
 a179(r402): [344..347]
 a180(r403): [344..345]
 a181(r148): [356..359] [346..349]
 a182(r397): [356..359]
 a183(r401): [356..357]
 a184(r399): [358..359]
 a185(r400): [358..359]
 a186(r396): [348..349]
 a187(r147): [350..351]
 a188(r395): [352..353]
 a189(r394): [352..353]
 a190(r391): [340..341]
 a191(r140): [330..341] [304..319]
 a192(r392): [340..341]
 a193(r136): [330..341] [304..323]
 a194(r390): [304..305]
 a195(r145): [304..305]
 a196(r388): [306..307]
 a197(r387): [308..309]
 a198(r381): [334..337]
 a199(r386): [334..335]
 a200(r384): [336..337]
 a201(r385): [336..337]
 a202(r380): [338..339]
 a203(r378): [330..331]
 a204(r379): [330..333]
 a205(r377): [332..333]
 a206(r376): [310..311]
 a207(r221): [310..311]
 a208(r220): [312..313]
 a209(r375): [314..315]
 a210(r218): [314..315]
 a211(r373): [316..317]
 a212(r374): [316..319]
 a213(r372): [318..319]
 a214(r137): [320..321]
 a215(r371): [320..321]
 a216(r135): [324..325]
 a217(r369): [326..327]
 a218(r368): [328..329]
 a219(r366): [300..301]
 a220(r367): [300..303]
 a221(r365): [302..303]
 a222(r363): [246..247]
 a223(r364): [246..249]
 a224(r362): [248..249]
 a225(r180): [286..299] [250..263]
 a226(r67): [292..293]
 a227(r101): [294..295]
 a228(r360): [296..297]
 a229(r130): [296..297]
 a230(r110): [298..299] [280..291] [250..275]
 a231(r358): [298..299]
 a232(r118): [298..299] [280..291] [250..269]
 a233(r357): [250..251]
 a234(r128): [252..253]
 a235(r355): [254..255]
 a236(r354): [256..257]
 a237(r348): [286..289]
 a238(r353): [286..287]
 a239(r351): [288..289]
 a240(r352): [288..289]
 a241(r347): [290..291]
 a242(r346): [258..259]
 a243(r131): [258..259]
 a244(r139): [260..261]
 a245(r345): [262..263]
 a246(r158): [262..263]
 a247(r338): [280..283]
 a248(r343): [280..281]
 a249(r341): [282..283]
 a250(r342): [282..283]
 a251(r337): [284..285]
 a252(r330): [264..265]
 a253(r116): [264..269]
 a254(r334): [266..267]
 a255(r335): [266..269]
 a256(r333): [268..269]
 a257(r329): [270..271]
 a258(r328): [272..273]
 a259(r111): [274..275]
 a260(r325): [274..279]
 a261(r109): [276..277]
 a262(r324): [278..279]
 a263(r323): [370..371]
 a264(r322): [372..373]
 a265(r320): [374..375]
 a266(r107): [374..375] [178..179]
 a267(r319): [178..179]
 a268(r317): [180..181]
 a269(r316): [182..183]
    Creating cap  a270(r470,l0: a122(r470,l1))
    Creating cap  a271(r516,l0: a123(r516,l1))
    Creating cap  a272(r452,l0: a124(r452,l1))
    Creating cap  a273(r197,l0: a125(r197,l1))
    Creating cap  a274(r467,l0: a126(r467,l1))
    Creating cap  a275(r196,l0: a127(r196,l1))
    Creating cap  a276(r188,l0: a128(r188,l1))
    Creating cap  a277(r512,l0: a129(r512,l1))
    Creating cap  a278(r457,l0: a130(r457,l1))
    Creating cap  a279(r454,l0: a131(r454,l1))
    Creating cap  a280(r189,l0: a132(r189,l1))
    Creating cap  a281(r453,l0: a133(r453,l1))
    Creating cap  a282(r105,l0: a134(r105,l1))
    Creating cap  a283(r187,l0: a135(r187,l1))
    Creating cap  a284(r445,l0: a136(r445,l1))
    Creating cap  a285(r444,l0: a137(r444,l1))
    Creating cap  a286(r448,l0: a138(r448,l1))
    Creating cap  a287(r447,l0: a139(r447,l1))
    Creating cap  a288(r182,l0: a140(r182,l1))
    Creating cap  a289(r185,l0: a141(r185,l1))
    Creating cap  a290(r443,l0: a142(r443,l1))
    Creating cap  a291(r442,l0: a143(r442,l1))
    Creating cap  a292(r437,l0: a144(r437,l1))
    Creating cap  a293(r436,l0: a145(r436,l1))
    Creating cap  a294(r46,l0: a146(r46,l1))
    Creating cap  a295(r435,l0: a147(r435,l1))
    Creating cap  a296(r434,l0: a148(r434,l1))
    Creating cap  a297(r181,l0: a149(r181,l1))
    Creating cap  a298(r178,l0: a150(r178,l1))
    Creating cap  a299(r433,l0: a151(r433,l1))
    Creating cap  a300(r427,l0: a152(r427,l1))
    Creating cap  a301(r432,l0: a153(r432,l1))
    Creating cap  a302(r430,l0: a154(r430,l1))
    Creating cap  a303(r431,l0: a155(r431,l1))
    Creating cap  a304(r426,l0: a156(r426,l1))
    Creating cap  a305(r155,l0: a157(r155,l1))
    Creating cap  a306(r159,l0: a158(r159,l1))
    Creating cap  a307(r423,l0: a159(r423,l1))
    Creating cap  a308(r170,l0: a160(r170,l1))
    Creating cap  a309(r165,l0: a161(r165,l1))
    Creating cap  a310(r169,l0: a162(r169,l1))
    Creating cap  a311(r417,l0: a163(r417,l1))
    Creating cap  a312(r168,l0: a164(r168,l1))
    Creating cap  a313(r419,l0: a165(r419,l1))
    Creating cap  a314(r162,l0: a166(r162,l1))
    Creating cap  a315(r164,l0: a167(r164,l1))
    Creating cap  a316(r414,l0: a168(r414,l1))
    Creating cap  a317(r415,l0: a169(r415,l1))
    Creating cap  a318(r413,l0: a170(r413,l1))
    Creating cap  a319(r161,l0: a171(r161,l1))
    Creating cap  a320(r409,l0: a172(r409,l1))
    Creating cap  a321(r411,l0: a173(r411,l1))
    Creating cap  a322(r156,l0: a174(r156,l1))
    Creating cap  a323(r154,l0: a175(r154,l1))
    Creating cap  a324(r408,l0: a176(r408,l1))
    Creating cap  a325(r406,l0: a177(r406,l1))
    Creating cap  a326(r407,l0: a178(r407,l1))
    Creating cap  a327(r402,l0: a179(r402,l1))
    Creating cap  a328(r403,l0: a180(r403,l1))
    Creating cap  a329(r148,l0: a181(r148,l1))
    Creating cap  a330(r397,l0: a182(r397,l1))
    Creating cap  a331(r401,l0: a183(r401,l1))
    Creating cap  a332(r399,l0: a184(r399,l1))
    Creating cap  a333(r400,l0: a185(r400,l1))
    Creating cap  a334(r396,l0: a186(r396,l1))
    Creating cap  a335(r147,l0: a187(r147,l1))
    Creating cap  a336(r395,l0: a188(r395,l1))
    Creating cap  a337(r394,l0: a189(r394,l1))
    Creating cap  a338(r391,l0: a190(r391,l1))
    Creating cap  a339(r140,l0: a191(r140,l1))
    Creating cap  a340(r392,l0: a192(r392,l1))
    Creating cap  a341(r136,l0: a193(r136,l1))
    Creating cap  a342(r390,l0: a194(r390,l1))
    Creating cap  a343(r145,l0: a195(r145,l1))
    Creating cap  a344(r388,l0: a196(r388,l1))
    Creating cap  a345(r387,l0: a197(r387,l1))
    Creating cap  a346(r381,l0: a198(r381,l1))
    Creating cap  a347(r386,l0: a199(r386,l1))
    Creating cap  a348(r384,l0: a200(r384,l1))
    Creating cap  a349(r385,l0: a201(r385,l1))
    Creating cap  a350(r380,l0: a202(r380,l1))
    Creating cap  a351(r378,l0: a203(r378,l1))
    Creating cap  a352(r379,l0: a204(r379,l1))
    Creating cap  a353(r377,l0: a205(r377,l1))
    Creating cap  a354(r376,l0: a206(r376,l1))
    Creating cap  a355(r221,l0: a207(r221,l1))
    Creating cap  a356(r220,l0: a208(r220,l1))
    Creating cap  a357(r375,l0: a209(r375,l1))
    Creating cap  a358(r218,l0: a210(r218,l1))
    Creating cap  a359(r373,l0: a211(r373,l1))
    Creating cap  a360(r374,l0: a212(r374,l1))
    Creating cap  a361(r372,l0: a213(r372,l1))
    Creating cap  a362(r137,l0: a214(r137,l1))
    Creating cap  a363(r371,l0: a215(r371,l1))
    Creating cap  a364(r135,l0: a216(r135,l1))
    Creating cap  a365(r369,l0: a217(r369,l1))
    Creating cap  a366(r368,l0: a218(r368,l1))
    Creating cap  a367(r366,l0: a219(r366,l1))
    Creating cap  a368(r367,l0: a220(r367,l1))
    Creating cap  a369(r365,l0: a221(r365,l1))
    Creating cap  a370(r363,l0: a222(r363,l1))
    Creating cap  a371(r364,l0: a223(r364,l1))
    Creating cap  a372(r362,l0: a224(r362,l1))
    Creating cap  a373(r180,l0: a225(r180,l1))
    Creating cap  a374(r67,l0: a226(r67,l1))
    Creating cap  a375(r101,l0: a227(r101,l1))
    Creating cap  a376(r360,l0: a228(r360,l1))
    Creating cap  a377(r130,l0: a229(r130,l1))
    Creating cap  a378(r110,l0: a230(r110,l1))
    Creating cap  a379(r358,l0: a231(r358,l1))
    Creating cap  a380(r118,l0: a232(r118,l1))
    Creating cap  a381(r357,l0: a233(r357,l1))
    Creating cap  a382(r128,l0: a234(r128,l1))
    Creating cap  a383(r355,l0: a235(r355,l1))
    Creating cap  a384(r354,l0: a236(r354,l1))
    Creating cap  a385(r348,l0: a237(r348,l1))
    Creating cap  a386(r353,l0: a238(r353,l1))
    Creating cap  a387(r351,l0: a239(r351,l1))
    Creating cap  a388(r352,l0: a240(r352,l1))
    Creating cap  a389(r347,l0: a241(r347,l1))
    Creating cap  a390(r346,l0: a242(r346,l1))
    Creating cap  a391(r131,l0: a243(r131,l1))
    Creating cap  a392(r139,l0: a244(r139,l1))
    Creating cap  a393(r345,l0: a245(r345,l1))
    Creating cap  a394(r158,l0: a246(r158,l1))
    Creating cap  a395(r338,l0: a247(r338,l1))
    Creating cap  a396(r343,l0: a248(r343,l1))
    Creating cap  a397(r341,l0: a249(r341,l1))
    Creating cap  a398(r342,l0: a250(r342,l1))
    Creating cap  a399(r337,l0: a251(r337,l1))
    Creating cap  a400(r330,l0: a252(r330,l1))
    Creating cap  a401(r116,l0: a253(r116,l1))
    Creating cap  a402(r334,l0: a254(r334,l1))
    Creating cap  a403(r335,l0: a255(r335,l1))
    Creating cap  a404(r333,l0: a256(r333,l1))
    Creating cap  a405(r329,l0: a257(r329,l1))
    Creating cap  a406(r328,l0: a258(r328,l1))
    Creating cap  a407(r111,l0: a259(r111,l1))
    Creating cap  a408(r325,l0: a260(r325,l1))
    Creating cap  a409(r109,l0: a261(r109,l1))
    Creating cap  a410(r324,l0: a262(r324,l1))
    Creating cap  a411(r323,l0: a263(r323,l1))
    Creating cap  a412(r322,l0: a264(r322,l1))
    Creating cap  a413(r320,l0: a265(r320,l1))
    Creating cap  a414(r107,l0: a266(r107,l1))
    Creating cap  a415(r319,l0: a267(r319,l1))
    Creating cap  a416(r317,l0: a268(r317,l1))
    Creating cap  a417(r316,l0: a269(r316,l1))
+++Allocating 13784 bytes for conflict table (uncompressed size 23408)
;; a0(r48,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r47,l0) conflicts: a5(r508,l0) a4(r497,l0) a2(r43,l0) a3(r72,l0) a6(r212,l0) a7(r73,l0) a9(r502,l0) a8(r42,l0) a10(r500,l0) a11(r501,l0) a12(r496,l0) a14(r495,l0) a13(r485,l0) a15(r490,l0) a16(r488,l0) a17(r489,l0) a18(r484,l0) a19(r480,l0) a20(r483,l0) a21(r479,l0) a23(r52,l0) a22(r204,l0) a24(r60,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a95(r257,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a100(r246,l0) a99(r241,l0) a103(r248,l0) a101(r244,l0) a102(r243,l0) a104(r247,l0) a105(r242,l0) a107(r238,l0) a106(r54,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r43,l0) conflicts: a5(r508,l0) a4(r497,l0) a1(r47,l0) a3(r72,l0) a6(r212,l0) a7(r73,l0) a9(r502,l0) a8(r42,l0) a10(r500,l0) a11(r501,l0) a12(r496,l0) a14(r495,l0) a13(r485,l0) a15(r490,l0) a16(r488,l0) a17(r489,l0) a18(r484,l0) a19(r480,l0) a20(r483,l0) a21(r479,l0) a23(r52,l0) a22(r204,l0) a24(r60,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a80(r74,l0) a84(r68,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a3(r72,l0) conflicts: a5(r508,l0) a4(r497,l0) a1(r47,l0) a2(r43,l0) a6(r212,l0) a7(r73,l0) a9(r502,l0) a8(r42,l0) a10(r500,l0) a11(r501,l0) a12(r496,l0) a14(r495,l0) a13(r485,l0) a15(r490,l0) a16(r488,l0) a17(r489,l0) a18(r484,l0) a19(r480,l0) a20(r483,l0) a21(r479,l0) a23(r52,l0) a22(r204,l0) a24(r60,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a4(r497,l0) conflicts: a5(r508,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a6(r212,l0) a7(r73,l0) a9(r502,l0) a8(r42,l0) a10(r500,l0) a11(r501,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r508,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r212,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r73,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a6(r212,l0) a9(r502,l0) a8(r42,l0) a10(r500,l0) a11(r501,l0) a12(r496,l0) a19(r480,l0) a20(r483,l0) a21(r479,l0) a23(r52,l0) a22(r204,l0) a24(r60,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a8(r42,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a9(r502,l0) a10(r500,l0) a11(r501,l0) a12(r496,l0) a13(r485,l0) a15(r490,l0) a16(r488,l0) a17(r489,l0) a18(r484,l0) a19(r480,l0) a20(r483,l0) a21(r479,l0) a23(r52,l0) a22(r204,l0) a24(r60,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a9(r502,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r500,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a11(r501,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r501,l0) conflicts: a4(r497,l0) a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a10(r500,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r496,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r485,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a8(r42,l0) a14(r495,l0) a15(r490,l0) a16(r488,l0) a17(r489,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r495,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a13(r485,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r490,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a8(r42,l0) a13(r485,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r488,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a8(r42,l0) a13(r485,l0) a17(r489,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r489,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a8(r42,l0) a13(r485,l0) a16(r488,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r484,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a8(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r480,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a20(r483,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r483,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a19(r480,l0) a21(r479,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r479,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a20(r483,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r204,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a23(r52,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r52,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a22(r204,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r60,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a22(r204,l0) a25(r478,l0) a26(r477,l0) a27(r202,l0) a28(r476,l0) a29(r475,l0) a31(r474,l0) a30(r51,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a25(r478,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r477,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r202,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r476,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r475,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r51,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a31(r474,l0) a33(r473,l0) a32(r83,l0) a34(r198,l0)
;;     total conflict hard regs: 11-15
;;     conflict hard regs: 11-15

;; a31(r474,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a30(r51,l0)
;;     total conflict hard regs: 12-15
;;     conflict hard regs: 12-15

;; a32(r83,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a30(r51,l0) a33(r473,l0) a34(r198,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a80(r74,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a33(r473,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a30(r51,l0) a32(r83,l0)
;;     total conflict hard regs: 15
;;     conflict hard regs: 15

;; a34(r198,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a30(r51,l0) a32(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r44,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a36(r45,l0) a40(r69,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a36(r45,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a37(r315,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r50,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a37(r315,l0) a39(r314,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a95(r257,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a100(r246,l0) a99(r241,l0) a103(r248,l0) a101(r244,l0) a102(r243,l0) a104(r247,l0) a105(r242,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a39(r314,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r69,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a37(r315,l0) a38(r50,l0) a39(r314,l0) a41(r104,l0) a42(r313,l0) a43(r103,l0) a44(r98,l0) a45(r310,l0) a46(r311,l0) a47(r96,l0) a48(r308,l0) a49(r309,l0) a50(r307,l0) a51(r306,l0) a52(r305,l0) a53(r95,l0) a54(r300,l0) a55(r298,l0) a56(r297,l0) a58(r296,l0) a57(r292,l0) a59(r294,l0) a60(r295,l0) a62(r91,l0) a61(r65,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a415(r319,l0) a282(r105,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a270(r470,l0) a271(r516,l0) a273(r197,l0) a272(r452,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0) a301(r432,l0) a300(r427,l0) a302(r430,l0) a303(r431,l0) a304(r426,l0) a370(r363,l0) a371(r364,l0) a372(r362,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0) a367(r366,l0) a368(r367,l0) a369(r365,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0) a325(r406,l0) a326(r407,l0) a328(r403,l0) a327(r402,l0) a329(r148,l0) a334(r396,l0) a335(r147,l0) a336(r395,l0) a337(r394,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0) a293(r436,l0) a294(r46,l0) a295(r435,l0) a296(r434,l0) a297(r181,l0) a298(r178,l0) a299(r433,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a41(r104,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r313,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a43(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r103,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a42(r313,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r98,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a45(r310,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a45(r310,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a44(r98,l0) a46(r311,l0) a47(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r311,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a45(r310,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r96,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a45(r310,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r308,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a49(r309,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r309,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a48(r308,l0) a50(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r307,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a49(r309,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r306,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a52(r305,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r305,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a51(r306,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r95,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r300,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a55(r298,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r298,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a54(r300,l0) a56(r297,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r297,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a55(r298,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r292,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a58(r296,l0) a59(r294,l0) a60(r295,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r296,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a57(r292,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r294,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a57(r292,l0) a60(r295,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r295,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a57(r292,l0) a59(r294,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r65,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a62(r91,l0) a63(r287,l0) a64(r286,l0) a65(r285,l0) a66(r49,l0) a67(r284,l0) a68(r283,l0) a69(r55,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a62(r91,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r287,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r286,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r285,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a66(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r49,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a65(r285,l0) a67(r284,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r284,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a66(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r283,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r55,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a68(r283,l0) a71(r90,l0) a70(r281,l0) a72(r517,l0) a88(r66,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a95(r257,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0) a78(r85,l0) a79(r276,l0) a77(r88,l0) a74(r89,l0) a75(r278,l0) a76(r277,l0) a73(r280,l0) a100(r246,l0) a99(r241,l0) a103(r248,l0) a101(r244,l0) a102(r243,l0) a104(r247,l0) a105(r242,l0) a107(r238,l0) a106(r54,l0) a108(r58,l0) a109(r224,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a70(r281,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a71(r90,l0) a72(r517,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r90,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a70(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r517,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a70(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r280,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r89,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r278,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r277,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r88,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r85,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r276,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r74,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a81(r81,l0) a82(r79,l0) a83(r273,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0)
;;     total conflict hard regs: 12-15
;;     conflict hard regs: 12-15

;; a81(r81,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a82(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r79,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a84(r68,l0) a81(r81,l0) a83(r273,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r273,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a82(r79,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r68,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a80(r74,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a82(r79,l0) a85(r271,l0) a86(r270,l0) a87(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r271,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a84(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r270,l0) conflicts: a1(r47,l0) a3(r72,l0) a7(r73,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a84(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r269,l0) conflicts: a1(r47,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a84(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r66,l0) conflicts: a1(r47,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a80(r74,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a89(r256,l0) conflicts: a1(r47,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a90(r57,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a95(r257,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a90(r57,l0) conflicts: a1(r47,l0) a3(r72,l0) a8(r42,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a89(r256,l0) a91(r265,l0) a92(r267,l0) a93(r266,l0) a94(r262,l0) a95(r257,l0) a100(r246,l0) a99(r241,l0) a103(r248,l0) a101(r244,l0) a102(r243,l0) a104(r247,l0) a105(r242,l0) a107(r238,l0) a106(r54,l0) a108(r58,l0) a109(r224,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a91(r265,l0) conflicts: a1(r47,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r267,l0) conflicts: a1(r47,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a93(r266,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r266,l0) conflicts: a1(r47,l0) a24(r60,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0) a92(r267,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r262,l0) conflicts: a1(r47,l0) a40(r69,l0) a38(r50,l0) a61(r65,l0) a69(r55,l0) a88(r66,l0) a84(r68,l0) a89(r256,l0) a90(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r257,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a89(r256,l0) a90(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r254,l0) conflicts: a97(r255,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r255,l0) conflicts: a96(r254,l0) a98(r253,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r253,l0) conflicts: a97(r255,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r241,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a100(r246,l0) a103(r248,l0) a101(r244,l0) a102(r243,l0) a104(r247,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r246,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a99(r241,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r244,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a99(r241,l0) a103(r248,l0) a102(r243,l0) a104(r247,l0) a105(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r243,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a99(r241,l0) a103(r248,l0) a101(r244,l0) a104(r247,l0) a105(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r248,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a99(r241,l0) a101(r244,l0) a102(r243,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r247,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a99(r241,l0) a101(r244,l0) a102(r243,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r242,l0) conflicts: a1(r47,l0) a38(r50,l0) a69(r55,l0) a90(r57,l0) a101(r244,l0) a102(r243,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r54,l0) conflicts: a1(r47,l0) a69(r55,l0) a90(r57,l0) a107(r238,l0) a108(r58,l0) a109(r224,l0) a110(r225,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a107(r238,l0) conflicts: a1(r47,l0) a69(r55,l0) a90(r57,l0) a106(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r58,l0) conflicts: a69(r55,l0) a90(r57,l0) a106(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r224,l0) conflicts: a69(r55,l0) a90(r57,l0) a106(r54,l0) a110(r225,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r225,l0) conflicts: a106(r54,l0) a109(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r223,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r42,l1) conflicts: a267(r319,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a113(r43,l1) conflicts: a267(r319,l1) a112(r42,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a114(r44,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a115(r45,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a116(r47,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a117(r60,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a118(r69,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a119(r72,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a120(r73,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a121(r83,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a134(r105,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a122(r470,l1) a123(r516,l1) a125(r197,l1) a124(r452,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1) a153(r432,l1) a152(r427,l1) a154(r430,l1) a155(r431,l1) a156(r426,l1) a222(r363,l1) a223(r364,l1) a224(r362,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1) a219(r366,l1) a220(r367,l1) a221(r365,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1) a177(r406,l1) a178(r407,l1) a180(r403,l1) a179(r402,l1) a181(r148,l1) a186(r396,l1) a187(r147,l1) a188(r395,l1) a189(r394,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1) a145(r436,l1) a146(r46,l1) a147(r435,l1) a148(r434,l1) a149(r181,l1) a150(r178,l1) a151(r433,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a122(r470,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a123(r516,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a123(r516,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a122(r470,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a124(r452,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a125(r197,l1) a126(r467,l1) a127(r196,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1) a132(r189,l1) a133(r453,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a125(r197,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a126(r467,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a127(r196,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a127(r196,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a126(r467,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a128(r188,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a124(r452,l1) a129(r512,l1) a130(r457,l1) a131(r454,l1) a132(r189,l1) a133(r453,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a129(r512,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a130(r457,l1) a131(r454,l1) a128(r188,l1)
;;     total conflict hard regs: 10 12 13
;;     conflict hard regs: 10 12 13

;; a130(r457,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a129(r512,l1) a131(r454,l1) a128(r188,l1)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a131(r454,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a129(r512,l1) a130(r457,l1) a128(r188,l1)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a132(r189,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a128(r188,l1) a133(r453,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a133(r453,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a124(r452,l1) a128(r188,l1) a132(r189,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a134(r105,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a266(r107,l1) a268(r317,l1) a269(r316,l1) a140(r182,l1) a144(r437,l1) a124(r452,l1) a128(r188,l1) a135(r187,l1) a138(r448,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1) a157(r155,l1) a158(r159,l1) a172(r409,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1) a230(r110,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a261(r109,l1) a262(r324,l1) a193(r136,l1) a216(r135,l1) a217(r369,l1) a218(r368,l1) a263(r323,l1) a264(r322,l1) a265(r320,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a135(r187,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a136(r445,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1) a138(r448,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a137(r444,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1) a138(r448,l1) a136(r445,l1) a139(r447,l1) a141(r185,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a138(r448,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a136(r445,l1) a137(r444,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a139(r447,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1) a136(r445,l1) a137(r444,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a140(r182,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a136(r445,l1) a137(r444,l1) a139(r447,l1) a141(r185,l1) a142(r443,l1) a143(r442,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a141(r185,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1) a136(r445,l1) a137(r444,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a142(r443,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a143(r442,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a140(r182,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a144(r437,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a145(r436,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a146(r46,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a146(r46,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a145(r436,l1) a147(r435,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a147(r435,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a146(r46,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a148(r434,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a149(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a149(r181,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a148(r434,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a150(r178,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a151(r433,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r433,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a150(r178,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a152(r427,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a153(r432,l1) a154(r430,l1) a155(r431,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r432,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a152(r427,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r430,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a152(r427,l1) a155(r431,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r431,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a152(r427,l1) a154(r430,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r426,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r155,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a168(r414,l1) a169(r415,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a174(r156,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a158(r159,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a166(r162,l1) a170(r413,l1) a171(r161,l1) a173(r411,l1) a172(r409,l1) a159(r423,l1) a160(r170,l1) a161(r165,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a159(r423,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1)
;;     total conflict hard regs: 13
;;     conflict hard regs: 13

;; a160(r170,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a161(r165,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r165,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a160(r170,l1) a162(r169,l1) a163(r417,l1) a164(r168,l1) a165(r419,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r169,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a161(r165,l1) a163(r417,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r417,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a161(r165,l1) a162(r169,l1) a164(r168,l1) a165(r419,l1) a167(r164,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a164(r168,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a161(r165,l1) a163(r417,l1) a165(r419,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r419,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a161(r165,l1) a163(r417,l1) a164(r168,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a166(r162,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a168(r414,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a170(r413,l1) a161(r165,l1) a163(r417,l1) a167(r164,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r164,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a163(r417,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a168(r414,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a169(r415,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a168(r414,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1) a170(r413,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a170(r413,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a169(r415,l1) a157(r155,l1) a158(r159,l1) a166(r162,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a171(r161,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a172(r409,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a157(r155,l1) a158(r159,l1) a173(r411,l1) a174(r156,l1) a175(r154,l1) a176(r408,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a173(r411,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a157(r155,l1) a158(r159,l1) a172(r409,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a174(r156,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a157(r155,l1) a172(r409,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a175(r154,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a172(r409,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r408,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a172(r409,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a177(r406,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a178(r407,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a178(r407,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a177(r406,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r402,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a180(r403,l1) a181(r148,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a180(r403,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a179(r402,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a181(r148,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a179(r402,l1) a186(r396,l1) a183(r401,l1) a182(r397,l1) a184(r399,l1) a185(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a182(r397,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a181(r148,l1) a183(r401,l1) a184(r399,l1) a185(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a183(r401,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a181(r148,l1) a182(r397,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a184(r399,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a181(r148,l1) a182(r397,l1) a185(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a185(r400,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a181(r148,l1) a182(r397,l1) a184(r399,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a186(r396,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a181(r148,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a187(r147,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a188(r395,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a189(r394,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a189(r394,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a188(r395,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a190(r391,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a192(r392,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a191(r140,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a194(r390,l1) a195(r145,l1) a193(r136,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a192(r392,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a190(r391,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a193(r136,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a194(r390,l1) a195(r145,l1) a191(r140,l1) a196(r388,l1) a197(r387,l1) a206(r376,l1) a207(r221,l1) a208(r220,l1) a209(r375,l1) a210(r218,l1) a211(r373,l1) a212(r374,l1) a213(r372,l1) a214(r137,l1) a215(r371,l1) a203(r378,l1) a204(r379,l1) a205(r377,l1) a199(r386,l1) a198(r381,l1) a200(r384,l1) a201(r385,l1) a202(r380,l1) a190(r391,l1) a192(r392,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a194(r390,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a195(r145,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a195(r145,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a194(r390,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a196(r388,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a197(r387,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a198(r381,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a199(r386,l1) a200(r384,l1) a201(r385,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a199(r386,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a198(r381,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a200(r384,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a198(r381,l1) a201(r385,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a201(r385,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a198(r381,l1) a200(r384,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a202(r380,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a203(r378,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a204(r379,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a204(r379,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a203(r378,l1) a205(r377,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a205(r377,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a204(r379,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a206(r376,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a207(r221,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a207(r221,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a206(r376,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a208(r220,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a209(r375,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a210(r218,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a210(r218,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a209(r375,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a211(r373,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a212(r374,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a212(r374,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a211(r373,l1) a213(r372,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a213(r372,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a191(r140,l1) a193(r136,l1) a212(r374,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a214(r137,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a193(r136,l1) a215(r371,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a215(r371,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a193(r136,l1) a214(r137,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a216(r135,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a217(r369,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a218(r368,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a219(r366,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a220(r367,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a220(r367,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a219(r366,l1) a221(r365,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a221(r365,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a220(r367,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a222(r363,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a223(r364,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a223(r364,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a222(r363,l1) a224(r362,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a224(r362,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a223(r364,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a225(r180,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a233(r357,l1) a230(r110,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a226(r67,l1) a227(r101,l1) a228(r360,l1) a229(r130,l1) a231(r358,l1)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a226(r67,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a227(r101,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a228(r360,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a229(r130,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a229(r130,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a228(r360,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a230(r110,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a233(r357,l1) a225(r180,l1) a232(r118,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a257(r329,l1) a258(r328,l1) a259(r111,l1) a260(r325,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a231(r358,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a231(r358,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a232(r118,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a233(r357,l1) a225(r180,l1) a230(r110,l1) a234(r128,l1) a235(r355,l1) a236(r354,l1) a242(r346,l1) a243(r131,l1) a244(r139,l1) a245(r345,l1) a246(r158,l1) a252(r330,l1) a253(r116,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1) a248(r343,l1) a247(r338,l1) a249(r341,l1) a250(r342,l1) a251(r337,l1) a238(r353,l1) a237(r348,l1) a239(r351,l1) a240(r352,l1) a241(r347,l1) a231(r358,l1)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a233(r357,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a234(r128,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a235(r355,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a236(r354,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a237(r348,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a238(r353,l1) a239(r351,l1) a240(r352,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a238(r353,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a237(r348,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a239(r351,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a237(r348,l1) a240(r352,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a240(r352,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a237(r348,l1) a239(r351,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a241(r347,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a242(r346,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a243(r131,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a243(r131,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a242(r346,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a244(r139,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a245(r345,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a246(r158,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a246(r158,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a225(r180,l1) a230(r110,l1) a232(r118,l1) a245(r345,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a247(r338,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a248(r343,l1) a249(r341,l1) a250(r342,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a248(r343,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a247(r338,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a249(r341,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a247(r338,l1) a250(r342,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a250(r342,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a247(r338,l1) a249(r341,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a251(r337,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a252(r330,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a253(r116,l1)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a253(r116,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a252(r330,l1) a254(r334,l1) a255(r335,l1) a256(r333,l1)
;;     total conflict hard regs: 10 11
;;     conflict hard regs: 10 11

;; a254(r334,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a253(r116,l1) a255(r335,l1)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a255(r335,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a253(r116,l1) a254(r334,l1) a256(r333,l1)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a256(r333,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1) a232(r118,l1) a253(r116,l1) a255(r335,l1)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a257(r329,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a230(r110,l1)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a258(r328,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a230(r110,l1)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a259(r111,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a230(r110,l1) a260(r325,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a260(r325,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a230(r110,l1) a259(r111,l1) a261(r109,l1) a262(r324,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a261(r109,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a260(r325,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a262(r324,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a260(r325,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a263(r323,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a264(r322,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a265(r320,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a266(r107,l1) conflicts: a267(r319,l1) a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a265(r320,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a267(r319,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1) a266(r107,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a268(r317,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a269(r316,l1) conflicts: a112(r42,l1) a113(r43,l1) a114(r44,l1) a115(r45,l1) a116(r47,l1) a117(r60,l1) a118(r69,l1) a119(r72,l1) a120(r73,l1) a121(r83,l1) a134(r105,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a270(r470,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a271(r516,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a271(r516,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a270(r470,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a272(r452,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a273(r197,l0) a274(r467,l0) a275(r196,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0) a280(r189,l0) a281(r453,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a273(r197,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a274(r467,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a275(r196,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a275(r196,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a274(r467,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a276(r188,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a272(r452,l0) a277(r512,l0) a278(r457,l0) a279(r454,l0) a280(r189,l0) a281(r453,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a277(r512,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a278(r457,l0) a279(r454,l0) a276(r188,l0)
;;     total conflict hard regs: 10 12 13
;;     conflict hard regs: 10 12 13

;; a278(r457,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a277(r512,l0) a279(r454,l0) a276(r188,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a279(r454,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a277(r512,l0) a278(r457,l0) a276(r188,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a280(r189,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a276(r188,l0) a281(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a281(r453,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a272(r452,l0) a276(r188,l0) a280(r189,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a282(r105,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a415(r319,l0) a414(r107,l0) a416(r317,l0) a417(r316,l0) a288(r182,l0) a292(r437,l0) a272(r452,l0) a276(r188,l0) a283(r187,l0) a286(r448,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0) a305(r155,l0) a306(r159,l0) a320(r409,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0) a378(r110,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a409(r109,l0) a410(r324,l0) a341(r136,l0) a364(r135,l0) a365(r369,l0) a366(r368,l0) a411(r323,l0) a412(r322,l0) a413(r320,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a283(r187,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a284(r445,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0) a286(r448,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a285(r444,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0) a286(r448,l0) a284(r445,l0) a287(r447,l0) a289(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a286(r448,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a284(r445,l0) a285(r444,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a287(r447,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0) a284(r445,l0) a285(r444,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a288(r182,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a284(r445,l0) a285(r444,l0) a287(r447,l0) a289(r185,l0) a290(r443,l0) a291(r442,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a289(r185,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0) a284(r445,l0) a285(r444,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a290(r443,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a291(r442,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a288(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a292(r437,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a293(r436,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a294(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a294(r46,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a293(r436,l0) a295(r435,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a295(r435,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a294(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a296(r434,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a297(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a297(r181,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a296(r434,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a298(r178,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a299(r433,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a299(r433,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a298(r178,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a300(r427,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a301(r432,l0) a302(r430,l0) a303(r431,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a301(r432,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a300(r427,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a302(r430,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a300(r427,l0) a303(r431,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a303(r431,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a300(r427,l0) a302(r430,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a304(r426,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a305(r155,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a316(r414,l0) a317(r415,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a322(r156,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a306(r159,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a314(r162,l0) a318(r413,l0) a319(r161,l0) a321(r411,l0) a320(r409,l0) a307(r423,l0) a308(r170,l0) a309(r165,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0)
;;     total conflict hard regs: 12 13
;;     conflict hard regs: 12 13

;; a307(r423,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0)
;;     total conflict hard regs: 13
;;     conflict hard regs: 13

;; a308(r170,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a309(r165,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a309(r165,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a308(r170,l0) a310(r169,l0) a311(r417,l0) a312(r168,l0) a313(r419,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a310(r169,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a309(r165,l0) a311(r417,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a311(r417,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a309(r165,l0) a310(r169,l0) a312(r168,l0) a313(r419,l0) a315(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a312(r168,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a309(r165,l0) a311(r417,l0) a313(r419,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a313(r419,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a309(r165,l0) a311(r417,l0) a312(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a314(r162,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a316(r414,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a318(r413,l0) a309(r165,l0) a311(r417,l0) a315(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a315(r164,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a311(r417,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a316(r414,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a317(r415,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a316(r414,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0) a318(r413,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a318(r413,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a317(r415,l0) a305(r155,l0) a306(r159,l0) a314(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a319(r161,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a320(r409,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a305(r155,l0) a306(r159,l0) a321(r411,l0) a322(r156,l0) a323(r154,l0) a324(r408,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a321(r411,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a305(r155,l0) a306(r159,l0) a320(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a322(r156,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a305(r155,l0) a320(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a323(r154,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a320(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a324(r408,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a320(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a325(r406,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a326(r407,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a326(r407,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a325(r406,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a327(r402,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a328(r403,l0) a329(r148,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a328(r403,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a327(r402,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a329(r148,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a327(r402,l0) a334(r396,l0) a331(r401,l0) a330(r397,l0) a332(r399,l0) a333(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a330(r397,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a329(r148,l0) a331(r401,l0) a332(r399,l0) a333(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a331(r401,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a329(r148,l0) a330(r397,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a332(r399,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a329(r148,l0) a330(r397,l0) a333(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a333(r400,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a329(r148,l0) a330(r397,l0) a332(r399,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a334(r396,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a329(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a335(r147,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a336(r395,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a337(r394,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a337(r394,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a336(r395,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a338(r391,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a340(r392,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a339(r140,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a342(r390,l0) a343(r145,l0) a341(r136,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a340(r392,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a338(r391,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a341(r136,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a342(r390,l0) a343(r145,l0) a339(r140,l0) a344(r388,l0) a345(r387,l0) a354(r376,l0) a355(r221,l0) a356(r220,l0) a357(r375,l0) a358(r218,l0) a359(r373,l0) a360(r374,l0) a361(r372,l0) a362(r137,l0) a363(r371,l0) a351(r378,l0) a352(r379,l0) a353(r377,l0) a347(r386,l0) a346(r381,l0) a348(r384,l0) a349(r385,l0) a350(r380,l0) a338(r391,l0) a340(r392,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a342(r390,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a343(r145,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a343(r145,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a342(r390,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a344(r388,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a345(r387,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a346(r381,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a347(r386,l0) a348(r384,l0) a349(r385,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a347(r386,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a346(r381,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a348(r384,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a346(r381,l0) a349(r385,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a349(r385,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a346(r381,l0) a348(r384,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a350(r380,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a351(r378,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a352(r379,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a352(r379,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a351(r378,l0) a353(r377,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a353(r377,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a352(r379,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a354(r376,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a355(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a355(r221,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a354(r376,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a356(r220,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a357(r375,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a358(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a358(r218,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a357(r375,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a359(r373,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a360(r374,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a360(r374,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a359(r373,l0) a361(r372,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a361(r372,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a339(r140,l0) a341(r136,l0) a360(r374,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a362(r137,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a341(r136,l0) a363(r371,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a363(r371,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a341(r136,l0) a362(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a364(r135,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a365(r369,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a366(r368,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a367(r366,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a368(r367,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a368(r367,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a367(r366,l0) a369(r365,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a369(r365,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a368(r367,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a370(r363,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a371(r364,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a371(r364,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a370(r363,l0) a372(r362,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a372(r362,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a371(r364,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a373(r180,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a381(r357,l0) a378(r110,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a374(r67,l0) a375(r101,l0) a376(r360,l0) a377(r130,l0) a379(r358,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a374(r67,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a375(r101,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a376(r360,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a377(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a377(r130,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a376(r360,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a378(r110,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a381(r357,l0) a373(r180,l0) a380(r118,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a405(r329,l0) a406(r328,l0) a407(r111,l0) a408(r325,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a379(r358,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a379(r358,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a380(r118,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a381(r357,l0) a373(r180,l0) a378(r110,l0) a382(r128,l0) a383(r355,l0) a384(r354,l0) a390(r346,l0) a391(r131,l0) a392(r139,l0) a393(r345,l0) a394(r158,l0) a400(r330,l0) a401(r116,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0) a396(r343,l0) a395(r338,l0) a397(r341,l0) a398(r342,l0) a399(r337,l0) a386(r353,l0) a385(r348,l0) a387(r351,l0) a388(r352,l0) a389(r347,l0) a379(r358,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a381(r357,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a382(r128,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a383(r355,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a384(r354,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a385(r348,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a386(r353,l0) a387(r351,l0) a388(r352,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a386(r353,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a385(r348,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a387(r351,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a385(r348,l0) a388(r352,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a388(r352,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a385(r348,l0) a387(r351,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a389(r347,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a390(r346,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a391(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a391(r131,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a390(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a392(r139,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a393(r345,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a394(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a394(r158,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a373(r180,l0) a378(r110,l0) a380(r118,l0) a393(r345,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a395(r338,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a396(r343,l0) a397(r341,l0) a398(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a396(r343,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a395(r338,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a397(r341,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a395(r338,l0) a398(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a398(r342,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a395(r338,l0) a397(r341,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a399(r337,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a400(r330,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a401(r116,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a401(r116,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a400(r330,l0) a402(r334,l0) a403(r335,l0) a404(r333,l0)
;;     total conflict hard regs: 10 11
;;     conflict hard regs: 10 11

;; a402(r334,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a401(r116,l0) a403(r335,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a403(r335,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a401(r116,l0) a402(r334,l0) a404(r333,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a404(r333,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0) a380(r118,l0) a401(r116,l0) a403(r335,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a405(r329,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a378(r110,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a406(r328,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a378(r110,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a407(r111,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a378(r110,l0) a408(r325,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a408(r325,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a378(r110,l0) a407(r111,l0) a409(r109,l0) a410(r324,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a409(r109,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a408(r325,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a410(r324,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a408(r325,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a411(r323,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a412(r322,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a413(r320,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a414(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a414(r107,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a415(r319,l0) a282(r105,l0) a413(r320,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a415(r319,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0) a414(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a416(r317,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a417(r316,l0) conflicts: a1(r47,l0) a2(r43,l0) a3(r72,l0) a7(r73,l0) a8(r42,l0) a24(r60,l0) a32(r83,l0) a35(r44,l0) a36(r45,l0) a40(r69,l0) a282(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r497)<->a12(r496)@2:shuffle
  cp1:a9(r502)<->a10(r500)@2:shuffle
  cp2:a9(r502)<->a11(r501)@2:shuffle
  cp3:a6(r212)<->a8(r42)@2:shuffle
  cp4:a5(r508)<->a7(r73)@2:shuffle
  cp5:a5(r508)<->a6(r212)@2:shuffle
  cp6:a13(r485)<->a18(r484)@1:shuffle
  cp7:a15(r490)<->a16(r488)@1:shuffle
  cp8:a15(r490)<->a17(r489)@1:shuffle
  cp9:a20(r483)<->a22(r204)@1:shuffle
  cp10:a20(r483)<->a23(r52)@1:shuffle
  cp11:a19(r480)<->a21(r479)@1:shuffle
  cp12:a25(r478)<->a26(r477)@1:shuffle
  cp13:a28(r476)<->a29(r475)@2:shuffle
  cp14:a37(r315)<->a39(r314)@2:shuffle
  cp15:a41(r104)<->a42(r313)@2:shuffle
  cp16:a41(r104)<->a43(r103)@2:shuffle
  cp17:a38(r50)<->a41(r104)@2:shuffle
  cp18:a46(r311)<->a47(r96)@2:shuffle
  cp19:a44(r98)<->a46(r311)@2:shuffle
  cp20:a43(r103)<->a44(r98)@2:shuffle
  cp21:a48(r308)<->a50(r307)@1:shuffle
  cp22:a54(r300)<->a56(r297)@2:shuffle
  cp23:a52(r305)<->a53(r95)@2:shuffle
  cp24:a58(r296)<->a59(r294)@2:shuffle
  cp25:a58(r296)<->a60(r295)@2:shuffle
  cp26:a63(r287)<->a64(r286)@2:shuffle
  cp27:a65(r285)<->a67(r284)@2:shuffle
  cp28:a71(r90)<->a72(r517)@20:move
  cp29:a75(r278)<->a76(r277)@1:shuffle
  cp30:a77(r88)<->a78(r85)@1:shuffle
  cp31:a83(r273)<->a84(r68)@8:shuffle
  cp32:a81(r81)<->a83(r273)@8:shuffle
  cp33:a32(r83)<->a81(r81)@8:shuffle
  cp34:a32(r83)<->a82(r79)@8:shuffle
  cp35:a8(r42)<->a86(r270)@4:shuffle
  cp36:a86(r270)<->a87(r269)@4:shuffle
  cp37:a24(r60)<->a94(r262)@36:shuffle
  cp38:a91(r265)<->a93(r266)@36:shuffle
  cp39:a91(r265)<->a92(r267)@36:shuffle
  cp40:a3(r72)<->a91(r265)@36:shuffle
  cp41:a7(r73)<->a90(r57)@36:shuffle
  cp42:a96(r254)<->a98(r253)@122:shuffle
  cp43:a99(r241)<->a105(r242)@60:shuffle
  cp44:a103(r248)<->a104(r247)@60:shuffle
  cp45:a100(r246)<->a103(r248)@60:shuffle
  cp46:a100(r246)<->a102(r243)@60:shuffle
  cp47:a100(r246)<->a101(r244)@60:shuffle
  cp48:a38(r50)<->a106(r54)@99:shuffle
  cp49:a109(r224)<->a111(r223)@125:shuffle
  cp50:a69(r55)<->a110(r225)@125:shuffle
  cp51:a132(r189)<->a134(r105)@1:shuffle
  cp52:a127(r196)<->a128(r188)@1:shuffle
  cp53:a125(r197)<->a126(r467)@1:shuffle
  cp54:a125(r197)<->a127(r196)@1:shuffle
  cp55:a122(r470)<->a124(r452)@1:shuffle
  cp56:a142(r443)<->a143(r442)@1:shuffle
  cp57:a138(r448)<->a139(r447)@1:shuffle
  cp58:a138(r448)<->a140(r182)@1:shuffle
  cp59:a145(r436)<->a147(r435)@1:shuffle
  cp60:a134(r105)<->a150(r178)@1:shuffle
  cp61:a152(r427)<->a156(r426)@1:shuffle
  cp62:a153(r432)<->a154(r430)@1:shuffle
  cp63:a153(r432)<->a155(r431)@1:shuffle
  cp64:a161(r165)<->a167(r164)@1:shuffle
  cp65:a164(r168)<->a166(r162)@1:shuffle
  cp66:a162(r169)<->a165(r419)@1:shuffle
  cp67:a162(r169)<->a164(r168)@1:shuffle
  cp68:a160(r170)<->a163(r417)@1:shuffle
  cp69:a160(r170)<->a162(r169)@1:shuffle
  cp70:a159(r423)<->a160(r170)@1:shuffle
  cp71:a159(r423)<->a161(r165)@1:shuffle
  cp72:a175(r154)<->a176(r408)@1:shuffle
  cp73:a134(r105)<->a173(r411)@1:shuffle
  cp74:a171(r161)<->a172(r409)@1:shuffle
  cp75:a171(r161)<->a173(r411)@1:shuffle
  cp76:a168(r414)<->a170(r413)@1:shuffle
  cp77:a180(r403)<->a181(r148)@1:shuffle
  cp78:a177(r406)<->a179(r402)@1:shuffle
  cp79:a183(r401)<->a184(r399)@1:shuffle
  cp80:a183(r401)<->a185(r400)@1:shuffle
  cp81:a134(r105)<->a189(r394)@1:shuffle
  cp82:a187(r147)<->a188(r395)@1:shuffle
  cp83:a187(r147)<->a189(r394)@1:shuffle
  cp84:a196(r388)<->a197(r387)@1:shuffle
  cp85:a198(r381)<->a202(r380)@1:shuffle
  cp86:a199(r386)<->a200(r384)@1:shuffle
  cp87:a199(r386)<->a201(r385)@1:shuffle
  cp88:a203(r378)<->a205(r377)@1:shuffle
  cp89:a217(r369)<->a218(r368)@1:shuffle
  cp90:a193(r136)<->a216(r135)@1:shuffle
  cp91:a134(r105)<->a214(r137)@1:shuffle
  cp92:a211(r373)<->a213(r372)@1:shuffle
  cp93:a208(r220)<->a209(r375)@1:shuffle
  cp94:a208(r220)<->a210(r218)@1:shuffle
  cp95:a219(r366)<->a221(r365)@1:shuffle
  cp96:a222(r363)<->a224(r362)@1:shuffle
  cp97:a229(r130)<->a230(r110)@1:shuffle
  cp98:a227(r101)<->a228(r360)@1:shuffle
  cp99:a227(r101)<->a229(r130)@1:shuffle
  cp100:a235(r355)<->a236(r354)@1:shuffle
  cp101:a233(r357)<->a234(r128)@1:shuffle
  cp102:a237(r348)<->a241(r347)@1:shuffle
  cp103:a238(r353)<->a239(r351)@1:shuffle
  cp104:a238(r353)<->a240(r352)@1:shuffle
  cp105:a244(r139)<->a245(r345)@1:shuffle
  cp106:a244(r139)<->a246(r158)@1:shuffle
  cp107:a247(r338)<->a251(r337)@1:shuffle
  cp108:a248(r343)<->a249(r341)@1:shuffle
  cp109:a248(r343)<->a250(r342)@1:shuffle
  cp110:a261(r109)<->a262(r324)@1:shuffle
  cp111:a134(r105)<->a257(r329)@1:shuffle
  cp112:a257(r329)<->a258(r328)@1:shuffle
  cp113:a254(r334)<->a256(r333)@1:shuffle
  cp114:a264(r322)<->a266(r107)@16:shuffle
  cp115:a264(r322)<->a265(r320)@16:shuffle
  cp116:a268(r317)<->a269(r316)@17:shuffle
  cp117:a280(r189)<->a282(r105)@1:shuffle
  cp118:a275(r196)<->a276(r188)@1:shuffle
  cp119:a273(r197)<->a274(r467)@1:shuffle
  cp120:a273(r197)<->a275(r196)@1:shuffle
  cp121:a270(r470)<->a272(r452)@1:shuffle
  cp122:a290(r443)<->a291(r442)@1:shuffle
  cp123:a286(r448)<->a287(r447)@1:shuffle
  cp124:a286(r448)<->a288(r182)@1:shuffle
  cp125:a293(r436)<->a295(r435)@1:shuffle
  cp126:a282(r105)<->a298(r178)@1:shuffle
  cp127:a300(r427)<->a304(r426)@1:shuffle
  cp128:a301(r432)<->a302(r430)@1:shuffle
  cp129:a301(r432)<->a303(r431)@1:shuffle
  cp130:a309(r165)<->a315(r164)@1:shuffle
  cp131:a312(r168)<->a314(r162)@1:shuffle
  cp132:a310(r169)<->a313(r419)@1:shuffle
  cp133:a310(r169)<->a312(r168)@1:shuffle
  cp134:a308(r170)<->a311(r417)@1:shuffle
  cp135:a308(r170)<->a310(r169)@1:shuffle
  cp136:a307(r423)<->a308(r170)@1:shuffle
  cp137:a307(r423)<->a309(r165)@1:shuffle
  cp138:a323(r154)<->a324(r408)@1:shuffle
  cp139:a282(r105)<->a321(r411)@1:shuffle
  cp140:a319(r161)<->a320(r409)@1:shuffle
  cp141:a319(r161)<->a321(r411)@1:shuffle
  cp142:a316(r414)<->a318(r413)@1:shuffle
  cp143:a328(r403)<->a329(r148)@1:shuffle
  cp144:a325(r406)<->a327(r402)@1:shuffle
  cp145:a331(r401)<->a332(r399)@1:shuffle
  cp146:a331(r401)<->a333(r400)@1:shuffle
  cp147:a282(r105)<->a337(r394)@1:shuffle
  cp148:a335(r147)<->a336(r395)@1:shuffle
  cp149:a335(r147)<->a337(r394)@1:shuffle
  cp150:a344(r388)<->a345(r387)@1:shuffle
  cp151:a346(r381)<->a350(r380)@1:shuffle
  cp152:a347(r386)<->a348(r384)@1:shuffle
  cp153:a347(r386)<->a349(r385)@1:shuffle
  cp154:a351(r378)<->a353(r377)@1:shuffle
  cp155:a365(r369)<->a366(r368)@1:shuffle
  cp156:a341(r136)<->a364(r135)@1:shuffle
  cp157:a282(r105)<->a362(r137)@1:shuffle
  cp158:a359(r373)<->a361(r372)@1:shuffle
  cp159:a356(r220)<->a357(r375)@1:shuffle
  cp160:a356(r220)<->a358(r218)@1:shuffle
  cp161:a367(r366)<->a369(r365)@1:shuffle
  cp162:a370(r363)<->a372(r362)@1:shuffle
  cp163:a377(r130)<->a378(r110)@1:shuffle
  cp164:a375(r101)<->a376(r360)@1:shuffle
  cp165:a375(r101)<->a377(r130)@1:shuffle
  cp166:a383(r355)<->a384(r354)@1:shuffle
  cp167:a381(r357)<->a382(r128)@1:shuffle
  cp168:a385(r348)<->a389(r347)@1:shuffle
  cp169:a386(r353)<->a387(r351)@1:shuffle
  cp170:a386(r353)<->a388(r352)@1:shuffle
  cp171:a392(r139)<->a393(r345)@1:shuffle
  cp172:a392(r139)<->a394(r158)@1:shuffle
  cp173:a395(r338)<->a399(r337)@1:shuffle
  cp174:a396(r343)<->a397(r341)@1:shuffle
  cp175:a396(r343)<->a398(r342)@1:shuffle
  cp176:a409(r109)<->a410(r324)@1:shuffle
  cp177:a282(r105)<->a405(r329)@1:shuffle
  cp178:a405(r329)<->a406(r328)@1:shuffle
  cp179:a402(r334)<->a404(r333)@1:shuffle
  cp180:a412(r322)<->a414(r107)@16:shuffle
  cp181:a412(r322)<->a413(r320)@16:shuffle
  cp182:a416(r317)<->a417(r316)@17:shuffle
  pref0:a0(r48)<-hr2@2000
  pref1:a3(r72)<-hr14@42
  pref2:a2(r43)<-hr13@42
  pref3:a1(r47)<-hr12@1998
  pref4:a34(r198)<-hr15@10
  pref5:a32(r83)<-hr12@78
  pref6:a30(r51)<-hr10@10
  pref7:a7(r73)<-hr15@68
  pref8:a80(r74)<-hr11@136
  pref9:a88(r66)<-hr10@590
  pref10:a84(r68)<-hr10@590
  pref11:a131(r454)<-hr10@15
  pref12:a129(r512)<-hr11@14
  pref13:a149(r181)<-hr10@30
  pref14:a158(r159)<-hr11@8
  pref15:a157(r155)<-hr10@8
  pref16:a158(r159)<-hr10@30
  pref17:a191(r140)<-hr10@30
  pref18:a225(r180)<-hr11@4
  pref19:a33(r473)<-hr14@1
  pref20:a43(r103)<-hr10@2
  pref21:a132(r189)<-hr10@1
  pref22:a280(r189)<-hr10@1
  pref23:a133(r453)<-hr10@1
  pref24:a281(r453)<-hr10@1
  pref25:a279(r454)<-hr10@8
  pref26:a130(r457)<-hr10@1
  pref27:a278(r457)<-hr10@1
  pref28:a277(r512)<-hr11@7
  pref29:a127(r196)<-hr10@1
  pref30:a275(r196)<-hr10@1
  pref31:a150(r178)<-hr10@1
  pref32:a298(r178)<-hr10@1
  pref33:a151(r433)<-hr10@1
  pref34:a299(r433)<-hr10@1
  pref35:a297(r181)<-hr10@15
  pref36:a159(r423)<-hr12@1
  pref37:a307(r423)<-hr12@1
  pref38:a306(r159)<-hr11@4
  pref39:a305(r155)<-hr10@4
  pref40:a174(r156)<-hr10@1
  pref41:a322(r156)<-hr10@1
  pref42:a306(r159)<-hr10@15
  pref43:a214(r137)<-hr10@1
  pref44:a362(r137)<-hr10@1
  pref45:a215(r371)<-hr10@1
  pref46:a363(r371)<-hr10@1
  pref47:a339(r140)<-hr10@15
  pref48:a226(r67)<-hr12@1
  pref49:a374(r67)<-hr12@1
  pref50:a373(r180)<-hr11@2
  pref51:a259(r111)<-hr10@1
  pref52:a407(r111)<-hr10@1
  pref53:a260(r325)<-hr10@1
  pref54:a408(r325)<-hr10@1
  pref55:a252(r330)<-hr10@1
  pref56:a400(r330)<-hr10@1
  pref57:a253(r116)<-hr10@1
  pref58:a401(r116)<-hr10@1
  regions=2, blocks=87, points=376
    allocnos=418 (big 0), copies=183, conflicts=2, ranges=319

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 34(->69:l1) 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r48 1r47 2r43 3r72 4r497 5r508 6r212 7r73 8r42 9r502 10r500 11r501 12r496 13r485 14r495 15r490 16r488 17r489 18r484 19r480 20r483 21r479 22r204 23r52 24r60 25r478 26r477 27r202 28r476 29r475 30r51 31r474 32r83 33r473 34r198 35r44 36r45 37r315 38r50 39r314 40r69 41r104 42r313 43r103 44r98 45r310 46r311 47r96 48r308 49r309 50r307 51r306 52r305 53r95 54r300 55r298 56r297 57r292 58r296 59r294 60r295 61r65 62r91 63r287 64r286 65r285 66r49 67r284 68r283 69r55 70r281 71r90 72r517 73r280 74r89 75r278 76r277 77r88 78r85 79r276 80r74 81r81 82r79 83r273 84r68 85r271 86r270 87r269 88r66 89r256 90r57 91r265 92r267 93r266 94r262 95r257 96r254 97r255 98r253 99r241 100r246 101r244 102r243 103r248 104r247 105r242 106r54 107r238 108r58 109r224 110r225 111r223 270r470 271r516 272r452 273r197 274r467 275r196 276r188 277r512 278r457 279r454 280r189 281r453 282r105 283r187 284r445 285r444 286r448 287r447 288r182 289r185 290r443 291r442 292r437 293r436 294r46 295r435 296r434 297r181 298r178 299r433 300r427 301r432 302r430 303r431 304r426 305r155 306r159 307r423 308r170 309r165 310r169 311r417 312r168 313r419 314r162 315r164 316r414 317r415 318r413 319r161 320r409 321r411 322r156 323r154 324r408 325r406 326r407 327r402 328r403 329r148 330r397 331r401 332r399 333r400 334r396 335r147 336r395 337r394 338r391 339r140 340r392 341r136 342r390 343r145 344r388 345r387 346r381 347r386 348r384 349r385 350r380 351r378 352r379 353r377 354r376 355r221 356r220 357r375 358r218 359r373 360r374 361r372 362r137 363r371 364r135 365r369 366r368 367r366 368r367 369r365 370r363 371r364 372r362 373r180 374r67 375r101 376r360 377r130 378r110 379r358 380r118 381r357 382r128 383r355 384r354 385r348 386r353 387r351 388r352 389r347 390r346 391r131 392r139 393r345 394r158 395r338 396r343 397r341 398r342 399r337 400r330 401r116 402r334 403r335 404r333 405r329 406r328 407r111 408r325 409r109 410r324 411r323 412r322 413r320 414r107 415r319 416r317 417r316
    modified regnos
    border:
    Pressure: AR_REGS=17
 Removing pref3:hr12@1998
 Removing pref2:hr13@42
 Removing pref1:hr14@42
 Removing pref7:hr15@68
 Removing pref5:hr12@78
 Removing pref9:hr10@590
 Removing pref39:hr10@4
 Removing pref58:hr10@1
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@297844
          2:( 2-11)@5808
            3:( 2-7)@124152
      Allocno a0r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r47 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a3r72 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a4r497 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r508 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r212 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r73 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a8r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a9r502 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r500 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r501 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r496 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r485 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r495 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r490 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r488 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r489 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r484 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r480 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r483 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r479 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r204 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r60 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a25r478 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r477 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r202 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r476 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r475 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r51 of AR_REGS(14) has 9 avail. regs  2-10, ^node:  2-11 (confl regs =  0 1 11-34)
      Allocno a31r474 of AR_REGS(14) has 10 avail. regs  2-11, node:  2-11 (confl regs =  0 1 12-34)
      Allocno a32r83 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a33r473 of AR_REGS(14) has 13 avail. regs  2-14, ^node:  2-15 (confl regs =  0 1 15-34)
      Allocno a34r198 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a36r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a37r315 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r50 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a39r314 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r69 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a41r104 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r313 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r98 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a45r310 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r311 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r308 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r309 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r307 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r306 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r305 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r300 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r298 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r297 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r292 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r296 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r294 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r295 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r65 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a62r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a63r287 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r286 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r285 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r284 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r283 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a69r55 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a70r281 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a71r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r517 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r280 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r278 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a76r277 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r88 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a78r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a79r276 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a80r74 of AR_REGS(14) has 10 avail. regs  2-11, node:  2-11 (confl regs =  0 1 12-34)
      Allocno a81r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a82r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a83r273 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a84r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a85r271 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a86r270 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a87r269 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a88r66 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a89r256 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a90r57 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a91r265 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a92r267 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a93r266 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a94r262 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a95r257 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a96r254 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a97r255 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a98r253 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a99r241 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a100r246 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a101r244 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a102r243 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a103r248 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a104r247 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a105r242 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a106r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a107r238 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a108r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a109r224 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a110r225 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a111r223 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a270r470 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a271r516 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a272r452 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a273r197 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a274r467 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a275r196 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a276r188 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a277r512 of AR_REGS(14) has 11 avail. regs  2-9 11 14 15, ^node:  2-15 (confl regs =  0 1 10 12 13 16-34)
      Allocno a278r457 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a279r454 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a280r189 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a281r453 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a282r105 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a283r187 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a284r445 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a285r444 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a286r448 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a287r447 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a288r182 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a289r185 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a290r443 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a291r442 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a292r437 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a293r436 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a294r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a295r435 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a296r434 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a297r181 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a298r178 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a299r433 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a300r427 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a301r432 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a302r430 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a303r431 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a304r426 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a305r155 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a306r159 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a307r423 of AR_REGS(14) has 13 avail. regs  2-12 14 15, ^node:  2-15 (confl regs =  0 1 13 16-34)
      Allocno a308r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a309r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a310r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a311r417 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a312r168 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a313r419 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a314r162 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a315r164 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a316r414 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a317r415 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a318r413 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a319r161 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a320r409 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a321r411 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a322r156 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a323r154 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a324r408 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a325r406 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a326r407 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a327r402 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a328r403 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a329r148 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a330r397 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a331r401 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a332r399 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a333r400 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a334r396 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a335r147 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a336r395 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a337r394 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a338r391 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a339r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a340r392 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a341r136 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a342r390 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a343r145 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a344r388 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a345r387 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a346r381 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a347r386 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a348r384 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a349r385 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a350r380 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a351r378 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a352r379 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a353r377 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a354r376 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a355r221 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a356r220 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a357r375 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a358r218 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a359r373 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a360r374 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a361r372 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a362r137 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a363r371 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a364r135 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a365r369 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a366r368 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a367r366 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a368r367 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a369r365 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a370r363 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a371r364 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a372r362 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a373r180 of AR_REGS(14) has 13 avail. regs  2-11 13-15, ^node:  2-15 (confl regs =  0 1 12 16-34)
      Allocno a374r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a375r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a376r360 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a377r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a378r110 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a379r358 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a380r118 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a381r357 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a382r128 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a383r355 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a384r354 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a385r348 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a386r353 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a387r351 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a388r352 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a389r347 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a390r346 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a391r131 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a392r139 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a393r345 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a394r158 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a395r338 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a396r343 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a397r341 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a398r342 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a399r337 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a400r330 of AR_REGS(14) has 13 avail. regs  2-10 12-15, ^node:  2-15 (confl regs =  0 1 11 16-34)
      Allocno a401r116 of AR_REGS(14) has 12 avail. regs  2-9 12-15, ^node:  2-15 (confl regs =  0 1 10 11 16-34)
      Allocno a402r334 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a403r335 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a404r333 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a405r329 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a406r328 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a407r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a408r325 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a409r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a410r324 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a411r323 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a412r322 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a413r320 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a414r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a415r319 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a416r317 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a417r316 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 49:a109r224-a111r223 (freq=125):
        Result (freq=6000): a109r224(4000) a111r223(2000)
      Forming thread by copy 42:a96r254-a98r253 (freq=122):
        Result (freq=3912): a96r254(1956) a98r253(1956)
      Forming thread by copy 43:a99r241-a105r242 (freq=60):
        Result (freq=1932): a99r241(966) a105r242(966)
      Forming thread by copy 44:a103r248-a104r247 (freq=60):
        Result (freq=1932): a103r248(966) a104r247(966)
      Forming thread by copy 45:a100r246-a103r248 (freq=60):
        Result (freq=2898): a100r246(966) a103r248(966) a104r247(966)
      Forming thread by copy 38:a91r265-a93r266 (freq=36):
        Result (freq=1180): a91r265(590) a93r266(590)
      Forming thread by copy 28:a71r90-a72r517 (freq=20):
        Result (freq=80): a71r90(40) a72r517(40)
      Forming thread by copy 182:a416r317-a417r316 (freq=17):
        Result (freq=552): a416r317(276) a417r316(276)
      Forming thread by copy 180:a412r322-a414r107 (freq=16):
        Result (freq=666): a412r322(260) a414r107(406)
      Forming thread by copy 181:a412r322-a413r320 (freq=16):
        Result (freq=926): a412r322(260) a413r320(260) a414r107(406)
      Forming thread by copy 31:a83r273-a84r68 (freq=8):
        Result (freq=499): a83r273(136) a84r68(363)
      Forming thread by copy 32:a81r81-a83r273 (freq=8):
        Result (freq=635): a81r81(136) a83r273(136) a84r68(363)
      Forming thread by copy 36:a86r270-a87r269 (freq=4):
        Result (freq=136): a86r270(68) a87r269(68)
      Forming thread by copy 0:a4r497-a12r496 (freq=2):
        Result (freq=112): a4r497(80) a12r496(32)
      Forming thread by copy 1:a9r502-a10r500 (freq=2):
        Result (freq=64): a9r502(32) a10r500(32)
      Forming thread by copy 3:a6r212-a8r42 (freq=2):
        Result (freq=624): a6r212(48) a8r42(576)
      Forming thread by copy 4:a5r508-a7r73 (freq=2):
        Result (freq=598): a5r508(32) a7r73(566)
      Forming thread by copy 13:a28r476-a29r475 (freq=2):
        Result (freq=84): a28r476(42) a29r475(42)
      Forming thread by copy 14:a37r315-a39r314 (freq=2):
        Result (freq=84): a37r315(42) a39r314(42)
      Forming thread by copy 15:a41r104-a42r313 (freq=2):
        Result (freq=64): a41r104(32) a42r313(32)
      Forming thread by copy 18:a46r311-a47r96 (freq=2):
        Result (freq=84): a46r311(42) a47r96(42)
      Forming thread by copy 20:a43r103-a44r98 (freq=2):
        Result (freq=100): a43r103(58) a44r98(42)
      Forming thread by copy 22:a54r300-a56r297 (freq=2):
        Result (freq=126): a54r300(63) a56r297(63)
      Forming thread by copy 23:a52r305-a53r95 (freq=2):
        Result (freq=84): a52r305(42) a53r95(42)
      Forming thread by copy 24:a58r296-a59r294 (freq=2):
        Result (freq=64): a58r296(32) a59r294(32)
      Forming thread by copy 26:a63r287-a64r286 (freq=2):
        Result (freq=84): a63r287(42) a64r286(42)
      Forming thread by copy 27:a65r285-a67r284 (freq=2):
        Result (freq=80): a65r285(40) a67r284(40)
      Forming thread by copy 6:a13r485-a18r484 (freq=1):
        Result (freq=35): a13r485(25) a18r484(10)
      Forming thread by copy 7:a15r490-a16r488 (freq=1):
        Result (freq=20): a15r490(10) a16r488(10)
      Forming thread by copy 9:a20r483-a22r204 (freq=1):
        Result (freq=40): a20r483(20) a22r204(20)
      Forming thread by copy 11:a19r480-a21r479 (freq=1):
        Result (freq=40): a19r480(20) a21r479(20)
      Forming thread by copy 12:a25r478-a26r477 (freq=1):
        Result (freq=40): a25r478(20) a26r477(20)
      Forming thread by copy 21:a48r308-a50r307 (freq=1):
        Result (freq=60): a48r308(30) a50r307(30)
      Forming thread by copy 29:a75r278-a76r277 (freq=1):
        Result (freq=16): a75r278(8) a76r277(8)
      Forming thread by copy 30:a77r88-a78r85 (freq=1):
        Result (freq=138): a77r88(24) a78r85(114)
      Forming thread by copy 117:a280r189-a282r105 (freq=1):
        Result (freq=316): a280r189(14) a282r105(302)
      Forming thread by copy 118:a275r196-a276r188 (freq=1):
        Result (freq=28): a275r196(14) a276r188(14)
      Forming thread by copy 119:a273r197-a274r467 (freq=1):
        Result (freq=28): a273r197(14) a274r467(14)
      Forming thread by copy 120:a273r197-a275r196 (freq=1):
        Result (freq=56): a273r197(14) a275r196(14) a276r188(14) a274r467(14)
      Forming thread by copy 121:a270r470-a272r452 (freq=1):
        Result (freq=42): a270r470(14) a272r452(28)
      Forming thread by copy 122:a290r443-a291r442 (freq=1):
        Result (freq=28): a290r443(14) a291r442(14)
      Forming thread by copy 123:a286r448-a287r447 (freq=1):
        Result (freq=28): a286r448(14) a287r447(14)
      Forming thread by copy 124:a286r448-a288r182 (freq=1):
        Result (freq=65): a286r448(14) a288r182(37) a287r447(14)
      Forming thread by copy 125:a293r436-a295r435 (freq=1):
        Result (freq=60): a293r436(30) a295r435(30)
      Forming thread by copy 127:a300r427-a304r426 (freq=1):
        Result (freq=10): a300r427(6) a304r426(4)
      Forming thread by copy 128:a301r432-a302r430 (freq=1):
        Result (freq=8): a301r432(4) a302r430(4)
      Forming thread by copy 129:a301r432-a303r431 (freq=1):
        Result (freq=12): a301r432(4) a303r431(4) a302r430(4)
      Forming thread by copy 130:a309r165-a315r164 (freq=1):
        Result (freq=16): a309r165(8) a315r164(8)
      Forming thread by copy 131:a312r168-a314r162 (freq=1):
        Result (freq=31): a312r168(8) a314r162(23)
      Forming thread by copy 132:a310r169-a313r419 (freq=1):
        Result (freq=16): a310r169(8) a313r419(8)
      Forming thread by copy 133:a310r169-a312r168 (freq=1):
        Result (freq=47): a310r169(8) a312r168(8) a314r162(23) a313r419(8)
      Forming thread by copy 134:a308r170-a311r417 (freq=1):
        Result (freq=20): a308r170(8) a311r417(12)
      Forming thread by copy 135:a308r170-a310r169 (freq=1):
        Result (freq=67): a308r170(8) a310r169(8) a312r168(8) a314r162(23) a313r419(8) a311r417(12)
      Forming thread by copy 136:a307r423-a308r170 (freq=1):
        Result (freq=75): a307r423(8) a308r170(8) a310r169(8) a312r168(8) a314r162(23) a313r419(8) a311r417(12)
      Forming thread by copy 137:a307r423-a309r165 (freq=1):
        Result (freq=91): a307r423(8) a309r165(8) a315r164(8) a308r170(8) a310r169(8) a312r168(8) a314r162(23) a313r419(8) a311r417(12)
      Forming thread by copy 138:a323r154-a324r408 (freq=1):
        Result (freq=60): a323r154(30) a324r408(30)
      Forming thread by copy 140:a319r161-a320r409 (freq=1):
        Result (freq=90): a319r161(30) a320r409(60)
      Forming thread by copy 141:a319r161-a321r411 (freq=1):
        Result (freq=120): a319r161(30) a321r411(30) a320r409(60)
      Forming thread by copy 142:a316r414-a318r413 (freq=1):
        Result (freq=60): a316r414(30) a318r413(30)
      Forming thread by copy 143:a328r403-a329r148 (freq=1):
        Result (freq=75): a328r403(30) a329r148(45)
      Forming thread by copy 144:a325r406-a327r402 (freq=1):
        Result (freq=90): a325r406(30) a327r402(60)
      Forming thread by copy 145:a331r401-a332r399 (freq=1):
        Result (freq=16): a331r401(8) a332r399(8)
      Forming thread by copy 146:a331r401-a333r400 (freq=1):
        Result (freq=24): a331r401(8) a333r400(8) a332r399(8)
      Forming thread by copy 148:a335r147-a336r395 (freq=1):
        Result (freq=60): a335r147(30) a336r395(30)
      Forming thread by copy 149:a335r147-a337r394 (freq=1):
        Result (freq=90): a335r147(30) a337r394(30) a336r395(30)
      Forming thread by copy 150:a344r388-a345r387 (freq=1):
        Result (freq=60): a344r388(30) a345r387(30)
      Forming thread by copy 151:a346r381-a350r380 (freq=1):
        Result (freq=35): a346r381(21) a350r380(14)
      Forming thread by copy 152:a347r386-a348r384 (freq=1):
        Result (freq=28): a347r386(14) a348r384(14)
      Forming thread by copy 153:a347r386-a349r385 (freq=1):
        Result (freq=42): a347r386(14) a349r385(14) a348r384(14)
      Forming thread by copy 154:a351r378-a353r377 (freq=1):
        Result (freq=44): a351r378(22) a353r377(22)
      Forming thread by copy 155:a365r369-a366r368 (freq=1):
        Result (freq=60): a365r369(30) a366r368(30)
      Forming thread by copy 158:a359r373-a361r372 (freq=1):
        Result (freq=60): a359r373(30) a361r372(30)
      Forming thread by copy 159:a356r220-a357r375 (freq=1):
        Result (freq=60): a356r220(30) a357r375(30)
      Forming thread by copy 160:a356r220-a358r218 (freq=1):
        Result (freq=90): a356r220(30) a358r218(30) a357r375(30)
      Forming thread by copy 161:a367r366-a369r365 (freq=1):
        Result (freq=60): a367r366(30) a369r365(30)
      Forming thread by copy 162:a370r363-a372r362 (freq=1):
        Result (freq=60): a370r363(30) a372r362(30)
      Forming thread by copy 163:a377r130-a378r110 (freq=1):
        Result (freq=36): a377r130(4) a378r110(32)
      Forming thread by copy 164:a375r101-a376r360 (freq=1):
        Result (freq=8): a375r101(4) a376r360(4)
      Forming thread by copy 165:a375r101-a377r130 (freq=1):
        Result (freq=44): a375r101(4) a377r130(4) a378r110(32) a376r360(4)
      Forming thread by copy 166:a383r355-a384r354 (freq=1):
        Result (freq=60): a383r355(30) a384r354(30)
      Forming thread by copy 167:a381r357-a382r128 (freq=1):
        Result (freq=60): a381r357(30) a382r128(30)
      Forming thread by copy 168:a385r348-a389r347 (freq=1):
        Result (freq=20): a385r348(12) a389r347(8)
      Forming thread by copy 169:a386r353-a387r351 (freq=1):
        Result (freq=16): a386r353(8) a387r351(8)
      Forming thread by copy 170:a386r353-a388r352 (freq=1):
        Result (freq=24): a386r353(8) a388r352(8) a387r351(8)
      Forming thread by copy 171:a392r139-a393r345 (freq=1):
        Result (freq=60): a392r139(30) a393r345(30)
      Forming thread by copy 172:a392r139-a394r158 (freq=1):
        Result (freq=90): a392r139(30) a394r158(30) a393r345(30)
      Forming thread by copy 173:a395r338-a399r337 (freq=1):
        Result (freq=35): a395r338(21) a399r337(14)
      Forming thread by copy 174:a396r343-a397r341 (freq=1):
        Result (freq=28): a396r343(14) a397r341(14)
      Forming thread by copy 175:a396r343-a398r342 (freq=1):
        Result (freq=42): a396r343(14) a398r342(14) a397r341(14)
      Forming thread by copy 176:a409r109-a410r324 (freq=1):
        Result (freq=60): a409r109(30) a410r324(30)
      Forming thread by copy 178:a405r329-a406r328 (freq=1):
        Result (freq=60): a405r329(30) a406r328(30)
      Forming thread by copy 179:a402r334-a404r333 (freq=1):
        Result (freq=60): a402r334(30) a404r333(30)
      Pushing a379(r358,l0: a231(r358,l1))(cost 0)
      Pushing a374(r67,l0: a226(r67,l1))(cost 0)
      Pushing a73(r280,l0)(cost 0)
      Pushing a340(r392,l0: a192(r392,l1))(cost 0)
      Pushing a74(r89,l0)(cost 0)
      Pushing a304(r426,l0: a156(r426,l1))(cost 0)
      Pushing a300(r427,l0: a152(r427,l1))(cost 0)
      Pushing a33(r473,l0)(cost 0)
        Making a30(r51,l0) colorable
      Pushing a31(r474,l0)(cost 0)
      Pushing a30(r51,l0)(cost 60)
      Pushing a17(r489,l0)(cost 0)
      Pushing a14(r495,l0)(cost 0)
      Pushing a338(r391,l0: a190(r391,l1))(cost 0)
      Pushing a330(r397,l0: a182(r397,l1))(cost 0)
      Pushing a303(r431,l0: a155(r431,l1))(cost 0)
      Pushing a302(r430,l0: a154(r430,l1))(cost 0)
      Pushing a301(r432,l0: a153(r432,l1))(cost 0)
      Pushing a296(r434,l0: a148(r434,l1))(cost 0)
      Pushing a289(r185,l0: a141(r185,l1))(cost 0)
      Pushing a283(r187,l0: a135(r187,l1))(cost 0)
      Pushing a281(r453,l0: a133(r453,l1))(cost 0)
      Pushing a277(r512,l0: a129(r512,l1))(cost 0)
      Pushing a271(r516,l0: a123(r516,l1))(cost 0)
      Pushing a76(r277,l0)(cost 0)
      Pushing a75(r278,l0)(cost 0)
      Pushing a389(r347,l0: a241(r347,l1))(cost 0)
      Pushing a385(r348,l0: a237(r348,l1))(cost 0)
      Pushing a23(r52,l0)(cost 0)
      Pushing a16(r488,l0)(cost 0)
      Pushing a15(r490,l0)(cost 0)
      Pushing a285(r444,l0: a137(r444,l1))(cost 0)
      Pushing a284(r445,l0: a136(r445,l1))(cost 0)
      Pushing a279(r454,l0: a131(r454,l1))(cost 0)
      Pushing a278(r457,l0: a130(r457,l1))(cost 0)
      Pushing a34(r198,l0)(cost 0)
      Pushing a352(r379,l0: a204(r379,l1))(cost 0)
      Pushing a388(r352,l0: a240(r352,l1))(cost 0)
      Pushing a387(r351,l0: a239(r351,l1))(cost 0)
      Pushing a386(r353,l0: a238(r353,l1))(cost 0)
      Pushing a333(r400,l0: a185(r400,l1))(cost 0)
      Pushing a332(r399,l0: a184(r399,l1))(cost 0)
      Pushing a331(r401,l0: a183(r401,l1))(cost 0)
      Pushing a291(r442,l0: a143(r442,l1))(cost 0)
      Pushing a290(r443,l0: a142(r443,l1))(cost 0)
      Pushing a294(r46,l0: a146(r46,l1))(cost 0)
      Pushing a407(r111,l0: a259(r111,l1))(cost 0)
      Pushing a403(r335,l0: a255(r335,l1))(cost 0)
      Pushing a400(r330,l0: a252(r330,l1))(cost 0)
      Pushing a391(r131,l0: a243(r131,l1))(cost 0)
      Pushing a390(r346,l0: a242(r346,l1))(cost 0)
      Pushing a371(r364,l0: a223(r364,l1))(cost 0)
      Pushing a368(r367,l0: a220(r367,l1))(cost 0)
      Pushing a364(r135,l0: a216(r135,l1))(cost 0)
      Pushing a363(r371,l0: a215(r371,l1))(cost 0)
      Pushing a362(r137,l0: a214(r137,l1))(cost 0)
      Pushing a360(r374,l0: a212(r374,l1))(cost 0)
      Pushing a355(r221,l0: a207(r221,l1))(cost 0)
      Pushing a354(r376,l0: a206(r376,l1))(cost 0)
      Pushing a343(r145,l0: a195(r145,l1))(cost 0)
      Pushing a342(r390,l0: a194(r390,l1))(cost 0)
      Pushing a334(r396,l0: a186(r396,l1))(cost 0)
      Pushing a326(r407,l0: a178(r407,l1))(cost 0)
      Pushing a322(r156,l0: a174(r156,l1))(cost 0)
      Pushing a317(r415,l0: a169(r415,l1))(cost 0)
      Pushing a299(r433,l0: a151(r433,l1))(cost 0)
      Pushing a298(r178,l0: a150(r178,l1))(cost 0)
      Pushing a292(r437,l0: a144(r437,l1))(cost 0)
      Pushing a49(r309,l0)(cost 0)
      Pushing a60(r295,l0)(cost 0)
      Pushing a11(r501,l0)(cost 0)
      Pushing a399(r337,l0: a251(r337,l1))(cost 0)
      Pushing a395(r338,l0: a247(r338,l1))(cost 0)
      Pushing a350(r380,l0: a202(r380,l1))(cost 0)
      Pushing a346(r381,l0: a198(r381,l1))(cost 0)
      Pushing a18(r484,l0)(cost 0)
      Pushing a13(r485,l0)(cost 0)
      Pushing a297(r181,l0: a149(r181,l1))(cost 0)
      Pushing a70(r281,l0)(cost 0)
      Pushing a68(r283,l0)(cost 0)
      Pushing a66(r49,l0)(cost 0)
      Pushing a26(r477,l0)(cost 0)
      Pushing a25(r478,l0)(cost 0)
      Pushing a22(r204,l0)(cost 0)
      Pushing a20(r483,l0)(cost 0)
      Pushing a21(r479,l0)(cost 0)
      Pushing a19(r480,l0)(cost 0)
      Pushing a398(r342,l0: a250(r342,l1))(cost 0)
      Pushing a397(r341,l0: a249(r341,l1))(cost 0)
      Pushing a396(r343,l0: a248(r343,l1))(cost 0)
      Pushing a349(r385,l0: a201(r385,l1))(cost 0)
      Pushing a348(r384,l0: a200(r384,l1))(cost 0)
      Pushing a347(r386,l0: a199(r386,l1))(cost 0)
      Pushing a270(r470,l0: a122(r470,l1))(cost 0)
      Pushing a62(r91,l0)(cost 0)
      Pushing a51(r306,l0)(cost 0)
      Pushing a27(r202,l0)(cost 0)
      Pushing a377(r130,l0: a229(r130,l1))(cost 0)
      Pushing a376(r360,l0: a228(r360,l1))(cost 0)
      Pushing a375(r101,l0: a227(r101,l1))(cost 0)
      Pushing a353(r377,l0: a205(r377,l1))(cost 0)
      Pushing a351(r378,l0: a203(r378,l1))(cost 0)
        Making a339(r140,l0: a191(r140,l1)) colorable
      Pushing a339(r140,l0: a191(r140,l1))(cost 196)
      Pushing a408(r325,l0: a260(r325,l1))(cost 0)
      Pushing a401(r116,l0: a253(r116,l1))(cost 0)
      Pushing a57(r292,l0)(cost 0)
      Pushing a275(r196,l0: a127(r196,l1))(cost 0)
      Pushing a274(r467,l0: a126(r467,l1))(cost 0)
      Pushing a273(r197,l0: a125(r197,l1))(cost 0)
      Pushing a410(r324,l0: a262(r324,l1))(cost 0)
      Pushing a409(r109,l0: a261(r109,l1))(cost 0)
      Pushing a406(r328,l0: a258(r328,l1))(cost 0)
      Pushing a405(r329,l0: a257(r329,l1))(cost 0)
      Pushing a404(r333,l0: a256(r333,l1))(cost 0)
      Pushing a402(r334,l0: a254(r334,l1))(cost 0)
      Pushing a384(r354,l0: a236(r354,l1))(cost 0)
        Making a373(r180,l0: a225(r180,l1)) colorable
      Pushing a373(r180,l0: a225(r180,l1))(cost 136)
      Pushing a383(r355,l0: a235(r355,l1))(cost 0)
      Pushing a382(r128,l0: a234(r128,l1))(cost 0)
      Pushing a381(r357,l0: a233(r357,l1))(cost 0)
      Pushing a372(r362,l0: a224(r362,l1))(cost 0)
      Pushing a370(r363,l0: a222(r363,l1))(cost 0)
      Pushing a369(r365,l0: a221(r365,l1))(cost 0)
      Pushing a367(r366,l0: a219(r366,l1))(cost 0)
      Pushing a366(r368,l0: a218(r368,l1))(cost 0)
      Pushing a365(r369,l0: a217(r369,l1))(cost 0)
      Pushing a361(r372,l0: a213(r372,l1))(cost 0)
      Pushing a359(r373,l0: a211(r373,l1))(cost 0)
      Pushing a345(r387,l0: a197(r387,l1))(cost 0)
      Pushing a344(r388,l0: a196(r388,l1))(cost 0)
      Pushing a324(r408,l0: a176(r408,l1))(cost 0)
      Pushing a323(r154,l0: a175(r154,l1))(cost 0)
      Pushing a318(r413,l0: a170(r413,l1))(cost 0)
      Pushing a316(r414,l0: a168(r414,l1))(cost 0)
      Pushing a295(r435,l0: a147(r435,l1))(cost 0)
      Pushing a293(r436,l0: a145(r436,l1))(cost 0)
      Pushing a50(r307,l0)(cost 0)
      Pushing a48(r308,l0)(cost 0)
      Pushing a55(r298,l0)(cost 0)
      Pushing a45(r310,l0)(cost 0)
      Pushing a59(r294,l0)(cost 0)
      Pushing a58(r296,l0)(cost 0)
      Pushing a42(r313,l0)(cost 0)
      Pushing a41(r104,l0)(cost 0)
      Pushing a10(r500,l0)(cost 0)
      Pushing a9(r502,l0)(cost 0)
      Pushing a287(r447,l0: a139(r447,l1))(cost 0)
      Pushing a286(r448,l0: a138(r448,l1))(cost 0)
      Pushing a288(r182,l0: a140(r182,l1))(cost 0)
      Pushing a328(r403,l0: a180(r403,l1))(cost 0)
      Pushing a329(r148,l0: a181(r148,l1))(cost 0)
      Pushing a72(r517,l0)(cost 0)
      Pushing a71(r90,l0)(cost 0)
      Pushing a67(r284,l0)(cost 0)
      Pushing a65(r285,l0)(cost 0)
      Pushing a79(r276,l0)(cost 0)
      Pushing a64(r286,l0)(cost 0)
      Pushing a63(r287,l0)(cost 0)
      Pushing a53(r95,l0)(cost 0)
      Pushing a52(r305,l0)(cost 0)
      Pushing a47(r96,l0)(cost 0)
      Pushing a46(r311,l0)(cost 0)
      Pushing a39(r314,l0)(cost 0)
      Pushing a37(r315,l0)(cost 0)
      Pushing a29(r475,l0)(cost 0)
      Pushing a28(r476,l0)(cost 0)
      Pushing a394(r158,l0: a246(r158,l1))(cost 0)
      Pushing a393(r345,l0: a245(r345,l1))(cost 0)
      Pushing a392(r139,l0: a244(r139,l1))(cost 0)
      Pushing a358(r218,l0: a210(r218,l1))(cost 0)
      Pushing a357(r375,l0: a209(r375,l1))(cost 0)
      Pushing a356(r220,l0: a208(r220,l1))(cost 0)
      Pushing a337(r394,l0: a189(r394,l1))(cost 0)
      Pushing a336(r395,l0: a188(r395,l1))(cost 0)
      Pushing a335(r147,l0: a187(r147,l1))(cost 0)
      Pushing a325(r406,l0: a177(r406,l1))(cost 0)
      Pushing a315(r164,l0: a167(r164,l1))(cost 0)
      Pushing a313(r419,l0: a165(r419,l1))(cost 0)
      Pushing a312(r168,l0: a164(r168,l1))(cost 0)
      Pushing a310(r169,l0: a162(r169,l1))(cost 0)
      Pushing a309(r165,l0: a161(r165,l1))(cost 0)
      Pushing a308(r170,l0: a160(r170,l1))(cost 0)
        Making a306(r159,l0: a158(r159,l1)) colorable
      Pushing a306(r159,l0: a158(r159,l1))(cost 196)
      Pushing a307(r423,l0: a159(r423,l1))(cost 0)
      Pushing a311(r417,l0: a163(r417,l1))(cost 0)
      Pushing a314(r162,l0: a166(r162,l1))(cost 0)
      Pushing a43(r103,l0)(cost 0)
      Pushing a12(r496,l0)(cost 0)
      Pushing a4(r497,l0)(cost 0)
      Pushing a321(r411,l0: a173(r411,l1))(cost 0)
      Pushing a319(r161,l0: a171(r161,l1))(cost 0)
      Pushing a56(r297,l0)(cost 0)
      Pushing a54(r300,l0)(cost 0)
      Pushing a87(r269,l0)(cost 0)
      Pushing a86(r270,l0)(cost 0)
        Making a84(r68,l0) colorable
      Pushing a85(r271,l0)(cost 0)
      Pushing a77(r88,l0)(cost 0)
      Pushing a78(r85,l0)(cost 0)
      Pushing a82(r79,l0)(cost 0)
        Making a80(r74,l0) colorable
      Pushing a411(r323,l0: a263(r323,l1))(cost 0)
      Pushing a415(r319,l0: a267(r319,l1))(cost 0)
      Pushing a280(r189,l0: a132(r189,l1))(cost 0)
      Pushing a417(r316,l0: a269(r316,l1))(cost 0)
      Pushing a416(r317,l0: a268(r317,l1))(cost 0)
      Pushing a95(r257,l0)(cost 0)
      Pushing a94(r262,l0)(cost 0)
      Pushing a92(r267,l0)(cost 0)
      Pushing a5(r508,l0)(cost 0)
      Pushing a6(r212,l0)(cost 0)
      Pushing a83(r273,l0)(cost 0)
      Pushing a81(r81,l0)(cost 0)
      Pushing a84(r68,l0)(cost 2632)
      Pushing a80(r74,l0)(cost 2904)
      Pushing a413(r320,l0: a265(r320,l1))(cost 0)
      Pushing a412(r322,l0: a264(r322,l1))(cost 0)
      Pushing a414(r107,l0: a266(r107,l1))(cost 0)
      Pushing a93(r266,l0)(cost 0)
      Pushing a91(r265,l0)(cost 0)
      Pushing a102(r243,l0)(cost 0)
      Pushing a101(r244,l0)(cost 0)
      Pushing a105(r242,l0)(cost 0)
      Pushing a99(r241,l0)(cost 0)
      Pushing a97(r255,l0)(cost 0)
      Pushing a0(r48,l0)(cost 0)
      Pushing a110(r225,l0)(cost 0)
      Pushing a107(r238,l0)(cost 0)
      Pushing a108(r58,l0)(cost 0)
      Pushing a106(r54,l0)(cost 0)
      Pushing a104(r247,l0)(cost 0)
      Pushing a103(r248,l0)(cost 0)
      Pushing a100(r246,l0)(cost 0)
      Pushing a98(r253,l0)(cost 0)
      Pushing a96(r254,l0)(cost 0)
      Pushing a111(r223,l0)(cost 0)
      Pushing a109(r224,l0)(cost 0)
      Pushing a35(r44,l0)(potential spill: pri=3, cost=168)
      Pushing a2(r43,l0)(potential spill: pri=10, cost=584)
      Pushing a32(r83,l0)(potential spill: pri=19, cost=1092)
      Pushing a3(r72,l0)(potential spill: pri=23, cost=1348)
      Pushing a7(r73,l0)(potential spill: pri=39, cost=2264)
      Forming thread by copy 19:a44r98-a46r311 (freq=2):
        Result (freq=184): a43r103(58) a46r311(42) a47r96(42) a44r98(42)
        Making a44(r98,l0) colorable
        Making a327(r402,l0: a179(r402,l1)) colorable
      Pushing a327(r402,l0: a179(r402,l1))(cost 120)
      Pushing a44(r98,l0)(cost 168)
      Pushing a8(r42,l0)(potential spill: pri=40, cost=2304)
        Making a380(r118,l0: a232(r118,l1)) colorable
      Forming thread by copy 156:a341r136-a364r135 (freq=1):
        Result (freq=64): a341r136(34) a364r135(30)
        Making a341(r136,l0: a193(r136,l1)) colorable
      Pushing a380(r118,l0: a232(r118,l1))(cost 68)
        Making a378(r110,l0: a230(r110,l1)) colorable
      Pushing a378(r110,l0: a230(r110,l1))(cost 128)
      Pushing a341(r136,l0: a193(r136,l1))(cost 136)
      Pushing a24(r60,l0)(potential spill: pri=42, cost=2400)
        Making a272(r452,l0: a124(r452,l1)) colorable
        Making a276(r188,l0: a128(r188,l1)) colorable
        Making a305(r155,l0: a157(r155,l1)) colorable
        Making a320(r409,l0: a172(r409,l1)) colorable
      Pushing a305(r155,l0: a157(r155,l1))(cost 92)
      Pushing a272(r452,l0: a124(r452,l1))(cost 56)
        Making a36(r45,l0) colorable
      Forming thread by copy 126:a282r105-a298r178 (freq=1):
        Result (freq=346): a280r189(14) a298r178(30) a282r105(302)
      Forming thread by copy 139:a282r105-a321r411 (freq=1):
        Result (freq=466): a280r189(14) a319r161(30) a321r411(30) a320r409(60) a298r178(30) a282r105(302)
      Forming thread by copy 147:a282r105-a337r394 (freq=1):
        Result (freq=556): a280r189(14) a335r147(30) a337r394(30) a336r395(30) a319r161(30) a321r411(30) a320r409(60) a298r178(30) a282r105(302)
      Forming thread by copy 157:a282r105-a362r137 (freq=1):
        Result (freq=586): a280r189(14) a362r137(30) a335r147(30) a337r394(30) a336r395(30) a319r161(30) a321r411(30) a320r409(60) a298r178(30) a282r105(302)
      Forming thread by copy 177:a282r105-a405r329 (freq=1):
        Result (freq=646): a280r189(14) a405r329(30) a406r328(30) a362r137(30) a335r147(30) a337r394(30) a336r395(30) a319r161(30) a321r411(30) a320r409(60) a298r178(30) a282r105(302)
        Making a282(r105,l0: a134(r105,l1)) colorable
      Pushing a276(r188,l0: a128(r188,l1))(cost 56)
      Pushing a320(r409,l0: a172(r409,l1))(cost 120)
      Pushing a282(r105,l0: a134(r105,l1))(cost 1208)
      Pushing a36(r45,l0)(cost 2724)
      Pushing a40(r69,l0)(potential spill: pri=53, cost=3072)
      Pushing a1(r47,l0)(potential spill: pri=210, cost=11992)
      Forming thread by copy 48:a38r50-a106r54 (freq=99):
        Result (freq=4428): a38r50(1636) a106r54(2792)
      Forming thread by copy 17:a38r50-a41r104 (freq=2):
        Result (freq=4492): a38r50(1636) a41r104(32) a42r313(32) a106r54(2792)
        Making a38(r50,l0) colorable
        Making a61(r65,l0) colorable
      Forming thread by copy 50:a69r55-a110r225 (freq=125):
        Result (freq=3988): a69r55(1988) a110r225(2000)
        Making a69(r55,l0) colorable
        Making a88(r66,l0) colorable
        Making a89(r256,l0) colorable
        Making a90(r57,l0) colorable
      Pushing a88(r66,l0)(cost 3540)
      Pushing a89(r256,l0)(cost 1180)
      Pushing a61(r65,l0)(cost 3580)
      Pushing a90(r57,l0)(cost 9180)
      Pushing a69(r55,l0)(cost 7952)
      Pushing a38(r50,l0)(cost 6544)
      Popping a38(r50,l0)  -- assign reg 2
      Popping a69(r55,l0)  -- assign reg 3
      Popping a90(r57,l0)  -- assign reg 4
      Popping a61(r65,l0)  -- assign reg 5
      Popping a89(r256,l0)  -- assign reg 6
      Popping a88(r66,l0)  -- assign reg 7
      Popping a1(r47,l0)  -- spill
      Popping a40(r69,l0)  -- spill
      Popping a36(r45,l0)  -- assign reg 2
      Popping a282(r105,l0: a134(r105,l1))  -- assign reg 3
      Popping a320(r409,l0: a172(r409,l1))  -- assign reg 4
      Popping a276(r188,l0: a128(r188,l1))  -- assign reg 4
      Popping a272(r452,l0: a124(r452,l1))  -- assign reg 5
      Popping a305(r155,l0: a157(r155,l1))  -- assign reg 5
      Popping a24(r60,l0)  -- spill
      Popping a341(r136,l0: a193(r136,l1))  -- assign reg 4
      Popping a378(r110,l0: a230(r110,l1))  -- assign reg 4
      Popping a380(r118,l0: a232(r118,l1))  -- assign reg 3
      Popping a8(r42,l0)  -- spill
      Popping a44(r98,l0)  -- assign reg 3
      Popping a327(r402,l0: a179(r402,l1))  -- assign reg 3
      Popping a7(r73,l0)  -- spill
      Popping a3(r72,l0)  -- spill
      Popping a32(r83,l0)  -- assign reg 6
      Popping a2(r43,l0)  -- assign reg 7
      Popping a35(r44,l0)  -- spill
      Popping a109(r224,l0)  -- assign reg 5
      Popping a111(r223,l0)  -- assign reg 5
      Popping a96(r254,l0)  -- assign reg 2
      Popping a98(r253,l0)  -- assign reg 2
      Popping a100(r246,l0)  -- assign reg 5
      Popping a103(r248,l0)  -- assign reg 6
      Popping a104(r247,l0)  -- assign reg 6
      Popping a106(r54,l0)  -- assign reg 2
      Popping a108(r58,l0)  -- assign reg 5
      Popping a107(r238,l0)  -- assign reg 5
      Popping a110(r225,l0)  -- assign reg 3
      Popping a0(r48,l0)  -- assign reg 2
      Popping a97(r255,l0)  -- assign reg 3
      Popping a99(r241,l0)  -- assign reg 7
      Popping a105(r242,l0)  -- assign reg 7
      Popping a101(r244,l0)  -- assign reg 5
      Popping a102(r243,l0)  -- assign reg 8
      Popping a91(r265,l0)  -- assign reg 8
      Popping a93(r266,l0)  -- assign reg 8
      Popping a414(r107,l0: a266(r107,l1))  -- assign reg 4
      Popping a412(r322,l0: a264(r322,l1))  -- assign reg 4
      Popping a413(r320,l0: a265(r320,l1))  -- assign reg 5
      Popping a80(r74,l0)  -- assign reg 11
      Popping a84(r68,l0)  -- assign reg 10
      Popping a81(r81,l0)  -- assign reg 10
      Popping a83(r273,l0)  -- assign reg 10
      Popping a6(r212,l0)  -- assign reg 4
      Popping a5(r508,l0)  -- assign reg 4
      Popping a92(r267,l0)  -- assign reg 9
      Popping a94(r262,l0)  -- assign reg 8
      Popping a95(r257,l0)  -- assign reg 5
      Popping a416(r317,l0: a268(r317,l1))  -- assign reg 4
      Popping a417(r316,l0: a269(r316,l1))  -- assign reg 4
      Popping a280(r189,l0: a132(r189,l1))  -- assign reg 3
      Popping a415(r319,l0: a267(r319,l1))  -- assign reg 5
      Popping a411(r323,l0: a263(r323,l1))  -- assign reg 4
      Popping a82(r79,l0)  -- assign reg 6
      Popping a78(r85,l0)  -- assign reg 4
      Popping a77(r88,l0)  -- assign reg 4
      Popping a85(r271,l0)  -- assign reg 4
      Popping a86(r270,l0)  -- assign reg 4
      Popping a87(r269,l0)  -- assign reg 4
      Popping a54(r300,l0)  -- assign reg 3
      Popping a56(r297,l0)  -- assign reg 3
      Popping a319(r161,l0: a171(r161,l1))  -- assign reg 4
      Popping a321(r411,l0: a173(r411,l1))  -- assign reg 3
      Popping a4(r497,l0)  -- assign reg 2
      Popping a12(r496,l0)  -- assign reg 2
      Popping a43(r103,l0)  -- assign reg 10
      Popping a314(r162,l0: a166(r162,l1))  -- assign reg 3
      Popping a311(r417,l0: a163(r417,l1))  -- assign reg 4
      Popping a307(r423,l0: a159(r423,l1))  -- assign reg 12
      Popping a306(r159,l0: a158(r159,l1))  -- assign reg 10
      Popping a308(r170,l0: a160(r170,l1))  -- assign reg 4
      Popping a309(r165,l0: a161(r165,l1))  -- assign reg 8
      Popping a310(r169,l0: a162(r169,l1))  -- assign reg 12
      Popping a312(r168,l0: a164(r168,l1))  -- assign reg 3
      Popping a313(r419,l0: a165(r419,l1))  -- assign reg 12
      Popping a315(r164,l0: a167(r164,l1))  -- assign reg 8
      Popping a325(r406,l0: a177(r406,l1))  -- assign reg 3
      Popping a335(r147,l0: a187(r147,l1))  -- assign reg 3
      Popping a336(r395,l0: a188(r395,l1))  -- assign reg 4
      Popping a337(r394,l0: a189(r394,l1))  -- assign reg 3
      Popping a356(r220,l0: a208(r220,l1))  -- assign reg 3
      Popping a357(r375,l0: a209(r375,l1))  -- assign reg 3
      Popping a358(r218,l0: a210(r218,l1))  -- assign reg 5
      Popping a392(r139,l0: a244(r139,l1))  -- assign reg 5
      Popping a393(r345,l0: a245(r345,l1))  -- assign reg 5
      Popping a394(r158,l0: a246(r158,l1))  -- assign reg 8
      Popping a28(r476,l0)  -- assign reg 2
      Popping a29(r475,l0)  -- assign reg 2
      Popping a37(r315,l0)  -- assign reg 3
      Popping a39(r314,l0)  -- assign reg 3
      Popping a46(r311,l0)  -- assign reg 3
      Popping a47(r96,l0)  -- assign reg 3
      Popping a52(r305,l0)  -- assign reg 3
      Popping a53(r95,l0)  -- assign reg 3
      Popping a63(r287,l0)  -- assign reg 3
      Popping a64(r286,l0)  -- assign reg 3
      Popping a79(r276,l0)  -- assign reg 4
      Popping a65(r285,l0)  -- assign reg 3
      Popping a67(r284,l0)  -- assign reg 3
      Popping a71(r90,l0)  -- assign reg 4
      Popping a72(r517,l0)  -- assign reg 4
      Popping a329(r148,l0: a181(r148,l1))  -- assign reg 4
      Popping a328(r403,l0: a180(r403,l1))  -- assign reg 4
      Popping a288(r182,l0: a140(r182,l1))  -- assign reg 4
      Popping a286(r448,l0: a138(r448,l1))  -- assign reg 4
      Popping a287(r447,l0: a139(r447,l1))  -- assign reg 5
      Popping a9(r502,l0)  -- assign reg 3
      Popping a10(r500,l0)  -- assign reg 3
      Popping a41(r104,l0)  -- assign reg 2
      Popping a42(r313,l0)  -- assign reg 2
      Popping a58(r296,l0)  -- assign reg 3
      Popping a59(r294,l0)  -- assign reg 3
      Popping a45(r310,l0)  -- assign reg 4
      Popping a55(r298,l0)  -- assign reg 4
      Popping a48(r308,l0)  -- assign reg 3
      Popping a50(r307,l0)  -- assign reg 3
      Popping a293(r436,l0: a145(r436,l1))  -- assign reg 3
      Popping a295(r435,l0: a147(r435,l1))  -- assign reg 3
      Popping a316(r414,l0: a168(r414,l1))  -- assign reg 4
      Popping a318(r413,l0: a170(r413,l1))  -- assign reg 4
      Popping a323(r154,l0: a175(r154,l1))  -- assign reg 5
      Popping a324(r408,l0: a176(r408,l1))  -- assign reg 5
      Popping a344(r388,l0: a196(r388,l1))  -- assign reg 3
      Popping a345(r387,l0: a197(r387,l1))  -- assign reg 3
      Popping a359(r373,l0: a211(r373,l1))  -- assign reg 3
      Popping a361(r372,l0: a213(r372,l1))  -- assign reg 3
      Popping a365(r369,l0: a217(r369,l1))  -- assign reg 4
      Popping a366(r368,l0: a218(r368,l1))  -- assign reg 4
      Popping a367(r366,l0: a219(r366,l1))  -- assign reg 3
      Popping a369(r365,l0: a221(r365,l1))  -- assign reg 3
      Popping a370(r363,l0: a222(r363,l1))  -- assign reg 3
      Popping a372(r362,l0: a224(r362,l1))  -- assign reg 3
      Popping a381(r357,l0: a233(r357,l1))  -- assign reg 5
      Popping a382(r128,l0: a234(r128,l1))  -- assign reg 5
      Popping a383(r355,l0: a235(r355,l1))  -- assign reg 5
      Popping a373(r180,l0: a225(r180,l1))  -- assign reg 11
      Popping a384(r354,l0: a236(r354,l1))  -- assign reg 5
      Popping a402(r334,l0: a254(r334,l1))  -- assign reg 5
      Popping a404(r333,l0: a256(r333,l1))  -- assign reg 5
      Popping a405(r329,l0: a257(r329,l1))  -- assign reg 3
      Popping a406(r328,l0: a258(r328,l1))  -- assign reg 5
      Popping a409(r109,l0: a261(r109,l1))  -- assign reg 4
      Popping a410(r324,l0: a262(r324,l1))  -- assign reg 4
      Popping a273(r197,l0: a125(r197,l1))  -- assign reg 3
      Popping a274(r467,l0: a126(r467,l1))  -- assign reg 3
      Popping a275(r196,l0: a127(r196,l1))  -- assign reg 4
      Popping a57(r292,l0)  -- assign reg 4
      Popping a401(r116,l0: a253(r116,l1))  -- assign reg 8
      Popping a408(r325,l0: a260(r325,l1))  -- assign reg 5
      Popping a339(r140,l0: a191(r140,l1))  -- assign reg 10
      Popping a351(r378,l0: a203(r378,l1))  -- assign reg 3
      Popping a353(r377,l0: a205(r377,l1))  -- assign reg 3
      Popping a375(r101,l0: a227(r101,l1))  -- assign reg 3
      Popping a376(r360,l0: a228(r360,l1))  -- assign reg 3
      Popping a377(r130,l0: a229(r130,l1))  -- assign reg 4
      Popping a27(r202,l0)  -- assign reg 2
      Popping a51(r306,l0)  -- assign reg 4
      Popping a62(r91,l0)  -- assign reg 3
      Popping a270(r470,l0: a122(r470,l1))  -- assign reg 5
      Popping a347(r386,l0: a199(r386,l1))  -- assign reg 3
      Popping a348(r384,l0: a200(r384,l1))  -- assign reg 3
      Popping a349(r385,l0: a201(r385,l1))  -- assign reg 5
      Popping a396(r343,l0: a248(r343,l1))  -- assign reg 5
      Popping a397(r341,l0: a249(r341,l1))  -- assign reg 5
      Popping a398(r342,l0: a250(r342,l1))  -- assign reg 8
      Popping a19(r480,l0)  -- assign reg 2
      Popping a21(r479,l0)  -- assign reg 2
      Popping a20(r483,l0)  -- assign reg 3
      Popping a22(r204,l0)  -- assign reg 2
      Popping a25(r478,l0)  -- assign reg 2
      Popping a26(r477,l0)  -- assign reg 2
      Popping a66(r49,l0)  -- assign reg 4
      Popping a68(r283,l0)  -- assign reg 4
      Popping a70(r281,l0)  -- assign reg 8
      Popping a297(r181,l0: a149(r181,l1))  -- assign reg 10
      Popping a13(r485,l0)  -- assign reg 2
      Popping a18(r484,l0)  -- assign reg 2
      Popping a346(r381,l0: a198(r381,l1))  -- assign reg 8
      Popping a350(r380,l0: a202(r380,l1))  -- assign reg 8
      Popping a395(r338,l0: a247(r338,l1))  -- assign reg 9
      Popping a399(r337,l0: a251(r337,l1))  -- assign reg 9
      Popping a11(r501,l0)  -- assign reg 4
      Popping a60(r295,l0)  -- assign reg 5
      Popping a49(r309,l0)  -- assign reg 4
      Popping a292(r437,l0: a144(r437,l1))  -- assign reg 4
      Popping a298(r178,l0: a150(r178,l1))  -- assign reg 3
      Popping a299(r433,l0: a151(r433,l1))  -- assign reg 10
      Popping a317(r415,l0: a169(r415,l1))  -- assign reg 8
      Popping a322(r156,l0: a174(r156,l1))  -- assign reg 10
      Popping a326(r407,l0: a178(r407,l1))  -- assign reg 4
      Popping a334(r396,l0: a186(r396,l1))  -- assign reg 3
      Popping a342(r390,l0: a194(r390,l1))  -- assign reg 3
      Popping a343(r145,l0: a195(r145,l1))  -- assign reg 5
      Popping a354(r376,l0: a206(r376,l1))  -- assign reg 3
      Popping a355(r221,l0: a207(r221,l1))  -- assign reg 5
      Popping a360(r374,l0: a212(r374,l1))  -- assign reg 5
      Popping a362(r137,l0: a214(r137,l1))  -- assign reg 3
      Popping a363(r371,l0: a215(r371,l1))  -- assign reg 10
      Popping a364(r135,l0: a216(r135,l1))  -- assign reg 4
      Popping a368(r367,l0: a220(r367,l1))  -- assign reg 4
      Popping a371(r364,l0: a223(r364,l1))  -- assign reg 4
      Popping a390(r346,l0: a242(r346,l1))  -- assign reg 5
      Popping a391(r131,l0: a243(r131,l1))  -- assign reg 8
      Popping a400(r330,l0: a252(r330,l1))  -- assign reg 10
      Popping a403(r335,l0: a255(r335,l1))  -- assign reg 9
      Popping a407(r111,l0: a259(r111,l1))  -- assign reg 10
      Popping a294(r46,l0: a146(r46,l1))  -- assign reg 4
      Popping a290(r443,l0: a142(r443,l1))  -- assign reg 5
      Popping a291(r442,l0: a143(r442,l1))  -- assign reg 5
      Popping a331(r401,l0: a183(r401,l1))  -- assign reg 3
      Popping a332(r399,l0: a184(r399,l1))  -- assign reg 3
      Popping a333(r400,l0: a185(r400,l1))  -- assign reg 5
      Popping a386(r353,l0: a238(r353,l1))  -- assign reg 5
      Popping a387(r351,l0: a239(r351,l1))  -- assign reg 5
      Popping a388(r352,l0: a240(r352,l1))  -- assign reg 8
      Popping a352(r379,l0: a204(r379,l1))  -- assign reg 5
      Popping a34(r198,l0)  -- assign reg 15
      Popping a278(r457,l0: a130(r457,l1))  -- assign reg 3
      Popping a279(r454,l0: a131(r454,l1))  -- assign reg 10
      Popping a284(r445,l0: a136(r445,l1))  -- assign reg 8
      Popping a285(r444,l0: a137(r444,l1))  -- assign reg 9
      Popping a15(r490,l0)  -- assign reg 3
      Popping a16(r488,l0)  -- assign reg 3
      Popping a23(r52,l0)  -- assign reg 3
      Popping a385(r348,l0: a237(r348,l1))  -- assign reg 9
      Popping a389(r347,l0: a241(r347,l1))  -- assign reg 9
      Popping a75(r278,l0)  -- assign reg 4
      Popping a76(r277,l0)  -- assign reg 4
      Popping a271(r516,l0: a123(r516,l1))  -- assign reg 3
      Popping a277(r512,l0: a129(r512,l1))  -- assign reg 11
      Popping a281(r453,l0: a133(r453,l1))  -- assign reg 10
      Popping a283(r187,l0: a135(r187,l1))  -- assign reg 4
      Popping a289(r185,l0: a141(r185,l1))  -- assign reg 5
      Popping a296(r434,l0: a148(r434,l1))  -- assign reg 3
      Popping a301(r432,l0: a153(r432,l1))  -- assign reg 3
      Popping a302(r430,l0: a154(r430,l1))  -- assign reg 3
      Popping a303(r431,l0: a155(r431,l1))  -- assign reg 4
      Popping a330(r397,l0: a182(r397,l1))  -- assign reg 8
      Popping a338(r391,l0: a190(r391,l1))  -- assign reg 3
      Popping a14(r495,l0)  -- assign reg 3
      Popping a17(r489,l0)  -- assign reg 4
      Popping a30(r51,l0)  -- assign reg 10
      Popping a31(r474,l0)  -- assign reg 2
      Popping a33(r473,l0)  -- assign reg 14
      Popping a300(r427,l0: a152(r427,l1))  -- assign reg 5
      Popping a304(r426,l0: a156(r426,l1))  -- assign reg 5
      Popping a74(r89,l0)  -- assign reg 4
      Popping a340(r392,l0: a192(r392,l1))  -- assign reg 5
      Popping a73(r280,l0)  -- assign reg 4
      Popping a374(r67,l0: a226(r67,l1))  -- assign reg 12
      Popping a379(r358,l0: a231(r358,l1))  -- assign reg 5
Spilling a2r43 for a40r69
Spilling a88r66 for a40r69
Assigning 7 to a40r69
Spilling a89r256 for a88r66
Assigning 6 to a88r66
Assigning 10 to a275r196
       a2(r43,l0)  -- assign memory
       a89(r256,l0)  -- assign memory
       a88(r66,l0)  -- assign hard reg 6

  Loop 1 (parent 0, header bb69, depth 1)
    bbs: 69(->70:l0) 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36(->70:l0) 35(->70:l0)
    all: 112r42 113r43 114r44 115r45 116r47 117r60 118r69 119r72 120r73 121r83 122r470 123r516 124r452 125r197 126r467 127r196 128r188 129r512 130r457 131r454 132r189 133r453 134r105 135r187 136r445 137r444 138r448 139r447 140r182 141r185 142r443 143r442 144r437 145r436 146r46 147r435 148r434 149r181 150r178 151r433 152r427 153r432 154r430 155r431 156r426 157r155 158r159 159r423 160r170 161r165 162r169 163r417 164r168 165r419 166r162 167r164 168r414 169r415 170r413 171r161 172r409 173r411 174r156 175r154 176r408 177r406 178r407 179r402 180r403 181r148 182r397 183r401 184r399 185r400 186r396 187r147 188r395 189r394 190r391 191r140 192r392 193r136 194r390 195r145 196r388 197r387 198r381 199r386 200r384 201r385 202r380 203r378 204r379 205r377 206r376 207r221 208r220 209r375 210r218 211r373 212r374 213r372 214r137 215r371 216r135 217r369 218r368 219r366 220r367 221r365 222r363 223r364 224r362 225r180 226r67 227r101 228r360 229r130 230r110 231r358 232r118 233r357 234r128 235r355 236r354 237r348 238r353 239r351 240r352 241r347 242r346 243r131 244r139 245r345 246r158 247r338 248r343 249r341 250r342 251r337 252r330 253r116 254r334 255r335 256r333 257r329 258r328 259r111 260r325 261r109 262r324 263r323 264r322 265r320 266r107 267r319 268r317 269r316
    modified regnos
    border: 112r42 113r43 114r44 115r45 116r47 117r60 118r69 119r72 120r73 121r83
    Pressure: AR_REGS=17
 Removing pref15:hr10@8
 Removing pref57:hr10@1
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@27676
          2:( 2-9 11-15)@720
            3:( 2-9 11 14 15)@848
              4:( 2-7)@10400
      Spill a112(r42,l1)
      Spill a113(r43,l1)
      Spill a114(r44,l1)
      Spill a116(r47,l1)
      Spill a117(r60,l1)
      Spill a119(r72,l1)
      Spill a120(r73,l1)
      Allocno a115r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a118r69 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a121r83 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a122r470 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a123r516 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a124r452 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a125r197 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a126r467 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a127r196 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a128r188 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a129r512 of AR_REGS(14) has 11 avail. regs  2-9 11 14 15, node:  2-9 11 14 15 (confl regs =  0 1 10 12 13 16-34)
      Allocno a130r457 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a131r454 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a132r189 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a133r453 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a134r105 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a135r187 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a136r445 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a137r444 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a138r448 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a139r447 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a140r182 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a141r185 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a142r443 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a143r442 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a144r437 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a145r436 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a146r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a147r435 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a148r434 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a149r181 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a150r178 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a151r433 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a152r427 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a153r432 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a154r430 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a155r431 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a156r426 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a157r155 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a158r159 of AR_REGS(14) has 12 avail. regs  2-11 14 15, ^node:  2-15 (confl regs =  0 1 12 13 16-34)
      Allocno a159r423 of AR_REGS(14) has 13 avail. regs  2-12 14 15, ^node:  2-15 (confl regs =  0 1 13 16-34)
      Allocno a160r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a161r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a162r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a163r417 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a164r168 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a165r419 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a166r162 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a167r164 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a168r414 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a169r415 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a170r413 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a171r161 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a172r409 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a173r411 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a174r156 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a175r154 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a176r408 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a177r406 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a178r407 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a179r402 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a180r403 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a181r148 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a182r397 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a183r401 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a184r399 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a185r400 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a186r396 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a187r147 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a188r395 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a189r394 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a190r391 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a191r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a192r392 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a193r136 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a194r390 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a195r145 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a196r388 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a197r387 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a198r381 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a199r386 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a200r384 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a201r385 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a202r380 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a203r378 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a204r379 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a205r377 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a206r376 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a207r221 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a208r220 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a209r375 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a210r218 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a211r373 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a212r374 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a213r372 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a214r137 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a215r371 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a216r135 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a217r369 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a218r368 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a219r366 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a220r367 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a221r365 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a222r363 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a223r364 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a224r362 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a225r180 of AR_REGS(14) has 13 avail. regs  2-11 13-15, ^node:  2-15 (confl regs =  0 1 12 16-34)
      Allocno a226r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a227r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a228r360 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a229r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a230r110 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a231r358 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a232r118 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a233r357 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a234r128 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a235r355 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a236r354 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a237r348 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a238r353 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a239r351 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a240r352 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a241r347 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a242r346 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a243r131 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a244r139 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a245r345 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a246r158 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a247r338 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a248r343 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a249r341 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a250r342 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a251r337 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a252r330 of AR_REGS(14) has 13 avail. regs  2-10 12-15, ^node:  2-15 (confl regs =  0 1 11 16-34)
      Allocno a253r116 of AR_REGS(14) has 12 avail. regs  2-9 12-15, ^node:  2-9 11-15 (confl regs =  0 1 10 11 16-34)
      Allocno a254r334 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a255r335 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a256r333 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a257r329 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a258r328 of AR_REGS(14) has 13 avail. regs  2-9 11-15, node:  2-9 11-15 (confl regs =  0 1 10 16-34)
      Allocno a259r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a260r325 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a261r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a262r324 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a263r323 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a264r322 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a265r320 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a266r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a267r319 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a268r317 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a269r316 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 116:a268r317-a269r316 (freq=17):
        Result (freq=552): a268r317(276) a269r316(276)
      Forming thread by copy 114:a264r322-a266r107 (freq=16):
        Result (freq=666): a264r322(260) a266r107(406)
      Forming thread by copy 51:a132r189-a134r105 (freq=1):
        Result (freq=316): a132r189(14) a134r105(302)
      Forming thread by copy 52:a127r196-a128r188 (freq=1):
        Result (freq=28): a127r196(14) a128r188(14)
      Forming thread by copy 53:a125r197-a126r467 (freq=1):
        Result (freq=28): a125r197(14) a126r467(14)
      Forming thread by copy 55:a122r470-a124r452 (freq=1):
        Result (freq=42): a122r470(14) a124r452(28)
      Forming thread by copy 56:a142r443-a143r442 (freq=1):
        Result (freq=28): a142r443(14) a143r442(14)
      Forming thread by copy 57:a138r448-a139r447 (freq=1):
        Result (freq=28): a138r448(14) a139r447(14)
      Forming thread by copy 59:a145r436-a147r435 (freq=1):
        Result (freq=60): a145r436(30) a147r435(30)
      Forming thread by copy 61:a152r427-a156r426 (freq=1):
        Result (freq=10): a152r427(6) a156r426(4)
      Forming thread by copy 62:a153r432-a154r430 (freq=1):
        Result (freq=8): a153r432(4) a154r430(4)
      Forming thread by copy 64:a161r165-a167r164 (freq=1):
        Result (freq=16): a161r165(8) a167r164(8)
      Forming thread by copy 65:a164r168-a166r162 (freq=1):
        Result (freq=31): a164r168(8) a166r162(23)
      Forming thread by copy 66:a162r169-a165r419 (freq=1):
        Result (freq=16): a162r169(8) a165r419(8)
      Forming thread by copy 68:a160r170-a163r417 (freq=1):
        Result (freq=20): a160r170(8) a163r417(12)
      Forming thread by copy 70:a159r423-a160r170 (freq=1):
        Result (freq=28): a159r423(8) a160r170(8) a163r417(12)
      Forming thread by copy 72:a175r154-a176r408 (freq=1):
        Result (freq=60): a175r154(30) a176r408(30)
      Forming thread by copy 74:a171r161-a172r409 (freq=1):
        Result (freq=90): a171r161(30) a172r409(60)
      Forming thread by copy 76:a168r414-a170r413 (freq=1):
        Result (freq=60): a168r414(30) a170r413(30)
      Forming thread by copy 77:a180r403-a181r148 (freq=1):
        Result (freq=75): a180r403(30) a181r148(45)
      Forming thread by copy 78:a177r406-a179r402 (freq=1):
        Result (freq=90): a177r406(30) a179r402(60)
      Forming thread by copy 79:a183r401-a184r399 (freq=1):
        Result (freq=16): a183r401(8) a184r399(8)
      Forming thread by copy 82:a187r147-a188r395 (freq=1):
        Result (freq=60): a187r147(30) a188r395(30)
      Forming thread by copy 84:a196r388-a197r387 (freq=1):
        Result (freq=60): a196r388(30) a197r387(30)
      Forming thread by copy 85:a198r381-a202r380 (freq=1):
        Result (freq=35): a198r381(21) a202r380(14)
      Forming thread by copy 86:a199r386-a200r384 (freq=1):
        Result (freq=28): a199r386(14) a200r384(14)
      Forming thread by copy 88:a203r378-a205r377 (freq=1):
        Result (freq=44): a203r378(22) a205r377(22)
      Forming thread by copy 89:a217r369-a218r368 (freq=1):
        Result (freq=60): a217r369(30) a218r368(30)
      Forming thread by copy 92:a211r373-a213r372 (freq=1):
        Result (freq=60): a211r373(30) a213r372(30)
      Forming thread by copy 93:a208r220-a209r375 (freq=1):
        Result (freq=60): a208r220(30) a209r375(30)
      Forming thread by copy 95:a219r366-a221r365 (freq=1):
        Result (freq=60): a219r366(30) a221r365(30)
      Forming thread by copy 96:a222r363-a224r362 (freq=1):
        Result (freq=60): a222r363(30) a224r362(30)
      Forming thread by copy 97:a229r130-a230r110 (freq=1):
        Result (freq=36): a229r130(4) a230r110(32)
      Forming thread by copy 98:a227r101-a228r360 (freq=1):
        Result (freq=8): a227r101(4) a228r360(4)
      Forming thread by copy 100:a235r355-a236r354 (freq=1):
        Result (freq=60): a235r355(30) a236r354(30)
      Forming thread by copy 101:a233r357-a234r128 (freq=1):
        Result (freq=60): a233r357(30) a234r128(30)
      Forming thread by copy 102:a237r348-a241r347 (freq=1):
        Result (freq=20): a237r348(12) a241r347(8)
      Forming thread by copy 103:a238r353-a239r351 (freq=1):
        Result (freq=16): a238r353(8) a239r351(8)
      Forming thread by copy 105:a244r139-a245r345 (freq=1):
        Result (freq=60): a244r139(30) a245r345(30)
      Forming thread by copy 107:a247r338-a251r337 (freq=1):
        Result (freq=35): a247r338(21) a251r337(14)
      Forming thread by copy 108:a248r343-a249r341 (freq=1):
        Result (freq=28): a248r343(14) a249r341(14)
      Forming thread by copy 110:a261r109-a262r324 (freq=1):
        Result (freq=60): a261r109(30) a262r324(30)
      Forming thread by copy 112:a257r329-a258r328 (freq=1):
        Result (freq=60): a257r329(30) a258r328(30)
      Forming thread by copy 113:a254r334-a256r333 (freq=1):
        Result (freq=60): a254r334(30) a256r333(30)
      Pushing a231(r358,l1)(cost 0)
      Pushing a226(r67,l1)(cost 0)
      Pushing a155(r431,l1)(cost 0)
      Pushing a240(r352,l1)(cost 0)
      Pushing a228(r360,l1)(cost 0)
      Pushing a227(r101,l1)(cost 0)
      Pushing a192(r392,l1)(cost 0)
      Pushing a185(r400,l1)(cost 0)
      Pushing a154(r430,l1)(cost 0)
      Pushing a153(r432,l1)(cost 0)
      Pushing a156(r426,l1)(cost 0)
      Pushing a152(r427,l1)(cost 0)
      Pushing a190(r391,l1)(cost 0)
      Pushing a182(r397,l1)(cost 0)
      Pushing a250(r342,l1)(cost 0)
      Pushing a201(r385,l1)(cost 0)
      Pushing a148(r434,l1)(cost 0)
      Pushing a141(r185,l1)(cost 0)
      Pushing a135(r187,l1)(cost 0)
      Pushing a133(r453,l1)(cost 0)
      Pushing a129(r512,l1)(cost 0)
      Pushing a123(r516,l1)(cost 0)
      Pushing a239(r351,l1)(cost 0)
      Pushing a238(r353,l1)(cost 0)
      Pushing a184(r399,l1)(cost 0)
      Pushing a183(r401,l1)(cost 0)
      Pushing a165(r419,l1)(cost 0)
      Pushing a162(r169,l1)(cost 0)
      Pushing a167(r164,l1)(cost 0)
      Pushing a161(r165,l1)(cost 0)
      Pushing a241(r347,l1)(cost 0)
      Pushing a237(r348,l1)(cost 0)
      Pushing a137(r444,l1)(cost 0)
      Pushing a136(r445,l1)(cost 0)
      Pushing a131(r454,l1)(cost 0)
      Pushing a130(r457,l1)(cost 0)
      Pushing a204(r379,l1)(cost 0)
      Pushing a249(r341,l1)(cost 0)
      Pushing a248(r343,l1)(cost 0)
      Pushing a200(r384,l1)(cost 0)
      Pushing a199(r386,l1)(cost 0)
      Pushing a160(r170,l1)(cost 0)
      Pushing a159(r423,l1)(cost 0)
      Pushing a163(r417,l1)(cost 0)
      Pushing a143(r442,l1)(cost 0)
      Pushing a142(r443,l1)(cost 0)
      Pushing a139(r447,l1)(cost 0)
      Pushing a138(r448,l1)(cost 0)
      Pushing a127(r196,l1)(cost 0)
      Pushing a126(r467,l1)(cost 0)
      Pushing a125(r197,l1)(cost 0)
      Pushing a146(r46,l1)(cost 0)
      Pushing a259(r111,l1)(cost 0)
      Pushing a255(r335,l1)(cost 0)
      Pushing a252(r330,l1)(cost 0)
      Pushing a246(r158,l1)(cost 0)
      Pushing a243(r131,l1)(cost 0)
      Pushing a242(r346,l1)(cost 0)
        Making a225(r180,l1) colorable
      Pushing a223(r364,l1)(cost 0)
      Pushing a220(r367,l1)(cost 0)
      Pushing a216(r135,l1)(cost 0)
      Pushing a215(r371,l1)(cost 0)
      Pushing a214(r137,l1)(cost 0)
      Pushing a212(r374,l1)(cost 0)
      Pushing a210(r218,l1)(cost 0)
      Pushing a207(r221,l1)(cost 0)
      Pushing a206(r376,l1)(cost 0)
      Pushing a195(r145,l1)(cost 0)
      Pushing a194(r390,l1)(cost 0)
      Pushing a189(r394,l1)(cost 0)
      Pushing a186(r396,l1)(cost 0)
      Pushing a178(r407,l1)(cost 0)
      Pushing a174(r156,l1)(cost 0)
      Pushing a173(r411,l1)(cost 0)
      Pushing a169(r415,l1)(cost 0)
        Making a158(r159,l1) colorable
      Pushing a151(r433,l1)(cost 0)
      Pushing a150(r178,l1)(cost 0)
      Pushing a144(r437,l1)(cost 0)
      Pushing a164(r168,l1)(cost 0)
      Pushing a166(r162,l1)(cost 0)
      Pushing a225(r180,l1)(cost 136)
      Pushing a158(r159,l1)(cost 196)
      Pushing a251(r337,l1)(cost 0)
      Pushing a247(r338,l1)(cost 0)
      Pushing a202(r380,l1)(cost 0)
        Making a191(r140,l1) colorable
      Pushing a191(r140,l1)(cost 196)
      Pushing a198(r381,l1)(cost 0)
      Pushing a229(r130,l1)(cost 0)
      Pushing a149(r181,l1)(cost 0)
      Pushing a140(r182,l1)(cost 0)
      Pushing a122(r470,l1)(cost 0)
      Pushing a205(r377,l1)(cost 0)
      Pushing a203(r378,l1)(cost 0)
      Pushing a260(r325,l1)(cost 0)
      Pushing a253(r116,l1)(cost 0)
      Pushing a262(r324,l1)(cost 0)
      Pushing a261(r109,l1)(cost 0)
      Pushing a258(r328,l1)(cost 0)
      Pushing a257(r329,l1)(cost 0)
      Pushing a256(r333,l1)(cost 0)
      Pushing a254(r334,l1)(cost 0)
      Pushing a245(r345,l1)(cost 0)
      Pushing a244(r139,l1)(cost 0)
      Pushing a236(r354,l1)(cost 0)
      Pushing a235(r355,l1)(cost 0)
      Pushing a234(r128,l1)(cost 0)
        Making a232(r118,l1) colorable
      Pushing a232(r118,l1)(cost 68)
        Making a230(r110,l1) colorable
      Pushing a230(r110,l1)(cost 128)
      Pushing a233(r357,l1)(cost 0)
      Pushing a224(r362,l1)(cost 0)
      Pushing a222(r363,l1)(cost 0)
      Pushing a221(r365,l1)(cost 0)
      Pushing a219(r366,l1)(cost 0)
      Pushing a218(r368,l1)(cost 0)
      Pushing a217(r369,l1)(cost 0)
      Pushing a213(r372,l1)(cost 0)
      Pushing a211(r373,l1)(cost 0)
      Pushing a209(r375,l1)(cost 0)
      Pushing a208(r220,l1)(cost 0)
      Pushing a197(r387,l1)(cost 0)
      Forming thread by copy 90:a193r136-a216r135 (freq=1):
        Result (freq=64): a193r136(34) a216r135(30)
        Making a193(r136,l1) colorable
      Pushing a196(r388,l1)(cost 0)
      Pushing a188(r395,l1)(cost 0)
      Pushing a187(r147,l1)(cost 0)
      Pushing a176(r408,l1)(cost 0)
      Pushing a175(r154,l1)(cost 0)
        Making a172(r409,l1) colorable
      Pushing a170(r413,l1)(cost 0)
      Pushing a168(r414,l1)(cost 0)
      Pushing a147(r435,l1)(cost 0)
      Pushing a145(r436,l1)(cost 0)
      Pushing a193(r136,l1)(cost 136)
      Pushing a180(r403,l1)(cost 0)
      Pushing a181(r148,l1)(cost 0)
      Pushing a177(r406,l1)(cost 0)
      Pushing a179(r402,l1)(cost 0)
      Pushing a171(r161,l1)(cost 0)
        Making a157(r155,l1) colorable
      Pushing a157(r155,l1)(cost 92)
      Pushing a172(r409,l1)(cost 120)
      Pushing a265(r320,l1)(cost 0)
      Pushing a263(r323,l1)(cost 0)
      Pushing a267(r319,l1)(cost 0)
      Pushing a132(r189,l1)(cost 0)
        Making a124(r452,l1) colorable
        Making a128(r188,l1) colorable
      Pushing a128(r188,l1)(cost 56)
      Pushing a124(r452,l1)(cost 56)
      Pushing a269(r316,l1)(cost 0)
      Pushing a268(r317,l1)(cost 0)
        Making a115(r45,l1) colorable
        Making a118(r69,l1) colorable
        Making a121(r83,l1) colorable
      Forming thread by copy 60:a134r105-a150r178 (freq=1):
        Result (freq=346): a132r189(14) a150r178(30) a134r105(302)
      Forming thread by copy 73:a134r105-a173r411 (freq=1):
        Result (freq=376): a132r189(14) a173r411(30) a150r178(30) a134r105(302)
      Forming thread by copy 81:a134r105-a189r394 (freq=1):
        Result (freq=406): a132r189(14) a189r394(30) a173r411(30) a150r178(30) a134r105(302)
      Forming thread by copy 91:a134r105-a214r137 (freq=1):
        Result (freq=436): a132r189(14) a214r137(30) a189r394(30) a173r411(30) a150r178(30) a134r105(302)
        Making a134(r105,l1) colorable
      Pushing a121(r83,l1)(cost 1320)
      Pushing a118(r69,l1)(cost 1736)
      Pushing a134(r105,l1)(cost 1208)
      Pushing a115(r45,l1)(cost 3800)
      Pushing a264(r322,l1)(cost 0)
      Pushing a266(r107,l1)(cost 0)
      Popping a266(r107,l1)  -- assign reg 3
      Popping a264(r322,l1)  -- assign reg 3
      Popping a115(r45,l1)  -- assign reg 2
      Popping a134(r105,l1)  -- assign reg 4
      Popping a118(r69,l1)  -- assign reg 7
      Popping a121(r83,l1)  -- assign reg 6
      Popping a268(r317,l1)  -- assign reg 3
      Popping a269(r316,l1)  -- assign reg 3
      Popping a124(r452,l1)  -- assign reg 3
      Popping a128(r188,l1)  -- assign reg 5
      Popping a132(r189,l1)  -- assign reg 4
      Popping a267(r319,l1)  -- assign reg 5
      Popping a263(r323,l1)  -- assign reg 3
      Popping a265(r320,l1)  -- assign reg 5
      Popping a172(r409,l1)  -- assign reg 3
      Popping a157(r155,l1)  -- assign reg 5
      Popping a171(r161,l1)  -- assign reg 3
      Popping a179(r402,l1)  -- assign reg 3
      Popping a177(r406,l1)  -- assign reg 3
      Popping a181(r148,l1)  -- assign reg 4
      Popping a180(r403,l1)  -- assign reg 4
      Popping a193(r136,l1)  -- assign reg 3
      Popping a145(r436,l1)  -- assign reg 3
      Popping a147(r435,l1)  -- assign reg 3
      Popping a168(r414,l1)  -- assign reg 3
      Popping a170(r413,l1)  -- assign reg 3
      Popping a175(r154,l1)  -- assign reg 5
      Popping a176(r408,l1)  -- assign reg 5
      Popping a187(r147,l1)  -- assign reg 3
      Popping a188(r395,l1)  -- assign reg 3
      Popping a196(r388,l1)  -- assign reg 4
      Popping a197(r387,l1)  -- assign reg 4
      Popping a208(r220,l1)  -- assign reg 4
      Popping a209(r375,l1)  -- assign reg 4
      Popping a211(r373,l1)  -- assign reg 4
      Popping a213(r372,l1)  -- assign reg 4
      Popping a217(r369,l1)  -- assign reg 3
      Popping a218(r368,l1)  -- assign reg 3
      Popping a219(r366,l1)  -- assign reg 3
      Popping a221(r365,l1)  -- assign reg 3
      Popping a222(r363,l1)  -- assign reg 3
      Popping a224(r362,l1)  -- assign reg 3
      Popping a233(r357,l1)  -- assign reg 3
      Popping a230(r110,l1)  -- assign reg 5
      Popping a232(r118,l1)  -- assign reg 4
      Popping a234(r128,l1)  -- assign reg 3
      Popping a235(r355,l1)  -- assign reg 3
      Popping a236(r354,l1)  -- assign reg 3
      Popping a244(r139,l1)  -- assign reg 3
      Popping a245(r345,l1)  -- assign reg 3
      Popping a254(r334,l1)  -- assign reg 3
      Popping a256(r333,l1)  -- assign reg 3
      Popping a257(r329,l1)  -- assign reg 4
      Popping a258(r328,l1)  -- assign reg 3
      Popping a261(r109,l1)  -- assign reg 3
      Popping a262(r324,l1)  -- assign reg 3
      Popping a253(r116,l1)  -- assign reg 8
      Popping a260(r325,l1)  -- assign reg 8
      Popping a203(r378,l1)  -- assign reg 4
      Popping a205(r377,l1)  -- assign reg 4
      Popping a122(r470,l1)  -- assign reg 3
      Popping a140(r182,l1)  -- assign reg 3
      Popping a149(r181,l1)  -- assign reg 10
      Popping a229(r130,l1)  -- assign reg 5
      Popping a198(r381,l1)  -- assign reg 4
      Popping a191(r140,l1)  -- assign reg 10
      Popping a202(r380,l1)  -- assign reg 4
      Popping a247(r338,l1)  -- assign reg 3
      Popping a251(r337,l1)  -- assign reg 3
      Popping a158(r159,l1)  -- assign reg 10
      Popping a225(r180,l1)  -- assign reg 11
      Popping a166(r162,l1)  -- assign reg 4
      Popping a164(r168,l1)  -- assign reg 4
      Popping a144(r437,l1)  -- assign reg 3
      Popping a150(r178,l1)  -- assign reg 4
      Popping a151(r433,l1)  -- assign reg 10
      Popping a169(r415,l1)  -- assign reg 8
      Popping a173(r411,l1)  -- assign reg 4
      Popping a174(r156,l1)  -- assign reg 10
      Popping a178(r407,l1)  -- assign reg 4
      Popping a186(r396,l1)  -- assign reg 3
      Popping a189(r394,l1)  -- assign reg 4
      Popping a194(r390,l1)  -- assign reg 4
      Popping a195(r145,l1)  -- assign reg 5
      Popping a206(r376,l1)  -- assign reg 4
      Popping a207(r221,l1)  -- assign reg 5
      Popping a210(r218,l1)  -- assign reg 5
      Popping a212(r374,l1)  -- assign reg 5
      Popping a214(r137,l1)  -- assign reg 4
      Popping a215(r371,l1)  -- assign reg 10
      Popping a216(r135,l1)  -- assign reg 3
      Popping a220(r367,l1)  -- assign reg 4
      Popping a223(r364,l1)  -- assign reg 4
      Popping a242(r346,l1)  -- assign reg 3
      Popping a243(r131,l1)  -- assign reg 8
      Popping a246(r158,l1)  -- assign reg 8
      Popping a252(r330,l1)  -- assign reg 10
      Popping a255(r335,l1)  -- assign reg 9
      Popping a259(r111,l1)  -- assign reg 10
      Popping a146(r46,l1)  -- assign reg 4
      Popping a125(r197,l1)  -- assign reg 4
      Popping a126(r467,l1)  -- assign reg 4
      Popping a127(r196,l1)  -- assign reg 5
      Popping a138(r448,l1)  -- assign reg 3
      Popping a139(r447,l1)  -- assign reg 5
      Popping a142(r443,l1)  -- assign reg 5
      Popping a143(r442,l1)  -- assign reg 5
      Popping a163(r417,l1)  -- assign reg 3
      Popping a159(r423,l1)  -- assign reg 12
      Popping a160(r170,l1)  -- assign reg 3
      Popping a199(r386,l1)  -- assign reg 5
      Popping a200(r384,l1)  -- assign reg 5
      Popping a248(r343,l1)  -- assign reg 8
      Popping a249(r341,l1)  -- assign reg 8
      Popping a204(r379,l1)  -- assign reg 5
      Popping a130(r457,l1)  -- assign reg 4
      Popping a131(r454,l1)  -- assign reg 10
      Popping a136(r445,l1)  -- assign reg 8
      Popping a137(r444,l1)  -- assign reg 9
      Popping a237(r348,l1)  -- assign reg 3
      Popping a241(r347,l1)  -- assign reg 3
      Popping a161(r165,l1)  -- assign reg 8
      Popping a167(r164,l1)  -- assign reg 8
      Popping a162(r169,l1)  -- assign reg 4
      Popping a165(r419,l1)  -- assign reg 9
      Popping a183(r401,l1)  -- assign reg 3
      Popping a184(r399,l1)  -- assign reg 3
      Popping a238(r353,l1)  -- assign reg 8
      Popping a239(r351,l1)  -- assign reg 8
      Popping a123(r516,l1)  -- assign reg 4
      Popping a129(r512,l1)  -- assign reg 11
      Popping a133(r453,l1)  -- assign reg 10
      Popping a135(r187,l1)  -- assign reg 3
      Popping a141(r185,l1)  -- assign reg 5
      Popping a148(r434,l1)  -- assign reg 3
      Popping a201(r385,l1)  -- assign reg 8
      Popping a250(r342,l1)  -- assign reg 9
      Popping a182(r397,l1)  -- assign reg 5
      Popping a190(r391,l1)  -- assign reg 4
      Popping a152(r427,l1)  -- assign reg 3
      Popping a156(r426,l1)  -- assign reg 3
      Popping a153(r432,l1)  -- assign reg 4
      Popping a154(r430,l1)  -- assign reg 4
      Popping a185(r400,l1)  -- assign reg 8
      Popping a192(r392,l1)  -- assign reg 5
      Popping a227(r101,l1)  -- assign reg 5
      Popping a228(r360,l1)  -- assign reg 3
      Popping a240(r352,l1)  -- assign reg 9
      Popping a155(r431,l1)  -- assign reg 5
      Popping a226(r67,l1)  -- assign reg 12
      Popping a231(r358,l1)  -- assign reg 3
Assigning 10 to a127r196
Disposition:
  112:r42  l1   mem    8:r42  l0   mem  113:r43  l1   mem    2:r43  l0   mem
  114:r44  l1   mem   35:r44  l0   mem  115:r45  l1     2   36:r45  l0     2
  146:r46  l1     4  116:r47  l1   mem    1:r47  l0   mem    0:r48  l0     2
   66:r49  l0     4   38:r50  l0     2   30:r51  l0    10   23:r52  l0     3
  106:r54  l0     2   69:r55  l0     3   90:r57  l0     4  108:r58  l0     5
  117:r60  l1   mem   24:r60  l0   mem   61:r65  l0     5   88:r66  l0     6
  226:r67  l1    12   84:r68  l0    10  118:r69  l1     7   40:r69  l0     7
  119:r72  l1   mem    3:r72  l0   mem  120:r73  l1   mem    7:r73  l0   mem
   80:r74  l0    11   82:r79  l0     6   81:r81  l0    10  121:r83  l1     6
   32:r83  l0     6   78:r85  l0     4   77:r88  l0     4   74:r89  l0     4
   71:r90  l0     4   62:r91  l0     3   53:r95  l0     3   47:r96  l0     3
   44:r98  l0     3  227:r101 l1     5   43:r103 l0    10   41:r104 l0     2
  134:r105 l1     4  266:r107 l1     3  261:r109 l1     3  230:r110 l1     5
  259:r111 l1    10  253:r116 l1     8  232:r118 l1     4  234:r128 l1     3
  229:r130 l1     5  243:r131 l1     8  216:r135 l1     3  193:r136 l1     3
  214:r137 l1     4  244:r139 l1     3  191:r140 l1    10  195:r145 l1     5
  187:r147 l1     3  181:r148 l1     4  175:r154 l1     5  157:r155 l1     5
  174:r156 l1    10  246:r158 l1     8  158:r159 l1    10  171:r161 l1     3
  166:r162 l1     4  167:r164 l1     8  161:r165 l1     8  164:r168 l1     4
  162:r169 l1     4  160:r170 l1     3  150:r178 l1     4  225:r180 l1    11
  149:r181 l1    10  140:r182 l1     3  141:r185 l1     5  135:r187 l1     3
  128:r188 l1     5  132:r189 l1     4  127:r196 l1    10  125:r197 l1     4
   34:r198 l0    15   27:r202 l0     2   22:r204 l0     2    6:r212 l0     4
  210:r218 l1     5  208:r220 l1     4  207:r221 l1     5  111:r223 l0     5
  109:r224 l0     5  110:r225 l0     3  107:r238 l0     5   99:r241 l0     7
  105:r242 l0     7  102:r243 l0     8  101:r244 l0     5  100:r246 l0     5
  104:r247 l0     6  103:r248 l0     6   98:r253 l0     2   96:r254 l0     2
   97:r255 l0     3   89:r256 l0   mem   95:r257 l0     5   94:r262 l0     8
   91:r265 l0     8   93:r266 l0     8   92:r267 l0     9   87:r269 l0     4
   86:r270 l0     4   85:r271 l0     4   83:r273 l0    10   79:r276 l0     4
   76:r277 l0     4   75:r278 l0     4   73:r280 l0     4   70:r281 l0     8
   68:r283 l0     4   67:r284 l0     3   65:r285 l0     3   64:r286 l0     3
   63:r287 l0     3   57:r292 l0     4   59:r294 l0     3   60:r295 l0     5
   58:r296 l0     3   56:r297 l0     3   55:r298 l0     4   54:r300 l0     3
   52:r305 l0     3   51:r306 l0     4   50:r307 l0     3   48:r308 l0     3
   49:r309 l0     4   45:r310 l0     4   46:r311 l0     3   42:r313 l0     2
   39:r314 l0     3   37:r315 l0     3  269:r316 l1     3  268:r317 l1     3
  267:r319 l1     5  265:r320 l1     5  264:r322 l1     3  263:r323 l1     3
  262:r324 l1     3  260:r325 l1     8  258:r328 l1     3  257:r329 l1     4
  252:r330 l1    10  256:r333 l1     3  254:r334 l1     3  255:r335 l1     9
  251:r337 l1     3  247:r338 l1     3  249:r341 l1     8  250:r342 l1     9
  248:r343 l1     8  245:r345 l1     3  242:r346 l1     3  241:r347 l1     3
  237:r348 l1     3  239:r351 l1     8  240:r352 l1     9  238:r353 l1     8
  236:r354 l1     3  235:r355 l1     3  233:r357 l1     3  231:r358 l1     3
  228:r360 l1     3  224:r362 l1     3  222:r363 l1     3  223:r364 l1     4
  221:r365 l1     3  219:r366 l1     3  220:r367 l1     4  218:r368 l1     3
  217:r369 l1     3  215:r371 l1    10  213:r372 l1     4  211:r373 l1     4
  212:r374 l1     5  209:r375 l1     4  206:r376 l1     4  205:r377 l1     4
  203:r378 l1     4  204:r379 l1     5  202:r380 l1     4  198:r381 l1     4
  200:r384 l1     5  201:r385 l1     8  199:r386 l1     5  197:r387 l1     4
  196:r388 l1     4  194:r390 l1     4  190:r391 l1     4  192:r392 l1     5
  189:r394 l1     4  188:r395 l1     3  186:r396 l1     3  182:r397 l1     5
  184:r399 l1     3  185:r400 l1     8  183:r401 l1     3  179:r402 l1     3
  180:r403 l1     4  177:r406 l1     3  178:r407 l1     4  176:r408 l1     5
  172:r409 l1     3  173:r411 l1     4  170:r413 l1     3  168:r414 l1     3
  169:r415 l1     8  163:r417 l1     3  165:r419 l1     9  159:r423 l1    12
  156:r426 l1     3  152:r427 l1     3  154:r430 l1     4  155:r431 l1     5
  153:r432 l1     4  151:r433 l1    10  148:r434 l1     3  147:r435 l1     3
  145:r436 l1     3  144:r437 l1     3  143:r442 l1     5  142:r443 l1     5
  137:r444 l1     9  136:r445 l1     8  139:r447 l1     5  138:r448 l1     3
  124:r452 l1     3  133:r453 l1    10  131:r454 l1    10  130:r457 l1     4
  126:r467 l1     4  122:r470 l1     3   33:r473 l0    14   31:r474 l0     2
   29:r475 l0     2   28:r476 l0     2   26:r477 l0     2   25:r478 l0     2
   21:r479 l0     2   19:r480 l0     2   20:r483 l0     3   18:r484 l0     2
   13:r485 l0     2   16:r488 l0     3   17:r489 l0     4   15:r490 l0     3
   14:r495 l0     3   12:r496 l0     2    4:r497 l0     2   10:r500 l0     3
   11:r501 l0     4    9:r502 l0     3    5:r508 l0     4  129:r512 l1    11
  123:r516 l1     4   72:r517 l0     4
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb69)
  2 vs parent 2:      Creating newreg=518 from oldreg=45
  7 vs parent 7:      Creating newreg=519 from oldreg=69
  6 vs parent 6:      Creating newreg=520 from oldreg=83
rescanning insn with uid = 673.
rescanning insn with uid = 675.
rescanning insn with uid = 667.
rescanning insn with uid = 668.
rescanning insn with uid = 589.
rescanning insn with uid = 590.
rescanning insn with uid = 564.
rescanning insn with uid = 565.
rescanning insn with uid = 502.
rescanning insn with uid = 503.
rescanning insn with uid = 469.
rescanning insn with uid = 470.
rescanning insn with uid = 403.
rescanning insn with uid = 404.
rescanning insn with uid = 320.
rescanning insn with uid = 321.
rescanning insn with uid = 291.
rescanning insn with uid = 292.
rescanning insn with uid = 273.
rescanning insn with uid = 275.
scanning new insn with uid = 889.
    Adding cp183:a36r45-a115r518
    Adding range [377..377] to allocno a36r45
    Adding cp184:a40r69-a118r519
    Adding range [377..379] to allocno a40r69
    Adding cp185:a32r83-a121r520
    Adding range [377..381] to allocno a32r83
    Adding range [378..382] to allocno a115r518
    Adding range [380..382] to allocno a118r519
    Adding range [382..382] to allocno a121r520
    Adding range [377..382] to live through  allocno a8r42
    Adding range [377..382] to live through  allocno a2r43
    Adding range [377..382] to live through  allocno a35r44
    Adding range [377..382] to live through  allocno a1r47
    Adding range [377..382] to live through  allocno a24r60
    Adding range [377..382] to live through  allocno a3r72
    Adding range [377..382] to live through  allocno a7r73
    Adding cp186:a32r83-a121r520
    Adding range [384..384] to allocno a121r520
    Adding range [385..385] to allocno a32r83
    Adding range [384..385] to live through  allocno a8r42
    Adding range [384..385] to live through  allocno a2r43
    Adding range [384..385] to live through  allocno a35r44
    Adding range [384..385] to live through  allocno a1r47
    Adding range [384..385] to live through  allocno a24r60
    Adding range [384..385] to live through  allocno a3r72
    Adding range [384..385] to live through  allocno a7r73
scanning new insn with uid = 886.
scanning new insn with uid = 887.
scanning new insn with uid = 888.
    New r518: setting preferred AR_REGS, alternative NO_REGS
    New r519: setting preferred AR_REGS, alternative NO_REGS
    New r520: setting preferred AR_REGS, alternative NO_REGS
Flattening IR
      Moving ranges of a120r73 to a7r73:  [178..375]
      Moving ranges of a119r72 to a3r72:  [178..375]
      Moving ranges of a117r60 to a24r60:  [178..375]
      Moving ranges of a116r47 to a1r47:  [178..375]
      Moving ranges of a114r44 to a35r44:  [178..375]
      Moving ranges of a113r43 to a2r43:  [178..375]
      Moving ranges of a112r42 to a8r42:  [178..375]
      Remove cp117:c280r189-c282r105
      Remove cp118:c275r196-c276r188
      Remove cp119:c273r197-c274r467
      Remove cp120:c273r197-c275r196
      Remove cp121:c270r470-c272r452
      Remove cp122:c290r443-c291r442
      Remove cp123:c286r448-c287r447
      Remove cp124:c286r448-c288r182
      Remove cp125:c293r436-c295r435
      Remove cp126:c282r105-c298r178
      Remove cp127:c300r427-c304r426
      Remove cp128:c301r432-c302r430
      Remove cp129:c301r432-c303r431
      Remove cp130:c309r165-c315r164
      Remove cp131:c312r168-c314r162
      Remove cp132:c310r169-c313r419
      Remove cp133:c310r169-c312r168
      Remove cp134:c308r170-c311r417
      Remove cp135:c308r170-c310r169
      Remove cp136:c307r423-c308r170
      Remove cp137:c307r423-c309r165
      Remove cp138:c323r154-c324r408
      Remove cp139:c282r105-c321r411
      Remove cp140:c319r161-c320r409
      Remove cp141:c319r161-c321r411
      Remove cp142:c316r414-c318r413
      Remove cp143:c328r403-c329r148
      Remove cp144:c325r406-c327r402
      Remove cp145:c331r401-c332r399
      Remove cp146:c331r401-c333r400
      Remove cp147:c282r105-c337r394
      Remove cp148:c335r147-c336r395
      Remove cp149:c335r147-c337r394
      Remove cp150:c344r388-c345r387
      Remove cp151:c346r381-c350r380
      Remove cp152:c347r386-c348r384
      Remove cp153:c347r386-c349r385
      Remove cp154:c351r378-c353r377
      Remove cp155:c365r369-c366r368
      Remove cp156:c341r136-c364r135
      Remove cp157:c282r105-c362r137
      Remove cp158:c359r373-c361r372
      Remove cp159:c356r220-c357r375
      Remove cp160:c356r220-c358r218
      Remove cp161:c367r366-c369r365
      Remove cp162:c370r363-c372r362
      Remove cp163:c377r130-c378r110
      Remove cp164:c375r101-c376r360
      Remove cp165:c375r101-c377r130
      Remove cp166:c383r355-c384r354
      Remove cp167:c381r357-c382r128
      Remove cp168:c385r348-c389r347
      Remove cp169:c386r353-c387r351
      Remove cp170:c386r353-c388r352
      Remove cp171:c392r139-c393r345
      Remove cp172:c392r139-c394r158
      Remove cp173:c395r338-c399r337
      Remove cp174:c396r343-c397r341
      Remove cp175:c396r343-c398r342
      Remove cp176:c409r109-c410r324
      Remove cp177:c282r105-c405r329
      Remove cp178:c405r329-c406r328
      Remove cp179:c402r334-c404r333
      Remove cp180:c412r322-c414r107
      Remove cp181:c412r322-c413r320
      Remove cp182:c416r317-c417r316
      Remove a112r42
      Remove a113r43
      Remove a114r44
      Remove a116r47
      Remove a117r60
      Remove a119r72
      Remove a120r73
      Remove a270r470
      Remove a271r516
      Remove a272r452
      Remove a273r197
      Remove a274r467
      Remove a275r196
      Remove a276r188
      Remove a277r512
      Remove a278r457
      Remove a279r454
      Remove a280r189
      Remove a281r453
      Remove a282r105
      Remove a283r187
      Remove a284r445
      Remove a285r444
      Remove a286r448
      Remove a287r447
      Remove a288r182
      Remove a289r185
      Remove a290r443
      Remove a291r442
      Remove a292r437
      Remove a293r436
      Remove a294r46
      Remove a295r435
      Remove a296r434
      Remove a297r181
      Remove a298r178
      Remove a299r433
      Remove a300r427
      Remove a301r432
      Remove a302r430
      Remove a303r431
      Remove a304r426
      Remove a305r155
      Remove a306r159
      Remove a307r423
      Remove a308r170
      Remove a309r165
      Remove a310r169
      Remove a311r417
      Remove a312r168
      Remove a313r419
      Remove a314r162
      Remove a315r164
      Remove a316r414
      Remove a317r415
      Remove a318r413
      Remove a319r161
      Remove a320r409
      Remove a321r411
      Remove a322r156
      Remove a323r154
      Remove a324r408
      Remove a325r406
      Remove a326r407
      Remove a327r402
      Remove a328r403
      Remove a329r148
      Remove a330r397
      Remove a331r401
      Remove a332r399
      Remove a333r400
      Remove a334r396
      Remove a335r147
      Remove a336r395
      Remove a337r394
      Remove a338r391
      Remove a339r140
      Remove a340r392
      Remove a341r136
      Remove a342r390
      Remove a343r145
      Remove a344r388
      Remove a345r387
      Remove a346r381
      Remove a347r386
      Remove a348r384
      Remove a349r385
      Remove a350r380
      Remove a351r378
      Remove a352r379
      Remove a353r377
      Remove a354r376
      Remove a355r221
      Remove a356r220
      Remove a357r375
      Remove a358r218
      Remove a359r373
      Remove a360r374
      Remove a361r372
      Remove a362r137
      Remove a363r371
      Remove a364r135
      Remove a365r369
      Remove a366r368
      Remove a367r366
      Remove a368r367
      Remove a369r365
      Remove a370r363
      Remove a371r364
      Remove a372r362
      Remove a373r180
      Remove a374r67
      Remove a375r101
      Remove a376r360
      Remove a377r130
      Remove a378r110
      Remove a379r358
      Remove a380r118
      Remove a381r357
      Remove a382r128
      Remove a383r355
      Remove a384r354
      Remove a385r348
      Remove a386r353
      Remove a387r351
      Remove a388r352
      Remove a389r347
      Remove a390r346
      Remove a391r131
      Remove a392r139
      Remove a393r345
      Remove a394r158
      Remove a395r338
      Remove a396r343
      Remove a397r341
      Remove a398r342
      Remove a399r337
      Remove a400r330
      Remove a401r116
      Remove a402r334
      Remove a403r335
      Remove a404r333
      Remove a405r329
      Remove a406r328
      Remove a407r111
      Remove a408r325
      Remove a409r109
      Remove a410r324
      Remove a411r323
      Remove a412r322
      Remove a413r320
      Remove a414r107
      Remove a415r319
      Remove a416r317
      Remove a417r316
Compressing live ranges: from 386 to 370 - 95%
Ranges after the compression:
 a0(r48): [96..97] [0..1]
 a1(r47): [166..369] [102..157] [2..95]
 a2(r43): [166..369] [132..147] [118..127] [2..95]
 a3(r72): [166..369] [116..147] [102..107] [2..95]
 a4(r497): [2..9]
 a5(r508): [2..3]
 a6(r212): [4..5]
 a7(r73): [166..369] [116..147] [102..105] [20..95] [4..11]
 a8(r42): [166..369] [130..147] [116..127] [102..107] [14..95] [6..11]
 a9(r502): [6..7]
 a10(r500): [8..9]
 a11(r501): [8..9]
 a12(r496): [10..11]
 a13(r485): [12..17]
 a14(r495): [12..13]
 a15(r490): [14..15]
 a16(r488): [16..17]
 a17(r489): [16..17]
 a18(r484): [18..19]
 a19(r480): [20..21]
 a20(r483): [20..23]
 a21(r479): [22..23]
 a22(r204): [24..27]
 a23(r52): [24..25]
 a24(r60): [166..369] [116..147] [102..111] [26..95]
 a25(r478): [28..29]
 a26(r477): [30..31]
 a27(r202): [32..33]
 a28(r476): [34..35]
 a29(r475): [36..37]
 a30(r51): [38..43]
 a31(r474): [38..39]
 a32(r83): [369..369] [362..366] [132..147] [118..119] [40..95]
 a33(r473): [40..41]
 a34(r198): [42..43]
 a35(r44): [166..369] [94..95] [44..83]
 a36(r45): [362..362] [44..45]
 a37(r315): [46..47]
 a38(r50): [102..155] [54..95] [46..49]
 a39(r314): [48..49]
 a40(r69): [362..364] [116..147] [102..113] [44..95]
 a41(r104): [50..51]
 a42(r313): [52..53]
 a43(r103): [52..55]
 a44(r98): [56..57]
 a45(r310): [56..61]
 a46(r311): [58..59]
 a47(r96): [60..61]
 a48(r308): [62..63]
 a49(r309): [62..65]
 a50(r307): [64..65]
 a51(r306): [66..67]
 a52(r305): [66..67]
 a53(r95): [68..69]
 a54(r300): [70..71]
 a55(r298): [70..73]
 a56(r297): [72..73]
 a57(r292): [74..77]
 a58(r296): [74..75]
 a59(r294): [76..77]
 a60(r295): [76..77]
 a61(r65): [116..147] [102..113] [78..95]
 a62(r91): [78..79]
 a63(r287): [80..81]
 a64(r286): [82..83]
 a65(r285): [84..85]
 a66(r49): [84..87]
 a67(r284): [86..87]
 a68(r283): [88..89]
 a69(r55): [102..161] [88..93]
 a70(r281): [90..93]
 a71(r90): [90..91]
 a72(r517): [92..93]
 a73(r280): [146..147]
 a74(r89): [140..141]
 a75(r278): [142..143]
 a76(r277): [144..145]
 a77(r88): [136..137]
 a78(r85): [138..139] [132..133]
 a79(r276): [134..135]
 a80(r74): [116..131] [102..103]
 a81(r81): [120..121]
 a82(r79): [120..125]
 a83(r273): [122..123]
 a84(r68): [124..131] [116..117] [102..113]
 a85(r271): [126..127]
 a86(r270): [128..129]
 a87(r269): [130..131]
 a88(r66): [102..113]
 a89(r256): [104..115]
 a90(r57): [148..161] [106..115]
 a91(r265): [108..109]
 a92(r267): [110..111]
 a93(r266): [110..111]
 a94(r262): [112..113]
 a95(r257): [114..115]
 a96(r254): [98..99]
 a97(r255): [98..101]
 a98(r253): [100..101]
 a99(r241): [148..153]
 a100(r246): [148..149]
 a101(r244): [150..155]
 a102(r243): [150..155]
 a103(r248): [150..151]
 a104(r247): [152..153]
 a105(r242): [154..155]
 a106(r54): [156..163]
 a107(r238): [156..157]
 a108(r58): [158..159]
 a109(r224): [160..163]
 a110(r225): [162..163]
 a111(r223): [164..165]
 a115(r518): [363..367] [166..361]
 a118(r519): [365..367] [166..361]
 a121(r520): [367..368] [166..361]
 a122(r470): [176..177]
 a123(r516): [176..177]
 a124(r452): [178..187]
 a125(r197): [178..179]
 a126(r467): [180..181]
 a127(r196): [180..181]
 a128(r188): [182..187]
 a129(r512): [182..183]
 a130(r457): [182..183]
 a131(r454): [182..183]
 a132(r189): [184..185]
 a133(r453): [184..185]
 a134(r105): [356..361] [342..343] [310..317] [260..267] [208..215] [186..199] [166..175]
 a135(r187): [188..189]
 a136(r445): [190..195]
 a137(r444): [190..195]
 a138(r448): [190..191]
 a139(r447): [192..193]
 a140(r182): [192..199] [172..173]
 a141(r185): [194..195]
 a142(r443): [196..197]
 a143(r442): [198..199]
 a144(r437): [174..175]
 a145(r436): [348..349]
 a146(r46): [348..351]
 a147(r435): [350..351]
 a148(r434): [352..353]
 a149(r181): [352..353]
 a150(r178): [354..355]
 a151(r433): [354..355]
 a152(r427): [228..231]
 a153(r432): [228..229]
 a154(r430): [230..231]
 a155(r431): [230..231]
 a156(r426): [232..233]
 a157(r155): [216..227] [200..211]
 a158(r159): [216..227] [200..209]
 a159(r423): [216..217]
 a160(r170): [218..219]
 a161(r165): [218..225]
 a162(r169): [220..221]
 a163(r417): [220..227]
 a164(r168): [222..223]
 a165(r419): [222..223]
 a166(r162): [224..227] [200..203]
 a167(r164): [226..227]
 a168(r414): [200..201]
 a169(r415): [200..203]
 a170(r413): [202..203]
 a171(r161): [204..205]
 a172(r409): [206..215]
 a173(r411): [206..207]
 a174(r156): [210..211]
 a175(r154): [212..213]
 a176(r408): [214..215]
 a177(r406): [330..331]
 a178(r407): [330..331]
 a179(r402): [332..335]
 a180(r403): [332..333]
 a181(r148): [344..347] [334..337]
 a182(r397): [344..347]
 a183(r401): [344..345]
 a184(r399): [346..347]
 a185(r400): [346..347]
 a186(r396): [336..337]
 a187(r147): [338..339]
 a188(r395): [340..341]
 a189(r394): [340..341]
 a190(r391): [328..329]
 a191(r140): [318..329] [292..307]
 a192(r392): [328..329]
 a193(r136): [318..329] [292..311]
 a194(r390): [292..293]
 a195(r145): [292..293]
 a196(r388): [294..295]
 a197(r387): [296..297]
 a198(r381): [322..325]
 a199(r386): [322..323]
 a200(r384): [324..325]
 a201(r385): [324..325]
 a202(r380): [326..327]
 a203(r378): [318..319]
 a204(r379): [318..321]
 a205(r377): [320..321]
 a206(r376): [298..299]
 a207(r221): [298..299]
 a208(r220): [300..301]
 a209(r375): [302..303]
 a210(r218): [302..303]
 a211(r373): [304..305]
 a212(r374): [304..307]
 a213(r372): [306..307]
 a214(r137): [308..309]
 a215(r371): [308..309]
 a216(r135): [312..313]
 a217(r369): [314..315]
 a218(r368): [316..317]
 a219(r366): [288..289]
 a220(r367): [288..291]
 a221(r365): [290..291]
 a222(r363): [234..235]
 a223(r364): [234..237]
 a224(r362): [236..237]
 a225(r180): [274..287] [238..251]
 a226(r67): [280..281]
 a227(r101): [282..283]
 a228(r360): [284..285]
 a229(r130): [284..285]
 a230(r110): [286..287] [268..279] [238..263]
 a231(r358): [286..287]
 a232(r118): [286..287] [268..279] [238..257]
 a233(r357): [238..239]
 a234(r128): [240..241]
 a235(r355): [242..243]
 a236(r354): [244..245]
 a237(r348): [274..277]
 a238(r353): [274..275]
 a239(r351): [276..277]
 a240(r352): [276..277]
 a241(r347): [278..279]
 a242(r346): [246..247]
 a243(r131): [246..247]
 a244(r139): [248..249]
 a245(r345): [250..251]
 a246(r158): [250..251]
 a247(r338): [268..271]
 a248(r343): [268..269]
 a249(r341): [270..271]
 a250(r342): [270..271]
 a251(r337): [272..273]
 a252(r330): [252..253]
 a253(r116): [252..257]
 a254(r334): [254..255]
 a255(r335): [254..257]
 a256(r333): [256..257]
 a257(r329): [258..259]
 a258(r328): [260..261]
 a259(r111): [262..263]
 a260(r325): [262..267]
 a261(r109): [264..265]
 a262(r324): [266..267]
 a263(r323): [356..357]
 a264(r322): [358..359]
 a265(r320): [360..361]
 a266(r107): [360..361] [166..167]
 a267(r319): [166..167]
 a268(r317): [168..169]
 a269(r316): [170..171]
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 134 count 122 (  1.4)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
;;
;; Loop 1
;;  header 69, multiple latches: 68 59 37 44 45 52 55 63
;;  depth 1, outer 0
;;  nodes: 69 68 59 37 44 45 52 55 63 62 61 60 36 35 53 54 50 51 48 49 46 47 42 43 40 41 38 39 56 57 58 64 67 65 66
;; 2 succs { 3 5 }
;; 3 succs { 4 6 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 86 }
;; 11 succs { 10 12 }
;; 12 succs { 10 13 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 10 17 }
;; 17 succs { 18 23 }
;; 18 succs { 10 19 }
;; 19 succs { 10 20 }
;; 20 succs { 10 21 }
;; 21 succs { 10 22 }
;; 22 succs { 27 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 29 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 69 }
;; 35 succs { 70 36 }
;; 36 succs { 70 37 38 53 46 45 56 60 64 }
;; 37 succs { 69 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 69 }
;; 45 succs { 69 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 69 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 69 }
;; 56 succs { 57 59 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 69 }
;; 60 succs { 61 62 }
;; 61 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 69 }
;; 64 succs { 65 68 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 35 70 }
;; 70 succs { 71 77 }
;; 71 succs { 72 77 }
;; 72 succs { 73 77 }
;; 73 succs { 74 75 }
;; 74 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 }
;; 77 succs { 78 82 }
;; 78 succs { 79 80 }
;; 79 succs { 81 }
;; 80 succs { 81 }
;; 81 succs { 82 }
;; 82 succs { 83 84 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 1 }
+++Costs: overall 16178, reg -1898, mem 18076, ld 0, st 0, move 168
+++       move loops 0, new jumps 1


decodeFrame

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12] 13[a13] 14[a14] 15[a15]
;;  ref usage 	r0={22d} r1={1d,107u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,86u} r8={21d} r9={21d} r10={39d,34u} r11={32d,10u} r12={28d,7u} r13={26d,5u} r14={24d,3u} r15={23d,2u} r16={1d,86u} r17={1d,85u} r18={21d} r19={21d} r20={21d} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r42={2d,9u} r43={2d,6u} r44={2d,2u} r45={1d,1u} r46={2d,2u} r47={3d,3u} r48={2d,1u} r49={2d,1u} r50={2d,3u} r51={2d,1u} r52={2d,1u} r54={1d,3u} r55={1d,5u,1e} r57={1d,3u} r58={1d,2u} r60={1d,2u,1e} r65={1d,4u} r66={1d,2u} r67={1d,1u} r68={1d,2u} r69={1d,5u} r72={1d,2u} r73={1d,6u} r74={1d,2u} r79={1d,2u} r81={1d,1u} r83={2d,8u} r85={1d,3u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r95={1d,1u} r96={1d,1u} r98={1d,1u} r101={1d,1u} r103={1d,3u,1e} r104={1d,1u} r105={1d,12u} r107={1d,2u} r109={1d,1u} r110={1d,3u} r111={1d,1u} r116={1d,3u} r118={1d,2u} r128={1d,1u} r130={1d,2u} r131={1d,1u} r135={1d,1u} r136={1d,4u} r137={1d,1u} r139={1d,1u} r140={1d,3u} r145={1d,1u} r147={1d,1u} r148={1d,3u} r154={1d,1u} r155={1d,2u} r156={1d,1u} r158={1d,2u} r159={1d,3u} r161={1d,1u} r162={1d,3u} r164={1d,1u} r165={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r178={1d,1u} r180={1d,2u} r181={1d,3u} r182={1d,2u,1e} r185={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r202={1d,1u} r204={1d,1u} r212={1d,2u} r218={1d,2u} r220={1d,1u} r221={1d,1u} r223={1d,1u} r224={1d,3u} r225={1d,1u} r238={1d,1u} r241={1d,1u} r242={1d,1u,1e} r243={1d,2u} r244={1d,2u} r246={1d,1u} r247={1d,1u} r248={1d,1u,1e} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,2u} r257={1d,1u} r262={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r273={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r280={1d,1u} r281={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r292={1d,2u} r294={1d,1u} r295={1d,1u,1e} r296={1d,1u} r297={1d,2u} r298={1d,2u} r300={1d,2u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,2u} r311={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r319={1d,1u} r320={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,2u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r337={1d,1u} r338={1d,2u} r341={1d,1u} r342={1d,1u,1e} r343={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,2u} r351={1d,1u} r352={1d,1u,1e} r353={1d,1u} r354={1d,1u} r355={1d,1u} r357={1d,1u} r358={1d,1u} r360={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,2u} r384={1d,1u} r385={1d,1u,1e} r386={1d,1u} r387={1d,1u} r388={1d,1u} r390={1d,1u} r391={1d,2u} r392={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,2u} r399={1d,1u} r400={1d,1u,1e} r401={1d,1u} r402={1d,3u} r403={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,3u} r411={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r417={1d,2u} r419={1d,1u} r423={1d,1u} r426={1d,1u} r427={1d,2u} r430={1d,1u} r431={1d,1u,1e} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,2u} r445={1d,2u} r447={1d,1u} r448={1d,1u} r452={1d,3u,1e} r453={1d,1u} r454={1d,2u} r457={1d,2u} r467={1d,1u} r470={1d,1u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,4u} r488={1d,1u} r489={1d,1u,1e} r490={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,4u} r500={1d,1u} r501={1d,1u,1e} r502={1d,1u} r508={1d,1u} r512={1d,1u} r516={1d,1u} r517={1d,1u} r518={9d,20u} r519={1d,1u} r520={1d,1u} 
;;    total ref usage 1761{907d,838u,16e} in 502{481 regular + 21 call} insns.
(note 1 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 54 55 57 58 223 224 225
(note 21 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 21 23 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 23 2 24 2 (var_location:SI d (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
            (const_int 332 [0x14c])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1036 -1
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 223)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1037 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 25 24 26 2 (set:SI (reg/f:SI 224)
        (plus:SI (reg/f:SI 223)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1037 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 26 25 27 2 (set (reg/v:SI 54 [ hdr ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 224)
                    (const_int 76 [0x4c])) [0 MEM[(u1_t *)&LMIC + 332B]+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1037 34 {zero_extendqisi2}
     (nil))
(debug_insn 27 26 29 2 (var_location:QI hdr (subreg:QI (reg/v:SI 54 [ hdr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1037 -1
     (nil))
(note 29 27 884 2 NOTE_INSN_DELETED)
(insn 884 29 30 2 (set (reg:QI 225)
        (const_int -32 [0xffffffffffffffe0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1038 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -32 [0xffffffffffffffe0])
        (nil)))
(insn 30 884 31 2 (set (reg/v:SI 55 [ ftype ])
        (and:SI (reg/v:SI 54 [ hdr ])
            (subreg:SI (reg:QI 225) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1038 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 225)
        (nil)))
(debug_insn 31 30 34 2 (var_location:QI ftype (subreg:QI (reg/v:SI 55 [ ftype ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1038 -1
     (nil))
(insn 34 31 36 2 (set (reg/v:SI 57 [ dlen ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 224)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1039 34 {zero_extendqisi2}
     (nil))
(debug_insn 36 34 39 2 (var_location:SI dlen (reg/v:SI 57 [ dlen ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1039 -1
     (nil))
(insn 39 36 40 2 (set (reg:SI 58 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 224)
                    (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (nil)))
(note 40 39 42 2 NOTE_INSN_DELETED)
(note 42 40 43 2 NOTE_INSN_DELETED)
(jump_insn 43 42 44 2 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 58 [ D.6293 ])
                    (const_int 1 [0x1])
                    (const_int 0 [0]))
                (const_int 0 [0]))
            (label_ref:SI 782)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 782)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              5 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57 58

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57 58
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 58
;; lr  def 	
(note 44 43 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 45 44 46 3 NOTE_INSN_DELETED)
(note 46 45 48 3 NOTE_INSN_DELETED)
(note 48 46 49 3 NOTE_INSN_DELETED)
(jump_insn 49 48 50 3 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 58 [ D.6293 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref:SI 786)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 58 [ D.6293 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 786)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57

;; basic block 4, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(1){ }u28(7){ }u29(16){ }u30(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(note 50 49 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 50 812 4 (set (reg/v/f:SI 47 [ window ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC152") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC151") [flags 0x2]  <var_decl 0x1019721b0 *.LC151>)
        (nil)))
(jump_insn 812 5 813 4 (set (pc)
        (label_ref 51)) 78 {jump}
     (nil)
 -> 51)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57

(barrier 813 812 782)
;; basic block 5, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(1){ }u32(7){ }u33(16){ }u34(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(code_label 782 813 781 5 250 "" [1 uses])
(note 781 782 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 781 814 5 (set (reg/v/f:SI 47 [ window ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC150") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC149") [flags 0x2]  <var_decl 0x101972120 *.LC149>)
        (nil)))
(jump_insn 814 4 815 5 (set (pc)
        (label_ref 51)) 78 {jump}
     (nil)
 -> 51)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57

(barrier 815 814 786)
;; basic block 6, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47
(code_label 786 815 785 6 251 "" [1 uses])
(note 785 786 3 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 3 785 51 6 (set (reg/v/f:SI 47 [ window ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC148") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC147") [flags 0x2]  <var_decl 0x101972090 *.LC147>)
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(1){ }u40(7){ }u41(16){ }u42(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  def 	 238
(code_label 51 3 52 7 208 "" [2 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 53 52 54 7 (var_location:SI window (reg/v/f:SI 47 [ window ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1040 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 238)
        (const_int 11 [0xb])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1041 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 11 [0xb])
        (nil)))
(jump_insn 55 54 56 7 (set (pc)
        (if_then_else (ge (reg:SI 238)
                (reg/v:SI 57 [ dlen ]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1041 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 238)
        (int_list:REG_BR_PROB 2071 (nil)))
 -> 77)
;;  succ:       10 [20.7%] 
;;              8 [79.3%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57

;; basic block 8, loop depth 0, count 0, freq 7929, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [79.3%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(1){ }u47(7){ }u48(16){ }u49(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 54 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 54
;; lr  def 	 50
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 57 56 58 8 NOTE_INSN_DELETED)
(insn 58 57 59 8 (set (reg:SI 50 [ D.6290 ])
        (and:SI (reg/v:SI 54 [ hdr ])
            (const_int 3 [0x3]))) 30 {andsi3}
     (expr_list:REG_DEAD (reg/v:SI 54 [ hdr ])
        (nil)))
(jump_insn 59 58 60 8 (set (pc)
        (if_then_else (ne (reg:SI 50 [ D.6290 ])
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1041 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 77)
;;  succ:       10 [39.0%] 
;;              9 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 50 55 57

;; basic block 9, loop depth 0, count 0, freq 4837, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 [61.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u53(1){ }u54(7){ }u55(16){ }u56(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 50 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 241 242 243 244 246 247 248
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:SI 242)
        (plus:SI (reg/v:SI 55 [ ftype ])
            (const_int -96 [0xffffffffffffffa0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 1 {addsi3}
     (nil))
(insn 62 61 63 9 (set (reg:SI 243)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 63 62 64 9 (set (reg:SI 244)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 64 63 66 9 (set (reg:SI 241)
        (if_then_else:SI (ne (reg:SI 242)
                (const_int 0 [0]))
            (reg:SI 243)
            (reg:SI 244))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_EQUAL (ne:SI (reg:SI 242)
                (const_int 0 [0]))
            (nil))))
(note 66 64 67 9 NOTE_INSN_DELETED)
(insn 67 66 68 9 (set (reg:SI 247)
        (const_int -160 [0xffffffffffffff60])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -160 [0xffffffffffffff60])
        (nil)))
(insn 68 67 71 9 (set (reg:SI 248)
        (plus:SI (reg/v:SI 55 [ ftype ])
            (reg:SI 247))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 55 [ ftype ])
                (const_int -160 [0xffffffffffffff60]))
            (nil))))
(insn 71 68 73 9 (set (reg:SI 246)
        (if_then_else:SI (ne (reg:SI 248)
                (const_int 0 [0]))
            (reg:SI 243)
            (reg:SI 244))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1043 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg:SI 244)
            (expr_list:REG_DEAD (reg:SI 243)
                (expr_list:REG_EQUAL (ne:SI (reg:SI 248)
                        (const_int 0 [0]))
                    (nil))))))
(note 73 71 74 9 NOTE_INSN_DELETED)
(note 74 73 75 9 NOTE_INSN_DELETED)
(note 75 74 76 9 NOTE_INSN_DELETED)
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (eq (and:SI (reg:SI 246)
                    (reg:SI 241))
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1042 62 {*masktrue}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 241)
            (int_list:REG_BR_PROB 6100 (nil))))
 -> 92)
;;  succ:       10 [39.0%]  (FALLTHRU)
;;              11 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 50 55 57

;; basic block 10, loop depth 0, count 0, freq 9781, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7 [20.7%] 
;;              8 [39.0%] 
;;              9 [39.0%]  (FALLTHRU)
;;              11 [62.2%] 
;;              12 [39.0%] 
;;              16 [39.0%] 
;;              18 [39.0%] 
;;              19 [62.2%] 
;;              20 [39.0%] 
;;              21 [62.2%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(1){ }u76(7){ }u77(16){ }u78(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48 253 254 255
(code_label 77 76 78 10 209 ("norx") [9 uses])
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 79 78 80 10 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1051 82 {call_value_internal}
     (nil)
    (nil))
(note 80 79 81 10 NOTE_INSN_DELETED)
(note 81 80 82 10 NOTE_INSN_DELETED)
(insn 82 81 83 10 (set (reg:SI 12 a12)
        (reg/v/f:SI 47 [ window ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1051 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 47 [ window ])
        (nil)))
(insn 83 82 84 10 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1051 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 84 83 85 10 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC157") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1051 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC156") [flags 0x2]  <var_decl 0x101972240 *.LC156>)
        (nil)))
(call_insn 85 84 88 10 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1051 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 88 85 883 10 (set (reg:QI 255)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1053 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 883 88 882 10 (set (reg/f:SI 253)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1053 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 882 883 89 10 (set:SI (reg/f:SI 254)
        (plus:SI (reg/f:SI 253)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1053 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 253)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 89 882 19 10 (set (mem/j/c:QI (plus:SI (reg/f:SI 254)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 255)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1053 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 255)
        (expr_list:REG_DEAD (reg/f:SI 254)
            (nil))))
(insn 19 89 816 10 (set (reg:SI 48 [ D.6289 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1054 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 816 19 817 10 (set (pc)
        (label_ref 770)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1054 78 {jump}
     (nil)
 -> 770)
;;  succ:       86 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48

(barrier 817 816 92)
;; basic block 11, loop depth 0, count 0, freq 2950, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9 [61.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(1){ }u92(7){ }u93(16){ }u94(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 50 55 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 60 65 66 68 69 72 73 74 256 257 262 265 266 267
(code_label 92 817 93 11 210 "" [1 uses])
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg/f:SI 256)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1058 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 95 94 96 11 (set:SI (reg/f:SI 257)
        (plus:SI (reg/f:SI 256)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1058 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 96 95 97 11 (set (reg:SI 65 [ D.6293 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 257)
                    (const_int 81 [0x51])) [0 MEM[(u1_t *)&LMIC + 337B]+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1058 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 257)
        (nil)))
(debug_insn 97 96 98 11 (var_location:SI fct (zero_extend:SI (subreg:QI (reg:SI 65 [ D.6293 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1058 -1
     (nil))
(note 98 97 99 11 NOTE_INSN_DELETED)
(insn 99 98 100 11 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC158") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1059 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 333 [0x14d])))
        (nil)))
(call_insn/i 100 99 101 11 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1059 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 101 100 102 11 (set (reg/v:SI 66 [ addr ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1059 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 102 101 103 11 (var_location:SI addr (reg/v:SI 66 [ addr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1059 -1
     (nil))
(note 103 102 104 11 NOTE_INSN_DELETED)
(insn 104 103 105 11 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC159") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1060 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 338 [0x152])))
        (nil)))
(call_insn/i 105 104 106 11 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf2") [flags 0x3]  <function_decl 0x140efaaf8 os_rlsbf2>) [0 os_rlsbf2 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1060 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 106 105 108 11 (set (reg:SI 68 [ D.6296 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1060 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 108 106 109 11 (var_location:SI seqno (zero_extend:SI (subreg:HI (reg:SI 68 [ D.6296 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1060 -1
     (nil))
(note 109 108 110 11 NOTE_INSN_DELETED)
(insn 110 109 111 11 (set (reg/v:SI 69 [ olen ])
        (and:SI (reg:SI 65 [ D.6293 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1061 30 {andsi3}
     (nil))
(debug_insn 111 110 113 11 (var_location:SI olen (reg/v:SI 69 [ olen ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1061 -1
     (nil))
(note 113 111 881 11 NOTE_INSN_DELETED)
(insn 881 113 114 11 (set (reg:QI 262)
        (const_int 32 [0x20])) 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 32 [0x20])
        (nil)))
(insn 114 881 116 11 (set (reg:SI 60 [ D.6293 ])
        (and:SI (reg:SI 65 [ D.6293 ])
            (subreg:SI (reg:QI 262) 0))) 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 262)
        (nil)))
(insn 116 114 880 11 (set (reg:SI 267)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1062 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 880 116 117 11 (set (reg:SI 266)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1062 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 117 880 119 11 (set (reg:SI 265)
        (if_then_else:SI (ne (reg:SI 60 [ D.6293 ])
                (const_int 0 [0]))
            (reg:SI 266)
            (reg:SI 267))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1062 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 267)
        (expr_list:REG_DEAD (reg:SI 266)
            (expr_list:REG_EQUAL (ne:SI (reg:SI 60 [ D.6293 ])
                    (const_int 0 [0]))
                (nil)))))
(insn 119 117 121 11 (set (reg/v:SI 72 [ ackup ])
        (zero_extend:SI (subreg:QI (reg:SI 265) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1062 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 265)
        (nil)))
(debug_insn 121 119 122 11 (var_location:SI ackup (reg/v:SI 72 [ ackup ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1062 -1
     (nil))
(insn 122 121 123 11 (set (reg/v:SI 42 [ poff ])
        (plus:SI (reg/v:SI 69 [ olen ])
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1063 1 {addsi3}
     (nil))
(debug_insn 123 122 124 11 (var_location:SI poff (reg/v:SI 42 [ poff ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1063 -1
     (nil))
(insn 124 123 125 11 (set (reg/v:SI 73 [ pend ])
        (plus:SI (reg/v:SI 57 [ dlen ])
            (const_int -4 [0xfffffffffffffffc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1064 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 57 [ dlen ])
        (nil)))
(debug_insn 125 124 127 11 (var_location:SI pend (reg/v:SI 73 [ pend ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1064 -1
     (nil))
(insn 127 125 128 11 (set (reg:SI 74 [ D.6297 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 256)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1066 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 256)
        (nil)))
(jump_insn 128 127 129 11 (set (pc)
        (if_then_else (ne (reg/v:SI 66 [ addr ])
                (reg:SI 74 [ D.6297 ]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1066 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 66 [ addr ])
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 77)
;;  succ:       10 [62.2%] 
;;              12 [37.8%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74

;; basic block 12, loop depth 0, count 0, freq 1116, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [37.8%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u128(1){ }u129(7){ }u130(16){ }u131(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 73
;; lr  def 	
(note 129 128 130 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 130 129 131 12 (set (pc)
        (if_then_else (lt (reg/v:SI 73 [ pend ])
                (reg/v:SI 42 [ poff ]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1073 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 77)
;;  succ:       10 [39.0%] 
;;              13 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74

;; basic block 13, loop depth 0, count 0, freq 681, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 [61.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u134(1){ }u135(7){ }u136(16){ }u137(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 73
;; lr  def 	
(note 131 130 132 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 132 131 133 13 (var_location:SI port (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1080 -1
     (nil))
(debug_insn 133 132 134 13 (var_location:SI replayConf (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1081 -1
     (nil))
(jump_insn 134 133 135 13 (set (pc)
        (if_then_else (ge (reg/v:SI 42 [ poff ])
                (reg/v:SI 73 [ pend ]))
            (label_ref:SI 790)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1083 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 790)
;;  succ:       14 [50.0%]  (FALLTHRU)
;;              15 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74

;; basic block 14, loop depth 0, count 0, freq 340, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u140(1){ }u141(7){ }u142(16){ }u143(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 69
;; lr  def 	 42 43 269 270
(note 135 134 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 136 135 137 14 NOTE_INSN_DELETED)
(debug_insn 137 136 138 14 (var_location:SI poff (plus:SI (reg/v:SI 69 [ olen ])
        (const_int 9 [0x9]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 -1
     (nil))
(insn 138 137 139 14 (set (reg/f:SI 269)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC160") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 139 138 140 14 (set (reg/f:SI 270)
        (plus:SI (reg/f:SI 269)
            (reg/v:SI 42 [ poff ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 269)
        (expr_list:REG_DEAD (reg/v:SI 42 [ poff ])
            (nil))))
(insn 140 139 142 14 (set (reg/v:SI 43 [ port ])
        (zero_extend:SI (mem:QI (reg/f:SI 270) [0 *_61+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 270)
        (nil)))
(debug_insn 142 140 7 14 (var_location:SI port (reg/v:SI 43 [ port ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 -1
     (nil))
(insn 7 142 818 14 (set (reg/v:SI 42 [ poff ])
        (plus:SI (reg/v:SI 69 [ olen ])
            (const_int 9 [0x9]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1084 1 {addsi3}
     (nil))
(jump_insn 818 7 819 14 (set (pc)
        (label_ref 143)) 78 {jump}
     (nil)
 -> 143)
;;  succ:       16 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 68 69 72 73 74

(barrier 819 818 790)
;; basic block 15, loop depth 0, count 0, freq 341, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [50.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u151(1){ }u152(7){ }u153(16){ }u154(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 47 50 55 60 65 68 69 72 73 74
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(code_label 790 819 789 15 252 "" [1 uses])
(note 789 790 6 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 6 789 143 15 (set (reg/v:SI 43 [ port ])
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1080 44 {movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 68 69 72 73 74

;; basic block 16, loop depth 0, count 0, freq 681, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u155(1){ }u156(7){ }u157(16){ }u158(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 68 69 72 73 74
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 68 73 74
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 79 81 83 271 273
(code_label 143 6 144 16 212 "" [1 uses])
(note 144 143 145 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 145 144 146 16 (var_location:SI port (reg/v:SI 43 [ port ])) -1
     (nil))
(debug_insn 146 145 147 16 (var_location:SI poff (reg/v:SI 42 [ poff ])) -1
     (nil))
(insn 147 146 148 16 (set (reg/f:SI 271)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 148 147 150 16 (set (reg:SI 79 [ D.6297 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 271)
                (const_int 284 [0x11c])) [0 LMIC.seqnoDn+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 271)
        (nil)))
(insn 150 148 151 16 (set (reg:SI 273)
        (minus:SI (reg:SI 68 [ D.6296 ])
            (reg:SI 79 [ D.6297 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6296 ])
        (nil)))
(insn 151 150 153 16 (set (reg:SI 81 [ D.6296 ])
        (zero_extend:SI (subreg:HI (reg:SI 273) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 153 151 154 16 (set (reg/v:SI 83 [ seqno ])
        (plus:SI (reg:SI 79 [ D.6297 ])
            (reg:SI 81 [ D.6296 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 81 [ D.6296 ])
        (expr_list:REG_DEAD (reg:SI 79 [ D.6297 ])
            (nil))))
(debug_insn 154 153 155 16 (var_location:SI seqno (reg/v:SI 83 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1086 -1
     (nil))
(note 155 154 156 16 NOTE_INSN_DELETED)
(note 156 155 157 16 NOTE_INSN_DELETED)
(insn 157 156 158 16 (set (reg:SI 15 a15)
        (reg/v:SI 73 [ pend ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (nil))
(insn 158 157 159 16 (set (reg:SI 14 a14)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC160") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 159 158 160 16 (set (reg:SI 13 a13)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (nil))
(insn 160 159 161 16 (set (reg:SI 12 a12)
        (reg/v:SI 83 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (nil))
(insn 161 160 162 16 (set (reg:SI 11 a11)
        (reg:SI 74 [ D.6297 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6297 ])
        (nil)))
(insn 162 161 163 16 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC153") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 246 [0xf6])))
        (nil)))
(call_insn 163 162 164 16 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("aes_verifyMic") [flags 0x3]  <function_decl 0x100b50d80 aes_verifyMic>) [0 aes_verifyMic S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 15 a15)
        (expr_list:REG_DEAD (reg:SI 14 a14)
            (expr_list:REG_DEAD (reg:SI 13 a13)
                (expr_list:REG_DEAD (reg:SI 12 a12)
                    (expr_list:REG_DEAD (reg:SI 11 a11)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (expr_list:SI (use (reg:SI 15 a15))
                            (nil))))))))
(note 164 163 165 16 NOTE_INSN_DELETED)
(jump_insn 165 164 166 16 (set (pc)
        (if_then_else (eq (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1088 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 77)
;;  succ:       10 [39.0%] 
;;              17 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83

;; basic block 17, loop depth 0, count 0, freq 415, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 [61.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u182(1){ }u183(7){ }u184(16){ }u185(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  def 	 85 276
(note 166 165 167 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 17 (set (reg/f:SI 276)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1096 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 168 167 169 17 (set (reg:SI 85 [ D.6297 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 276)
                (const_int 284 [0x11c])) [0 LMIC.seqnoDn+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1096 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 276)
        (nil)))
(jump_insn 169 168 170 17 (set (pc)
        (if_then_else (geu (reg/v:SI 83 [ seqno ])
                (reg:SI 85 [ D.6297 ]))
            (label_ref 189)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1096 58 {*ubtrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 189)
;;  succ:       18 [50.0%]  (FALLTHRU)
;;              23 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83 85

;; basic block 18, loop depth 0, count 0, freq 208, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [50.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u189(1){ }u190(7){ }u191(16){ }u192(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83 85
;; lr  def 	
(note 170 169 173 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 173 170 174 18 (set (pc)
        (if_then_else (lt (reg:SI 85 [ D.6297 ])
                (reg/v:SI 83 [ seqno ]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1097 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 77)
;;  succ:       10 [39.0%] 
;;              19 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83 85

;; basic block 19, loop depth 0, count 0, freq 127, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [61.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u195(1){ }u196(7){ }u197(16){ }u198(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83 85
;; lr  def 	 88
(note 174 173 175 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 19 (set (reg:SI 88 [ D.6297 ])
        (plus:SI (reg:SI 85 [ D.6297 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 85 [ D.6297 ])
        (nil)))
(jump_insn 176 175 177 19 (set (pc)
        (if_then_else (ne (reg/v:SI 83 [ seqno ])
                (reg:SI 88 [ D.6297 ]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6297 ])
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 77)
;;  succ:       10 [62.2%] 
;;              20 [37.8%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83

;; basic block 20, loop depth 0, count 0, freq 48, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [37.8%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u202(1){ }u203(7){ }u204(16){ }u205(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 89 277 278
(note 177 176 178 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 20 (set (reg/f:SI 277)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 179 178 180 20 (set:SI (reg/f:SI 278)
        (plus:SI (reg/f:SI 277)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 277)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 180 179 181 20 (set (reg:SI 89 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 278)
                    (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 278)
        (nil)))
(jump_insn 181 180 182 20 (set (pc)
        (if_then_else (eq (reg:SI 89 [ D.6293 ])
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6293 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 77)
;;  succ:       10 [39.0%] 
;;              21 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83

;; basic block 21, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [61.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u209(1){ }u210(7){ }u211(16){ }u212(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 280
(note 182 181 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 182 185 21 (set (reg:SI 280)
        (const_int 160 [0xa0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 160 [0xa0])
        (nil)))
(jump_insn 185 184 188 21 (set (pc)
        (if_then_else (ne (reg/v:SI 55 [ ftype ])
                (reg:SI 280))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1104 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 280)
        (expr_list:REG_DEAD (reg/v:SI 55 [ ftype ])
            (int_list:REG_BR_PROB 6218 (nil))))
 -> 77)
;;  succ:       10 [62.2%] 
;;              22 [37.8%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 60 65 69 72 73 83

;; basic block 22, loop depth 0, count 0, freq 11, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 [37.8%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u215(1){ }u216(7){ }u217(16){ }u218(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(note 188 185 10 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 10 188 820 22 (set (reg/v:SI 44 [ replayConf ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1113 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 820 10 821 22 (set (pc)
        (label_ref 203)) 78 {jump}
     (nil)
 -> 203)
;;  succ:       27 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 65 69 72 73 83

(barrier 821 820 189)
;; basic block 23, loop depth 0, count 0, freq 208, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       17 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u219(1){ }u220(7){ }u221(16){ }u222(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 55 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55 83
;; lr  def 	 90 281 283 517
(code_label 189 821 190 23 213 "" [1 uses])
(note 190 189 191 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 23 (set (reg:SI 517 [orig:90 D.6297 ] [90])
        (plus:SI (reg/v:SI 83 [ seqno ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1122 1 {addsi3}
     (nil))
(insn 192 191 885 23 (set (reg/f:SI 281)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1122 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 885 192 193 23 (set (reg:SI 90 [ D.6297 ])
        (reg:SI 517 [orig:90 D.6297 ] [90])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1122 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 517 [orig:90 D.6297 ] [90])
        (nil)))
(insn 193 885 195 23 (set (mem/j/c:SI (plus:SI (reg/f:SI 281)
                (const_int 284 [0x11c])) [0 LMIC.seqnoDn+0 S4 A32])
        (reg:SI 90 [ D.6297 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1122 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 281)
        (expr_list:REG_DEAD (reg:SI 90 [ D.6297 ])
            (nil))))
(insn 195 193 196 23 (set (reg:SI 283)
        (const_int 160 [0xa0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 160 [0xa0])
        (nil)))
(jump_insn 196 195 197 23 (set (pc)
        (if_then_else (ne (reg/v:SI 55 [ ftype ])
                (reg:SI 283))
            (label_ref:SI 794)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_DEAD (reg/v:SI 55 [ ftype ])
            (int_list:REG_BR_PROB 7200 (nil))))
 -> 794)
;;  succ:       24 [28.0%]  (FALLTHRU)
;;              25 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 60 65 69 72 73 83

;; basic block 24, loop depth 0, count 0, freq 58, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 [28.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u228(1){ }u229(7){ }u230(16){ }u231(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 49
(note 197 196 8 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 8 197 822 24 (set (reg:SI 49 [ D.6290 ])
        (const_int 32 [0x20])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 32 [0x20])
        (nil)))
(jump_insn 822 8 823 24 (set (pc)
        (label_ref 198)) 78 {jump}
     (nil)
 -> 198)
;;  succ:       26 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 49 50 60 65 69 72 73 83

(barrier 823 822 794)
;; basic block 25, loop depth 0, count 0, freq 150, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [72.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u232(1){ }u233(7){ }u234(16){ }u235(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	 49
(code_label 794 823 793 25 253 "" [1 uses])
(note 793 794 9 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 9 793 198 25 (set (reg:SI 49 [ D.6290 ])
        (reg:SI 50 [ D.6290 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 44 {movsi_internal}
     (nil))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 49 50 60 65 69 72 73 83

;; basic block 26, loop depth 0, count 0, freq 208, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [100.0%]  (FALLTHRU)
;;              24 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u237(1){ }u238(7){ }u239(16){ }u240(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 49 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 44 284 285
(code_label 198 9 199 26 215 "" [1 uses])
(note 199 198 200 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 26 (set (reg/f:SI 284)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 201 200 202 26 (set:SI (reg/f:SI 285)
        (plus:SI (reg/f:SI 284)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 284)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 202 201 11 26 (set (mem/j/c:QI (plus:SI (reg/f:SI 285)
                (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32])
        (subreg/s/v:QI (reg:SI 49 [ D.6290 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1125 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 285)
        (expr_list:REG_DEAD (reg:SI 49 [ D.6290 ])
            (nil))))
(insn 11 202 203 26 (set (reg/v:SI 44 [ replayConf ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1081 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 65 69 72 73 83

;; basic block 27, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 [100.0%]  (FALLTHRU)
;;              22 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u244(1){ }u245(7){ }u246(16){ }u247(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 91 286 287
(code_label 203 11 204 27 214 "" [1 uses])
(note 204 203 205 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 205 204 206 27 (var_location:SI replayConf (reg/v:SI 44 [ replayConf ])) -1
     (nil))
(insn 206 205 207 27 (set (reg/f:SI 286)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1128 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 207 206 208 27 (set:SI (reg/f:SI 287)
        (plus:SI (reg/f:SI 286)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1128 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 286)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 208 207 209 27 (set (reg:SI 91 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 287)
                    (const_int 36 [0x24])) [0 LMIC.dnConf+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1128 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 287)
        (nil)))
(jump_insn 209 208 210 27 (set (pc)
        (if_then_else (ne (reg:SI 91 [ D.6293 ])
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1128 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6293 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 216)
;;  succ:       29 [50.0%] 
;;              28 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 65 69 72 73 83

;; basic block 28, loop depth 0, count 0, freq 109, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 [50.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u252(1){ }u253(7){ }u254(16){ }u255(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 65 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 65
;; lr  def 	
(note 210 209 211 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(note 211 210 212 28 NOTE_INSN_DELETED)
(note 212 211 214 28 NOTE_INSN_DELETED)
(note 214 212 215 28 NOTE_INSN_DELETED)
(jump_insn 215 214 216 28 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 65 [ D.6293 ])
                    (const_int 1 [0x1])
                    (const_int 4 [0x4]))
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1128 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6293 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 224)
;;  succ:       29 [50.0%]  (FALLTHRU)
;;              30 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83

;; basic block 29, loop depth 0, count 0, freq 164, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       27 [50.0%] 
;;              28 [50.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u261(1){ }u262(7){ }u263(16){ }u264(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 292 294 295 296
(code_label 216 215 217 29 216 "" [1 uses])
(note 217 216 218 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 221 29 (set (reg/f:SI 292)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1129 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 221 218 879 29 (set (reg:HI 295 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 292)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1129 45 {movhi_internal}
     (nil))
(insn 879 221 222 29 (set (reg:HI 294)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1129 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 16 [0x10])
        (nil)))
(insn 222 879 223 29 (set (reg:SI 296)
        (ior:SI (subreg:SI (reg:HI 295 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 294) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1129 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 295 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 294)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 295 [ LMIC.opmode ]) 0)
                    (const_int 16 [0x10]))
                (nil)))))
(insn 223 222 224 29 (set (mem/j/c:HI (plus:SI (reg/f:SI 292)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 296) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1129 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 296)
        (expr_list:REG_DEAD (reg/f:SI 292)
            (nil))))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83

;; basic block 30, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       28 [50.0%] 
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u271(1){ }u272(7){ }u273(16){ }u274(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 95 297 298 300 305 306
(code_label 224 223 225 30 217 "" [1 uses])
(note 225 224 226 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 30 (set (reg/f:SI 297)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1132 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 227 226 228 30 (set (reg:QI 298)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1132 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 228 227 230 30 (set (mem/j/c:QI (plus:SI (reg/f:SI 297)
                (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16])
        (reg:QI 298)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1132 46 {movqi_internal}
     (nil))
(insn 230 228 232 30 (set:SI (reg/f:SI 300)
        (plus:SI (reg/f:SI 297)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1132 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 297)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 232 230 235 30 (set (mem/j/c:QI (plus:SI (reg/f:SI 300)
                (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16])
        (reg:QI 298)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1132 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 298)
        (nil)))
(insn 235 232 237 30 (set (reg:SI 95 [ D.6301 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 300)
                    (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1133 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 300)
        (nil)))
(insn 237 235 238 30 (set (reg:SI 305 [ D.6301 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 95 [ D.6301 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1133 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ D.6301 ])
        (nil)))
(insn 238 237 239 30 (set (reg:SI 306)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1133 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(jump_insn 239 238 240 30 (set (pc)
        (if_then_else (eq (reg:SI 305 [ D.6301 ])
                (reg:SI 306))
            (label_ref 245)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1133 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 306)
        (expr_list:REG_DEAD (reg:SI 305 [ D.6301 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 245)
;;  succ:       31 [72.0%]  (FALLTHRU)
;;              32 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83

;; basic block 31, loop depth 0, count 0, freq 157, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 [72.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u284(1){ }u285(7){ }u286(16){ }u287(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 307 308 309
(note 240 239 243 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 243 240 878 31 (set (reg:QI 309)
        (const_int -12 [0xfffffffffffffff4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1134 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -12 [0xfffffffffffffff4])
        (nil)))
(insn 878 243 877 31 (set (reg/f:SI 307)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1134 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 877 878 244 31 (set:SI (reg/f:SI 308)
        (plus:SI (reg/f:SI 307)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1134 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 307)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 244 877 245 31 (set (mem/j/c:QI (plus:SI (reg/f:SI 308)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (reg:QI 309)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1134 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 309)
        (expr_list:REG_DEAD (reg/f:SI 308)
            (nil))))
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83

;; basic block 32, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       30 [28.0%] 
;;              31 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u291(1){ }u292(7){ }u293(16){ }u294(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 96 98 103 310 311
(code_label 245 244 246 32 218 "" [1 uses])
(note 246 245 247 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 32 (set (reg/f:SI 310)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 248 247 249 32 (set (reg:SI 96 [ D.6301 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 310)
                    (const_int 12 [0xc])) [0 LMIC.rssi+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 34 {zero_extendqisi2}
     (nil))
(insn 249 248 250 32 (set (reg:SI 311 [ D.6300 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 96 [ D.6301 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.6301 ])
        (nil)))
(insn 250 249 252 32 (set (reg:SI 98 [ D.6300 ])
        (plus:SI (reg:SI 311 [ D.6300 ])
            (const_int -64 [0xffffffffffffffc0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 311 [ D.6300 ])
        (nil)))
(note 252 250 253 32 NOTE_INSN_DELETED)
(insn 253 252 254 32 (set (reg:SI 10 a10)
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 310)
                    (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 310)
        (nil)))
(call_insn/i 254 253 255 32 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("getSensitivity") [flags 0x3]  <function_decl 0x100b28000 getSensitivity>) [0 getSensitivity S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 255 254 256 32 NOTE_INSN_DELETED)
(insn 256 255 257 32 (set (reg/v:SI 103 [ m ])
        (minus:SI (reg:SI 98 [ D.6300 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 98 [ D.6300 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(debug_insn 257 256 258 32 (var_location:SI m (reg/v:SI 103 [ m ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1137 -1
     (nil))
(jump_insn 258 257 259 32 (set (pc)
        (if_then_else (lt (reg/v:SI 103 [ m ])
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 56 {*btrue}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 263)
;;  succ:       33 [73.0%]  (FALLTHRU)
;;              34 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83 103

;; basic block 33, loop depth 0, count 0, freq 160, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [73.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u307(1){ }u308(7){ }u309(16){ }u310(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 69 72 73 83 103
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 103
;; lr  def 	 50 104 313
(note 259 258 260 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 33 (set (reg:SI 313)
        (const_int 254 [0xfe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 254 [0xfe])
        (nil)))
(insn 261 260 262 33 (set (reg:SI 104 [ D.6300 ])
        (smin:SI (reg/v:SI 103 [ m ])
            (reg:SI 313))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 23 {sminsi3}
     (expr_list:REG_DEAD (reg:SI 313)
        (expr_list:REG_DEAD (reg/v:SI 103 [ m ])
            (expr_list:REG_EQUAL (smin:SI (reg/v:SI 103 [ m ])
                    (const_int 254 [0xfe]))
                (nil)))))
(insn 262 261 263 33 (set (reg:SI 50 [ D.6290 ])
        (zero_extend:SI (subreg:QI (reg:SI 104 [ D.6300 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 104 [ D.6300 ])
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83

;; basic block 34, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU)
;;              32 [27.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u315(1){ }u316(7){ }u317(16){ }u318(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 50 60 69 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50 69 83
;; lr  def 	 45 314 315 518 519 520
(code_label 263 262 264 34 219 "" [1 uses])
(note 264 263 265 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 34 (set (reg/f:SI 314)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 266 265 267 34 (set:SI (reg/f:SI 315)
        (plus:SI (reg/f:SI 314)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 314)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 267 266 268 34 (set (mem/j/c:QI (plus:SI (reg/f:SI 315)
                (const_int 40 [0x28])) [0 LMIC.margin+0 S1 A32])
        (subreg/s/v:QI (reg:SI 50 [ D.6290 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1138 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 315)
        (expr_list:REG_DEAD (reg:SI 50 [ D.6290 ])
            (nil))))
(debug_insn 268 267 269 34 (var_location:SI opts (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
            (const_int 340 [0x154])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1140 -1
     (nil))
(debug_insn 269 268 14 34 (var_location:SI oidx (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1141 -1
     (nil))
(insn 14 269 886 34 (set (reg/v:SI 45 [ oidx ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1141 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 886 14 887 34 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (reg/v:SI 45 [ oidx ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 45 [ oidx ])
        (nil)))
(insn 887 886 888 34 (set (reg/v:SI 519 [orig:69 olen ] [69])
        (reg/v:SI 69 [ olen ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 69 [ olen ])
        (nil)))
(insn 888 887 824 34 (set (reg/v:SI 520 [orig:83 seqno ] [83])
        (reg/v:SI 83 [ seqno ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ seqno ])
        (nil)))
(jump_insn 824 888 825 34 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1142 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 825 824 674)
;; basic block 35, loop depth 1, count 0, freq 1381, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       69 [95.5%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u322(1){ }u323(7){ }u324(16){ }u325(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 105 107 316 317 319
(code_label 674 825 272 35 243 "" [1 uses])
(note 272 674 273 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 35 (set (reg:SI 105 [ D.6298 ])
        (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 44 {movsi_internal}
     (nil))
(insn 274 273 275 35 (set (reg/f:SI 316)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 275 274 276 35 (set (reg/f:SI 317)
        (plus:SI (reg/f:SI 316)
            (reg/v:SI 518 [orig:45 oidx ] [45]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 316)
        (nil)))
(insn 276 275 278 35 (set (reg:SI 107 [ D.6293 ])
        (zero_extend:SI (mem:QI (reg/f:SI 317) [0 *_100+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 317)
        (nil)))
(insn 278 276 279 35 (set (reg:SI 319)
        (const_int 18 [0x12])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 18 [0x12])
        (nil)))
(jump_insn 279 278 807 35 (set (pc)
        (if_then_else (ltu (reg:SI 319)
                (reg:SI 107 [ D.6293 ]))
            (label_ref 676)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 319)
        (int_list:REG_BR_PROB 555 (nil)))
 -> 676)
;;  succ:       70 [5.5%] 
;;              36 [94.5%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 107 518 519 520

;; basic block 36, loop depth 1, count 0, freq 1304, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 [94.5%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u332(1){ }u333(7){ }u334(16){ }u335(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 107 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 107
;; lr  def 	 320 322 323
(note 807 279 281 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 281 807 876 36 NOTE_INSN_DELETED)
(insn 876 281 282 36 (set (reg/f:SI 320)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC162") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 44 {movsi_internal}
     (insn_list:REG_LABEL_OPERAND 286 (expr_list:REG_EQUIV (label_ref:SI 286)
            (nil))))
(insn 282 876 283 36 (set (reg/f:SI 322)
        (plus:SI (mult:SI (reg:SI 107 [ D.6293 ])
                (const_int 4 [0x4]))
            (reg/f:SI 320))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 2 {*addx}
     (expr_list:REG_DEAD (reg/f:SI 320)
        (expr_list:REG_DEAD (reg:SI 107 [ D.6293 ])
            (nil))))
(insn 283 282 284 36 (set (reg:SI 323)
        (mem/u/c:SI (reg/f:SI 322) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 322)
        (nil)))
(jump_insn 284 283 285 36 (parallel [
            (set (pc)
                (reg:SI 323))
            (use (label_ref 286))
        ]) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1143 80 {tablejump_internal}
     (expr_list:REG_DEAD (reg:SI 323)
        (nil))
 -> 286)
;;  succ:       70 [5.9%] 
;;              37 [11.8%] 
;;              38 [11.8%] 
;;              53 [11.8%] 
;;              46 [11.8%] 
;;              45 [11.8%] 
;;              56 [11.8%] 
;;              60 [11.8%] 
;;              64 [11.8%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520

(barrier 285 284 286)
;; Insn is not within a basic block
(code_label/s 286 285 287 223 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 287 286 288 (addr_vec:SI [
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 289)
            (label_ref:SI 295)
            (label_ref:SI 473)
            (label_ref:SI 407)
            (label_ref:SI 397)
            (label_ref:SI 506)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 676)
            (label_ref:SI 568)
            (label_ref:SI 593)
        ]))
(barrier 288 287 289)
;; basic block 37, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u341(1){ }u342(7){ }u343(16){ }u344(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 518
(code_label 289 288 290 37 222 "" [1 uses])
(note 290 289 291 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 37 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1147 1 {addsi3}
     (nil))
(debug_insn 292 291 826 37 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1147 -1
     (nil))
(jump_insn 826 292 827 37 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1148 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 827 826 295)
;; basic block 38, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u347(1){ }u348(7){ }u349(16){ }u350(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105 518
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 109 110 111 116 118 324 325 328 329 330 333 334 335 518
(code_label 295 827 296 38 224 "" [1 uses])
(note 296 295 297 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 38 (set (reg:SI 324 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1151 1 {addsi3}
     (nil))
(insn 298 297 299 38 (set (reg/f:SI 325)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1151 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 299 298 300 38 (set (reg/f:SI 109 [ D.6299 ])
        (plus:SI (reg:SI 324 [ D.6298 ])
            (reg/f:SI 325))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1151 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 324 [ D.6298 ])
        (nil)))
(insn 300 299 301 38 (set (reg/v:SI 110 [ p1 ])
        (zero_extend:SI (mem:QI (reg/f:SI 109 [ D.6299 ]) [0 *_104+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1151 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 109 [ D.6299 ])
        (nil)))
(debug_insn 301 300 302 38 (var_location:QI p1 (subreg:QI (reg/v:SI 110 [ p1 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1151 -1
     (nil))
(insn 302 301 304 38 (set (reg:SI 111 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1152 1 {addsi3}
     (nil))
(note 304 302 305 38 NOTE_INSN_DELETED)
(insn 305 304 306 38 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 325)
            (reg:SI 111 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1152 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 325)
        (expr_list:REG_DEAD (reg:SI 111 [ D.6298 ])
            (nil))))
(call_insn/i 306 305 307 38 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf2") [flags 0x3]  <function_decl 0x140efaaf8 os_rlsbf2>) [0 os_rlsbf2 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1152 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 307 306 309 38 NOTE_INSN_DELETED)
(debug_insn 309 307 310 38 (var_location:HI chmap (reg:HI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1152 -1
     (nil))
(insn 310 309 311 38 (set (reg/f:SI 328)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC163") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1153 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 344 [0x158])))
        (nil)))
(insn 311 310 312 38 (set (reg/f:SI 329)
        (plus:SI (reg/f:SI 328)
            (reg:SI 105 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1153 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 328)
        (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
            (nil))))
(insn 312 311 314 38 (set (reg:SI 116 [ D.6293 ])
        (zero_extend:SI (mem:QI (reg/f:SI 329) [0 *_110+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1153 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 329)
        (nil)))
(note 314 312 315 38 NOTE_INSN_DELETED)
(note 315 314 316 38 NOTE_INSN_DELETED)
(debug_insn 316 315 317 38 (var_location:QI chpage (subreg:QI (and:SI (reg:SI 116 [ D.6293 ])
            (const_int -16 [0xfffffffffffffff0])) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1153 -1
     (nil))
(note 317 316 318 38 NOTE_INSN_DELETED)
(insn 318 317 319 38 (set (reg/v:SI 118 [ uprpt ])
        (and:SI (reg:SI 116 [ D.6293 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1154 30 {andsi3}
     (nil))
(debug_insn 319 318 320 38 (var_location:QI uprpt (subreg:QI (reg/v:SI 118 [ uprpt ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1154 -1
     (nil))
(insn 320 319 321 38 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1155 1 {addsi3}
     (nil))
(debug_insn 321 320 324 38 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1155 -1
     (nil))
(insn 324 321 875 38 (set (reg:QI 335)
        (const_int -121 [0xffffffffffffff87])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1157 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -121 [0xffffffffffffff87])
        (nil)))
(insn 875 324 874 38 (set (reg/f:SI 333)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1157 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 874 875 325 38 (set:SI (reg/f:SI 334)
        (plus:SI (reg/f:SI 333)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1157 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 333)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 325 874 326 38 (set (mem/j/c:QI (plus:SI (reg/f:SI 334)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])
        (reg:QI 335)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1157 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 335)
        (expr_list:REG_DEAD (reg/f:SI 334)
            (nil))))
(insn 326 325 873 38 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1159 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 873 326 327 38 (set (reg:QI 330)
        (const_int -16 [0xfffffffffffffff0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1159 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -16 [0xfffffffffffffff0])
        (nil)))
(insn 327 873 328 38 (set (reg:SI 10 a10)
        (and:SI (reg:SI 116 [ D.6293 ])
            (subreg:SI (reg:QI 330) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1159 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 330)
        (expr_list:REG_DEAD (reg:SI 116 [ D.6293 ])
            (nil))))
(call_insn 328 327 329 38 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("mapChannels") [flags 0x3]  <function_decl 0x100b7c6c0 mapChannels>) [0 mapChannels S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1159 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 329 328 331 38 NOTE_INSN_DELETED)
(jump_insn 331 329 332 38 (set (pc)
        (if_then_else (ne (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1159 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 341)
;;  succ:       39 [50.0%]  (FALLTHRU)
;;              40 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 518 519 520

;; basic block 39, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 [50.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u387(1){ }u388(7){ }u389(16){ }u390(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 337 338 341 342 343
(note 332 331 333 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 39 (set (reg/f:SI 337)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 334 333 338 39 (set:SI (reg/f:SI 338)
        (plus:SI (reg/f:SI 337)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 337)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 338 334 872 39 (set (reg:QI 342 [ LMIC.ladrAns ])
        (mem/j/c:QI (plus:SI (reg/f:SI 338)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 46 {movqi_internal}
     (nil))
(insn 872 338 339 39 (set (reg:QI 341)
        (const_int -2 [0xfffffffffffffffe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -2 [0xfffffffffffffffe])
        (nil)))
(insn 339 872 340 39 (set (reg:SI 343)
        (and:SI (subreg:SI (reg:QI 342 [ LMIC.ladrAns ]) 0)
            (subreg:SI (reg:QI 341) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 342 [ LMIC.ladrAns ])
        (expr_list:REG_DEAD (reg:QI 341)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:QI 342 [ LMIC.ladrAns ]) 0)
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 340 339 341 39 (set (mem/j/c:QI (plus:SI (reg/f:SI 338)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])
        (subreg:QI (reg:SI 343) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1160 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 343)
        (expr_list:REG_DEAD (reg/f:SI 338)
            (nil))))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 518 519 520

;; basic block 40, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       38 [50.0%] 
;;              39 [100.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u398(1){ }u399(7){ }u400(16){ }u401(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 110
;; lr  def 	 131 139 158 180 345 346
(code_label 341 340 342 40 232 "" [1 uses])
(note 342 341 343 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(note 343 342 344 40 NOTE_INSN_DELETED)
(insn 344 343 345 40 (set (reg:SI 180 [ D.6300 ])
        (lshiftrt:SI (reg/v:SI 110 [ p1 ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1161 53 {lshrsi3}
     (nil))
(debug_insn 345 344 346 40 (var_location:QI dr (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1161 -1
     (nil))
(debug_insn 346 345 348 40 (var_location:QI dr (clobber (const_int 0 [0]))) -1
     (nil))
(insn 348 346 350 40 (set (reg:SI 158 [ D.6300 ])
        (plus:SI (reg:SI 180 [ D.6300 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 1 {addsi3}
     (nil))
(debug_insn 350 348 351 40 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(debug_insn 351 350 352 40 (var_location:SI index (reg:SI 158 [ D.6300 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(insn 352 351 353 40 (set (reg/f:SI 345)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC164") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 353 352 354 40 (set (reg/f:SI 139 [ D.6303 ])
        (plus:SI (reg:SI 158 [ D.6300 ])
            (reg/f:SI 345))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 345)
        (expr_list:REG_DEAD (reg:SI 158 [ D.6300 ])
            (nil))))
(insn 354 353 355 40 (set (reg:SI 131 [ D.6290 ])
        (zero_extend:SI (mem:QI (reg/f:SI 139 [ D.6303 ]) [0 *_144+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 139 [ D.6303 ])
        (nil)))
(insn 355 354 356 40 (set (reg:SI 346)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1162 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 356 355 357 40 (set (pc)
        (if_then_else (ne (reg:SI 131 [ D.6290 ])
                (reg:SI 346))
            (label_ref 366)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1162 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 346)
        (expr_list:REG_DEAD (reg:SI 131 [ D.6290 ])
            (int_list:REG_BR_PROB 7200 (nil))))
 -> 366)
;;  succ:       41 [28.0%]  (FALLTHRU)
;;              42 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520

;; basic block 41, loop depth 1, count 0, freq 43, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 [28.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u411(1){ }u412(7){ }u413(16){ }u414(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 347 348 351 352 353
(note 357 356 358 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 41 (set (reg/f:SI 347)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 359 358 363 41 (set:SI (reg/f:SI 348)
        (plus:SI (reg/f:SI 347)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 347)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 363 359 871 41 (set (reg:QI 352 [ LMIC.ladrAns ])
        (mem/j/c:QI (plus:SI (reg/f:SI 348)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 46 {movqi_internal}
     (nil))
(insn 871 363 364 41 (set (reg:QI 351)
        (const_int -3 [0xfffffffffffffffd])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -3 [0xfffffffffffffffd])
        (nil)))
(insn 364 871 365 41 (set (reg:SI 353)
        (and:SI (subreg:SI (reg:QI 352 [ LMIC.ladrAns ]) 0)
            (subreg:SI (reg:QI 351) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 352 [ LMIC.ladrAns ])
        (expr_list:REG_DEAD (reg:QI 351)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:QI 352 [ LMIC.ladrAns ]) 0)
                    (const_int -3 [0xfffffffffffffffd]))
                (nil)))))
(insn 365 364 366 41 (set (mem/j/c:QI (plus:SI (reg/f:SI 348)
                (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8])
        (subreg:QI (reg:SI 353) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1163 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 353)
        (expr_list:REG_DEAD (reg/f:SI 348)
            (nil))))
;;  succ:       42 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520

;; basic block 42, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       40 [72.0%] 
;;              41 [100.0%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u422(1){ }u423(7){ }u424(16){ }u425(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 128 354 355 357
(code_label 366 365 367 42 233 "" [1 uses])
(note 367 366 368 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 42 (set (reg/f:SI 354)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1169 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 369 368 370 42 (set:SI (reg/f:SI 355)
        (plus:SI (reg/f:SI 354)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1169 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 354)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 370 369 371 42 (set (reg:SI 128 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 355)
                    (const_int 41 [0x29])) [0 LMIC.ladrAns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1169 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 355)
        (nil)))
(note 371 370 372 42 NOTE_INSN_DELETED)
(insn 372 371 373 42 (set (reg:SI 357)
        (and:SI (reg:SI 128 [ D.6293 ])
            (const_int 127 [0x7f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1169 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 128 [ D.6293 ])
        (nil)))
(jump_insn 373 372 374 42 (set (pc)
        (if_then_else (ne (reg:SI 357)
                (const_int 7 [0x7]))
            (label_ref 389)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1169 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 357)
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 389)
;;  succ:       43 [13.7%]  (FALLTHRU)
;;              44 [86.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520

;; basic block 43, loop depth 1, count 0, freq 21, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 [13.7%]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u431(1){ }u432(7){ }u433(16){ }u434(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 110 118 180 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 110 118 180
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 67 101 130 358 360
(note 374 373 375 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 43 (set (reg/f:SI 358)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1171 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 376 375 377 43 (set (mem/j/c:QI (plus:SI (reg/f:SI 358)
                (const_int 174 [0xae])) [0 LMIC.upRepeat+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 118 [ uprpt ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1171 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 358)
        (expr_list:REG_DEAD (reg/v:SI 118 [ uprpt ])
            (nil))))
(note 377 376 378 43 NOTE_INSN_DELETED)
(insn 378 377 379 43 (set (reg:SI 130 [ D.6297 ])
        (and:SI (reg/v:SI 110 [ p1 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 30 {andsi3}
     (expr_list:REG_DEAD (reg/v:SI 110 [ p1 ])
        (nil)))
(debug_insn 379 378 380 43 (var_location:SI table (symbol_ref:SI ("constant_table_TXPOWLEVELS") [flags 0x2]  <var_decl 0x140ed9e10 constant_table_TXPOWLEVELS>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 -1
     (nil))
(debug_insn 380 379 381 43 (var_location:SI index (reg:SI 130 [ D.6297 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 -1
     (nil))
(insn 381 380 382 43 (set (reg/f:SI 360)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC165") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:253 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_TXPOWLEVELS") [flags 0x2]  <var_decl 0x140ed9e10 constant_table_TXPOWLEVELS>)
        (nil)))
(insn 382 381 383 43 (set (reg/f:SI 101 [ D.6302 ])
        (plus:SI (reg:SI 130 [ D.6297 ])
            (reg/f:SI 360))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:253 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 360)
        (expr_list:REG_DEAD (reg:SI 130 [ D.6297 ])
            (nil))))
(insn 383 382 384 43 (set (reg:SI 67 [ D.6295 ])
        (zero_extend:SI (mem:QI (reg/f:SI 101 [ D.6302 ]) [0 *_93+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:253 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 101 [ D.6302 ])
        (nil)))
(note 384 383 385 43 NOTE_INSN_DELETED)
(insn 385 384 386 43 (set (reg:SI 12 a12)
        (sign_extend:SI (subreg:QI (reg:SI 67 [ D.6295 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6295 ])
        (nil)))
(insn 386 385 387 43 (set (reg:SI 11 a11)
        (reg:SI 180 [ D.6300 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 180 [ D.6300 ])
        (nil)))
(insn 387 386 388 43 (set (reg:SI 10 a10)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 44 {movsi_internal}
     (nil))
(call_insn 388 387 389 43 (call (mem:SI (symbol_ref:SI ("setDrTxpow") [flags 0x3]  <function_decl 0x100b7c000 setDrTxpow>) [0 setDrTxpow S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1172 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 44, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       42 [86.3%] 
;;              43 [100.0%]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u450(1){ }u451(7){ }u452(16){ }u453(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 362 363 364
(code_label 389 388 390 44 234 "" [1 uses])
(note 390 389 393 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 393 390 870 44 (set (reg:QI 364)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1174 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 870 393 869 44 (set (reg/f:SI 362)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1174 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 869 870 394 44 (set:SI (reg/f:SI 363)
        (plus:SI (reg/f:SI 362)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1174 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 362)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 394 869 828 44 (set (mem/j/c:QI (plus:SI (reg/f:SI 363)
                (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16])
        (reg:QI 364)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1174 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 364)
        (expr_list:REG_DEAD (reg/f:SI 363)
            (nil))))
(jump_insn 828 394 829 44 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1175 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 829 828 397)
;; basic block 45, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u457(1){ }u458(7){ }u459(16){ }u460(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 365 366 367 518
(code_label 397 829 398 45 227 "" [1 uses])
(note 398 397 401 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 401 398 868 45 (set (reg:QI 367)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1178 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 868 401 867 45 (set (reg/f:SI 365)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1178 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 867 868 402 45 (set:SI (reg/f:SI 366)
        (plus:SI (reg/f:SI 365)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1178 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 365)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 402 867 403 45 (set (mem/j/c:QI (plus:SI (reg/f:SI 366)
                (const_int 42 [0x2a])) [0 LMIC.devsAns+0 S1 A16])
        (reg:QI 367)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1178 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 367)
        (expr_list:REG_DEAD (reg/f:SI 366)
            (nil))))
(insn 403 402 404 45 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1179 1 {addsi3}
     (nil))
(debug_insn 404 403 830 45 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1179 -1
     (nil))
(jump_insn 830 404 831 45 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1180 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 831 830 407)
;; basic block 46, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u466(1){ }u467(7){ }u468(16){ }u469(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 135 136 137 140 218 220 221 368 369 371 372 373 374 375 376
(code_label 407 831 408 46 226 "" [1 uses])
(note 408 407 409 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 46 (set (reg/f:SI 368)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC166") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1184 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 341 [0x155])))
        (nil)))
(insn 410 409 411 46 (set (reg/f:SI 369)
        (plus:SI (reg:SI 105 [ D.6298 ])
            (reg/f:SI 368))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1184 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 368)
        (nil)))
(insn 411 410 412 46 (set (reg:SI 135 [ D.6293 ])
        (zero_extend:SI (mem:QI (reg/f:SI 369) [0 *_139+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1184 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 369)
        (nil)))
(note 412 411 413 46 NOTE_INSN_DELETED)
(insn 413 412 414 46 (set (reg/v:SI 136 [ dr ])
        (and:SI (reg:SI 135 [ D.6293 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1184 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 135 [ D.6293 ])
        (nil)))
(debug_insn 414 413 415 46 (var_location:QI dr (subreg:QI (reg/v:SI 136 [ dr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1184 -1
     (nil))
(insn 415 414 417 46 (set (reg:SI 137 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
        (nil)))
(note 417 415 866 46 NOTE_INSN_DELETED)
(insn 866 417 418 46 (set (reg/f:SI 371)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 418 866 419 46 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 371)
            (reg:SI 137 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 371)
        (expr_list:REG_DEAD (reg:SI 137 [ D.6298 ])
            (nil))))
(call_insn/i 419 418 420 46 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("convFreq") [flags 0x3]  <function_decl 0x100b7c5e8 convFreq>) [0 convFreq S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 420 419 421 46 (set (reg/v:SI 140 [ freq ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 421 420 424 46 (var_location:SI freq (reg/v:SI 140 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1185 -1
     (nil))
(insn 424 421 865 46 (set (reg:QI 374)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1186 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(insn 865 424 864 46 (set (reg/f:SI 372)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1186 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 864 865 425 46 (set:SI (reg/f:SI 373)
        (plus:SI (reg/f:SI 372)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1186 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 372)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 425 864 426 46 (set (mem/j/c:QI (plus:SI (reg/f:SI 373)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])
        (reg:QI 374)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1186 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 374)
        (expr_list:REG_DEAD (reg/f:SI 373)
            (nil))))
(debug_insn 426 425 427 46 (var_location:QI dr (subreg:QI (reg/v:SI 136 [ dr ]) 0)) -1
     (nil))
(insn 427 426 429 46 (set (reg:SI 218 [ D.6300 ])
        (plus:SI (reg/v:SI 136 [ dr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 1 {addsi3}
     (nil))
(debug_insn 429 427 430 46 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(debug_insn 430 429 431 46 (var_location:SI index (reg:SI 218 [ D.6300 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:372 -1
     (nil))
(insn 431 430 432 46 (set (reg/f:SI 375)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC164") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 432 431 433 46 (set (reg/f:SI 220 [ D.6303 ])
        (plus:SI (reg:SI 218 [ D.6300 ])
            (reg/f:SI 375))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 375)
        (expr_list:REG_DEAD (reg:SI 218 [ D.6300 ])
            (nil))))
(insn 433 432 434 46 (set (reg:SI 221 [ D.6290 ])
        (zero_extend:SI (mem:QI (reg/f:SI 220 [ D.6303 ]) [0 *_264+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 220 [ D.6303 ])
        (nil)))
(insn 434 433 435 46 (set (reg:SI 376)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1187 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 435 434 436 46 (set (pc)
        (if_then_else (eq (reg:SI 221 [ D.6290 ])
                (reg:SI 376))
            (label_ref 441)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1187 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 376)
        (expr_list:REG_DEAD (reg:SI 221 [ D.6290 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 441)
;;  succ:       47 [72.0%]  (FALLTHRU)
;;              48 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520

;; basic block 47, loop depth 1, count 0, freq 110, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 [72.0%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u495(1){ }u496(7){ }u497(16){ }u498(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 377 378 379
(note 436 435 439 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 439 436 863 47 (set (reg:QI 379)
        (const_int -126 [0xffffffffffffff82])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1188 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -126 [0xffffffffffffff82])
        (nil)))
(insn 863 439 862 47 (set (reg/f:SI 377)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1188 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 862 863 440 47 (set:SI (reg/f:SI 378)
        (plus:SI (reg/f:SI 377)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1188 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 377)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 440 862 441 47 (set (mem/j/c:QI (plus:SI (reg/f:SI 378)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])
        (reg:QI 379)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1188 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 379)
        (expr_list:REG_DEAD (reg/f:SI 378)
            (nil))))
;;  succ:       48 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520

;; basic block 48, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 47, next block 49, flags: (RTL)
;;  pred:       46 [28.0%] 
;;              47 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u502(1){ }u503(7){ }u504(16){ }u505(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 140
;; lr  def 	
(code_label 441 440 442 48 235 "" [1 uses])
(note 442 441 443 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(jump_insn 443 442 444 48 (set (pc)
        (if_then_else (eq (reg/v:SI 140 [ freq ])
                (const_int 0 [0]))
            (label_ref 453)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1189 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 453)
;;  succ:       49 [50.0%]  (FALLTHRU)
;;              50 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520

;; basic block 49, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       48 [50.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u507(1){ }u508(7){ }u509(16){ }u510(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 380 381 384 385 386
(note 444 443 445 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 49 (set (reg/f:SI 380)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 446 445 450 49 (set:SI (reg/f:SI 381)
        (plus:SI (reg/f:SI 380)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 380)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 450 446 861 49 (set (reg:QI 385 [ LMIC.dn2Ans ])
        (mem/j/c:QI (plus:SI (reg/f:SI 381)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 46 {movqi_internal}
     (nil))
(insn 861 450 451 49 (set (reg:QI 384)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 451 861 452 49 (set (reg:SI 386)
        (ior:SI (subreg:SI (reg:QI 385 [ LMIC.dn2Ans ]) 0)
            (subreg:SI (reg:QI 384) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 385 [ LMIC.dn2Ans ])
        (expr_list:REG_DEAD (reg:QI 384)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:QI 385 [ LMIC.dn2Ans ]) 0)
                    (const_int 1 [0x1]))
                (nil)))))
(insn 452 451 453 49 (set (mem/j/c:QI (plus:SI (reg/f:SI 381)
                (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32])
        (subreg:QI (reg:SI 386) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1190 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 386)
        (expr_list:REG_DEAD (reg/f:SI 381)
            (nil))))
;;  succ:       50 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520

;; basic block 50, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 49, next block 51, flags: (RTL)
;;  pred:       48 [50.0%] 
;;              49 [100.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u518(1){ }u519(7){ }u520(16){ }u521(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 145 387 388 390
(code_label 453 452 454 50 236 "" [1 uses])
(note 454 453 455 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 50 (set (reg/f:SI 387)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1191 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 456 455 457 50 (set:SI (reg/f:SI 388)
        (plus:SI (reg/f:SI 387)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1191 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 387)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 457 456 459 50 (set (reg:SI 145 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 388)
                    (const_int 52 [0x34])) [0 LMIC.dn2Ans+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1191 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 388)
        (nil)))
(insn 459 457 460 50 (set (reg:SI 390)
        (const_int 131 [0x83])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1191 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 131 [0x83])
        (nil)))
(jump_insn 460 459 461 50 (set (pc)
        (if_then_else (ne (reg:SI 145 [ D.6293 ])
                (reg:SI 390))
            (label_ref 467)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1191 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 390)
        (expr_list:REG_DEAD (reg:SI 145 [ D.6293 ])
            (int_list:REG_BR_PROB 7200 (nil))))
 -> 467)
;;  succ:       51 [28.0%]  (FALLTHRU)
;;              52 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520

;; basic block 51, loop depth 1, count 0, freq 43, maybe hot
;;  prev block 50, next block 52, flags: (RTL)
;;  pred:       50 [28.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u526(1){ }u527(7){ }u528(16){ }u529(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 136 140 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 136 140
;; lr  def 	 391 392
(note 461 460 462 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 51 (set (reg/f:SI 391)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1192 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 463 462 464 51 (set:SI (reg/f:SI 392)
        (plus:SI (reg/f:SI 391)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1192 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 464 463 466 51 (set (mem/j/c:QI (plus:SI (reg/f:SI 392)
                (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 136 [ dr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1192 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 392)
        (expr_list:REG_DEAD (reg/v:SI 136 [ dr ])
            (nil))))
(insn 466 464 467 51 (set (mem/j/c:SI (plus:SI (reg/f:SI 391)
                (const_int 304 [0x130])) [0 LMIC.dn2Freq+0 S4 A32])
        (reg/v:SI 140 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1193 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 391)
        (expr_list:REG_DEAD (reg/v:SI 140 [ freq ])
            (nil))))
;;  succ:       52 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 52, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       50 [72.0%] 
;;              51 [100.0%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u535(1){ }u536(7){ }u537(16){ }u538(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 518
(code_label 467 466 468 52 237 "" [1 uses])
(note 468 467 469 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 52 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1198 1 {addsi3}
     (nil))
(debug_insn 470 469 832 52 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1198 -1
     (nil))
(jump_insn 832 470 833 52 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1199 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 833 832 473)
;; basic block 53, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       36 [11.8%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u541(1){ }u542(7){ }u543(16){ }u544(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105
;; lr  def 	 147 148 394 395 396
(code_label 473 833 474 53 225 "" [1 uses])
(note 474 473 475 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 53 (set (reg:SI 394 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1203 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
        (nil)))
(insn 476 475 477 53 (set (reg/f:SI 395)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1203 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 477 476 478 53 (set (reg/f:SI 147 [ D.6299 ])
        (plus:SI (reg:SI 394 [ D.6298 ])
            (reg/f:SI 395))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1203 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 395)
        (expr_list:REG_DEAD (reg:SI 394 [ D.6298 ])
            (nil))))
(insn 478 477 479 53 (set (reg/v:SI 148 [ cap ])
        (zero_extend:SI (mem:QI (reg/f:SI 147 [ D.6299 ]) [0 *_158+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1203 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 147 [ D.6299 ])
        (nil)))
(debug_insn 479 478 480 53 (var_location:QI cap (subreg:QI (reg/v:SI 148 [ cap ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1203 -1
     (nil))
(insn 480 479 481 53 (set (reg:SI 396)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1205 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 481 480 482 53 (set (pc)
        (if_then_else (ne (reg/v:SI 148 [ cap ])
                (reg:SI 396))
            (label_ref 489)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1205 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 396)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 489)
;;  succ:       54 [28.0%]  (FALLTHRU)
;;              55 [72.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 148 518 519 520

;; basic block 54, loop depth 1, count 0, freq 43, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 [28.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u552(1){ }u553(7){ }u554(16){ }u555(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 148 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 397 399 400 401
(note 482 481 483 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 486 54 (set (reg/f:SI 397)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1206 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 486 483 860 54 (set (reg:HI 400 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 397)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1206 45 {movhi_internal}
     (nil))
(insn 860 486 487 54 (set (reg:HI 399)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1206 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(insn 487 860 488 54 (set (reg:SI 401)
        (ior:SI (subreg:SI (reg:HI 400 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 399) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1206 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 400 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 399)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 400 [ LMIC.opmode ]) 0)
                    (const_int 64 [0x40]))
                (nil)))))
(insn 488 487 489 54 (set (mem/j/c:HI (plus:SI (reg/f:SI 397)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 401) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1206 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 401)
        (expr_list:REG_DEAD (reg/f:SI 397)
            (nil))))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 148 518 519 520

;; basic block 55, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       53 [72.0%] 
;;              54 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u562(1){ }u563(7){ }u564(16){ }u565(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 148 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 148 518
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 402 403 406 407 518
(code_label 489 488 490 55 238 "" [1 uses])
(note 490 489 491 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 55 (set (reg/f:SI 402)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1207 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 492 491 493 55 (set (reg:SI 403)
        (and:SI (reg/v:SI 148 [ cap ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1207 30 {andsi3}
     (expr_list:REG_DEAD (reg/v:SI 148 [ cap ])
        (nil)))
(insn 493 492 494 55 (set (mem/j/c:QI (plus:SI (reg/f:SI 402)
                (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8])
        (subreg:QI (reg:SI 403) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1207 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 403)
        (nil)))
(call_insn 494 493 495 55 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1208 82 {call_value_internal}
     (nil)
    (nil))
(note 495 494 497 55 NOTE_INSN_DELETED)
(insn 497 495 499 55 (set (mem/j/c:SI (plus:SI (reg/f:SI 402)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1208 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 499 497 500 55 (set:SI (reg/f:SI 406)
        (plus:SI (reg/f:SI 402)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1210 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 402)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 500 499 501 55 (set (reg:QI 407)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1210 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 501 500 502 55 (set (mem/j/c:QI (plus:SI (reg/f:SI 406)
                (const_int 45 [0x2d])) [0 LMIC.dutyCapAns+0 S1 A8])
        (reg:QI 407)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1210 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 407)
        (expr_list:REG_DEAD (reg/f:SI 406)
            (nil))))
(insn 502 501 503 55 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1211 1 {addsi3}
     (nil))
(debug_insn 503 502 834 55 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1211 -1
     (nil))
(jump_insn 834 503 835 55 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1213 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 835 834 506)
;; basic block 56, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u578(1){ }u579(7){ }u580(16){ }u581(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 154 155 156 159 161 162 408 409 411 413 414 415
(code_label 506 835 507 56 228 "" [1 uses])
(note 507 506 508 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 56 (set (reg:SI 408 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1217 1 {addsi3}
     (nil))
(insn 509 508 510 56 (set (reg/f:SI 409)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1217 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 510 509 511 56 (set (reg/f:SI 154 [ D.6299 ])
        (plus:SI (reg:SI 408 [ D.6298 ])
            (reg/f:SI 409))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1217 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 408 [ D.6298 ])
        (nil)))
(insn 511 510 512 56 (set (reg/v:SI 155 [ chidx ])
        (zero_extend:SI (mem:QI (reg/f:SI 154 [ D.6299 ]) [0 *_171+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1217 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 154 [ D.6299 ])
        (nil)))
(debug_insn 512 511 513 56 (var_location:QI chidx (subreg:QI (reg/v:SI 155 [ chidx ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1217 -1
     (nil))
(insn 513 512 515 56 (set (reg:SI 156 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 2 [0x2]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1218 1 {addsi3}
     (nil))
(note 515 513 516 56 NOTE_INSN_DELETED)
(insn 516 515 517 56 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 409)
            (reg:SI 156 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1218 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 156 [ D.6298 ])
        (nil)))
(call_insn/i 517 516 518 56 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("convFreq") [flags 0x3]  <function_decl 0x100b7c5e8 convFreq>) [0 convFreq S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1218 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 518 517 519 56 (set (reg/v:SI 159 [ freq ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1218 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 519 518 520 56 (var_location:SI freq (reg/v:SI 159 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1218 -1
     (nil))
(insn 520 519 522 56 (set (reg:SI 411 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1219 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
        (nil)))
(insn 522 520 523 56 (set (reg/f:SI 161 [ D.6299 ])
        (plus:SI (reg:SI 411 [ D.6298 ])
            (reg/f:SI 409))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1219 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 411 [ D.6298 ])
        (expr_list:REG_DEAD (reg/f:SI 409)
            (nil))))
(insn 523 522 524 56 (set (reg/v:SI 162 [ drs ])
        (zero_extend:SI (mem:QI (reg/f:SI 161 [ D.6299 ]) [0 *_178+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1219 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 161 [ D.6299 ])
        (nil)))
(debug_insn 524 523 527 56 (var_location:QI drs (subreg:QI (reg/v:SI 162 [ drs ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1219 -1
     (nil))
(insn 527 524 859 56 (set (reg:QI 415)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1220 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(insn 859 527 858 56 (set (reg/f:SI 413)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1220 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 858 859 528 56 (set:SI (reg/f:SI 414)
        (plus:SI (reg/f:SI 413)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1220 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 413)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 528 858 529 56 (set (mem/j/c:QI (plus:SI (reg/f:SI 414)
                (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16])
        (reg:QI 415)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1220 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 415)
        (expr_list:REG_DEAD (reg/f:SI 414)
            (nil))))
(jump_insn 529 528 530 56 (set (pc)
        (if_then_else (eq (reg/v:SI 159 [ freq ])
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 56 {*btrue}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 562)
;;  succ:       57 [29.0%]  (FALLTHRU)
;;              59 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 155 159 162 518 519 520

;; basic block 57, loop depth 1, count 0, freq 44, maybe hot
;;  prev block 56, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56 [29.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u604(1){ }u605(7){ }u606(16){ }u607(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 155 159 162 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 155 159 162
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 164 165 168 169 170 417 419 423
(note 530 529 531 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(note 531 530 532 57 NOTE_INSN_DELETED)
(insn 532 531 533 57 (set (reg:SI 164 [ D.6300 ])
        (and:SI (reg/v:SI 162 [ drs ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 30 {andsi3}
     (nil))
(insn 533 532 534 57 (set (reg:SI 417)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC167") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 65535 [0xffff])
        (nil)))
(insn 534 533 535 57 (set (reg:SI 165 [ D.6300 ])
        (ashift:SI (reg:SI 417)
            (reg:SI 164 [ D.6300 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 164 [ D.6300 ])
        (nil)))
(note 535 534 536 57 NOTE_INSN_DELETED)
(insn 536 535 537 57 (set (reg:SI 168 [ D.6300 ])
        (lshiftrt:SI (reg/v:SI 162 [ drs ])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 53 {lshrsi3}
     (expr_list:REG_DEAD (reg/v:SI 162 [ drs ])
        (nil)))
(insn 537 536 538 57 (set (reg:SI 419)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))
(insn 538 537 540 57 (set (reg:SI 169 [ D.6300 ])
        (minus:SI (reg:SI 419)
            (reg:SI 168 [ D.6300 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 419)
        (expr_list:REG_DEAD (reg:SI 168 [ D.6300 ])
            (expr_list:REG_EQUAL (minus:SI (const_int 15 [0xf])
                    (reg:SI 168 [ D.6300 ]))
                (nil)))))
(insn 540 538 543 57 (set (reg:SI 170 [ D.6300 ])
        (ashiftrt:SI (reg:SI 417)
            (reg:SI 169 [ D.6300 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 52 {ashrsi3}
     (expr_list:REG_DEAD (reg:SI 417)
        (expr_list:REG_DEAD (reg:SI 169 [ D.6300 ])
            (nil))))
(insn 543 540 544 57 (set (reg:SI 423)
        (and:SI (reg:SI 165 [ D.6300 ])
            (reg:SI 170 [ D.6300 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 170 [ D.6300 ])
        (expr_list:REG_DEAD (reg:SI 165 [ D.6300 ])
            (nil))))
(note 544 543 545 57 NOTE_INSN_DELETED)
(insn 545 544 546 57 (set (reg:SI 13 a13)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 44 {movsi_internal}
     (nil))
(insn 546 545 547 57 (set (reg:SI 12 a12)
        (zero_extend:SI (subreg:HI (reg:SI 423) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 423)
        (nil)))
(insn 547 546 548 57 (set (reg:SI 11 a11)
        (reg/v:SI 159 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 159 [ freq ])
        (nil)))
(insn 548 547 549 57 (set (reg:SI 10 a10)
        (reg/v:SI 155 [ chidx ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 155 [ chidx ])
        (nil)))
(call_insn 549 548 550 57 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("LMIC_setupChannel") [flags 0x3]  <function_decl 0x100b281b0 LMIC_setupChannel>) [0 LMIC_setupChannel S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(note 550 549 552 57 NOTE_INSN_DELETED)
(jump_insn 552 550 553 57 (set (pc)
        (if_then_else (eq (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1221 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 562)
;;  succ:       58 [50.0%]  (FALLTHRU)
;;              59 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 58, loop depth 1, count 0, freq 22, maybe hot
;;  prev block 57, next block 59, flags: (RTL, MODIFIED)
;;  pred:       57 [50.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u632(1){ }u633(7){ }u634(16){ }u635(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 426 427 430 431 432
(note 553 552 554 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 58 (set (reg/f:SI 426)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 555 554 559 58 (set:SI (reg/f:SI 427)
        (plus:SI (reg/f:SI 426)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 426)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 559 555 857 58 (set (reg:QI 431 [ LMIC.snchAns ])
        (mem/j/c:QI (plus:SI (reg/f:SI 427)
                (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 46 {movqi_internal}
     (nil))
(insn 857 559 560 58 (set (reg:QI 430)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 560 857 561 58 (set (reg:SI 432)
        (ior:SI (subreg:SI (reg:QI 431 [ LMIC.snchAns ]) 0)
            (subreg:SI (reg:QI 430) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 431 [ LMIC.snchAns ])
        (expr_list:REG_DEAD (reg:QI 430)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:QI 431 [ LMIC.snchAns ]) 0)
                    (const_int 3 [0x3]))
                (nil)))))
(insn 561 560 562 58 (set (mem/j/c:QI (plus:SI (reg/f:SI 427)
                (const_int 46 [0x2e])) [0 LMIC.snchAns+0 S1 A16])
        (subreg:QI (reg:SI 432) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1222 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 432)
        (expr_list:REG_DEAD (reg/f:SI 427)
            (nil))))
;;  succ:       59 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 59, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       56 [71.0%] 
;;              57 [50.0%] 
;;              58 [100.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u643(1){ }u644(7){ }u645(16){ }u646(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 518
(code_label 562 561 563 59 239 "" [2 uses])
(note 563 562 564 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 59 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 6 [0x6]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1224 1 {addsi3}
     (nil))
(debug_insn 565 564 836 59 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1224 -1
     (nil))
(jump_insn 836 565 837 59 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1225 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 837 836 568)
;; basic block 60, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u649(1){ }u650(7){ }u651(16){ }u652(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 178 181 433
(code_label 568 837 569 60 229 "" [1 uses])
(note 569 568 570 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 572 60 (set (reg:SI 178 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
        (nil)))
(note 572 570 856 60 NOTE_INSN_DELETED)
(insn 856 572 573 60 (set (reg/f:SI 433)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 573 856 574 60 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 433)
            (reg:SI 178 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 433)
        (expr_list:REG_DEAD (reg:SI 178 [ D.6298 ])
            (nil))))
(call_insn/i 574 573 575 60 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("convFreq") [flags 0x3]  <function_decl 0x100b7c5e8 convFreq>) [0 convFreq S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 575 574 576 60 (set (reg/v:SI 181 [ freq ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 576 575 577 60 (var_location:SI freq (reg/v:SI 181 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1229 -1
     (nil))
(debug_insn 577 576 578 60 (var_location:QI flags (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1230 -1
     (nil))
(jump_insn 578 577 579 60 (set (pc)
        (if_then_else (eq (reg/v:SI 181 [ freq ])
                (const_int 0 [0]))
            (label_ref:SI 798)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1231 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 798)
;;  succ:       61 [50.0%]  (FALLTHRU)
;;              62 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 181 518 519 520

;; basic block 61, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 [50.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u662(1){ }u663(7){ }u664(16){ }u665(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 181 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 181
;; lr  def 	 46 434
(note 579 578 580 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(debug_insn 580 579 581 61 (var_location:QI flags (const_int -127 [0xffffffffffffff81])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1232 -1
     (nil))
(insn 581 580 582 61 (set (reg/f:SI 434)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1233 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 582 581 13 61 (set (mem/j/c:SI (plus:SI (reg/f:SI 434)
                (const_int 324 [0x144])) [0 LMIC.ping.freq+0 S4 A32])
        (reg/v:SI 181 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1233 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 434)
        (expr_list:REG_DEAD (reg/v:SI 181 [ freq ])
            (nil))))
(insn 13 582 838 61 (set (reg/v:SI 46 [ flags ])
        (const_int 129 [0x81])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1232 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 129 [0x81])
        (nil)))
(jump_insn 838 13 839 61 (set (pc)
        (label_ref 583)) 78 {jump}
     (nil)
 -> 583)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 47 60 72 73 518 519 520

(barrier 839 838 798)
;; basic block 62, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 61, next block 63, flags: (RTL)
;;  pred:       60 [50.0%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u668(1){ }u669(7){ }u670(16){ }u671(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46
(code_label 798 839 797 62 254 "" [1 uses])
(note 797 798 12 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 12 797 583 62 (set (reg/v:SI 46 [ flags ])
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1230 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
;;  succ:       63 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 47 60 72 73 518 519 520

;; basic block 63, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU)
;;              61 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u672(1){ }u673(7){ }u674(16){ }u675(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 46 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 518
;; lr  def 	 435 436 518
(code_label 583 12 584 63 240 "" [1 uses])
(note 584 583 585 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(debug_insn 585 584 586 63 (var_location:QI flags (subreg:QI (reg/v:SI 46 [ flags ]) 0)) -1
     (nil))
(insn 586 585 587 63 (set (reg/f:SI 435)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1238 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 587 586 588 63 (set:SI (reg/f:SI 436)
        (plus:SI (reg/f:SI 435)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1238 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 435)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 588 587 589 63 (set (mem/j/c:QI (plus:SI (reg/f:SI 436)
                (const_int 55 [0x37])) [0 LMIC.pingSetAns+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 46 [ flags ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1238 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 436)
        (expr_list:REG_DEAD (reg/v:SI 46 [ flags ])
            (nil))))
(insn 589 588 590 63 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1240 1 {addsi3}
     (nil))
(debug_insn 590 589 840 63 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1240 -1
     (nil))
(jump_insn 840 590 841 63 (set (pc)
        (label_ref 671)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1241 78 {jump}
     (nil)
 -> 671)
;;  succ:       69 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

(barrier 841 840 593)
;; basic block 64, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       36 [11.8%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u682(1){ }u683(7){ }u684(16){ }u685(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 182 437
(code_label 593 841 594 64 230 "" [1 uses])
(note 594 593 595 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 64 (set (reg/f:SI 437)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1246 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 596 595 597 64 (set (reg:SI 182 [ D.6296 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 437)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1246 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 437)
        (nil)))
(note 597 596 598 64 NOTE_INSN_DELETED)
(note 598 597 600 64 NOTE_INSN_DELETED)
(note 600 598 601 64 NOTE_INSN_DELETED)
(jump_insn 601 600 602 64 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 182 [ D.6296 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1246 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 665)
;;  succ:       65 [50.0%]  (FALLTHRU)
;;              68 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 182 518 519 520

;; basic block 65, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 64, next block 66, flags: (RTL)
;;  pred:       64 [50.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u692(1){ }u693(7){ }u694(16){ }u695(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 182 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105 182
;; lr  def 	 185 187 442 443 444 445 447 448
(note 602 601 603 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 65 (set (reg/f:SI 442)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC168") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 343 [0x157])))
        (nil)))
(insn 604 603 605 65 (set (reg/f:SI 443)
        (plus:SI (reg:SI 105 [ D.6298 ])
            (reg/f:SI 442))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 442)
        (nil)))
(insn 605 604 606 65 (set (reg:SI 185 [ D.6293 ])
        (zero_extend:SI (mem:QI (reg/f:SI 443) [0 *_208+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 443)
        (nil)))
(insn 606 605 607 65 (set (reg/f:SI 444)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 607 606 608 65 (set:SI (reg/f:SI 445)
        (plus:SI (reg/f:SI 444)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 608 607 610 65 (set (mem/j/c:QI (plus:SI (reg/f:SI 445)
                (const_int 140 [0x8c])) [0 LMIC.bcnChnl+0 S1 A32])
        (subreg/s/v:QI (reg:SI 185 [ D.6293 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1247 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 185 [ D.6293 ])
        (nil)))
(insn 610 608 611 65 (set (reg:HI 447)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1249 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 611 610 612 65 (set (reg:SI 448)
        (ior:SI (reg:SI 182 [ D.6296 ])
            (subreg:SI (reg:HI 447) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1249 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 447)
        (expr_list:REG_DEAD (reg:SI 182 [ D.6296 ])
            (expr_list:REG_EQUAL (ior:SI (reg:SI 182 [ D.6296 ])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 612 611 615 65 (set (mem/j/c:HI (plus:SI (reg/f:SI 444)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 448) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1249 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 448)
        (expr_list:REG_DEAD (reg/f:SI 444)
            (nil))))
(insn 615 612 616 65 (set (reg:SI 187 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 445)
                    (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1251 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 445)
        (nil)))
(jump_insn 616 615 617 65 (set (pc)
        (if_then_else (ne (reg:SI 187 [ D.6293 ])
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1251 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 187 [ D.6293 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 622)
;;  succ:       66 [29.0%]  (FALLTHRU)
;;              67 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520

;; basic block 66, loop depth 1, count 0, freq 22, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 [29.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u709(1){ }u710(7){ }u711(16){ }u712(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 617 616 618 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(note 618 617 619 66 NOTE_INSN_DELETED)
(insn 619 618 620 66 (set (reg:SI 11 a11)
        (const_int 1251 [0x4e3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1251 44 {movsi_internal}
     (nil))
(insn 620 619 621 66 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC169") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1251 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 621 620 622 66 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1251 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       67 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520

;; basic block 67, loop depth 1, count 0, freq 77, maybe hot
;;  prev block 66, next block 68, flags: (RTL, MODIFIED)
;;  pred:       65 [71.0%] 
;;              66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u717(1){ }u718(7){ }u719(16){ }u720(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 105 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 105
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 188 189 196 197 452 453 454 457 467 470 512 516
(code_label 622 621 623 67 242 "" [1 uses])
(note 623 622 624 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 67 (set (reg/f:SI 452)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1253 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 625 624 626 67 (set (reg:SI 188 [ D.6300 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 452)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1253 44 {movsi_internal}
     (nil))
(insn 626 625 628 67 (set (reg:SI 189 [ D.6298 ])
        (plus:SI (reg:SI 105 [ D.6298 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6298 ])
        (nil)))
(note 628 626 855 67 NOTE_INSN_DELETED)
(insn 855 628 629 67 (set (reg/f:SI 453)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC161") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 340 [0x154])))
        (nil)))
(insn 629 855 630 67 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 453)
            (reg:SI 189 [ D.6298 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 453)
        (expr_list:REG_DEAD (reg:SI 189 [ D.6298 ])
            (nil))))
(call_insn/i 630 629 631 67 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf2") [flags 0x3]  <function_decl 0x140efaaf8 os_rlsbf2>) [0 os_rlsbf2 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 631 630 635 67 (set (reg:SI 454)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 635 631 641 67 (set (reg:SI 457)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC170") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1875000 [0x1c9c38])
        (nil)))
(note 641 635 642 67 NOTE_INSN_DELETED)
(insn 642 641 644 67 (set (reg:SI 512 [ D.6305+4 ])
        (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 454))
                    (zero_extend:DI (reg:SI 457)))
                (const_int 32 [0x20])))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 8 {umulsi3_highpart}
     (nil))
(note 644 642 647 67 NOTE_INSN_DELETED)
(insn 647 644 808 67 (set (reg:DI 12 a12)
        (const_int 1000 [0x3e8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 43 {movdi_internal}
     (expr_list:REG_EQUAL (const_int 1000 [0x3e8])
        (nil)))
(insn 808 647 809 67 (set (reg:SI 10 a10)
        (mult:SI (reg:SI 454)
            (reg:SI 457))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 457)
        (expr_list:REG_DEAD (reg:SI 454)
            (nil))))
(insn 809 808 649 67 (set (reg:SI 11 a11 [+4 ])
        (reg:SI 512 [ D.6305+4 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 512 [ D.6305+4 ])
        (nil)))
(call_insn/u 649 809 650 67 (set (reg:DI 10 a10)
        (call (mem:SI (symbol_ref:SI ("__divdi3") [flags 0x41]) [0  S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a12)
        (expr_list:REG_UNUSED (reg:SI 11 a11)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (use (reg:DI 12 a12))
        (expr_list (use (reg:DI 10 a10))
            (nil))))
(note 650 649 653 67 NOTE_INSN_DELETED)
(insn 653 650 654 67 (set (reg:SI 196 [ D.6300 ])
        (plus:SI (reg:SI 188 [ D.6300 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1254 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 188 [ D.6300 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(insn 654 653 655 67 (set (reg:SI 467)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC172") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1256 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -7999062 [0xffffffffff85f1aa])
        (nil)))
(insn 655 654 657 67 (set (reg:SI 197 [ D.6300 ])
        (plus:SI (reg:SI 196 [ D.6300 ])
            (reg:SI 467))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1256 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 467)
        (expr_list:REG_DEAD (reg:SI 196 [ D.6300 ])
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 452)
                        (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
                (nil)))))
(insn 657 655 659 67 (set (mem/j/c:SI (plus:SI (reg/f:SI 452)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (reg:SI 197 [ D.6300 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1253 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 197 [ D.6300 ])
        (nil)))
(insn 659 657 854 67 (set:SI (reg/f:SI 470)
        (plus:SI (reg/f:SI 452)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1257 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 452)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 854 659 661 67 (set (reg:SI 516 [ D.6305+4 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1257 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 661 854 662 67 (set (mem/j/c:QI (plus:SI (reg/f:SI 470)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg:QI (reg:SI 516 [ D.6305+4 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1257 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 516 [ D.6305+4 ])
        (expr_list:REG_DEAD (reg/f:SI 470)
            (nil))))
(insn 662 661 663 67 (set (reg:SI 11 a11)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1258 44 {movsi_internal}
     (nil))
(insn 663 662 664 67 (set (reg:SI 10 a10)
        (const_int 30 [0x1e])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1258 44 {movsi_internal}
     (nil))
(call_insn 664 663 665 67 (call (mem:SI (symbol_ref:SI ("calcBcnRxWindowFromMillis") [flags 0x3]  <function_decl 0x100b66870 calcBcnRxWindowFromMillis>) [0 calcBcnRxWindowFromMillis S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1258 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       68 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 68, loop depth 1, count 0, freq 153, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       64 [50.0%] 
;;              67 [100.0%]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u755(1){ }u756(7){ }u757(16){ }u758(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518
;; lr  def 	 518
(code_label 665 664 666 68 241 "" [1 uses])
(note 666 665 667 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 668 68 (set (reg/v:SI 518 [orig:45 oidx ] [45])
        (plus:SI (reg/v:SI 518 [orig:45 oidx ] [45])
            (const_int 4 [0x4]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1269 1 {addsi3}
     (nil))
(debug_insn 668 667 671 68 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1269 -1
     (nil))
;;  succ:       69 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 69, loop depth 1, count 0, freq 1446, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 [100.0%]  (FALLTHRU,DFS_BACK)
;;              59 [100.0%] 
;;              34 [100.0%] 
;;              37 [100.0%] 
;;              44 [100.0%] 
;;              45 [100.0%] 
;;              52 [100.0%] 
;;              55 [100.0%] 
;;              63 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u765(1){ }u766(7){ }u767(16){ }u768(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 518 519
;; lr  def 	
(code_label 671 668 672 69 220 "" [8 uses])
(note 672 671 673 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(debug_insn 673 672 675 69 (var_location:SI oidx (reg/v:SI 518 [orig:45 oidx ] [45])) -1
     (nil))
(jump_insn 675 673 676 69 (set (pc)
        (if_then_else (lt (reg/v:SI 518 [orig:45 oidx ] [45])
                (reg/v:SI 519 [orig:69 olen ] [69]))
            (label_ref 674)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1142 56 {*btrue}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 674)
;;  succ:       35 [95.5%] 
;;              70 [4.5%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 518 519 520

;; basic block 70, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 [4.5%]  (FALLTHRU)
;;              36 [5.9%] 
;;              35 [5.5%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u772(1){ }u773(7){ }u774(16){ }u775(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 44 47 60 72 73 520
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 520
;; lr  def 	 83
(code_label 676 675 677 70 221 "" [12 uses])
(note 677 676 889 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 889 677 678 70 (set (reg/v:SI 83 [ seqno ])
        (reg/v:SI 520 [orig:83 seqno ] [83])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 520 [orig:83 seqno ] [83])
        (nil)))
(jump_insn 678 889 679 70 (set (pc)
        (if_then_else (ne (reg/v:SI 44 [ replayConf ])
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1285 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 44 [ replayConf ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 699)
;;  succ:       71 [50.0%]  (FALLTHRU)
;;              77 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83

;; basic block 71, loop depth 0, count 0, freq 109, maybe hot
;;  prev block 70, next block 72, flags: (RTL)
;;  pred:       70 [50.0%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u777(1){ }u778(7){ }u779(16){ }u780(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(note 679 678 680 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(jump_insn 680 679 681 71 (set (pc)
        (if_then_else (lt (reg/v:SI 43 [ port ])
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1288 56 {*btrue}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 699)
;;  succ:       72 [73.0%]  (FALLTHRU)
;;              77 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83

;; basic block 72, loop depth 0, count 0, freq 80, maybe hot
;;  prev block 71, next block 73, flags: (RTL)
;;  pred:       71 [73.0%]  (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u782(1){ }u783(7){ }u784(16){ }u785(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 73
;; lr  def 	 198
(note 681 680 682 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 72 (set (reg:SI 198 [ D.6300 ])
        (minus:SI (reg/v:SI 73 [ pend ])
            (reg/v:SI 42 [ poff ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1288 4 {subsi3}
     (nil))
(jump_insn 683 682 684 72 (set (pc)
        (if_then_else (ge (reg:SI 198 [ D.6300 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 699))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1288 57 {*bfalse}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 699)
;;  succ:       73 [73.0%]  (FALLTHRU)
;;              77 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83 198

;; basic block 73, loop depth 0, count 0, freq 58, maybe hot
;;  prev block 72, next block 74, flags: (RTL)
;;  pred:       72 [73.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u789(1){ }u790(7){ }u791(16){ }u792(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83 198
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(note 684 683 685 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(jump_insn 685 684 686 73 (set (pc)
        (if_then_else (lt (reg/v:SI 43 [ port ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref:SI 802))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 57 {*bfalse}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 802)
;;  succ:       74 [27.0%]  (FALLTHRU)
;;              75 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83 198

;; basic block 74, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 [27.0%]  (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u794(1){ }u795(7){ }u796(16){ }u797(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83 198
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 51
(note 686 685 15 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 15 686 842 74 (set (reg/f:SI 51 [ D.6291 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC153") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 246 [0xf6])))
        (nil)))
(jump_insn 842 15 843 74 (set (pc)
        (label_ref 687)) 78 {jump}
     (nil)
 -> 687)
;;  succ:       76 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 51 60 72 73 83 198

(barrier 843 842 802)
;; basic block 75, loop depth 0, count 0, freq 42, maybe hot
;;  prev block 74, next block 76, flags: (RTL)
;;  pred:       73 [73.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u798(1){ }u799(7){ }u800(16){ }u801(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73 83 198
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 51
(code_label 802 843 801 75 255 "" [1 uses])
(note 801 802 16 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 16 801 687 75 (set (reg/f:SI 51 [ D.6291 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC154") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 262 [0x106])))
        (nil)))
;;  succ:       76 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 51 60 72 73 83 198

;; basic block 76, loop depth 0, count 0, freq 58, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 [100.0%]  (FALLTHRU)
;;              74 [100.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u802(1){ }u803(7){ }u804(16){ }u805(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 51 60 72 73 83 198
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 51 83 198
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 473 474
(code_label 687 16 688 76 245 "" [1 uses])
(note 688 687 690 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(note 690 688 692 76 NOTE_INSN_DELETED)
(insn 692 690 853 76 (set (reg:SI 15 a15)
        (reg:SI 198 [ D.6300 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 198 [ D.6300 ])
        (nil)))
(insn 853 692 693 76 (set (reg/f:SI 473)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC160") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(insn 693 853 694 76 (set (reg:SI 14 a14)
        (plus:SI (reg/f:SI 473)
            (reg/v:SI 42 [ poff ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 473)
        (nil)))
(insn 694 693 695 76 (set (reg:SI 13 a13)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (nil))
(insn 695 694 852 76 (set (reg:SI 12 a12)
        (reg/v:SI 83 [ seqno ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ seqno ])
        (nil)))
(insn 852 695 696 76 (set (reg/f:SI 474)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 696 852 697 76 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 474)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 474)
        (nil)))
(insn 697 696 698 76 (set (reg:SI 10 a10)
        (reg/f:SI 51 [ D.6291 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 51 [ D.6291 ])
        (nil)))
(call_insn 698 697 699 76 (call (mem:SI (symbol_ref:SI ("aes_cipher") [flags 0x3]  <function_decl 0x100b50a20 aes_cipher>) [0 aes_cipher S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1289 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 15 a15)
        (expr_list:REG_DEAD (reg:SI 14 a14)
            (expr_list:REG_DEAD (reg:SI 13 a13)
                (expr_list:REG_DEAD (reg:SI 12 a12)
                    (expr_list:REG_DEAD (reg:SI 11 a11)
                        (expr_list:REG_DEAD (reg:SI 10 a10)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (expr_list:SI (use (reg:SI 15 a15))
                            (nil))))))))
;;  succ:       77 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73

;; basic block 77, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 76, next block 78, flags: (RTL)
;;  pred:       70 [50.0%] 
;;              72 [27.0%] 
;;              71 [27.0%] 
;;              76 [100.0%]  (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u820(1){ }u821(7){ }u822(16){ }u823(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 202 475 476
(code_label 699 698 700 77 244 "" [3 uses])
(note 700 699 701 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 77 (set (reg/f:SI 475)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1321 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 702 701 703 77 (set:SI (reg/f:SI 476)
        (plus:SI (reg/f:SI 475)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1321 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 475)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 703 702 704 77 (set (reg:SI 202 [ D.6293 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 476)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1321 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 476)
        (nil)))
(jump_insn 704 703 705 77 (set (pc)
        (if_then_else (eq (reg:SI 202 [ D.6293 ])
                (const_int 0 [0]))
            (label_ref 719)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1321 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 202 [ D.6293 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 719)
;;  succ:       78 [50.0%]  (FALLTHRU)
;;              82 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73

;; basic block 78, loop depth 0, count 0, freq 109, maybe hot
;;  prev block 77, next block 79, flags: (RTL)
;;  pred:       77 [50.0%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u827(1){ }u828(7){ }u829(16){ }u830(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 60 72 73
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 60
;; lr  def 	 204 477 478
(note 705 704 706 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 706 705 707 78 (set (reg/f:SI 477)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 707 706 708 78 (set:SI (reg/f:SI 478)
        (plus:SI (reg/f:SI 477)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 477)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 708 707 709 78 (set (reg:SI 204 [ D.6292 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 478)
                    (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 478)
        (nil)))
(jump_insn 709 708 710 78 (set (pc)
        (if_then_else (eq (reg:SI 60 [ D.6293 ])
                (const_int 0 [0]))
            (label_ref:SI 806)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6293 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 806)
;;  succ:       79 [50.0%]  (FALLTHRU)
;;              80 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73 204

;; basic block 79, loop depth 0, count 0, freq 55, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78 [50.0%]  (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u834(1){ }u835(7){ }u836(16){ }u837(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73 204
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 52
(note 710 709 17 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 17 710 844 79 (set (reg:SI 52 [ D.6292 ])
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(jump_insn 844 17 845 79 (set (pc)
        (label_ref 711)) 78 {jump}
     (nil)
 -> 711)
;;  succ:       81 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 52 72 73 204

(barrier 845 844 806)
;; basic block 80, loop depth 0, count 0, freq 55, maybe hot
;;  prev block 79, next block 81, flags: (RTL)
;;  pred:       78 [50.0%] 
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u838(1){ }u839(7){ }u840(16){ }u841(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73 204
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 52
(code_label 806 845 805 80 256 "" [1 uses])
(note 805 806 18 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 18 805 711 80 (set (reg:SI 52 [ D.6292 ])
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
;;  succ:       81 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 52 72 73 204

;; basic block 81, loop depth 0, count 0, freq 109, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       80 [100.0%]  (FALLTHRU)
;;              79 [100.0%] 
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u842(1){ }u843(7){ }u844(16){ }u845(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 52 72 73 204
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 52 204
;; lr  def 	 479 480 483
(code_label 711 18 712 81 247 "" [1 uses])
(note 712 711 717 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 717 712 851 81 (set (reg:SI 483)
        (ior:SI (reg:SI 52 [ D.6292 ])
            (reg:SI 204 [ D.6292 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 204 [ D.6292 ])
        (expr_list:REG_DEAD (reg:SI 52 [ D.6292 ])
            (nil))))
(insn 851 717 850 81 (set (reg/f:SI 479)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 850 851 718 81 (set:SI (reg/f:SI 480)
        (plus:SI (reg/f:SI 479)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 479)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 718 850 719 81 (set (mem/j/c:QI (plus:SI (reg/f:SI 480)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (subreg:QI (reg:SI 483) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1322 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 483)
        (expr_list:REG_DEAD (reg/f:SI 480)
            (nil))))
;;  succ:       82 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73

;; basic block 82, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 81, next block 83, flags: (RTL)
;;  pred:       77 [50.0%] 
;;              81 [100.0%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u851(1){ }u852(7){ }u853(16){ }u854(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(code_label 719 718 720 82 246 "" [1 uses])
(note 720 719 721 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(jump_insn 721 720 722 82 (set (pc)
        (if_then_else (ge (reg/v:SI 43 [ port ])
                (const_int 0 [0]))
            (label_ref 740)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1324 56 {*btrue}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 740)
;;  succ:       83 [27.0%]  (FALLTHRU)
;;              84 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73

;; basic block 83, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       82 [27.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u856(1){ }u857(7){ }u858(16){ }u859(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 484 485 488 489 490 495
(note 722 721 723 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 83 (set (reg/f:SI 484)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 724 723 728 83 (set:SI (reg/f:SI 485)
        (plus:SI (reg/f:SI 484)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 484)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 728 724 849 83 (set (reg:QI 489 [ LMIC.txrxFlags ])
        (mem/j/c:QI (plus:SI (reg/f:SI 485)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 46 {movqi_internal}
     (nil))
(insn 849 728 729 83 (set (reg:QI 488)
        (const_int 32 [0x20])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 32 [0x20])
        (nil)))
(insn 729 849 730 83 (set (reg:SI 490)
        (ior:SI (subreg:SI (reg:QI 489 [ LMIC.txrxFlags ]) 0)
            (subreg:SI (reg:QI 488) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 489 [ LMIC.txrxFlags ])
        (expr_list:REG_DEAD (reg:QI 488)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:QI 489 [ LMIC.txrxFlags ]) 0)
                    (const_int 32 [0x20]))
                (nil)))))
(insn 730 729 733 83 (set (mem/j/c:QI (plus:SI (reg/f:SI 485)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (subreg:QI (reg:SI 490) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1325 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 490)
        (nil)))
(insn 733 730 736 83 (set (mem/j/c:QI (plus:SI (reg/f:SI 485)
                (const_int 74 [0x4a])) [0 LMIC.dataBeg+0 S1 A16])
        (subreg:QI (reg/v:SI 42 [ poff ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1326 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ poff ])
        (nil)))
(insn 736 733 737 83 (set (reg:QI 495)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1327 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 737 736 846 83 (set (mem/j/c:QI (plus:SI (reg/f:SI 485)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 495)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1327 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 495)
        (expr_list:REG_DEAD (reg/f:SI 485)
            (nil))))
(jump_insn 846 737 847 83 (set (pc)
        (label_ref 759)) 78 {jump}
     (nil)
 -> 759)
;;  succ:       85 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 47 72

(barrier 847 846 740)
;; basic block 84, loop depth 0, count 0, freq 160, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       82 [73.0%] 
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u871(1){ }u872(7){ }u873(16){ }u874(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 47 72 73
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 73
;; lr  def 	 212 496 497 500 501 502 508
(code_label 740 847 741 84 248 "" [1 uses])
(note 741 740 742 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 742 741 743 84 (set (reg/f:SI 496)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC155") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 743 742 747 84 (set:SI (reg/f:SI 497)
        (plus:SI (reg/f:SI 496)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 496)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 747 743 848 84 (set (reg:QI 501 [ LMIC.txrxFlags ])
        (mem/j/c:QI (plus:SI (reg/f:SI 497)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 46 {movqi_internal}
     (nil))
(insn 848 747 748 84 (set (reg:QI 500)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 16 [0x10])
        (nil)))
(insn 748 848 749 84 (set (reg:SI 502)
        (ior:SI (subreg:SI (reg:QI 501 [ LMIC.txrxFlags ]) 0)
            (subreg:SI (reg:QI 500) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 31 {iorsi3}
     (expr_list:REG_DEAD (reg:QI 501 [ LMIC.txrxFlags ])
        (expr_list:REG_DEAD (reg:QI 500)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:QI 501 [ LMIC.txrxFlags ]) 0)
                    (const_int 16 [0x10]))
                (nil)))))
(insn 749 748 750 84 (set (mem/j/c:QI (plus:SI (reg/f:SI 497)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (subreg:QI (reg:SI 502) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1329 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 502)
        (nil)))
(insn 750 749 753 84 (set (reg:SI 212 [ D.6293 ])
        (zero_extend:SI (subreg:QI (reg/v:SI 42 [ poff ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1330 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v:SI 42 [ poff ])
        (nil)))
(insn 753 750 757 84 (set (mem/j/c:QI (plus:SI (reg/f:SI 497)
                (const_int 74 [0x4a])) [0 LMIC.dataBeg+0 S1 A16])
        (subreg/s/v:QI (reg:SI 212 [ D.6293 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1330 46 {movqi_internal}
     (nil))
(insn 757 753 758 84 (set (reg:SI 508)
        (minus:SI (reg/v:SI 73 [ pend ])
            (reg:SI 212 [ D.6293 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1331 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 212 [ D.6293 ])
        (expr_list:REG_DEAD (reg/v:SI 73 [ pend ])
            (nil))))
(insn 758 757 759 84 (set (mem/j/c:QI (plus:SI (reg/f:SI 497)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (subreg:QI (reg:SI 508) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1331 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 508)
        (expr_list:REG_DEAD (reg/f:SI 497)
            (nil))))
;;  succ:       85 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 47 72

;; basic block 85, loop depth 0, count 0, freq 219, maybe hot
;;  prev block 84, next block 86, flags: (RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU)
;;              83 [100.0%] 
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u889(1){ }u890(7){ }u891(16){ }u892(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 47 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 47 72
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48
(code_label 759 758 760 85 249 "" [1 uses])
(note 760 759 761 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(call_insn 761 760 762 85 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 82 {call_value_internal}
     (nil)
    (nil))
(note 762 761 763 85 NOTE_INSN_DELETED)
(note 763 762 764 85 NOTE_INSN_DELETED)
(insn 764 763 765 85 (set (reg:SI 14 a14)
        (reg/v:SI 72 [ ackup ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 72 [ ackup ])
        (nil)))
(insn 765 764 766 85 (set (reg:SI 13 a13)
        (reg/v:SI 43 [ port ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 [ port ])
        (nil)))
(insn 766 765 767 85 (set (reg:SI 12 a12)
        (reg/v/f:SI 47 [ window ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 47 [ window ])
        (nil)))
(insn 767 766 768 85 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 768 767 769 85 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC174") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC173") [flags 0x2]  <var_decl 0x1019723f0 *.LC173>)
        (nil)))
(call_insn 769 768 20 85 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1334 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 14 a14)
        (expr_list:REG_DEAD (reg:SI 13 a13)
            (expr_list:REG_DEAD (reg:SI 12 a12)
                (expr_list:REG_DEAD (reg:SI 11 a11)
                    (expr_list:REG_UNUSED (reg:SI 10 a10)
                        (nil))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (expr_list:SI (use (reg:SI 14 a14))
                        (nil)))))))
(insn 20 769 770 85 (set (reg:SI 48 [ D.6289 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1336 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;;  succ:       86 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48

;; basic block 86, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 85, next block 1, flags: (RTL)
;;  pred:       85 [100.0%]  (FALLTHRU)
;;              10 [100.0%] 
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u906(1){ }u907(7){ }u908(16){ }u909(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 2 [a2]
(code_label 770 20 771 86 211 "" [1 uses])
(note 771 770 776 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 776 771 777 86 (set (reg/i:SI 2 a2)
        (reg:SI 48 [ D.6289 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1337 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6289 ])
        (nil)))
(insn 777 776 0 86 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1337 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_disableChannel (LMIC_disableChannel, funcdef_no=59, decl_uid=3329, cgraph_uid=59, symbol_order=67)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 52: local to bb 2 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 55: local to bb 2 def dominates all uses has unique first use
Reg 56 uninteresting
Reg 58 uninteresting
Reg 60 uninteresting
Reg 62 uninteresting
Reg 67 uninteresting
Reg 66: local to bb 2 def dominates all uses has unique first use
Reg 68 uninteresting
Reg 70 uninteresting
Ignoring reg 52 with equiv init insn
Examining insn 11, def for 55
  all ok
Examining insn 26, def for 66
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 25 (nil))

Pass 0 for finding pseudo/allocno costs

    r70: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r70,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r66,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r62,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r60,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r58,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r50,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r52,l0) costs: ACC_REG:15000,15000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80000,80000 MEM:12000,12000
  a1(r70,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r66,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r50,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a7(r62,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r60,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r56,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a10(r58,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a11(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a12(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 27(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 17(l0): point = 16
   Insn 15(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 3(l0): point = 30
 a0(r52): [1..28]
 a1(r70): [1..2]
 a2(r68): [3..4]
 a3(r66): [3..6]
 a4(r45): [7..10]
 a5(r67): [7..8]
 a6(r50): [11..30]
 a7(r62): [11..12]
 a8(r60): [15..16]
 a9(r56): [15..22]
 a10(r58): [17..18]
 a11(r55): [21..24]
 a12(r53): [25..26]
Compressing live ranges: from 33 to 16 - 48%
Ranges after the compression:
 a0(r52): [0..15]
 a1(r70): [0..1]
 a2(r68): [2..3]
 a3(r66): [2..3]
 a4(r45): [4..5]
 a5(r67): [4..5]
 a6(r50): [6..15]
 a7(r62): [6..7]
 a8(r60): [8..9]
 a9(r56): [8..13]
 a10(r58): [10..11]
 a11(r55): [12..13]
 a12(r53): [14..15]
+++Allocating 104 bytes for conflict table (uncompressed size 104)
;; a0(r52,l0) conflicts: a1(r70,l0) a2(r68,l0) a3(r66,l0) a4(r45,l0) a5(r67,l0) a7(r62,l0) a6(r50,l0) a8(r60,l0) a9(r56,l0) a10(r58,l0) a11(r55,l0) a12(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r70,l0) conflicts: a0(r52,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r68,l0) conflicts: a0(r52,l0) a3(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r66,l0) conflicts: a0(r52,l0) a2(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r45,l0) conflicts: a0(r52,l0) a5(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r67,l0) conflicts: a0(r52,l0) a4(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r50,l0) conflicts: a0(r52,l0) a7(r62,l0) a8(r60,l0) a9(r56,l0) a10(r58,l0) a11(r55,l0) a12(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r62,l0) conflicts: a0(r52,l0) a6(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r60,l0) conflicts: a0(r52,l0) a6(r50,l0) a9(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r56,l0) conflicts: a0(r52,l0) a6(r50,l0) a8(r60,l0) a10(r58,l0) a11(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r58,l0) conflicts: a0(r52,l0) a6(r50,l0) a9(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r55,l0) conflicts: a0(r52,l0) a6(r50,l0) a9(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r53,l0) conflicts: a0(r52,l0) a6(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a11(r55)<->a12(r53)@125:shuffle
  cp1:a8(r60)<->a10(r58)@125:shuffle
  cp2:a4(r45)<->a7(r62)@125:shuffle
  cp3:a4(r45)<->a6(r50)@125:shuffle
  cp4:a3(r66)<->a4(r45)@125:shuffle
  cp5:a3(r66)<->a5(r67)@125:shuffle
  cp6:a1(r70)<->a2(r68)@125:shuffle
  cp7:a1(r70)<->a3(r66)@125:shuffle
  pref0:a6(r50)<-hr2@125
  regions=1, blocks=3, points=16
    allocnos=13 (big 0), copies=8, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r52 1r70 2r68 3r66 4r45 5r67 6r50 7r62 8r60 9r56 10r58 11r55 12r53
    modified regnos: 45 50 52 53 55 56 58 60 62 66 67 68 70
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@240500
      Allocno a0r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r70 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a11r55-a12r53 (freq=125):
        Result (freq=4000): a11r55(2000) a12r53(2000)
      Forming thread by copy 1:a8r60-a10r58 (freq=125):
        Result (freq=4000): a8r60(2000) a10r58(2000)
      Forming thread by copy 2:a4r45-a7r62 (freq=125):
        Result (freq=4000): a4r45(2000) a7r62(2000)
      Forming thread by copy 4:a3r66-a4r45 (freq=125):
        Result (freq=6000): a3r66(2000) a4r45(2000) a7r62(2000)
      Forming thread by copy 6:a1r70-a2r68 (freq=125):
        Result (freq=4000): a1r70(2000) a2r68(2000)
      Pushing a5(r67,l0)(cost 0)
      Pushing a9(r56,l0)(cost 0)
      Pushing a12(r53,l0)(cost 0)
      Pushing a11(r55,l0)(cost 0)
      Pushing a10(r58,l0)(cost 0)
      Pushing a8(r60,l0)(cost 0)
      Pushing a6(r50,l0)(cost 0)
      Pushing a2(r68,l0)(cost 0)
      Pushing a1(r70,l0)(cost 0)
      Pushing a0(r52,l0)(cost 0)
      Pushing a7(r62,l0)(cost 0)
      Pushing a4(r45,l0)(cost 0)
      Pushing a3(r66,l0)(cost 0)
      Popping a3(r66,l0)  -- assign reg 2
      Popping a4(r45,l0)  -- assign reg 2
      Popping a7(r62,l0)  -- assign reg 8
      Popping a0(r52,l0)  -- assign reg 9
      Popping a1(r70,l0)  -- assign reg 2
      Popping a2(r68,l0)  -- assign reg 8
      Popping a6(r50,l0)  -- assign reg 2
      Popping a8(r60,l0)  -- assign reg 8
      Popping a10(r58,l0)  -- assign reg 8
      Popping a11(r55,l0)  -- assign reg 8
      Popping a12(r53,l0)  -- assign reg 8
      Popping a9(r56,l0)  -- assign reg 10
      Popping a5(r67,l0)  -- assign reg 8
Disposition:
    4:r45  l0     2    6:r50  l0     2    0:r52  l0     9   12:r53  l0     8
   11:r55  l0     8    9:r56  l0    10   10:r58  l0     8    8:r60  l0     8
    7:r62  l0     8    3:r66  l0     2    5:r67  l0     8    2:r68  l0     8
    1:r70  l0     2
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_disableChannel

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r45={1d,1u,1e} r50={1d,3u,1e} r52={1d,4u} r53={1d,1u} r55={1d,1u} r56={1d,2u} r58={1d,1u} r60={1d,1u} r62={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r70={1d,1u} 
;;    total ref usage 52{23d,27u,2e} in 16{16 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 50 52 53 55 56 58 60 62 66 67 68 70
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 50 [ channel ])
        (zero_extend:SI (reg:QI 2 a2 [ channel ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:602 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ channel ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC175") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:603 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 53)
        (plus:SI (reg/v:SI 50 [ channel ])
            (const_int 16 [0x10]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:603 1 {addsi3}
     (nil))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg/f:SI 55)
        (plus:SI (mult:SI (reg:SI 53)
                (const_int 4 [0x4]))
            (reg/f:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:603 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 53)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 56)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:603 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 13 12 15 2 (set (mem/j:SI (reg/f:SI 55) [0 LMIC.channelFreq S4 A32])
        (reg:SI 56)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:603 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 55)
        (nil)))
(insn 15 13 16 2 (set (reg:SI 58)
        (plus:SI (reg/v:SI 50 [ channel ])
            (const_int 64 [0x40]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:604 1 {addsi3}
     (nil))
(note 16 15 17 2 NOTE_INSN_DELETED)
(insn 17 16 19 2 (set (reg/f:SI 60)
        (plus:SI (mult:SI (reg:SI 58)
                (const_int 2 [0x2]))
            (reg/f:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:604 2 {*addx}
     (expr_list:REG_DEAD (reg:SI 58)
        (nil)))
(insn 19 17 20 2 (set (mem/j:HI (reg/f:SI 60) [0 LMIC.channelDrMap S2 A16])
        (subreg:HI (reg:SI 56) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:604 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 60)
        (expr_list:REG_DEAD (reg:SI 56)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 62)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 21 20 25 2 (set (reg:SI 45 [ D.6314 ])
        (ashift:SI (reg:SI 62)
            (reg/v:SI 50 [ channel ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 62)
        (expr_list:REG_DEAD (reg/v:SI 50 [ channel ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg/v:SI 50 [ channel ]))
                (nil)))))
(insn 25 21 26 2 (set (reg:SI 67)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 26 25 27 2 (set (reg:SI 66)
        (xor:SI (reg:SI 67)
            (reg:SI 45 [ D.6314 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 32 {xorsi3}
     (expr_list:REG_DEAD (reg:SI 67)
        (expr_list:REG_DEAD (reg:SI 45 [ D.6314 ])
            (expr_list:REG_EQUAL (not:SI (reg:SI 45 [ D.6314 ]))
                (nil)))))
(insn 27 26 29 2 (set (reg:HI 68 [ LMIC.channelMap ])
        (mem/j/c:HI (plus:SI (reg/f:SI 52)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 45 {movhi_internal}
     (nil))
(insn 29 27 30 2 (set (reg:SI 70)
        (and:SI (reg:SI 66)
            (subreg:SI (reg:HI 68 [ LMIC.channelMap ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 68 [ LMIC.channelMap ])
        (expr_list:REG_DEAD (reg:SI 66)
            (nil))))
(insn 30 29 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 52)
                (const_int 160 [0xa0])) [0 LMIC.channelMap+0 S2 A32])
        (subreg:HI (reg:SI 70) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:605 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 70)
        (expr_list:REG_DEAD (reg/f:SI 52)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_enableTracking (LMIC_enableTracking, funcdef_no=92, decl_uid=3355, cgraph_uid=92, symbol_order=100)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
scanning new insn with uid = 45.
verify found no changes in insn with uid = 45.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 46: def dominates all uses has unique first use
Reg 48 uninteresting
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 49 uninteresting
Reg 53 uninteresting
Reg 54 uninteresting
Found def insn 11 for 43 to be not moveable
Reg 46 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 4 6 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 48: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 19 (nil))

Pass 0 for finding pseudo/allocno costs

    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r53,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r48,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r46,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5997,5997 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31984,31984 MEM:7996,7996
  a1(r46,l0) costs: ACC_REG:6660,6660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:35520,35520 MEM:8880,8880
  a2(r54,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a3(r53,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a4(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 7(l0): point = 5
   Insn 43(l0): point = 8
   Insn 5(l0): point = 10
   Insn 41(l0): point = 13
   Insn 6(l0): point = 15
   Insn 23(l0): point = 17
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 16(l0): point = 29
   Insn 45(l0): point = 31
   Insn 11(l0): point = 33
   Insn 10(l0): point = 35
   Insn 3(l0): point = 37
 a0(r42): [13..15] [8..10] [3..5]
 a1(r46): [21..37]
 a2(r54): [23..24]
 a3(r53): [25..26]
 a4(r49): [30..31]
 a5(r43): [30..33]
 a6(r48): [34..35]
Compressing live ranges: from 40 to 14 - 35%
Ranges after the compression:
 a0(r42): [0..5]
 a1(r46): [6..13]
 a2(r54): [6..7]
 a3(r53): [8..9]
 a4(r49): [10..11]
 a5(r43): [10..11]
 a6(r48): [12..13]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r42,l0) conflicts:;; a1(r46,l0) conflicts: a2(r54,l0) a3(r53,l0) a4(r49,l0) a5(r43,l0) a6(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r54,l0) conflicts: a1(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r53,l0) conflicts: a1(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r49,l0) conflicts: a1(r46,l0) a5(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r43,l0) conflicts: a1(r46,l0) a4(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r48,l0) conflicts: a1(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r54)<->a3(r53)@76:shuffle
  pref0:a0(r42)<-hr2@2000
  pref1:a1(r46)<-hr2@125
  regions=1, blocks=8, points=14
    allocnos=7 (big 0), copies=1, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r42 1r46 2r54 3r53 4r49 5r43 6r48
    modified regnos: 42 43 46 48 49 53 54
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@84012
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a2r54-a3r53 (freq=76):
        Result (freq=2440): a2r54(1220) a3r53(1220)
      Pushing a0(r42,l0)(cost 0)
      Pushing a6(r48,l0)(cost 0)
      Pushing a5(r43,l0)(cost 0)
      Pushing a4(r49,l0)(cost 0)
      Pushing a1(r46,l0)(cost 0)
      Pushing a3(r53,l0)(cost 0)
      Pushing a2(r54,l0)(cost 0)
      Popping a2(r54,l0)  -- assign reg 8
      Popping a3(r53,l0)  -- assign reg 8
      Popping a1(r46,l0)  -- assign reg 2
      Popping a4(r49,l0)  -- assign reg 8
      Popping a5(r43,l0)  -- assign reg 9
      Popping a6(r48,l0)  -- assign reg 8
      Popping a0(r42,l0)  -- assign reg 2
Disposition:
    0:r42  l0     2    5:r43  l0     9    1:r46  l0     2    6:r48  l0     8
    4:r49  l0     8    3:r53  l0     8    2:r54  l0     8
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_enableTracking

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2]
;;  ref usage 	r0={2d} r1={1d,8u} r2={2d,3u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={1d,6u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={3d,1u} r43={1d,1u} r46={1d,2u} r48={1d,1u} r49={1d,1u} r53={1d,1u} r54={1d,1u} 
;;    total ref usage 86{47d,39u,0e} in 17{16 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 46 48 49
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 46 [ tryBcnInfo ])
        (zero_extend:SI (reg:QI 2 a2 [ tryBcnInfo ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1792 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ tryBcnInfo ])
        (nil)))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/f:SI 48)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC176") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1793 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 11 10 13 2 (set (reg:SI 43 [ D.6319 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 48)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1793 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (nil)))
(note 13 11 15 2 NOTE_INSN_DELETED)
(note 15 13 45 2 NOTE_INSN_DELETED)
(insn 45 15 16 2 (set (reg:HI 49)
        (const_int 67 [0x43])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1793 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 67 [0x43])
        (nil)))
(jump_insn 16 45 17 2 (set (pc)
        (if_then_else (ne (and:SI (reg:SI 43 [ D.6319 ])
                    (subreg:SI (reg:HI 49) 0))
                (const_int 0 [0]))
            (label_ref:SI 36)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1793 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 49)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6319 ])
            (int_list:REG_BR_PROB 3900 (nil))))
 -> 36)
;;  succ:       5 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(1){ }u13(7){ }u14(16){ }u15(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 53 54
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 53)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC176") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1797 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 19 18 20 3 (set:SI (reg/f:SI 54)
        (plus:SI (reg/f:SI 53)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1797 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 53)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 20 19 21 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 54)
                (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 46 [ tryBcnInfo ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1797 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (nil)))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (ne (reg/v:SI 46 [ tryBcnInfo ])
                (const_int 0 [0]))
            (label_ref:SI 40)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1797 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 46 [ tryBcnInfo ])
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 40)
;;  succ:       4 [39.0%]  (FALLTHRU)
;;              6 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 2378, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [39.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 22 6 4 (call (mem:SI (symbol_ref:SI ("startScan") [flags 0x3]  <function_decl 0x100b50510 startScan>) [0 startScan S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1798 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 6 23 41 4 (set (reg:SI 42 [ D.6318 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1799 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 41 6 42 4 (set (pc)
        (label_ref 24)) 78 {jump}
     (nil)
 -> 24)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 42 41 36)
;; basic block 5, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(1){ }u26(7){ }u27(16){ }u28(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 36 42 35 5 260 "" [1 uses])
(note 35 36 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 35 43 5 (set (reg:SI 42 [ D.6318 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1794 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 43 5 44 5 (set (pc)
        (label_ref 24)) 78 {jump}
     (nil)
 -> 24)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 44 43 40)
;; basic block 6, loop depth 0, count 0, freq 3722, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [61.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(1){ }u30(7){ }u31(16){ }u32(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 40 44 39 6 261 "" [1 uses])
(note 39 40 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 39 24 6 (set (reg:SI 42 [ D.6318 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1799 44 {movsi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       4 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(1){ }u34(7){ }u35(16){ }u36(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 24 7 25 7 259 "" [2 uses])
(note 25 24 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 25 31 7 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6318 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1800 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6318 ])
        (nil)))
(insn 31 30 0 7 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1800 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setPingable (LMIC_setPingable, funcdef_no=55, decl_uid=3361, cgraph_uid=55, symbol_order=62)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
scanning new insn with uid = 34.
verify found no changes in insn with uid = 34.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Reg 49 uninteresting
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 53 uninteresting
Reg 55 uninteresting
Reg 44 uninteresting
Reg 59 uninteresting
Reg 60 uninteresting
Reg 61 uninteresting
Reg 45 uninteresting
Ignoring reg 50 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 49: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 60: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 61: (insn_list:REG_DEP_TRUE 24 (nil))

Pass 0 for finding pseudo/allocno costs

    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r61,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r59,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r49,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a1(r61,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a2(r60,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a3(r59,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a5(r49,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a6(r55,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a10(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 29(l0): point = 1
   Insn 28(l0): point = 3
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 21(l0): point = 15
   Insn 20(l0): point = 17
   Insn 17(l0): point = 19
   Insn 15(l0): point = 21
   Insn 14(l0): point = 23
   Insn 34(l0): point = 25
   Insn 13(l0): point = 27
   Insn 10(l0): point = 29
   Insn 9(l0): point = 31
   Insn 8(l0): point = 33
   Insn 7(l0): point = 35
 a0(r45): [7..8]
 a1(r61): [9..10]
 a2(r60): [11..12]
 a3(r59): [16..17]
 a4(r44): [18..21]
 a5(r49): [20..35]
 a6(r55): [22..23]
 a7(r53): [24..25]
 a8(r54): [24..27]
 a9(r50): [30..33]
 a10(r51): [30..31]
Compressing live ranges: from 38 to 16 - 42%
Ranges after the compression:
 a0(r45): [0..1]
 a1(r61): [2..3]
 a2(r60): [4..5]
 a3(r59): [6..7]
 a4(r44): [8..9]
 a5(r49): [8..15]
 a6(r55): [10..11]
 a7(r53): [12..13]
 a8(r54): [12..13]
 a9(r50): [14..15]
 a10(r51): [14..15]
+++Allocating 56 bytes for conflict table (uncompressed size 88)
;; a0(r45,l0) conflicts:;; a1(r61,l0) conflicts:;; a2(r60,l0) conflicts:;; a3(r59,l0) conflicts:;; a4(r44,l0) conflicts: a5(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r49,l0) conflicts: a4(r44,l0) a6(r55,l0) a7(r53,l0) a8(r54,l0) a9(r50,l0) a10(r51,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a6(r55,l0) conflicts: a5(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r53,l0) conflicts: a5(r49,l0) a8(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r54,l0) conflicts: a5(r49,l0) a7(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r50,l0) conflicts: a5(r49,l0) a10(r51,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a10(r51,l0) conflicts: a5(r49,l0) a9(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r61)<->a2(r60)@76:shuffle
  cp1:a6(r55)<->a7(r53)@125:shuffle
  cp2:a6(r55)<->a8(r54)@125:shuffle
  cp3:a4(r44)<->a6(r55)@125:shuffle
  cp4:a3(r59)<->a4(r44)@125:shuffle
  pref0:a10(r51)<-hr2@125
  regions=1, blocks=6, points=16
    allocnos=11 (big 0), copies=5, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r45 1r61 2r60 3r59 4r44 5r49 6r55 7r53 8r54 9r50 10r51
    modified regnos: 44 45 49 50 51 53 54 55 59 60 61
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@124020
          2:( 3-15)@32000
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r49 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a6r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r50 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Allocno a10r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a6r55-a7r53 (freq=125):
        Result (freq=4000): a6r55(2000) a7r53(2000)
      Forming thread by copy 3:a4r44-a6r55 (freq=125):
        Result (freq=7000): a4r44(3000) a6r55(2000) a7r53(2000)
      Forming thread by copy 4:a3r59-a4r44 (freq=125):
        Result (freq=9000): a3r59(2000) a4r44(3000) a6r55(2000) a7r53(2000)
      Forming thread by copy 0:a1r61-a2r60 (freq=76):
        Result (freq=2440): a1r61(1220) a2r60(1220)
      Pushing a0(r45,l0)(cost 0)
      Pushing a10(r51,l0)(cost 0)
      Pushing a9(r50,l0)(cost 0)
      Pushing a8(r54,l0)(cost 0)
      Pushing a2(r60,l0)(cost 0)
      Pushing a1(r61,l0)(cost 0)
      Pushing a5(r49,l0)(cost 0)
      Pushing a7(r53,l0)(cost 0)
      Pushing a6(r55,l0)(cost 0)
      Pushing a3(r59,l0)(cost 0)
      Pushing a4(r44,l0)(cost 0)
      Popping a4(r44,l0)  -- assign reg 8
      Popping a3(r59,l0)  -- assign reg 8
      Popping a6(r55,l0)  -- assign reg 8
      Popping a7(r53,l0)  -- assign reg 8
      Popping a5(r49,l0)  -- assign reg 9
      Popping a1(r61,l0)  -- assign reg 8
      Popping a2(r60,l0)  -- assign reg 8
      Popping a8(r54,l0)  -- assign reg 10
      Popping a9(r50,l0)  -- assign reg 8
      Popping a10(r51,l0)  -- assign reg 2
      Popping a0(r45,l0)  -- assign reg 2
Disposition:
    4:r44  l0     8    0:r45  l0     2    5:r49  l0     9    9:r50  l0     8
   10:r51  l0     2    7:r53  l0     8    8:r54  l0    10    6:r55  l0     8
    3:r59  l0     8    2:r60  l0     8    1:r61  l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setPingable

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10]
;;  ref usage 	r0={2d} r1={1d,6u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={1d,4u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,2u} r45={1d,1u} r49={1d,3u} r50={1d,1u} r51={1d,1u} r53={1d,1u} r54={1d,1u,1e} r55={1d,1u} r59={1d,1u} r60={1d,1u} r61={1d,1u} 
;;    total ref usage 86{49d,36u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 49 50 51 53 54 55 59
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 49)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC177") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:522 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 7 9 2 (set:SI (reg/f:SI 50)
        (plus:SI (reg/f:SI 49)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:522 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 51)
        (and:SI (reg:SI 2 a2 [ intvExp ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:522 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ intvExp ])
        (nil)))
(insn 10 9 13 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 50)
                (const_int 57 [0x39])) [0 LMIC.ping.intvExp+0 S1 A8])
        (subreg:QI (reg:SI 51) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:522 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 51)
        (expr_list:REG_DEAD (reg/f:SI 50)
            (nil))))
(insn 13 10 34 2 (set (reg:HI 54 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 49)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:523 45 {movhi_internal}
     (nil))
(insn 34 13 14 2 (set (reg:HI 53)
        (const_int 1024 [0x400])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:523 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 1024 [0x400])
        (nil)))
(insn 14 34 15 2 (set (reg:SI 55)
        (ior:SI (subreg:SI (reg:HI 54 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 53) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:523 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 54 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 53)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 54 [ LMIC.opmode ]) 0)
                    (const_int 1024 [0x400]))
                (nil)))))
(insn 15 14 17 2 (set (reg:SI 44 [ D.6322 ])
        (zero_extend:SI (subreg:HI (reg:SI 55) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:523 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 55)
        (nil)))
(insn 17 15 18 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 49)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg/s/v:HI (reg:SI 44 [ D.6322 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:523 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 49)
        (nil)))
(note 18 17 20 2 NOTE_INSN_DELETED)
(insn 20 18 21 2 (set (reg:SI 59)
        (and:SI (reg:SI 44 [ D.6322 ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6322 ])
        (nil)))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (ne (reg:SI 59)
                (const_int 0 [0]))
            (label_ref:SI 32)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 59)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 32)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              5 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 60 61
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg/f:SI 60)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC177") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 24 23 25 3 (set:SI (reg/f:SI 61)
        (plus:SI (reg/f:SI 60)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 60)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 25 24 26 3 (set (reg:SI 45 [ D.6321 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 61)
                    (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 61)
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (ne (reg:SI 45 [ D.6321 ])
                (const_int 0 [0]))
            (label_ref:SI 32)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:526 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6321 ])
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 32)
;;  succ:       4 [39.0%]  (FALLTHRU)
;;              5 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 2378, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [39.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(1){ }u28(7){ }u29(16){ }u30(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:527 44 {movsi_internal}
     (nil))
(call_insn 29 28 32 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("LMIC_enableTracking") [flags 0x3]  <function_decl 0x100b28bd0 LMIC_enableTracking>) [0 LMIC_enableTracking S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:527 82 {call_value_internal}
     (expr_list:REG_UNUSED (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              2 [39.0%] 
;;              3 [61.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(1){ }u34(7){ }u35(16){ }u36(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 32 29 33 5 262 "" [2 uses])
(note 33 32 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_startJoining (LMIC_startJoining, funcdef_no=96, decl_uid=3336, cgraph_uid=96, symbol_order=104)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
scanning new insn with uid = 68.
verify found no changes in insn with uid = 68.
deleting insn with uid = 44.
scanning new insn with uid = 69.
verify found no changes in insn with uid = 69.
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 51 uninteresting
Reg 43 uninteresting
Reg 52 uninteresting
Reg 44: local to bb 3 def dominates all uses has unique first use
Reg 53 uninteresting
Reg 58: local to bb 5 def dominates all uses has unique first use
Reg 59 uninteresting
Reg 62: local to bb 5 def dominates all uses has unique first use
Reg 64 uninteresting
Reg 63 uninteresting
Reg 66 uninteresting
Reg 72 uninteresting
Reg 74 uninteresting
Found def insn 12 for 44 to be not moveable
Ignoring reg 58 with equiv init insn
Found def insn 30 for 62 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 69 (nil))
init_insns for 58: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 59: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 64: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 66: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 68 (nil))

Pass 0 for finding pseudo/allocno costs

    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r73,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r72,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r66,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r62,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r59,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r58,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r51,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r58,l0) costs: ACC_REG:14640,14640 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:78080,78080 MEM:14640,14640
  a2(r74,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a3(r72,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a4(r73,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a5(r59,l0) costs: ACC_REG:7320,7320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:39040,39040 MEM:9760,9760
  a6(r66,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a7(r63,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a8(r64,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a9(r62,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a10(r53,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a11(r44,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a12(r52,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a13(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a14(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 60(l0): point = 0
   Insn 59(l0): point = 2
   Insn 4(l0): point = 5
   Insn 66(l0): point = 8
   Insn 3(l0): point = 10
   Insn 52(l0): point = 12
   Insn 51(l0): point = 14
   Insn 50(l0): point = 16
   Insn 47(l0): point = 18
   Insn 46(l0): point = 20
   Insn 68(l0): point = 22
   Insn 45(l0): point = 24
   Insn 41(l0): point = 26
   Insn 40(l0): point = 28
   Insn 37(l0): point = 30
   Insn 35(l0): point = 32
   Insn 33(l0): point = 34
   Insn 32(l0): point = 36
   Insn 31(l0): point = 38
   Insn 30(l0): point = 40
   Insn 27(l0): point = 42
   Insn 26(l0): point = 44
   Insn 25(l0): point = 46
   Insn 22(l0): point = 49
   Insn 21(l0): point = 51
   Insn 20(l0): point = 53
   Insn 17(l0): point = 56
   Insn 69(l0): point = 58
   Insn 12(l0): point = 60
   Insn 11(l0): point = 62
   Insn 9(l0): point = 65
   Insn 8(l0): point = 67
   Insn 7(l0): point = 69
 a0(r42): [8..10] [3..5]
 a1(r58): [19..46]
 a2(r74): [19..20]
 a3(r72): [21..22]
 a4(r73): [21..24]
 a5(r59): [29..44]
 a6(r66): [31..32]
 a7(r63): [35..36]
 a8(r64): [37..38]
 a9(r62): [37..40]
 a10(r53): [57..58]
 a11(r44): [57..60]
 a12(r52): [61..62]
 a13(r43): [66..67]
 a14(r51): [68..69]
Compressing live ranges: from 72 to 22 - 30%
Ranges after the compression:
 a0(r42): [0..3]
 a1(r58): [4..13]
 a2(r74): [4..5]
 a3(r72): [6..7]
 a4(r73): [6..7]
 a5(r59): [8..13]
 a6(r66): [8..9]
 a7(r63): [10..11]
 a8(r64): [12..13]
 a9(r62): [12..13]
 a10(r53): [14..15]
 a11(r44): [14..15]
 a12(r52): [16..17]
 a13(r43): [18..19]
 a14(r51): [20..21]
+++Allocating 88 bytes for conflict table (uncompressed size 120)
;; a0(r42,l0) conflicts:;; a1(r58,l0) conflicts: a2(r74,l0) a3(r72,l0) a4(r73,l0) a6(r66,l0) a5(r59,l0) a7(r63,l0) a8(r64,l0) a9(r62,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r74,l0) conflicts: a1(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r72,l0) conflicts: a1(r58,l0) a4(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r73,l0) conflicts: a1(r58,l0) a3(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r59,l0) conflicts: a1(r58,l0) a6(r66,l0) a7(r63,l0) a8(r64,l0) a9(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r66,l0) conflicts: a1(r58,l0) a5(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r63,l0) conflicts: a1(r58,l0) a5(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r64,l0) conflicts: a1(r58,l0) a5(r59,l0) a9(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r62,l0) conflicts: a1(r58,l0) a5(r59,l0) a8(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r53,l0) conflicts: a11(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r44,l0) conflicts: a10(r53,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r52,l0) conflicts:;; a13(r43,l0) conflicts:;; a14(r51,l0) conflicts:  cp0:a7(r63)<->a8(r64)@76:shuffle
  cp1:a7(r63)<->a9(r62)@76:shuffle
  cp2:a2(r74)<->a3(r72)@76:shuffle
  cp3:a2(r74)<->a4(r73)@76:shuffle
  pref0:a0(r42)<-hr2@2000
  regions=1, blocks=8, points=22
    allocnos=15 (big 0), copies=4, conflicts=0, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r42 1r58 2r74 3r72 4r73 5r59 6r66 7r63 8r64 9r62 10r53 11r44 12r52 13r43 14r51
    modified regnos: 42 43 44 51 52 53 58 59 62 63 64 66 72 73 74
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@137600
          2:( 2-7)@29280
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r58 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a7r63-a8r64 (freq=76):
        Result (freq=2440): a7r63(1220) a8r64(1220)
      Forming thread by copy 2:a2r74-a3r72 (freq=76):
        Result (freq=2440): a2r74(1220) a3r72(1220)
      Pushing a12(r52,l0)(cost 0)
      Pushing a11(r44,l0)(cost 0)
      Pushing a10(r53,l0)(cost 0)
      Pushing a9(r62,l0)(cost 0)
      Pushing a6(r66,l0)(cost 0)
      Pushing a4(r73,l0)(cost 0)
        Making a1(r58,l0) colorable
      Pushing a14(r51,l0)(cost 0)
      Pushing a13(r43,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a8(r64,l0)(cost 0)
      Pushing a7(r63,l0)(cost 0)
      Pushing a5(r59,l0)(cost 0)
      Pushing a3(r72,l0)(cost 0)
      Pushing a2(r74,l0)(cost 0)
      Pushing a1(r58,l0)(cost 14640)
      Popping a1(r58,l0)  -- assign reg 2
      Popping a2(r74,l0)  -- assign reg 8
      Popping a3(r72,l0)  -- assign reg 8
      Popping a5(r59,l0)  -- assign reg 8
      Popping a7(r63,l0)  -- assign reg 9
      Popping a8(r64,l0)  -- assign reg 9
      Popping a0(r42,l0)  -- assign reg 2
      Popping a13(r43,l0)  -- assign reg 2
      Popping a14(r51,l0)  -- assign reg 2
      Popping a4(r73,l0)  -- assign reg 9
      Popping a6(r66,l0)  -- assign reg 9
      Popping a9(r62,l0)  -- assign reg 10
      Popping a10(r53,l0)  -- assign reg 2
      Popping a11(r44,l0)  -- assign reg 8
      Popping a12(r52,l0)  -- assign reg 2
Disposition:
    0:r42  l0     2   13:r43  l0     2   11:r44  l0     8   14:r51  l0     2
   12:r52  l0     2   10:r53  l0     2    1:r58  l0     2    5:r59  l0     8
    9:r62  l0    10    7:r63  l0     9    8:r64  l0     9    6:r66  l0     9
    3:r72  l0     8    4:r73  l0     9    2:r74  l0     8
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_startJoining

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11]
;;  ref usage 	r0={4d} r1={1d,10u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,7u} r8={3d} r9={3d} r10={5d,2u} r11={5d,2u} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={1d,6u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r42={2d,1u} r43={1d,1u} r44={1d,1u} r51={1d,1u} r52={1d,1u} r53={1d,1u} r58={1d,7u} r59={1d,3u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r66={1d,1u} r72={1d,1u} r73={1d,1u,1e} r74={1d,1u} 
;;    total ref usage 172{112d,59u,1e} in 33{30 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 51
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC178") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1847 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 43 [ D.6325 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 51)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1847 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:SI 43 [ D.6325 ])
                (const_int 0 [0]))
            (label_ref:SI 65)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1847 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6325 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 65)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              6 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(1){ }u7(7){ }u8(16){ }u9(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44 52 53
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC178") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 12 11 14 3 (set (reg:SI 44 [ D.6326 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 52)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 52)
        (nil)))
(note 14 12 16 3 NOTE_INSN_DELETED)
(note 16 14 69 3 NOTE_INSN_DELETED)
(insn 69 16 17 3 (set (reg:HI 53)
        (const_int 144 [0x90])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 144 [0x90])
        (nil)))
(jump_insn 17 69 18 3 (set (pc)
        (if_then_else (eq (and:SI (reg:SI 44 [ D.6326 ])
                    (subreg:SI (reg:HI 53) 0))
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 53)
        (expr_list:REG_DEAD (reg:SI 44 [ D.6326 ])
            (int_list:REG_BR_PROB 7100 (nil))))
 -> 23)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 1769, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 19 18 20 4 NOTE_INSN_DELETED)
(insn 20 19 21 4 (set (reg:SI 11 a11)
        (const_int 1849 [0x739])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 44 {movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC179") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 22 21 23 4 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1849 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 [71.0%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 58 59 62 63 64 66 72 73 74
(code_label 23 22 24 5 266 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 58)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC178") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1851 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 26 25 27 5 (set (reg:QI 59)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1851 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 27 26 30 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 58)
                (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8])
        (reg:QI 59)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1851 46 {movqi_internal}
     (nil))
(insn 30 27 31 5 (set (reg:HI 62 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 58)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1853 45 {movhi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:SI 64)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC180") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1853 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -6178 [0xffffffffffffe7de])
        (nil)))
(insn 32 31 33 5 (set (reg:SI 63)
        (and:SI (subreg:SI (reg:HI 62 [ LMIC.opmode ]) 0)
            (reg:SI 64))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1853 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 64)
        (expr_list:REG_DEAD (reg:HI 62 [ LMIC.opmode ])
            (nil))))
(insn 33 32 35 5 (set (mem/j/c:HI (plus:SI (reg/f:SI 58)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 63) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1853 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 35 33 37 5 (set:SI (reg/f:SI 66)
        (plus:SI (reg/f:SI 58)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1855 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 37 35 40 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (reg:QI 59)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1855 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 66)
        (nil)))
(insn 40 37 41 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 58)
                (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16])
        (reg:QI 59)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1855 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 59)
        (nil)))
(call_insn 41 40 45 5 (call (mem:SI (symbol_ref:SI ("initJoinLoop") [flags 0x3]  <function_decl 0x100b7ca20 initJoinLoop>) [0 initJoinLoop S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1856 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 45 41 68 5 (set (reg:HI 73 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 58)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1857 45 {movhi_internal}
     (nil))
(insn 68 45 46 5 (set (reg:HI 72)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1857 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))
(insn 46 68 47 5 (set (reg:SI 74)
        (ior:SI (subreg:SI (reg:HI 73 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 72) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1857 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 73 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 72)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 73 [ LMIC.opmode ]) 0)
                    (const_int 4 [0x4]))
                (nil)))))
(insn 47 46 48 5 (set (mem/j/c:HI (plus:SI (reg/f:SI 58)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 74) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1857 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 74)
        (expr_list:REG_DEAD (reg/f:SI 58)
            (nil))))
(note 48 47 49 5 NOTE_INSN_DELETED)
(note 49 48 50 5 NOTE_INSN_DELETED)
(insn 50 49 51 5 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC181") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1859 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("startJoining") [flags 0x3]  <function_decl 0x100bc3948 startJoining>)
        (nil)))
(insn 51 50 52 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC182") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1859 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 52 51 3 5 (call (mem:SI (symbol_ref:SI ("os_setCallback") [flags 0x41]  <function_decl 0x140efa1b0 os_setCallback>) [0 os_setCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1859 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 3 52 66 5 (set (reg:SI 42 [ D.6324 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1860 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 66 3 67 5 (set (pc)
        (label_ref 53)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1860 78 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 67 66 65)
;; basic block 6, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       2 [39.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(1){ }u53(7){ }u54(16){ }u55(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 65 67 64 6 267 "" [1 uses])
(note 64 65 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 64 53 6 (set (reg:SI 42 [ D.6324 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1862 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(1){ }u57(7){ }u58(16){ }u59(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 53 4 54 7 265 "" [1 uses])
(note 54 53 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 54 60 7 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6324 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1863 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6324 ])
        (nil)))
(insn 60 59 0 7 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1863 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function engineUpdate (engineUpdate, funcdef_no=102, decl_uid=3377, cgraph_uid=102, symbol_order=110)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 96 count 68 (  1.1)
scanning new insn with uid = 573.
verify found no changes in insn with uid = 573.
deleting insn with uid = 498.
scanning new insn with uid = 574.
verify found no changes in insn with uid = 574.
deleting insn with uid = 311.
scanning new insn with uid = 575.
verify found no changes in insn with uid = 575.
deleting insn with uid = 278.
scanning new insn with uid = 576.
verify found no changes in insn with uid = 576.
deleting insn with uid = 206.
scanning new insn with uid = 577.
verify found no changes in insn with uid = 577.
deleting insn with uid = 86.
scanning new insn with uid = 578.
verify found no changes in insn with uid = 578.
deleting insn with uid = 80.
scanning new insn with uid = 579.
verify found no changes in insn with uid = 579.
deleting insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 96 count 68 (  1.1)
Reg 148 uninteresting
Reg 50: def dominates all uses has unique first use
Reg 151 uninteresting
Reg 155 uninteresting
Reg 53 uninteresting
Reg 160 uninteresting
Reg 57 uninteresting
Reg 59: local to bb 7 def dominates all uses has unique first use
Reg 165 uninteresting
Reg 60 uninteresting
Reg 61 uninteresting
Reg 168 uninteresting
Reg 62 uninteresting
Reg 169 uninteresting
Reg 63 uninteresting (no unique first use)
Reg 170 uninteresting
Reg 174 uninteresting
Reg 64 uninteresting (no unique first use)
Reg 178 uninteresting
Reg 69 uninteresting
Reg 183 uninteresting
Reg 186: local to bb 16 def dominates all uses has unique first use
Reg 188 uninteresting
Reg 187 uninteresting
Reg 190 uninteresting
Reg 192 uninteresting
Reg 75 uninteresting
Reg 193 uninteresting
Reg 76 uninteresting
Reg 198 uninteresting
Reg 78 uninteresting
Reg 79 uninteresting
Reg 200 uninteresting
Reg 81 uninteresting
Reg 82 uninteresting
Reg 83 uninteresting
Reg 207 uninteresting
Reg 208 uninteresting
Reg 86 uninteresting
Reg 87 uninteresting
Reg 210 uninteresting
Reg 211 uninteresting
Reg 92 uninteresting
Reg 216 uninteresting
Reg 217 uninteresting
Reg 124 uninteresting
Reg 125: local to bb 32 def dominates all uses has unique first use
Reg 218 uninteresting
Reg 219 uninteresting
Reg 220 uninteresting
Reg 126: def dominates all uses has unique first use
Reg 222: local to bb 38 def dominates all uses has unique first use
Reg 221 uninteresting
Reg 223 uninteresting
Reg 89: local to bb 39 def dominates all uses has unique first use
Reg 224 uninteresting
Reg 227 uninteresting
Reg 228 uninteresting
Reg 90 uninteresting
Reg 229 uninteresting
Reg 91 uninteresting
Reg 231: local to bb 43 def dominates all uses has unique first use
Reg 230 uninteresting
Reg 135: local to bb 44 def dominates all uses has unique first use
Reg 232 uninteresting
Reg 137 uninteresting
Reg 233 uninteresting
Reg 96 uninteresting
Reg 130: local to bb 44 def dominates all uses has unique first use
Reg 234 uninteresting
Reg 236 uninteresting
Reg 133 uninteresting
Reg 97: local to bb 44 def dominates all uses has unique first use
Reg 246 uninteresting
Reg 245: local to bb 44 def dominates all uses has unique first use
Reg 249 uninteresting
Reg 248 uninteresting
Reg 251 uninteresting
Reg 103 uninteresting
Reg 260 uninteresting
Reg 106 uninteresting
Reg 268 uninteresting
Reg 109 uninteresting
Reg 110 uninteresting
Reg 270 uninteresting
Reg 111 uninteresting
Reg 112 uninteresting
Ignoring reg 113, has equiv memory
Reg 114 uninteresting
Reg 140: local to bb 54 def dominates all uses has unique first use
Reg 278 uninteresting
Reg 142 uninteresting
Reg 143 uninteresting
Reg 282 uninteresting
Reg 284 uninteresting
Reg 288 uninteresting
Reg 115 uninteresting
Reg 116 uninteresting
Reg 291 uninteresting
Reg 117: local to bb 56 def dominates all uses has unique first use
Reg 119 uninteresting
Reg 296 uninteresting
Reg 120 uninteresting
Ignoring reg 121, has equiv memory
Reg 122 uninteresting
Reg 301: local to bb 60 def dominates all uses has unique first use
Reg 300 uninteresting
Reg 50 not local to one basic block
Examining insn 58, def for 59
  all ok and transp
      Creating newreg=307 from oldreg=59
rescanning insn with uid = 58.
scanning new insn with uid = 580.
Found def insn 286 for 89 to be not moveable
Found def insn 342 for 97 to be not moveable
Found def insn 467 for 117 to be not moveable
Found def insn 254 for 125 to be not moveable
Reg 126 not local to one basic block
Examining insn 329, def for 130
  all ok
Examining insn 318, def for 135
  all ok
Examining insn 433, def for 140
  all ok
Found def insn 127 for 186 to be not moveable
Ignoring reg 222 with equiv init insn
Ignoring reg 231 with equiv init insn
Examining insn 346, def for 245
  all ok
Ignoring reg 301 with equiv init insn
    New r307: setting preferred AR_REGS, alternative ALL_REGS
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
;;
;; Loop 1
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34 32 33
;; 2 succs { 63 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 63 }
;; 6 succs { 7 10 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 48 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 28 }
;; 23 succs { 24 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 50 }
;; 28 succs { 29 45 }
;; 29 succs { 30 39 }
;; 30 succs { 31 37 }
;; 31 succs { 35 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 32 36 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 44 }
;; 39 succs { 40 41 }
;; 40 succs { 63 }
;; 41 succs { 42 43 }
;; 42 succs { 40 43 }
;; 43 succs { 44 }
;; 44 succs { 63 }
;; 45 succs { 62 46 }
;; 46 succs { 47 50 }
;; 47 succs { 50 }
;; 48 succs { 63 49 }
;; 49 succs { 50 }
;; 50 succs { 51 57 }
;; 51 succs { 52 57 }
;; 52 succs { 53 54 }
;; 53 succs { 62 54 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 63 }
;; 57 succs { 58 59 }
;; 58 succs { 62 59 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 96 count 68 (  1.1)
init_insns for 113: (insn_list:REG_DEP_TRUE 425 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 492 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 579 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 165: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 71 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 578 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 577 (nil))
init_insns for 178: (insn_list:REG_DEP_TRUE 111 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 122 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 128 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 142 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 155 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 159 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 168 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 184 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 576 (nil))
init_insns for 208: (insn_list:REG_DEP_TRUE 216 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 228 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 233 (nil))
init_insns for 216: (insn_list:REG_DEP_TRUE 241 (nil))
init_insns for 217: (insn_list:REG_DEP_TRUE 252 (nil))
init_insns for 218: (insn_list:REG_DEP_TRUE 255 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 575 (nil))
init_insns for 222: (insn_list:REG_DEP_TRUE 279 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 285 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 287 (nil))
init_insns for 227: (insn_list:REG_DEP_TRUE 300 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 301 (nil))
init_insns for 229: (insn_list:REG_DEP_TRUE 305 (nil))
init_insns for 230: (insn_list:REG_DEP_TRUE 574 (nil))
init_insns for 231: (insn_list:REG_DEP_TRUE 312 (nil))
init_insns for 232: (insn_list:REG_DEP_TRUE 322 (nil))
init_insns for 233: (insn_list:REG_DEP_TRUE 325 (nil))
init_insns for 234: (insn_list:REG_DEP_TRUE 330 (nil))
init_insns for 246: (insn_list:REG_DEP_TRUE 345 (nil))
init_insns for 249: (insn_list:REG_DEP_TRUE 348 (nil))
init_insns for 251: (insn_list:REG_DEP_TRUE 366 (nil))
init_insns for 260: (insn_list:REG_DEP_TRUE 390 (nil))
init_insns for 268: (insn_list:REG_DEP_TRUE 409 (nil))
init_insns for 269: (insn_list:REG_DEP_TRUE 415 (nil))
init_insns for 270: (insn_list:REG_DEP_TRUE 416 (nil))
init_insns for 278: (insn_list:REG_DEP_TRUE 437 (nil))
init_insns for 282: (insn_list:REG_DEP_TRUE 445 (nil))
init_insns for 288: (insn_list:REG_DEP_TRUE 453 (nil))
init_insns for 291: (insn_list:REG_DEP_TRUE 466 (nil))
init_insns for 295: (insn_list:REG_DEP_TRUE 486 (nil))
init_insns for 296: (insn_list:REG_DEP_TRUE 487 (nil))
init_insns for 300: (insn_list:REG_DEP_TRUE 573 (nil))
init_insns for 301: (insn_list:REG_DEP_TRUE 499 (nil))

Pass 0 for finding pseudo/allocno costs

    r307: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a103 (r307,l0) best AR_REGS, allocno AR_REGS
    r301: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r301,l0) best AR_REGS, allocno AR_REGS
    r300: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r300,l0) best AR_REGS, allocno AR_REGS
    r296: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r296,l0) best AR_REGS, allocno AR_REGS
    r295: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r295,l0) best AR_REGS, allocno AR_REGS
    r291: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r291,l0) best AR_REGS, allocno AR_REGS
    r288: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r288,l0) best AR_REGS, allocno AR_REGS
    r284: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r284,l0) best AR_REGS, allocno AR_REGS
    r282: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r282,l0) best AR_REGS, allocno AR_REGS
    r281: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r281,l0) best AR_REGS, allocno AR_REGS
    r278: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r278,l0) best AR_REGS, allocno AR_REGS
    r270: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r270,l0) best AR_REGS, allocno AR_REGS
    r269: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r269,l0) best AR_REGS, allocno AR_REGS
    r268: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r268,l0) best AR_REGS, allocno AR_REGS
    r260: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r260,l0) best AR_REGS, allocno AR_REGS
    r251: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r251,l0) best AR_REGS, allocno AR_REGS
    r249: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r249,l0) best AR_REGS, allocno AR_REGS
    r248: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r248,l0) best AR_REGS, allocno AR_REGS
    r246: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r246,l0) best AR_REGS, allocno AR_REGS
    r245: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r245,l0) best AR_REGS, allocno AR_REGS
    r236: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r236,l0) best AR_REGS, allocno AR_REGS
    r234: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r234,l0) best AR_REGS, allocno AR_REGS
    r233: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r233,l0) best AR_REGS, allocno AR_REGS
    r232: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r232,l0) best AR_REGS, allocno AR_REGS
    r231: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r231,l0) best AR_REGS, allocno AR_REGS
    r230: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r230,l0) best AR_REGS, allocno AR_REGS
    r229: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r229,l0) best AR_REGS, allocno AR_REGS
    r228: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r228,l0) best AR_REGS, allocno AR_REGS
    r227: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r227,l0) best AR_REGS, allocno AR_REGS
    r224: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r224,l0) best AR_REGS, allocno AR_REGS
    r223: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r223,l0) best AR_REGS, allocno AR_REGS
    r222: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r222,l0) best AR_REGS, allocno AR_REGS
    r221: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r221,l0) best AR_REGS, allocno AR_REGS
    r220: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a116 (r220,l1) best AR_REGS, allocno AR_REGS
    r219: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a117 (r219,l1) best AR_REGS, allocno AR_REGS
    r218: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a118 (r218,l1) best AR_REGS, allocno AR_REGS
    r217: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a121 (r217,l1) best AR_REGS, allocno AR_REGS
    r216: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r216,l0) best AR_REGS, allocno AR_REGS
    r211: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r211,l0) best AR_REGS, allocno AR_REGS
    r210: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r210,l0) best AR_REGS, allocno AR_REGS
    r208: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r208,l0) best AR_REGS, allocno AR_REGS
    r207: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r207,l0) best AR_REGS, allocno AR_REGS
    r200: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r200,l0) best AR_REGS, allocno AR_REGS
    r198: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a83 (r198,l0) best AR_REGS, allocno AR_REGS
    r193: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a85 (r193,l0) best AR_REGS, allocno AR_REGS
    r192: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a87 (r192,l0) best AR_REGS, allocno AR_REGS
    r190: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a88 (r190,l0) best AR_REGS, allocno AR_REGS
    r188: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a91 (r188,l0) best AR_REGS, allocno AR_REGS
    r187: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a90 (r187,l0) best AR_REGS, allocno AR_REGS
    r186: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a92 (r186,l0) best AR_REGS, allocno AR_REGS
    r183: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a89 (r183,l0) best AR_REGS, allocno AR_REGS
    r178: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a94 (r178,l0) best AR_REGS, allocno AR_REGS
    r174: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a95 (r174,l0) best AR_REGS, allocno AR_REGS
    r170: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a96 (r170,l0) best AR_REGS, allocno AR_REGS
    r169: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a97 (r169,l0) best AR_REGS, allocno AR_REGS
    r168: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a99 (r168,l0) best AR_REGS, allocno AR_REGS
    r165: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a104 (r165,l0) best AR_REGS, allocno AR_REGS
    r160: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a106 (r160,l0) best AR_REGS, allocno AR_REGS
    r155: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a109 (r155,l0) best AR_REGS, allocno AR_REGS
    r151: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a110 (r151,l0) best AR_REGS, allocno AR_REGS
    r148: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a111 (r148,l0) best AR_REGS, allocno AR_REGS
    r143: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r143,l0) best AR_REGS, allocno AR_REGS
    r142: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r142,l0) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r140,l0) best AR_REGS, allocno AR_REGS
    r138: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r138,l0) best AR_REGS, allocno AR_REGS
    r137: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r137,l0) best AR_REGS, allocno AR_REGS
    r135: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r135,l0) best AR_REGS, allocno AR_REGS
    r133: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r133,l0) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r130,l0) best AR_REGS, allocno AR_REGS
    r126: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a115 (r126,l1) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a119 (r125,l1) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a120 (r124,l1) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r122,l0) best AR_REGS, allocno AR_REGS
    r121: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r121,l0) best AR_REGS, allocno AR_REGS
    r120: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r120,l0) best AR_REGS, allocno AR_REGS
    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r119,l0) best AR_REGS, allocno AR_REGS
    r117: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r117,l0) best AR_REGS, allocno AR_REGS
    r116: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r116,l0) best AR_REGS, allocno AR_REGS
    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r115,l0) best AR_REGS, allocno AR_REGS
    r114: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r114,l0) best AR_REGS, allocno AR_REGS
    r113: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r113,l0) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r112,l0) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r111,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r110,l0) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r109,l0) best AR_REGS, allocno AR_REGS
    r106: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r106,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r103,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r97,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r96,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r92,l0) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r91,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r90,l0) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r89,l0) best AR_REGS, allocno AR_REGS
    r87: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r87,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r86,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r82,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r81,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a82 (r79,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r78,l0) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a84 (r76,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a86 (r75,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a93 (r69,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a98 (r62,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a100 (r61,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a101 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a102 (r59,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a105 (r57,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a114 (r55,l1) best AR_REGS, allocno AR_REGS
    a5 (r55,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a108 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a113 (r51,l1) best AR_REGS, allocno AR_REGS
    a66 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a107 (r50,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a112 (r46,l1) best AR_REGS, allocno AR_REGS
    a43 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r43,l0) costs: ACC_REG:6954,6954 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:37088,37088 MEM:9272,9272
  a1(r42,l0) costs: ACC_REG:3474,3474 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18528,18528 MEM:4632,4632
  a2(r300,l0) costs: ACC_REG:894,894 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4768,4768 MEM:0,0
  a3(r301,l0) costs: ACC_REG:894,894 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4768,4768 MEM:0,0
  a4(r122,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:1640,1640
  a5(r55,l0) costs: ACC_REG:4416,4416 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23552,23552 MEM:5888,5888
  a6(r295,l0) costs: ACC_REG:3690,3690 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19680,19680 MEM:3280,3280
  a7(r121,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:0,0
  a8(r120,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:1640,1640
  a9(r296,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:1640,1640
  a10(r119,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:1440,1440
  a11(r117,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a12(r291,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:0,0
  a13(r116,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a14(r115,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a15(r112,l0) costs: ACC_REG:333,333 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1776,1776 MEM:444,444
  a16(r270,l0) costs: ACC_REG:444,444 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2368,2368 MEM:592,592
  a17(r288,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a18(r269,l0) costs: ACC_REG:999,999 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5328,5328 MEM:1036,1036
  a19(r284,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a20(r282,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a21(r281,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a22(r143,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a23(r142,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a24(r278,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:0,0
  a25(r140,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a26(r114,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a27(r113,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:0,0
  a28(r111,l0) costs: ACC_REG:222,222 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1184,1184 MEM:296,296
  a29(r110,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a30(r109,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:168,168
  a31(r268,l0) costs: ACC_REG:126,126 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:672,672 MEM:0,0
  a32(r106,l0) costs: ACC_REG:1782,1782 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9504,9504 MEM:2376,2376
  a33(r260,l0) costs: ACC_REG:1782,1782 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9504,9504 MEM:0,0
  a34(r63,l0) costs: ACC_REG:4680,4680 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24960,24960 MEM:6240,6240
  a35(r103,l0) costs: ACC_REG:840,840 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4480,4480 MEM:1120,1120
  a36(r251,l0) costs: ACC_REG:840,840 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4480,4480 MEM:0,0
  a37(r233,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:688,688
  a38(r248,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a39(r249,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:0,0
  a40(r245,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a41(r246,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:0,0
  a42(r97,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a43(r46,l0) costs: ACC_REG:411,1368 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2192,7296 MEM:548,1824
  a44(r133,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a45(r130,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a46(r236,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a47(r234,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a48(r138,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a49(r96,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a50(r137,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a51(r232,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:0,0
  a52(r135,l0) costs: ACC_REG:258,258 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1376,1376 MEM:344,344
  a53(r230,l0) costs: ACC_REG:102,102 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:544,544 MEM:0,0
  a54(r231,l0) costs: ACC_REG:102,102 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:544,544 MEM:0,0
  a55(r91,l0) costs: ACC_REG:84,84 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:448,448 MEM:112,112
  a56(r229,l0) costs: ACC_REG:84,84 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:448,448 MEM:0,0
  a57(r90,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a58(r228,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:160,160
  a59(r227,l0) costs: ACC_REG:120,120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:640,640 MEM:0,0
  a60(r89,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:200,200
  a61(r224,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:200,200
  a62(r223,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:0,0
  a63(r221,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:0,0
  a64(r222,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:0,0
  a65(r44,l0) costs: ACC_REG:153,153 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:816,816 MEM:204,204
  a66(r51,l0) costs: ACC_REG:39,1290 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:208,6880 MEM:52,1720
  a67(r216,l0) costs: ACC_REG:78,78 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:416,416 MEM:0,0
  a68(r92,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:200,200
  a69(r211,l0) costs: ACC_REG:150,150 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:800,800 MEM:0,0
  a70(r64,l0) costs: ACC_REG:2103,2103 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11216,11216 MEM:2804,2804
  a71(r210,l0) costs: ACC_REG:306,306 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1632,1632 MEM:0,0
  a72(r87,l0) costs: ACC_REG:1146,1146 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6112,6112 MEM:1528,1528
  a73(r86,l0) costs: ACC_REG:1146,1146 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6112,6112 MEM:1528,1528
  a74(r208,l0) costs: ACC_REG:1146,1146 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6112,6112 MEM:1528,1528
  a75(r207,l0) costs: ACC_REG:408,408 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2176,2176 MEM:0,0
  a76(r83,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a77(r82,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a78(r45,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a79(r81,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a80(r200,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:0,0
  a81(r78,l0) costs: ACC_REG:1320,1320 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7040,7040 MEM:1760,1760
  a82(r79,l0) costs: ACC_REG:1170,1170 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6240,6240 MEM:1560,1560
  a83(r198,l0) costs: ACC_REG:1170,1170 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6240,6240 MEM:0,0
  a84(r76,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a85(r193,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:0,0
  a86(r75,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a87(r192,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:0,0
  a88(r190,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:0,0
  a89(r183,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:1040,1040
  a90(r187,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a91(r188,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:0,0
  a92(r186,l0) costs: ACC_REG:780,780 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4160,4160 MEM:1040,1040
  a93(r69,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a94(r178,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:0,0
  a95(r174,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a96(r170,l0) costs: ACC_REG:3120,3120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16640,16640 MEM:4160,4160
  a97(r169,l0) costs: ACC_REG:3120,3120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16640,16640 MEM:0,0
  a98(r62,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a99(r168,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:0,0
  a100(r61,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a101(r60,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a102(r59,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a103(r307,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:2080,2080
  a104(r165,l0) costs: ACC_REG:1560,1560 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8320,8320 MEM:0,0
  a105(r57,l0) costs: ACC_REG:3120,3120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16640,16640 MEM:4160,4160
  a106(r160,l0) costs: ACC_REG:3120,3120 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16640,16640 MEM:0,0
  a107(r50,l0) costs: ACC_REG:7299,7299 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38928,38928 MEM:9732,9732
  a108(r53,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a109(r155,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a110(r151,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a111(r148,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a112(r46,l1) costs: ACC_REG:957,957 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5104,5104 MEM:1276,1276
  a113(r51,l1) costs: ACC_REG:1251,1251 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6672,6672 MEM:1668,1668
  a114(r55,l1) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a115(r126,l1) costs: ACC_REG:822,822 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4384,4384 MEM:1096,1096
  a116(r220,l1) costs: ACC_REG:858,858 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4576,4576 MEM:1144,1144
  a117(r219,l1) costs: ACC_REG:564,564 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3008,3008 MEM:752,752
  a118(r218,l1) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a119(r125,l1) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a120(r124,l1) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a121(r217,l1) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:0,0

   Insn 524(l0): point = 1
   Insn 523(l0): point = 3
   Insn 522(l0): point = 5
   Insn 521(l0): point = 7
   Insn 571(l0): point = 10
   Insn 512(l0): point = 12
   Insn 511(l0): point = 14
   Insn 510(l0): point = 16
   Insn 509(l0): point = 18
   Insn 569(l0): point = 21
   Insn 502(l0): point = 23
   Insn 501(l0): point = 25
   Insn 500(l0): point = 27
   Insn 573(l0): point = 29
   Insn 499(l0): point = 31
   Insn 496(l0): point = 34
   Insn 495(l0): point = 36
   Insn 494(l0): point = 38
   Insn 492(l0): point = 40
   Insn 490(l0): point = 42
   Insn 488(l0): point = 44
   Insn 487(l0): point = 46
   Insn 486(l0): point = 48
   Insn 485(l0): point = 50
   Insn 482(l0): point = 53
   Insn 481(l0): point = 55
   Insn 479(l0): point = 58
   Insn 567(l0): point = 61
   Insn 474(l0): point = 63
   Insn 473(l0): point = 65
   Insn 472(l0): point = 67
   Insn 471(l0): point = 69
   Insn 467(l0): point = 71
   Insn 466(l0): point = 73
   Insn 463(l0): point = 76
   Insn 462(l0): point = 78
   Insn 461(l0): point = 80
   Insn 457(l0): point = 83
   Insn 456(l0): point = 85
   Insn 455(l0): point = 87
   Insn 454(l0): point = 89
   Insn 453(l0): point = 91
   Insn 450(l0): point = 93
   Insn 447(l0): point = 95
   Insn 445(l0): point = 97
   Insn 444(l0): point = 99
   Insn 439(l0): point = 101
   Insn 438(l0): point = 103
   Insn 437(l0): point = 105
   Insn 433(l0): point = 107
   Insn 430(l0): point = 109
   Insn 427(l0): point = 111
   Insn 425(l0): point = 113
   Insn 423(l0): point = 115
   Insn 421(l0): point = 117
   Insn 419(l0): point = 119
   Insn 417(l0): point = 121
   Insn 416(l0): point = 123
   Insn 415(l0): point = 125
   Insn 412(l0): point = 128
   Insn 411(l0): point = 130
   Insn 410(l0): point = 132
   Insn 409(l0): point = 134
   Insn 407(l0): point = 137
   Insn 405(l0): point = 140
   Insn 402(l0): point = 142
   Insn 401(l0): point = 144
   Insn 400(l0): point = 146
   Insn 396(l0): point = 149
   Insn 391(l0): point = 151
   Insn 390(l0): point = 153
   Insn 10(l0): point = 156
   Insn 386(l0): point = 159
   Insn 565(l0): point = 162
   Insn 376(l0): point = 164
   Insn 374(l0): point = 167
   Insn 372(l0): point = 170
   Insn 367(l0): point = 172
   Insn 366(l0): point = 174
   Insn 365(l0): point = 176
   Insn 364(l0): point = 178
   Insn 363(l0): point = 180
   Insn 362(l0): point = 182
   Insn 359(l0): point = 184
   Insn 563(l0): point = 187
   Insn 354(l0): point = 189
   Insn 353(l0): point = 191
   Insn 352(l0): point = 193
   Insn 351(l0): point = 195
   Insn 350(l0): point = 197
   Insn 349(l0): point = 199
   Insn 348(l0): point = 201
   Insn 346(l0): point = 203
   Insn 345(l0): point = 205
   Insn 342(l0): point = 207
   Insn 340(l0): point = 209
   Insn 338(l0): point = 211
   Insn 336(l0): point = 213
   Insn 332(l0): point = 215
   Insn 330(l0): point = 217
   Insn 329(l0): point = 219
   Insn 326(l0): point = 221
   Insn 325(l0): point = 223
   Insn 324(l0): point = 225
   Insn 323(l0): point = 227
   Insn 322(l0): point = 229
   Insn 318(l0): point = 231
   Insn 313(l0): point = 234
   Insn 574(l0): point = 236
   Insn 312(l0): point = 238
   Insn 310(l0): point = 240
   Insn 561(l0): point = 243
   Insn 295(l0): point = 245
   Insn 294(l0): point = 247
   Insn 293(l0): point = 249
   Insn 307(l0): point = 252
   Insn 306(l0): point = 254
   Insn 305(l0): point = 256
   Insn 303(l0): point = 259
   Insn 302(l0): point = 261
   Insn 301(l0): point = 263
   Insn 300(l0): point = 265
   Insn 288(l0): point = 268
   Insn 287(l0): point = 270
   Insn 286(l0): point = 272
   Insn 285(l0): point = 274
   Insn 559(l0): point = 277
   Insn 280(l0): point = 279
   Insn 575(l0): point = 281
   Insn 279(l0): point = 283
   Insn 277(l0): point = 285
   Insn 276(l0): point = 287
   Insn 8(l0): point = 290
   Insn 557(l0): point = 293
   Insn 7(l0): point = 295
   Insn 555(l0): point = 298
   Insn 242(l0): point = 300
   Insn 241(l0): point = 302
   Insn 239(l0): point = 305
   Insn 234(l0): point = 307
   Insn 233(l0): point = 309
   Insn 231(l0): point = 312
   Insn 229(l0): point = 314
   Insn 228(l0): point = 316
   Insn 226(l0): point = 318
   Insn 225(l0): point = 320
   Insn 224(l0): point = 322
   Insn 221(l0): point = 324
   Insn 219(l0): point = 327
   Insn 218(l0): point = 329
   Insn 217(l0): point = 331
   Insn 216(l0): point = 333
   Insn 553(l0): point = 336
   Insn 9(l0): point = 338
   Insn 210(l0): point = 340
   Insn 209(l0): point = 342
   Insn 576(l0): point = 344
   Insn 208(l0): point = 346
   Insn 205(l0): point = 348
   Insn 204(l0): point = 350
   Insn 203(l0): point = 352
   Insn 200(l0): point = 354
   Insn 198(l0): point = 357
   Insn 197(l0): point = 359
   Insn 196(l0): point = 361
   Insn 6(l0): point = 364
   Insn 551(l0): point = 367
   Insn 5(l0): point = 369
   Insn 192(l0): point = 372
   Insn 190(l0): point = 375
   Insn 185(l0): point = 377
   Insn 184(l0): point = 379
   Insn 4(l0): point = 382
   Insn 180(l0): point = 384
   Insn 179(l0): point = 386
   Insn 178(l0): point = 388
   Insn 177(l0): point = 390
   Insn 174(l0): point = 392
   Insn 171(l0): point = 395
   Insn 170(l0): point = 397
   Insn 169(l0): point = 399
   Insn 168(l0): point = 401
   Insn 165(l0): point = 404
   Insn 160(l0): point = 406
   Insn 159(l0): point = 408
   Insn 157(l0): point = 411
   Insn 156(l0): point = 413
   Insn 155(l0): point = 415
   Insn 151(l0): point = 418
   Insn 150(l0): point = 420
   Insn 149(l0): point = 422
   Insn 148(l0): point = 424
   Insn 145(l0): point = 426
   Insn 143(l0): point = 428
   Insn 142(l0): point = 430
   Insn 549(l0): point = 433
   Insn 137(l0): point = 435
   Insn 136(l0): point = 437
   Insn 135(l0): point = 439
   Insn 134(l0): point = 441
   Insn 131(l0): point = 443
   Insn 130(l0): point = 445
   Insn 129(l0): point = 447
   Insn 128(l0): point = 449
   Insn 127(l0): point = 451
   Insn 123(l0): point = 453
   Insn 122(l0): point = 455
   Insn 121(l0): point = 457
   Insn 120(l0): point = 459
   Insn 119(l0): point = 461
   Insn 117(l0): point = 464
   Insn 112(l0): point = 466
   Insn 111(l0): point = 468
   Insn 108(l0): point = 471
   Insn 107(l0): point = 473
   Insn 106(l0): point = 475
   Insn 103(l0): point = 477
   Insn 547(l0): point = 480
   Insn 98(l0): point = 482
   Insn 97(l0): point = 484
   Insn 96(l0): point = 486
   Insn 93(l0): point = 488
   Insn 91(l0): point = 491
   Insn 88(l0): point = 493
   Insn 577(l0): point = 495
   Insn 84(l0): point = 498
   Insn 578(l0): point = 500
   Insn 79(l0): point = 502
   Insn 78(l0): point = 504
   Insn 3(l0): point = 507
   Insn 545(l0): point = 510
   Insn 73(l0): point = 512
   Insn 72(l0): point = 514
   Insn 71(l0): point = 516
   Insn 68(l0): point = 519
   Insn 67(l0): point = 521
   Insn 66(l0): point = 523
   Insn 62(l0): point = 526
   Insn 61(l0): point = 528
   Insn 580(l0): point = 530
   Insn 60(l0): point = 532
   Insn 59(l0): point = 534
   Insn 58(l0): point = 536
   Insn 56(l0): point = 539
   Insn 51(l0): point = 541
   Insn 50(l0): point = 543
   Insn 46(l0): point = 545
   Insn 45(l0): point = 547
   Insn 543(l0): point = 550
   Insn 40(l0): point = 552
   Insn 38(l0): point = 555
   Insn 32(l0): point = 558
   Insn 31(l0): point = 560
   Insn 30(l0): point = 562
   Insn 28(l0): point = 565
   Insn 579(l0): point = 567
   Insn 23(l0): point = 569
   Insn 21(l0): point = 571
   Insn 20(l0): point = 573
   Insn 19(l0): point = 575
   Insn 18(l0): point = 577
   Insn 15(l0): point = 579
   Insn 13(l0): point = 581
   Insn 256(l1): point = 584
   Insn 255(l1): point = 586
   Insn 254(l1): point = 588
   Insn 253(l1): point = 590
   Insn 252(l1): point = 592
   Insn 271(l1): point = 595
   Insn 268(l1): point = 597
   Insn 267(l1): point = 599
   Insn 262(l1): point = 602
   Insn 259(l1): point = 605
   Insn 258(l1): point = 607
 a0(r43): [433..457] [395..428] [357..382] [327..338] [162..186] [128..156] [53..60] [6..9]
 a1(r42): [510..512] [327..507] [140..186] [34..60] [17..20]
 a2(r300): [28..29]
 a3(r301): [28..31]
 a4(r122): [35..36]
 a5(r55): [252..545] [196..242] [88..186] [37..60]
 a6(r295): [39..48]
 a7(r121): [39..40]
 a8(r120): [43..44]
 a9(r296): [45..46]
 a10(r119): [54..55]
 a11(r117): [68..71]
 a12(r291): [72..73]
 a13(r116): [84..85]
 a14(r115): [86..87]
 a15(r112): [88..117]
 a16(r270): [90..123]
 a17(r288): [90..91]
 a18(r269): [94..125]
 a19(r284): [94..95]
 a20(r282): [96..97]
 a21(r281): [96..99]
 a22(r143): [100..101]
 a23(r142): [102..103]
 a24(r278): [104..105]
 a25(r140): [104..107]
 a26(r114): [108..109]
 a27(r113): [112..113]
 a28(r111): [120..121]
 a29(r110): [129..130]
 a30(r109): [131..132]
 a31(r268): [133..134]
 a32(r106): [150..151]
 a33(r260): [152..153]
 a34(r63): [494..502] [160..161]
 a35(r103): [171..172]
 a36(r251): [173..174]
 a37(r233): [198..223]
 a38(r248): [198..199]
 a39(r249): [200..201]
 a40(r245): [200..203]
 a41(r246): [204..205]
 a42(r97): [204..207]
 a43(r46): [252..314] [210..242]
 a44(r133): [212..213]
 a45(r130): [214..219]
 a46(r236): [214..215]
 a47(r234): [216..217]
 a48(r138): [216..225]
 a49(r96): [220..221]
 a50(r137): [226..227]
 a51(r232): [228..229]
 a52(r135): [228..231]
 a53(r230): [235..236]
 a54(r231): [235..238]
 a55(r91): [253..254]
 a56(r229): [255..256]
 a57(r90): [260..261]
 a58(r228): [262..263]
 a59(r227): [264..265]
 a60(r89): [269..272]
 a61(r224): [269..270]
 a62(r223): [273..274]
 a63(r221): [280..281]
 a64(r222): [280..283]
 a65(r44): [293..295] [288..290]
 a66(r51): [298..300]
 a67(r216): [301..302]
 a68(r92): [306..307]
 a69(r211): [308..309]
 a70(r64): [357..493] [313..335]
 a71(r210): [315..316]
 a72(r87): [328..329]
 a73(r86): [330..331]
 a74(r208): [332..333]
 a75(r207): [343..344]
 a76(r83): [358..359]
 a77(r82): [360..361]
 a78(r45): [367..369] [362..364]
 a79(r81): [376..377]
 a80(r200): [378..379]
 a81(r78): [383..399]
 a82(r79): [396..397]
 a83(r198): [400..401]
 a84(r76): [405..406]
 a85(r193): [407..408]
 a86(r75): [412..413]
 a87(r192): [414..415]
 a88(r190): [429..430]
 a89(r183): [446..455]
 a90(r187): [446..447]
 a91(r188): [448..449]
 a92(r186): [448..451]
 a93(r69): [465..466]
 a94(r178): [467..468]
 a95(r174): [494..495]
 a96(r170): [499..500]
 a97(r169): [503..504]
 a98(r62): [513..514]
 a99(r168): [515..516]
 a100(r61): [527..528]
 a101(r60): [529..532]
 a102(r59): [529..530]
 a103(r307): [531..536]
 a104(r165): [533..534]
 a105(r57): [540..541]
 a106(r160): [542..543]
 a107(r50): [556..569]
 a108(r53): [559..560]
 a109(r155): [561..562]
 a110(r151): [566..567]
 a111(r148): [570..579]
 a112(r46): [608..609] [584..605]
 a113(r51): [596..602]
 a114(r55): [584..609]
 a115(r126): [603..609] [584..597]
 a116(r220): [598..599]
 a117(r219): [606..607]
 a118(r218): [585..586]
 a119(r125): [585..588]
 a120(r124): [589..590]
 a121(r217): [591..592]
 Rebuilding regno allocno list for 220
 Rebuilding regno allocno list for 219
 Rebuilding regno allocno list for 218
 Rebuilding regno allocno list for 217
 Rebuilding regno allocno list for 126
 Rebuilding regno allocno list for 125
 Rebuilding regno allocno list for 124
      Moving ranges of a114r55 to a5r55:  [584..609]
      Moving ranges of a113r51 to a66r51:  [596..602]
      Moving ranges of a112r46 to a43r46:  [608..609] [584..605]
Compressing live ranges: from 610 to 200 - 32%
Ranges after the compression:
 a0(r43): [144..147] [118..141] [110..115] [54..57] [42..51] [14..15] [0..1]
 a1(r42): [110..159] [48..57] [6..15] [2..3]
 a2(r300): [4..5]
 a3(r301): [4..5]
 a4(r122): [6..7]
 a5(r55): [184..199] [24..175] [8..15]
 a6(r295): [8..13]
 a7(r121): [8..9]
 a8(r120): [10..11]
 a9(r296): [12..13]
 a10(r119): [14..15]
 a11(r117): [16..17]
 a12(r291): [18..19]
 a13(r116): [20..21]
 a14(r115): [22..23]
 a15(r112): [24..39]
 a16(r270): [24..41]
 a17(r288): [24..25]
 a18(r269): [26..41]
 a19(r284): [26..27]
 a20(r282): [28..29]
 a21(r281): [28..29]
 a22(r143): [30..31]
 a23(r142): [32..33]
 a24(r278): [34..35]
 a25(r140): [34..35]
 a26(r114): [36..37]
 a27(r113): [38..39]
 a28(r111): [40..41]
 a29(r110): [42..43]
 a30(r109): [44..45]
 a31(r268): [46..47]
 a32(r106): [48..49]
 a33(r260): [50..51]
 a34(r63): [152..155] [52..53]
 a35(r103): [54..55]
 a36(r251): [56..57]
 a37(r233): [58..71]
 a38(r248): [58..59]
 a39(r249): [60..61]
 a40(r245): [60..61]
 a41(r246): [62..63]
 a42(r97): [62..63]
 a43(r46): [198..199] [184..195] [64..107]
 a44(r133): [64..65]
 a45(r130): [66..69]
 a46(r236): [66..67]
 a47(r234): [68..69]
 a48(r138): [68..71]
 a49(r96): [70..71]
 a50(r137): [72..73]
 a51(r232): [74..75]
 a52(r135): [74..75]
 a53(r230): [76..77]
 a54(r231): [76..77]
 a55(r91): [78..79]
 a56(r229): [80..81]
 a57(r90): [82..83]
 a58(r228): [84..85]
 a59(r227): [86..87]
 a60(r89): [88..89]
 a61(r224): [88..89]
 a62(r223): [90..91]
 a63(r221): [92..93]
 a64(r222): [92..93]
 a65(r44): [94..97]
 a66(r51): [190..193] [98..99]
 a67(r216): [100..101]
 a68(r92): [102..103]
 a69(r211): [104..105]
 a70(r64): [118..151] [106..115]
 a71(r210): [108..109]
 a72(r87): [110..111]
 a73(r86): [112..113]
 a74(r208): [114..115]
 a75(r207): [116..117]
 a76(r83): [118..119]
 a77(r82): [120..121]
 a78(r45): [122..125]
 a79(r81): [126..127]
 a80(r200): [128..129]
 a81(r78): [130..131]
 a82(r79): [130..131]
 a83(r198): [132..133]
 a84(r76): [134..135]
 a85(r193): [136..137]
 a86(r75): [138..139]
 a87(r192): [140..141]
 a88(r190): [142..143]
 a89(r183): [144..147]
 a90(r187): [144..145]
 a91(r188): [146..147]
 a92(r186): [146..147]
 a93(r69): [148..149]
 a94(r178): [150..151]
 a95(r174): [152..153]
 a96(r170): [154..155]
 a97(r169): [156..157]
 a98(r62): [160..161]
 a99(r168): [162..163]
 a100(r61): [164..165]
 a101(r60): [166..169]
 a102(r59): [166..167]
 a103(r307): [168..171]
 a104(r165): [170..171]
 a105(r57): [172..173]
 a106(r160): [174..175]
 a107(r50): [176..181]
 a108(r53): [176..177]
 a109(r155): [178..179]
 a110(r151): [180..181]
 a111(r148): [182..183]
 a115(r126): [194..199] [184..191]
 a116(r220): [192..193]
 a117(r219): [196..197]
 a118(r218): [184..185]
 a119(r125): [184..185]
 a120(r124): [186..187]
 a121(r217): [188..189]
+++Allocating 1432 bytes for conflict table (uncompressed size 1952)
;; a0(r43,l0) conflicts: a1(r42,l0) a5(r55,l0) a10(r119,l0) a29(r110,l0) a30(r109,l0) a31(r268,l0) a32(r106,l0) a33(r260,l0) a35(r103,l0) a36(r251,l0) a70(r64,l0) a72(r87,l0) a73(r86,l0) a74(r208,l0) a76(r83,l0) a77(r82,l0) a78(r45,l0) a79(r81,l0) a80(r200,l0) a81(r78,l0) a82(r79,l0) a83(r198,l0) a84(r76,l0) a85(r193,l0) a86(r75,l0) a87(r192,l0) a90(r187,l0) a89(r183,l0) a91(r188,l0) a92(r186,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r42,l0) conflicts: a0(r43,l0) a4(r122,l0) a7(r121,l0) a6(r295,l0) a5(r55,l0) a8(r120,l0) a9(r296,l0) a10(r119,l0) a32(r106,l0) a33(r260,l0) a34(r63,l0) a35(r103,l0) a36(r251,l0) a70(r64,l0) a72(r87,l0) a73(r86,l0) a74(r208,l0) a75(r207,l0) a76(r83,l0) a77(r82,l0) a78(r45,l0) a79(r81,l0) a80(r200,l0) a81(r78,l0) a82(r79,l0) a83(r198,l0) a84(r76,l0) a85(r193,l0) a86(r75,l0) a87(r192,l0) a88(r190,l0) a90(r187,l0) a89(r183,l0) a91(r188,l0) a92(r186,l0) a93(r69,l0) a94(r178,l0) a95(r174,l0) a96(r170,l0) a97(r169,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a2(r300,l0) conflicts: a3(r301,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r301,l0) conflicts: a2(r300,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r122,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r55,l0) conflicts: a0(r43,l0) a1(r42,l0) a7(r121,l0) a6(r295,l0) a8(r120,l0) a9(r296,l0) a10(r119,l0) a17(r288,l0) a15(r112,l0) a16(r270,l0) a19(r284,l0) a18(r269,l0) a20(r282,l0) a21(r281,l0) a22(r143,l0) a23(r142,l0) a24(r278,l0) a25(r140,l0) a26(r114,l0) a27(r113,l0) a28(r111,l0) a29(r110,l0) a30(r109,l0) a31(r268,l0) a32(r106,l0) a33(r260,l0) a34(r63,l0) a35(r103,l0) a36(r251,l0) a38(r248,l0) a37(r233,l0) a39(r249,l0) a40(r245,l0) a41(r246,l0) a42(r97,l0) a44(r133,l0) a43(r46,l0) a46(r236,l0) a45(r130,l0) a47(r234,l0) a48(r138,l0) a49(r96,l0) a50(r137,l0) a51(r232,l0) a52(r135,l0) a53(r230,l0) a54(r231,l0) a55(r91,l0) a56(r229,l0) a57(r90,l0) a58(r228,l0) a59(r227,l0) a60(r89,l0) a61(r224,l0) a62(r223,l0) a63(r221,l0) a64(r222,l0) a65(r44,l0) a66(r51,l0) a67(r216,l0) a68(r92,l0) a69(r211,l0) a70(r64,l0) a71(r210,l0) a72(r87,l0) a73(r86,l0) a74(r208,l0) a75(r207,l0) a76(r83,l0) a77(r82,l0) a78(r45,l0) a79(r81,l0) a80(r200,l0) a81(r78,l0) a82(r79,l0) a83(r198,l0) a84(r76,l0) a85(r193,l0) a86(r75,l0) a87(r192,l0) a88(r190,l0) a90(r187,l0) a89(r183,l0) a91(r188,l0) a92(r186,l0) a93(r69,l0) a94(r178,l0) a95(r174,l0) a96(r170,l0) a97(r169,l0) a98(r62,l0) a99(r168,l0) a100(r61,l0) a102(r59,l0) a101(r60,l0) a103(r307,l0) a104(r165,l0) a105(r57,l0) a106(r160,l0) a118(r218,l0) a119(r125,l0) a115(r126,l0) a120(r124,l0) a121(r217,l0) a116(r220,l0) a117(r219,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r295,l0) conflicts: a1(r42,l0) a7(r121,l0) a5(r55,l0) a8(r120,l0) a9(r296,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r121,l0) conflicts: a1(r42,l0) a6(r295,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r120,l0) conflicts: a1(r42,l0) a6(r295,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r296,l0) conflicts: a1(r42,l0) a6(r295,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r119,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r117,l0) conflicts:
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a12(r291,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r116,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r115,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r112,l0) conflicts: a5(r55,l0) a17(r288,l0) a16(r270,l0) a19(r284,l0) a18(r269,l0) a20(r282,l0) a21(r281,l0) a22(r143,l0) a23(r142,l0) a24(r278,l0) a25(r140,l0) a26(r114,l0) a27(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r270,l0) conflicts: a5(r55,l0) a17(r288,l0) a15(r112,l0) a19(r284,l0) a18(r269,l0) a20(r282,l0) a21(r281,l0) a22(r143,l0) a23(r142,l0) a24(r278,l0) a25(r140,l0) a26(r114,l0) a27(r113,l0) a28(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r288,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r269,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a19(r284,l0) a20(r282,l0) a21(r281,l0) a22(r143,l0) a23(r142,l0) a24(r278,l0) a25(r140,l0) a26(r114,l0) a27(r113,l0) a28(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r284,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r282,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0) a21(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r281,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0) a20(r282,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r143,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r142,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r278,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0) a25(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r140,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0) a24(r278,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r114,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r113,l0) conflicts: a5(r55,l0) a15(r112,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r111,l0) conflicts: a5(r55,l0) a16(r270,l0) a18(r269,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r110,l0) conflicts: a0(r43,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r109,l0) conflicts: a0(r43,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r268,l0) conflicts: a0(r43,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r106,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r260,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r63,l0) conflicts: a1(r42,l0) a5(r55,l0) a95(r174,l0) a96(r170,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r103,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r251,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r233,l0) conflicts: a5(r55,l0) a38(r248,l0) a39(r249,l0) a40(r245,l0) a41(r246,l0) a42(r97,l0) a44(r133,l0) a43(r46,l0) a46(r236,l0) a45(r130,l0) a47(r234,l0) a48(r138,l0) a49(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r248,l0) conflicts: a5(r55,l0) a37(r233,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r249,l0) conflicts: a5(r55,l0) a37(r233,l0) a40(r245,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r245,l0) conflicts: a5(r55,l0) a37(r233,l0) a39(r249,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r246,l0) conflicts: a5(r55,l0) a37(r233,l0) a42(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r97,l0) conflicts: a5(r55,l0) a37(r233,l0) a41(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r46,l0) conflicts: a5(r55,l0) a37(r233,l0) a44(r133,l0) a46(r236,l0) a45(r130,l0) a47(r234,l0) a48(r138,l0) a49(r96,l0) a50(r137,l0) a51(r232,l0) a52(r135,l0) a53(r230,l0) a54(r231,l0) a55(r91,l0) a56(r229,l0) a57(r90,l0) a58(r228,l0) a59(r227,l0) a60(r89,l0) a61(r224,l0) a62(r223,l0) a63(r221,l0) a64(r222,l0) a65(r44,l0) a66(r51,l0) a67(r216,l0) a68(r92,l0) a69(r211,l0) a70(r64,l0) a118(r218,l0) a119(r125,l0) a115(r126,l0) a120(r124,l0) a121(r217,l0) a116(r220,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a44(r133,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r130,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0) a46(r236,l0) a47(r234,l0) a48(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r236,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0) a45(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r234,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0) a45(r130,l0) a48(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r138,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0) a45(r130,l0) a47(r234,l0) a49(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r96,l0) conflicts: a5(r55,l0) a37(r233,l0) a43(r46,l0) a48(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r137,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r232,l0) conflicts: a5(r55,l0) a43(r46,l0) a52(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r135,l0) conflicts: a5(r55,l0) a43(r46,l0) a51(r232,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r230,l0) conflicts: a5(r55,l0) a43(r46,l0) a54(r231,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r231,l0) conflicts: a5(r55,l0) a43(r46,l0) a53(r230,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r91,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r229,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r90,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r228,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r227,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r89,l0) conflicts: a5(r55,l0) a43(r46,l0) a61(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r224,l0) conflicts: a5(r55,l0) a43(r46,l0) a60(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r223,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r221,l0) conflicts: a5(r55,l0) a43(r46,l0) a64(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r222,l0) conflicts: a5(r55,l0) a43(r46,l0) a63(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r44,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r51,l0) conflicts: a5(r55,l0) a43(r46,l0) a115(r126,l0) a116(r220,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r216,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r92,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r211,l0) conflicts: a5(r55,l0) a43(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r64,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a43(r46,l0) a71(r210,l0) a72(r87,l0) a73(r86,l0) a74(r208,l0) a76(r83,l0) a77(r82,l0) a78(r45,l0) a79(r81,l0) a80(r200,l0) a81(r78,l0) a82(r79,l0) a83(r198,l0) a84(r76,l0) a85(r193,l0) a86(r75,l0) a87(r192,l0) a88(r190,l0) a90(r187,l0) a89(r183,l0) a91(r188,l0) a92(r186,l0) a93(r69,l0) a94(r178,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a71(r210,l0) conflicts: a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r87,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r86,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r208,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r207,l0) conflicts: a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a76(r83,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r82,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r45,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r81,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r200,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r78,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a82(r79,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a82(r79,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a81(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r198,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r76,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r193,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r75,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r192,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r190,l0) conflicts: a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r183,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a90(r187,l0) a91(r188,l0) a92(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a90(r187,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a89(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a91(r188,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a89(r183,l0) a92(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r186,l0) conflicts: a0(r43,l0) a1(r42,l0) a5(r55,l0) a70(r64,l0) a89(r183,l0) a91(r188,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r69,l0) conflicts: a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r178,l0) conflicts: a1(r42,l0) a5(r55,l0) a70(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r174,l0) conflicts: a1(r42,l0) a5(r55,l0) a34(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r170,l0) conflicts: a1(r42,l0) a5(r55,l0) a34(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r169,l0) conflicts: a1(r42,l0) a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r62,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r168,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r61,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r60,l0) conflicts: a5(r55,l0) a102(r59,l0) a103(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r59,l0) conflicts: a5(r55,l0) a101(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r307,l0) conflicts: a5(r55,l0) a101(r60,l0) a104(r165,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r165,l0) conflicts: a5(r55,l0) a103(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r57,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r160,l0) conflicts: a5(r55,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a107(r50,l0) conflicts: a108(r53,l0) a109(r155,l0) a110(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r53,l0) conflicts: a107(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r155,l0) conflicts: a107(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r151,l0) conflicts: a107(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r148,l0) conflicts:
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a115(r126,l0) conflicts: a5(r55,l0) a43(r46,l0) a66(r51,l0) a118(r218,l0) a119(r125,l0) a120(r124,l0) a121(r217,l0) a117(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r220,l0) conflicts: a5(r55,l0) a43(r46,l0) a66(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r219,l0) conflicts: a5(r55,l0) a115(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r218,l0) conflicts: a5(r55,l0) a43(r46,l0) a119(r125,l0) a115(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a119(r125,l0) conflicts: a5(r55,l0) a43(r46,l0) a118(r218,l0) a115(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a120(r124,l0) conflicts: a5(r55,l0) a43(r46,l0) a115(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r217,l0) conflicts: a5(r55,l0) a43(r46,l0) a115(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r122)<->a5(r55)@25:shuffle
  cp1:a25(r140)<->a26(r114)@4:shuffle
  cp2:a23(r142)<->a24(r278)@4:shuffle
  cp3:a23(r142)<->a25(r140)@4:shuffle
  cp4:a21(r281)<->a22(r143)@4:shuffle
  cp5:a19(r284)<->a20(r282)@4:shuffle
  cp6:a19(r284)<->a21(r281)@4:shuffle
  cp7:a14(r115)<->a15(r112)@4:shuffle
  cp8:a5(r55)<->a14(r115)@4:shuffle
  cp9:a13(r116)<->a14(r115)@4:shuffle
  cp10:a29(r110)<->a30(r109)@2:shuffle
  cp11:a50(r137)<->a51(r232)@5:shuffle
  cp12:a50(r137)<->a52(r135)@5:shuffle
  cp13:a45(r130)<->a49(r96)@5:shuffle
  cp14:a46(r236)<->a47(r234)@5:shuffle
  cp15:a46(r236)<->a48(r138)@5:shuffle
  cp16:a44(r133)<->a45(r130)@5:shuffle
  cp17:a44(r133)<->a46(r236)@5:shuffle
  cp18:a40(r245)<->a41(r246)@5:shuffle
  cp19:a40(r245)<->a42(r97)@5:shuffle
  cp20:a38(r248)<->a39(r249)@5:shuffle
  cp21:a38(r248)<->a40(r245)@5:shuffle
  cp22:a58(r228)<->a59(r227)@2:shuffle
  cp23:a115(r126)<->a116(r220)@17:shuffle
  cp24:a43(r46)<->a117(r219)@22:shuffle
  cp25:a120(r124)<->a121(r217)@16:shuffle
  cp26:a73(r86)<->a74(r208)@23:shuffle
  cp27:a72(r87)<->a73(r86)@23:shuffle
  cp28:a77(r82)<->a78(r45)@16:shuffle
  cp29:a76(r83)<->a77(r82)@16:shuffle
  cp30:a90(r187)<->a91(r188)@16:shuffle
  cp31:a90(r187)<->a92(r186)@16:shuffle
  cp32:a70(r64)<->a95(r174)@32:shuffle
  cp33:a34(r63)<->a70(r64)@32:shuffle
  cp34:a1(r42)<->a98(r62)@32:shuffle
  cp35:a102(r59)<->a103(r307)@260:move
  cp36:a100(r61)<->a102(r59)@32:shuffle
  cp37:a100(r61)<->a101(r60)@32:shuffle
  pref0:a1(r42)<-hr11@110
  pref1:a0(r43)<-hr12@400
  pref2:a5(r55)<-hr10@1256
  pref3:a65(r44)<-hr10@50
  pref4:a81(r78)<-hr12@25
  pref5:a0(r43)<-hr10@260
  pref6:a0(r43)<-hr11@15
  pref7:a11(r117)<-hr11@4
  pref8:a75(r207)<-hr10@8
  regions=2, blocks=64, points=200
    allocnos=122 (big 0), copies=38, conflicts=8, ranges=136

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r43 1r42 2r300 3r301 4r122 5r55 6r295 7r121 8r120 9r296 10r119 11r117 12r291 13r116 14r115 15r112 16r270 17r288 18r269 19r284 20r282 21r281 22r143 23r142 24r278 25r140 26r114 27r113 28r111 29r110 30r109 31r268 32r106 33r260 34r63 35r103 36r251 37r233 38r248 39r249 40r245 41r246 42r97 43r46 44r133 45r130 46r236 47r234 48r138 49r96 50r137 51r232 52r135 53r230 54r231 55r91 56r229 57r90 58r228 59r227 60r89 61r224 62r223 63r221 64r222 65r44 66r51 67r216 68r92 69r211 70r64 71r210 72r87 73r86 74r208 75r207 76r83 77r82 78r45 79r81 80r200 81r78 82r79 83r198 84r76 85r193 86r75 87r192 88r190 89r183 90r187 91r188 92r186 93r69 94r178 95r174 96r170 97r169 98r62 99r168 100r61 101r60 102r59 103r307 104r165 105r57 106r160 107r50 108r53 109r155 110r151 111r148 115r126 116r220 117r219 118r218 119r125 120r124 121r217
    modified regnos: 42 43 44 45 46 50 51 53 55 57 59 60 61 62 63 64 69 75 76 78 79 81 82 83 86 87 89 90 91 92 96 97 103 106 109 110 111 112 113 114 115 116 117 119 120 121 122 124 125 126 130 133 135 137 138 140 142 143 148 151 155 160 165 168 169 170 174 178 183 186 187 188 190 192 193 198 200 207 208 210 211 216 217 218 219 220 221 222 223 224 227 228 229 230 231 232 233 234 236 245 246 248 249 251 260 268 269 270 278 281 282 284 288 291 295 296 300 301 307
    border:
    Pressure: AR_REGS=7
 Removing pref6:hr11@15
 Removing pref5:hr10@260
 Removing pref1:hr12@400
 Removing pref0:hr11@110
 Removing pref2:hr10@1256
 Removing pref4:hr12@25
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@203560
          2:( 2-11 13-15)@608
            3:( 2-7)@66864
      Allocno a0r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a2r300 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r301 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r55 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r295 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r121 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r120 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r296 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r117 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a12r291 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r116 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r270 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r288 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r269 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r284 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r282 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r281 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r143 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r142 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r278 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r114 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r113 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r268 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r106 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r260 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r251 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r233 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r248 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r249 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r245 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r246 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r46 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a44r133 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r236 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r234 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r138 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r137 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r232 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r135 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r230 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r231 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r229 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r228 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r227 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r224 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a62r223 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a63r221 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r222 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r216 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a69r211 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a70r64 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a71r210 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r87 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r208 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r207 of AR_REGS(14) has 13 avail. regs  2-10 12-15, ^node:  2-15 (confl regs =  0 1 11 16-34)
      Allocno a76r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a78r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a79r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a80r200 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a81r78 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a82r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a83r198 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a84r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a85r193 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a86r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a87r192 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a88r190 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a89r183 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a90r187 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a91r188 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a92r186 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a93r69 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a94r178 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a95r174 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a96r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a97r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a98r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a99r168 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a100r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a101r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a102r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a103r307 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a104r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a105r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a106r160 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a107r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a108r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a109r155 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a110r151 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a111r148 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a115r126 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a116r220 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a117r219 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a118r218 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a119r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a120r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a121r217 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 35:a102r59-a103r307 (freq=260):
        Result (freq=1040): a102r59(520) a103r307(520)
      Forming thread by copy 33:a34r63-a70r64 (freq=32):
        Result (freq=2261): a34r63(1560) a70r64(701)
      Forming thread by copy 36:a100r61-a102r59 (freq=32):
        Result (freq=1560): a100r61(520) a102r59(520) a103r307(520)
      Forming thread by copy 0:a4r122-a5r55 (freq=25):
        Result (freq=1882): a4r122(410) a5r55(1472)
      Forming thread by copy 26:a73r86-a74r208 (freq=23):
        Result (freq=764): a73r86(382) a74r208(382)
      Forming thread by copy 27:a72r87-a73r86 (freq=23):
        Result (freq=1146): a72r87(382) a73r86(382) a74r208(382)
      Forming thread by copy 23:a115r126-a116r220 (freq=17):
        Result (freq=560): a115r126(274) a116r220(286)
      Forming thread by copy 25:a120r124-a121r217 (freq=16):
        Result (freq=524): a120r124(262) a121r217(262)
      Forming thread by copy 28:a77r82-a78r45 (freq=16):
        Result (freq=520): a77r82(260) a78r45(260)
      Forming thread by copy 29:a76r83-a77r82 (freq=16):
        Result (freq=780): a76r83(260) a77r82(260) a78r45(260)
      Forming thread by copy 30:a90r187-a91r188 (freq=16):
        Result (freq=520): a90r187(260) a91r188(260)
      Forming thread by copy 11:a50r137-a51r232 (freq=5):
        Result (freq=172): a50r137(86) a51r232(86)
      Forming thread by copy 13:a45r130-a49r96 (freq=5):
        Result (freq=172): a45r130(86) a49r96(86)
      Forming thread by copy 14:a46r236-a47r234 (freq=5):
        Result (freq=172): a46r236(86) a47r234(86)
      Forming thread by copy 16:a44r133-a45r130 (freq=5):
        Result (freq=258): a44r133(86) a45r130(86) a49r96(86)
      Forming thread by copy 18:a40r245-a41r246 (freq=5):
        Result (freq=172): a40r245(86) a41r246(86)
      Forming thread by copy 20:a38r248-a39r249 (freq=5):
        Result (freq=172): a38r248(86) a39r249(86)
      Forming thread by copy 1:a25r140-a26r114 (freq=4):
        Result (freq=148): a25r140(74) a26r114(74)
      Forming thread by copy 2:a23r142-a24r278 (freq=4):
        Result (freq=148): a23r142(74) a24r278(74)
      Forming thread by copy 4:a21r281-a22r143 (freq=4):
        Result (freq=148): a21r281(74) a22r143(74)
      Forming thread by copy 5:a19r284-a20r282 (freq=4):
        Result (freq=148): a19r284(74) a20r282(74)
      Forming thread by copy 7:a14r115-a15r112 (freq=4):
        Result (freq=185): a14r115(74) a15r112(111)
      Forming thread by copy 9:a13r116-a14r115 (freq=4):
        Result (freq=259): a13r116(74) a14r115(74) a15r112(111)
      Forming thread by copy 10:a29r110-a30r109 (freq=2):
        Result (freq=84): a29r110(42) a30r109(42)
      Forming thread by copy 22:a58r228-a59r227 (freq=2):
        Result (freq=80): a58r228(40) a59r227(40)
      Pushing a67(r216,l0)(cost 0)
      Pushing a56(r229,l0)(cost 0)
      Pushing a55(r91,l0)(cost 0)
      Pushing a54(r231,l0)(cost 0)
      Pushing a53(r230,l0)(cost 0)
      Pushing a57(r90,l0)(cost 0)
      Pushing a31(r268,l0)(cost 0)
      Pushing a69(r211,l0)(cost 0)
      Pushing a68(r92,l0)(cost 0)
      Pushing a64(r222,l0)(cost 0)
      Pushing a63(r221,l0)(cost 0)
      Pushing a62(r223,l0)(cost 0)
      Pushing a61(r224,l0)(cost 0)
      Pushing a60(r89,l0)(cost 0)
      Pushing a65(r44,l0)(cost 0)
      Pushing a28(r111,l0)(cost 0)
        Making a16(r270,l0) colorable
      Pushing a27(r113,l0)(cost 0)
      Pushing a17(r288,l0)(cost 0)
      Pushing a12(r291,l0)(cost 0)
      Pushing a11(r117,l0)(cost 0)
      Pushing a59(r227,l0)(cost 0)
      Pushing a58(r228,l0)(cost 0)
      Pushing a30(r109,l0)(cost 0)
      Pushing a29(r110,l0)(cost 0)
      Pushing a52(r135,l0)(cost 0)
      Pushing a48(r138,l0)(cost 0)
      Pushing a42(r97,l0)(cost 0)
      Pushing a71(r210,l0)(cost 0)
      Pushing a75(r207,l0)(cost 0)
      Pushing a26(r114,l0)(cost 0)
      Pushing a25(r140,l0)(cost 0)
      Pushing a24(r278,l0)(cost 0)
      Pushing a23(r142,l0)(cost 0)
      Pushing a22(r143,l0)(cost 0)
      Pushing a21(r281,l0)(cost 0)
      Pushing a20(r282,l0)(cost 0)
      Pushing a19(r284,l0)(cost 0)
      Pushing a16(r270,l0)(cost 592)
      Pushing a51(r232,l0)(cost 0)
      Pushing a50(r137,l0)(cost 0)
      Pushing a47(r234,l0)(cost 0)
      Pushing a46(r236,l0)(cost 0)
      Pushing a41(r246,l0)(cost 0)
      Pushing a40(r245,l0)(cost 0)
      Pushing a39(r249,l0)(cost 0)
      Pushing a38(r248,l0)(cost 0)
      Pushing a117(r219,l0)(cost 0)
      Pushing a49(r96,l0)(cost 0)
      Pushing a45(r130,l0)(cost 0)
      Pushing a44(r133,l0)(cost 0)
      Pushing a37(r233,l0)(cost 0)
      Pushing a14(r115,l0)(cost 0)
      Pushing a13(r116,l0)(cost 0)
      Pushing a15(r112,l0)(cost 0)
      Pushing a92(r186,l0)(cost 0)
      Pushing a88(r190,l0)(cost 0)
      Pushing a85(r193,l0)(cost 0)
      Pushing a84(r76,l0)(cost 0)
      Pushing a119(r125,l0)(cost 0)
      Pushing a118(r218,l0)(cost 0)
      Pushing a36(r251,l0)(cost 0)
      Pushing a35(r103,l0)(cost 0)
      Pushing a18(r269,l0)(cost 0)
      Pushing a3(r301,l0)(cost 0)
      Pushing a2(r300,l0)(cost 0)
      Pushing a10(r119,l0)(cost 0)
      Pushing a83(r198,l0)(cost 0)
      Pushing a82(r79,l0)(cost 0)
      Pushing a9(r296,l0)(cost 0)
      Pushing a8(r120,l0)(cost 0)
      Pushing a7(r121,l0)(cost 0)
      Pushing a66(r51,l0)(cost 0)
      Pushing a81(r78,l0)(cost 0)
      Pushing a104(r165,l0)(cost 0)
      Pushing a101(r60,l0)(cost 0)
      Pushing a99(r168,l0)(cost 0)
      Pushing a98(r62,l0)(cost 0)
      Pushing a95(r174,l0)(cost 0)
      Pushing a94(r178,l0)(cost 0)
      Pushing a93(r69,l0)(cost 0)
      Pushing a91(r188,l0)(cost 0)
      Pushing a90(r187,l0)(cost 0)
      Pushing a89(r183,l0)(cost 0)
      Pushing a87(r192,l0)(cost 0)
      Pushing a86(r75,l0)(cost 0)
      Pushing a80(r200,l0)(cost 0)
      Pushing a79(r81,l0)(cost 0)
      Pushing a121(r217,l0)(cost 0)
      Forming thread by copy 24:a43r46-a117r219 (freq=22):
        Result (freq=644): a43r46(456) a117r219(188)
        Making a43(r46,l0) colorable
      Pushing a120(r124,l0)(cost 0)
      Pushing a115(r126,l0)(cost 0)
      Pushing a116(r220,l0)(cost 0)
      Pushing a33(r260,l0)(cost 0)
      Pushing a32(r106,l0)(cost 0)
      Pushing a43(r46,l0)(cost 1824)
      Pushing a78(r45,l0)(cost 0)
      Pushing a77(r82,l0)(cost 0)
      Pushing a76(r83,l0)(cost 0)
      Pushing a6(r295,l0)(cost 0)
      Pushing a106(r160,l0)(cost 0)
      Pushing a105(r57,l0)(cost 0)
      Pushing a97(r169,l0)(cost 0)
      Pushing a96(r170,l0)(cost 0)
      Pushing a74(r208,l0)(cost 0)
        Making a0(r43,l0) colorable
        Making a70(r64,l0) colorable
      Pushing a73(r86,l0)(cost 0)
      Pushing a72(r87,l0)(cost 0)
      Forming thread by copy 34:a1r42-a98r62 (freq=32):
        Result (freq=1678): a1r42(1158) a98r62(520)
        Making a1(r42,l0) colorable
      Pushing a109(r155,l0)(cost 0)
      Pushing a108(r53,l0)(cost 0)
      Pushing a103(r307,l0)(cost 0)
      Pushing a102(r59,l0)(cost 0)
        Making a5(r55,l0) colorable
      Pushing a100(r61,l0)(cost 0)
      Pushing a1(r42,l0)(cost 4852)
      Pushing a4(r122,l0)(cost 0)
      Pushing a5(r55,l0)(cost 8400)
      Pushing a110(r151,l0)(cost 0)
      Pushing a70(r64,l0)(cost 2804)
      Pushing a34(r63,l0)(cost 0)
      Pushing a0(r43,l0)(cost 9792)
      Pushing a107(r50,l0)(cost 0)
      Pushing a111(r148,l0)(cost 0)
      Popping a111(r148,l0)  -- assign reg 2
      Popping a107(r50,l0)  -- assign reg 2
      Popping a0(r43,l0)  -- assign reg 2
      Popping a34(r63,l0)  -- assign reg 2
      Popping a70(r64,l0)  -- assign reg 3
      Popping a110(r151,l0)  -- assign reg 3
      Popping a5(r55,l0)  -- assign reg 4
      Popping a4(r122,l0)  -- assign reg 4
      Popping a1(r42,l0)  -- assign reg 5
      Popping a100(r61,l0)  -- assign reg 2
      Popping a102(r59,l0)  -- assign reg 2
      Popping a103(r307,l0)  -- assign reg 2
      Popping a108(r53,l0)  -- assign reg 3
      Popping a109(r155,l0)  -- assign reg 3
      Popping a72(r87,l0)  -- assign reg 8
      Popping a73(r86,l0)  -- assign reg 8
      Popping a74(r208,l0)  -- assign reg 8
      Popping a96(r170,l0)  -- assign reg 3
      Popping a97(r169,l0)  -- assign reg 2
      Popping a105(r57,l0)  -- assign reg 2
      Popping a106(r160,l0)  -- assign reg 2
      Popping a6(r295,l0)  -- assign reg 2
      Popping a76(r83,l0)  -- assign reg 8
      Popping a77(r82,l0)  -- assign reg 8
      Popping a78(r45,l0)  -- assign reg 8
      Popping a43(r46,l0)  -- assign reg 2
      Popping a32(r106,l0)  -- assign reg 3
      Popping a33(r260,l0)  -- assign reg 3
      Popping a116(r220,l0)  -- assign reg 3
      Popping a115(r126,l0)  -- assign reg 3
      Popping a120(r124,l0)  -- assign reg 5
      Popping a121(r217,l0)  -- assign reg 5
      Popping a79(r81,l0)  -- assign reg 8
      Popping a80(r200,l0)  -- assign reg 8
      Popping a86(r75,l0)  -- assign reg 8
      Popping a87(r192,l0)  -- assign reg 8
      Popping a89(r183,l0)  -- assign reg 8
      Popping a90(r187,l0)  -- assign reg 9
      Popping a91(r188,l0)  -- assign reg 9
      Popping a93(r69,l0)  -- assign reg 2
      Popping a94(r178,l0)  -- assign reg 2
      Popping a95(r174,l0)  -- assign reg 3
      Popping a98(r62,l0)  -- assign reg 5
      Popping a99(r168,l0)  -- assign reg 2
      Popping a101(r60,l0)  -- assign reg 3
      Popping a104(r165,l0)  -- assign reg 3
      Popping a81(r78,l0)  -- assign reg 6
      Popping a66(r51,l0)  -- assign reg 5
      Popping a7(r121,l0)  -- assign reg 3
      Popping a8(r120,l0)  -- assign reg 3
      Popping a9(r296,l0)  -- assign reg 3
      Popping a82(r79,l0)  -- assign reg 8
      Popping a83(r198,l0)  -- assign reg 6
      Popping a10(r119,l0)  -- assign reg 3
      Popping a2(r300,l0)  -- assign reg 2
      Popping a3(r301,l0)  -- assign reg 3
      Popping a18(r269,l0)  -- assign reg 2
      Popping a35(r103,l0)  -- assign reg 3
      Popping a36(r251,l0)  -- assign reg 3
      Popping a118(r218,l0)  -- assign reg 5
      Popping a119(r125,l0)  -- assign reg 6
      Popping a84(r76,l0)  -- assign reg 6
      Popping a85(r193,l0)  -- assign reg 6
      Popping a88(r190,l0)  -- assign reg 2
      Popping a92(r186,l0)  -- assign reg 6
      Popping a15(r112,l0)  -- assign reg 3
      Popping a13(r116,l0)  -- assign reg 3
      Popping a14(r115,l0)  -- assign reg 3
      Popping a37(r233,l0)  -- assign reg 3
      Popping a44(r133,l0)  -- assign reg 5
      Popping a45(r130,l0)  -- assign reg 6
      Popping a49(r96,l0)  -- assign reg 5
      Popping a117(r219,l0)  -- assign reg 2
      Popping a38(r248,l0)  -- assign reg 2
      Popping a39(r249,l0)  -- assign reg 2
      Popping a40(r245,l0)  -- assign reg 5
      Popping a41(r246,l0)  -- assign reg 2
      Popping a46(r236,l0)  -- assign reg 5
      Popping a47(r234,l0)  -- assign reg 5
      Popping a50(r137,l0)  -- assign reg 3
      Popping a51(r232,l0)  -- assign reg 3
      Popping a16(r270,l0)  -- assign reg 5
      Popping a19(r284,l0)  -- assign reg 6
      Popping a20(r282,l0)  -- assign reg 6
      Popping a21(r281,l0)  -- assign reg 8
      Popping a22(r143,l0)  -- assign reg 6
      Popping a23(r142,l0)  -- assign reg 6
      Popping a24(r278,l0)  -- assign reg 6
      Popping a25(r140,l0)  -- assign reg 8
      Popping a26(r114,l0)  -- assign reg 6
      Popping a75(r207,l0)  -- assign reg 10
      Popping a71(r210,l0)  -- assign reg 2
      Popping a42(r97,l0)  -- assign reg 5
      Popping a48(r138,l0)  -- assign reg 8
      Popping a52(r135,l0)  -- assign reg 5
      Popping a29(r110,l0)  -- assign reg 3
      Popping a30(r109,l0)  -- assign reg 3
      Popping a58(r228,l0)  -- assign reg 3
      Popping a59(r227,l0)  -- assign reg 3
      Popping a11(r117,l0)  -- assign reg 11
      Popping a12(r291,l0)  -- assign reg 2
      Popping a17(r288,l0)  -- assign reg 2
      Popping a27(r113,l0)  -- assign reg 6
      Popping a28(r111,l0)  -- assign reg 3
      Popping a65(r44,l0)  -- assign reg 10
      Popping a60(r89,l0)  -- assign reg 3
      Popping a61(r224,l0)  -- assign reg 5
      Popping a62(r223,l0)  -- assign reg 3
      Popping a63(r221,l0)  -- assign reg 3
      Popping a64(r222,l0)  -- assign reg 5
      Popping a68(r92,l0)  -- assign reg 3
      Popping a69(r211,l0)  -- assign reg 3
      Popping a31(r268,l0)  -- assign reg 3
      Popping a57(r90,l0)  -- assign reg 3
      Popping a53(r230,l0)  -- assign reg 3
      Popping a54(r231,l0)  -- assign reg 5
      Popping a55(r91,l0)  -- assign reg 3
      Popping a56(r229,l0)  -- assign reg 3
      Popping a67(r216,l0)  -- assign reg 3
Disposition:
    1:r42  l0     5    0:r43  l0     2   65:r44  l0    10   78:r45  l0     8
   43:r46  l0     2  107:r50  l0     2   66:r51  l0     5  108:r53  l0     3
    5:r55  l0     4  105:r57  l0     2  102:r59  l0     2  101:r60  l0     3
  100:r61  l0     2   98:r62  l0     5   34:r63  l0     2   70:r64  l0     3
   93:r69  l0     2   86:r75  l0     8   84:r76  l0     6   81:r78  l0     6
   82:r79  l0     8   79:r81  l0     8   77:r82  l0     8   76:r83  l0     8
   73:r86  l0     8   72:r87  l0     8   60:r89  l0     3   57:r90  l0     3
   55:r91  l0     3   68:r92  l0     3   49:r96  l0     5   42:r97  l0     5
   35:r103 l0     3   32:r106 l0     3   30:r109 l0     3   29:r110 l0     3
   28:r111 l0     3   15:r112 l0     3   27:r113 l0     6   26:r114 l0     6
   14:r115 l0     3   13:r116 l0     3   11:r117 l0    11   10:r119 l0     3
    8:r120 l0     3    7:r121 l0     3    4:r122 l0     4  120:r124 l0     5
  119:r125 l0     6  115:r126 l0     3   45:r130 l0     6   44:r133 l0     5
   52:r135 l0     5   50:r137 l0     3   48:r138 l0     8   25:r140 l0     8
   23:r142 l0     6   22:r143 l0     6  111:r148 l0     2  110:r151 l0     3
  109:r155 l0     3  106:r160 l0     2  104:r165 l0     3   99:r168 l0     2
   97:r169 l0     2   96:r170 l0     3   95:r174 l0     3   94:r178 l0     2
   89:r183 l0     8   92:r186 l0     6   90:r187 l0     9   91:r188 l0     9
   88:r190 l0     2   87:r192 l0     8   85:r193 l0     6   83:r198 l0     6
   80:r200 l0     8   75:r207 l0    10   74:r208 l0     8   71:r210 l0     2
   69:r211 l0     3   67:r216 l0     3  121:r217 l0     5  118:r218 l0     5
  117:r219 l0     2  116:r220 l0     3   63:r221 l0     3   64:r222 l0     5
   62:r223 l0     3   61:r224 l0     5   59:r227 l0     3   58:r228 l0     3
   56:r229 l0     3   53:r230 l0     3   54:r231 l0     5   51:r232 l0     3
   37:r233 l0     3   47:r234 l0     5   46:r236 l0     5   40:r245 l0     5
   41:r246 l0     2   38:r248 l0     2   39:r249 l0     2   36:r251 l0     3
   33:r260 l0     3   31:r268 l0     3   18:r269 l0     2   16:r270 l0     5
   24:r278 l0     6   21:r281 l0     8   20:r282 l0     6   19:r284 l0     6
   17:r288 l0     2   12:r291 l0     2    6:r295 l0     2    9:r296 l0     3
    2:r300 l0     2    3:r301 l0     3  103:r307 l0     2
New iteration of spill/restore move
+++Costs: overall -124, reg -124, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


engineUpdate

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={36d} r1={1d,98u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,63u} r8={35d} r9={35d} r10={57d,34u} r11={52d,17u} r12={43d,8u} r13={35d} r14={35d} r15={35d} r16={1d,63u} r17={1d,62u} r18={35d} r19={35d} r20={35d} r21={35d} r22={35d} r23={35d} r24={35d} r25={35d} r26={35d} r27={35d} r28={35d} r29={35d} r30={35d} r31={35d} r32={35d} r33={35d} r34={35d} r35={35d} r42={2d,7u} r43={6d,21u} r44={2d,2u} r45={2d,1u} r46={2d,12u} r50={1d,2u} r51={2d,4u} r53={1d,1u} r55={1d,9u,1e} r57={1d,1u} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,3u} r64={1d,4u} r69={1d,1u} r75={1d,1u} r76={1d,1u} r78={1d,4u} r79={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r86={1d,1u} r87={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r96={1d,2u} r97={1d,1u} r103={1d,1u} r106={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,2u} r113={1d,1u} r114={1d,3u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r130={1d,1u} r133={1d,1u} r135={1d,2u} r137={1d,1u} r138={1d,2u,1e} r140={1d,2u} r142={1d,1u} r143={1d,2u} r148={1d,2u} r151={1d,1u} r155={1d,1u} r160={1d,1u} r165={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r174={1d,1u} r178={1d,1u} r183={1d,3u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r198={1d,1u} r200={1d,1u} r207={1d,1u} r208={1d,1u} r210={1d,1u} r211={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,5u} r234={1d,1u} r236={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,1u} r249={1d,1u} r251={1d,1u} r260={1d,1u} r268={1d,1u} r269={1d,7u,1e} r270={1d,3u} r278={1d,1u} r281={1d,1u,1e} r282={1d,1u} r284={1d,1u} r288={1d,1u} r291={1d,1u} r295={1d,4u,1e} r296={1d,1u} r300={1d,1u} r301={1d,1u} r307={1d,1u} 
;;    total ref usage 1685{1131d,549u,5e} in 314{279 regular + 35 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 50 148 151
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 11 13 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 13 2 14 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 82 {call_value_internal}
     (nil)
    (nil))
(note 14 13 15 2 NOTE_INSN_DELETED)
(insn 15 14 16 2 (set (reg/f:SI 148)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 16 15 17 2 NOTE_INSN_DELETED)
(note 17 16 18 2 NOTE_INSN_DELETED)
(insn 18 17 19 2 (set (reg:SI 12 a12)
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 148)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 33 {zero_extendhisi2}
     (nil))
(insn 19 18 20 2 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC187") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC186") [flags 0x2]  <var_decl 0x1019fc240 *.LC186>)
        (nil)))
(call_insn 21 20 23 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2036 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 23 21 25 2 (set (reg:SI 50 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 148)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2039 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(note 25 23 27 2 NOTE_INSN_DELETED)
(note 27 25 579 2 NOTE_INSN_DELETED)
(insn 579 27 28 2 (set (reg:HI 151)
        (const_int 193 [0xc1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2039 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 193 [0xc1])
        (nil)))
(jump_insn 28 579 29 2 (set (pc)
        (if_then_else (ne (and:SI (reg:SI 50 [ D.6328 ])
                    (subreg:SI (reg:HI 151) 0))
                (const_int 0 [0]))
            (label_ref:SI 527)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2039 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 151)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 527)
;;  succ:       63 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(1){ }u21(7){ }u22(16){ }u23(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 53 155
(note 29 28 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (set (reg/f:SI 155)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2043 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 31 30 32 3 (set (reg:SI 53 [ D.6329 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 155)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2043 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (nil)))
(jump_insn 32 31 33 3 (set (pc)
        (if_then_else (ne (reg:SI 53 [ D.6329 ])
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2043 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 53 [ D.6329 ])
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 43)
;;  succ:       4 [71.0%]  (FALLTHRU)
;;              6 [29.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50

;; basic block 4, loop depth 0, count 0, freq 4331, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [71.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 34 33 35 4 NOTE_INSN_DELETED)
(note 35 34 37 4 NOTE_INSN_DELETED)
(note 37 35 38 4 NOTE_INSN_DELETED)
(jump_insn 38 37 39 4 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 50 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 2 [0x2]))
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2043 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6328 ])
        (int_list:REG_BR_PROB 7929 (nil)))
 -> 43)
;;  succ:       5 [20.7%]  (FALLTHRU)
;;              6 [79.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 897, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [20.7%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(1){ }u36(7){ }u37(16){ }u38(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 40 39 543 5 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("LMIC_startJoining") [flags 0x3]  <function_decl 0x100b28510 LMIC_startJoining>) [0 LMIC_startJoining S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2044 82 {call_value_internal}
     (expr_list:REG_UNUSED (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 543 40 544 5 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2045 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 544 543 43)
;; basic block 6, loop depth 0, count 0, freq 5203, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 [29.0%] 
;;              4 [79.3%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(1){ }u41(7){ }u42(16){ }u43(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 55 57 160
(code_label 43 544 44 6 270 "" [2 uses])
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 45 44 46 6 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2049 82 {call_value_internal}
     (nil)
    (nil))
(insn 46 45 47 6 (set (reg/v:SI 55 [ txbeg ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2049 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 47 46 48 6 (var_location:SI now (reg/v:SI 55 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2049 -1
     (nil))
(debug_insn 48 47 49 6 (var_location:SI rxtime (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2050 -1
     (nil))
(debug_insn 49 48 50 6 (var_location:SI txbeg (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2051 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:SI 160)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2054 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 51 50 52 6 (set (reg:SI 57 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 160)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2054 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 160)
        (nil)))
(note 52 51 53 6 NOTE_INSN_DELETED)
(note 53 52 55 6 NOTE_INSN_DELETED)
(note 55 53 56 6 NOTE_INSN_DELETED)
(jump_insn 56 55 57 6 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 57 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref:SI 532)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2054 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 532)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              10 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55

;; basic block 7, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(1){ }u54(7){ }u55(16){ }u56(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 59 60 61 165 307
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (set (reg:SI 307 [orig:59 D.6327 ] [59])
        (plus:SI (reg/v:SI 55 [ txbeg ])
            (const_int 125 [0x7d]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 1 {addsi3}
     (nil))
(insn 59 58 60 7 (set (reg/f:SI 165)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 60 59 580 7 (set (reg:SI 60 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 165)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 165)
        (nil)))
(insn 580 60 61 7 (set (reg:SI 59 [ D.6327 ])
        (reg:SI 307 [orig:59 D.6327 ] [59])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 307 [orig:59 D.6327 ] [59])
        (nil)))
(insn 61 580 62 7 (set (reg:SI 61 [ D.6327 ])
        (minus:SI (reg:SI 59 [ D.6327 ])
            (reg:SI 60 [ D.6327 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6327 ])
        (expr_list:REG_DEAD (reg:SI 59 [ D.6327 ])
            (nil))))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (ge (reg:SI 61 [ D.6327 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 69))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6327 ])
        (int_list:REG_BR_PROB 4752 (nil)))
 -> 69)
;;  succ:       8 [52.5%]  (FALLTHRU)
;;              9 [47.5%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55

;; basic block 8, loop depth 0, count 0, freq 1365, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [52.5%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(1){ }u63(7){ }u64(16){ }u65(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 64 63 65 8 NOTE_INSN_DELETED)
(note 65 64 66 8 NOTE_INSN_DELETED)
(insn 66 65 67 8 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC188") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 2056 [0x808])
        (nil)))
(insn 67 66 68 8 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC189") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 68 67 69 8 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2056 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55

;; basic block 9, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7 [47.5%] 
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(1){ }u72(7){ }u73(16){ }u74(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 62 168
(code_label 69 68 70 9 272 "" [1 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 9 (set (reg/f:SI 168)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2057 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 72 71 73 9 (set (reg:SI 62 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 168)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2057 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (nil)))
(insn 73 72 74 9 (set (reg/v:SI 42 [ rxtime ])
        (plus:SI (reg:SI 62 [ D.6327 ])
            (const_int -125 [0xffffffffffffff83]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2057 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6327 ])
        (nil)))
(debug_insn 74 73 545 9 (var_location:SI rxtime (reg/v:SI 42 [ rxtime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2057 -1
     (nil))
(jump_insn 545 74 546 9 (set (pc)
        (label_ref 75)) 78 {jump}
     (nil)
 -> 75)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55

(barrier 546 545 532)
;; basic block 10, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(1){ }u79(7){ }u80(16){ }u81(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 532 546 531 10 299 "" [1 uses])
(note 531 532 3 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 3 531 75 10 (set (reg/v:SI 42 [ rxtime ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2050 44 {movsi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55

;; basic block 11, loop depth 0, count 0, freq 5203, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u82(1){ }u83(7){ }u84(16){ }u85(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 63 169 170
(code_label 75 3 76 11 271 "" [1 uses])
(note 76 75 77 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 77 76 78 11 (var_location:SI rxtime (reg/v:SI 42 [ rxtime ])) -1
     (nil))
(insn 78 77 79 11 (set (reg/f:SI 169)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2061 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 79 78 81 11 (set (reg:SI 63 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 169)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2061 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 169)
        (nil)))
(note 81 79 83 11 NOTE_INSN_DELETED)
(note 83 81 578 11 NOTE_INSN_DELETED)
(insn 578 83 84 11 (set (reg:HI 170)
        (const_int 60 [0x3c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2061 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 60 [0x3c])
        (nil)))
(jump_insn 84 578 85 11 (set (pc)
        (if_then_else (eq (and:SI (reg:SI 63 [ D.6328 ])
                    (subreg:SI (reg:HI 170) 0))
                (const_int 0 [0]))
            (label_ref 380)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2061 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 170)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 380)
;;  succ:       12 [50.0%]  (FALLTHRU)
;;              48 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 63

;; basic block 12, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 [50.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u93(1){ }u94(7){ }u95(16){ }u96(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63
;; lr  def 	 64 174
(note 85 84 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 87 85 577 12 NOTE_INSN_DELETED)
(insn 577 87 88 12 (set (reg:HI 174)
        (const_int 36 [0x24])) 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 36 [0x24])
        (nil)))
(insn 88 577 89 12 (set (reg:SI 64 [ D.6328 ])
        (and:SI (reg:SI 63 [ D.6328 ])
            (subreg:SI (reg:HI 174) 0))) 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 174)
        (expr_list:REG_DEAD (reg:SI 63 [ D.6328 ])
            (nil))))
(debug_insn 89 88 90 12 (var_location:QI D#3 (ne:QI (subreg:HI (reg:SI 64 [ D.6328 ]) 0)
        (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2064 -1
     (nil))
(debug_insn 90 89 91 12 (var_location:QI jacc (debug_expr:QI D#3)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2064 -1
     (nil))
(jump_insn 91 90 92 12 (set (pc)
        (if_then_else (eq (reg:SI 64 [ D.6328 ])
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2066 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 101)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64

;; basic block 13, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(1){ }u104(7){ }u105(16){ }u106(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 93 92 94 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2067 82 {call_value_internal}
     (nil)
    (nil))
(note 94 93 95 13 NOTE_INSN_DELETED)
(note 95 94 96 13 NOTE_INSN_DELETED)
(insn 96 95 97 13 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2067 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 97 96 98 13 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC191") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2067 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC190") [flags 0x2]  <var_decl 0x1019fc2d0 *.LC190>)
        (nil)))
(call_insn 98 97 547 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2067 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_UNUSED (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(jump_insn 547 98 548 13 (set (pc)
        (label_ref 109)) 78 {jump}
     (nil)
 -> 109)
;;  succ:       15 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64

(barrier 548 547 101)
;; basic block 14, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u114(1){ }u115(7){ }u116(16){ }u117(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 101 548 102 14 274 "" [1 uses])
(note 102 101 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 103 102 104 14 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2069 82 {call_value_internal}
     (nil)
    (nil))
(note 104 103 105 14 NOTE_INSN_DELETED)
(note 105 104 106 14 NOTE_INSN_DELETED)
(insn 106 105 107 14 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2069 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 107 106 108 14 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC193") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2069 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC192") [flags 0x2]  <var_decl 0x1019fc360 *.LC192>)
        (nil)))
(call_insn 108 107 109 14 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2069 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_UNUSED (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64

;; basic block 15, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u125(1){ }u126(7){ }u127(16){ }u128(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 69 178
(code_label 109 108 110 15 275 "" [1 uses])
(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 15 (set (reg/f:SI 178)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2072 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 112 111 113 15 (set (reg:SI 69 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 178)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2072 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 178)
        (nil)))
(note 113 112 114 15 NOTE_INSN_DELETED)
(note 114 113 116 15 NOTE_INSN_DELETED)
(note 116 114 117 15 NOTE_INSN_DELETED)
(jump_insn 117 116 118 15 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 69 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 11 [0xb]))
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2072 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 69 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 140)
;;  succ:       16 [50.0%]  (FALLTHRU)
;;              17 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64

;; basic block 16, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u134(1){ }u135(7){ }u136(16){ }u137(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 183 186 187 188
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 16 (set (reg:SI 10 a10)
        (reg/v:SI 55 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 44 {movsi_internal}
     (nil))
(call_insn 120 119 121 16 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("nextTx") [flags 0x3]  <function_decl 0x100b7c870 nextTx>) [0 nextTx S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 121 120 122 16 (set (reg/v:SI 43 [ txbeg ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 122 121 123 16 (set (reg/f:SI 183)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 123 122 124 16 (set (mem/j/c:SI (reg/f:SI 183) [0 LMIC.txend+0 S4 A32])
        (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 44 {movsi_internal}
     (nil))
(debug_insn 124 123 127 16 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2073 -1
     (nil))
(insn 127 124 128 16 (set (reg:HI 186 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 183)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2074 45 {movhi_internal}
     (nil))
(insn 128 127 129 16 (set (reg:SI 188)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC195") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2074 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -2049 [0xfffffffffffff7ff])
        (nil)))
(insn 129 128 130 16 (set (reg:SI 187)
        (and:SI (subreg:SI (reg:HI 186 [ LMIC.opmode ]) 0)
            (reg:SI 188))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2074 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_DEAD (reg:HI 186 [ LMIC.opmode ])
            (nil))))
(insn 130 129 131 16 (set (mem/j/c:HI (plus:SI (reg/f:SI 183)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 187) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2074 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg/f:SI 183)
            (nil))))
(call_insn 131 130 132 16 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2076 82 {call_value_internal}
     (nil)
    (nil))
(note 132 131 133 16 NOTE_INSN_DELETED)
(note 133 132 134 16 NOTE_INSN_DELETED)
(insn 134 133 135 16 (set (reg:SI 12 a12)
        (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2076 44 {movsi_internal}
     (nil))
(insn 135 134 136 16 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2076 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 136 135 137 16 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC197") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2076 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC196") [flags 0x2]  <var_decl 0x1019fc3f0 *.LC196>)
        (nil)))
(call_insn 137 136 549 16 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2076 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(jump_insn 549 137 550 16 (set (pc)
        (label_ref 152)) 78 {jump}
     (nil)
 -> 152)
;;  succ:       18 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

(barrier 550 549 140)
;; basic block 17, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u159(1){ }u160(7){ }u161(16){ }u162(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 190
(code_label 140 550 141 17 276 "" [1 uses])
(note 141 140 142 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 17 (set (reg/f:SI 190)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2079 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 143 142 144 17 (set (reg/v:SI 43 [ txbeg ])
        (mem/j/c:SI (reg/f:SI 190) [0 LMIC.txend+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2079 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 190)
        (nil)))
(debug_insn 144 143 145 17 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2079 -1
     (nil))
(call_insn 145 144 146 17 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2081 82 {call_value_internal}
     (nil)
    (nil))
(note 146 145 147 17 NOTE_INSN_DELETED)
(note 147 146 148 17 NOTE_INSN_DELETED)
(insn 148 147 149 17 (set (reg:SI 12 a12)
        (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2081 44 {movsi_internal}
     (nil))
(insn 149 148 150 17 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2081 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 150 149 151 17 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC199") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2081 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC198") [flags 0x2]  <var_decl 0x1019fc480 *.LC198>)
        (nil)))
(call_insn 151 150 152 17 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2081 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 18, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u174(1){ }u175(7){ }u176(16){ }u177(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 75 192
(code_label 152 151 153 18 277 "" [1 uses])
(note 153 152 154 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 154 153 155 18 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) -1
     (nil))
(insn 155 154 156 18 (set (reg/f:SI 192)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 156 155 157 18 (set (reg:SI 75 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 192)
                    (const_int 163 [0xa3])) [0 LMIC.globalDutyRate+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 192)
        (nil)))
(jump_insn 157 156 158 18 (set (pc)
        (if_then_else (ne (reg:SI 75 [ D.6330 ])
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 75 [ D.6330 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 166)
;;  succ:       20 [50.0%] 
;;              19 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 19, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 [50.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u181(1){ }u182(7){ }u183(16){ }u184(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 76 193
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 19 (set (reg/f:SI 193)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 160 159 161 19 (set (reg:SI 76 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 193)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 193)
        (nil)))
(note 161 160 162 19 NOTE_INSN_DELETED)
(note 162 161 164 19 NOTE_INSN_DELETED)
(note 164 162 165 19 NOTE_INSN_DELETED)
(jump_insn 165 164 166 19 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 76 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 8 [0x8]))
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 76 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 181)
;;  succ:       20 [50.0%]  (FALLTHRU)
;;              22 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 20, loop depth 0, count 0, freq 1951, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18 [50.0%] 
;;              19 [50.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u191(1){ }u192(7){ }u193(16){ }u194(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 78 79 198
(code_label 166 165 167 20 278 "" [1 uses])
(note 167 166 168 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 20 (set (reg/f:SI 198)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 169 168 170 20 (set (reg/v:SI 78 [ txbeg ])
        (mem/j/c:SI (plus:SI (reg/f:SI 198)
                (const_int 164 [0xa4])) [0 LMIC.globalDutyAvail+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 198)
        (nil)))
(insn 170 169 171 20 (set (reg:SI 79 [ D.6327 ])
        (minus:SI (reg/v:SI 43 [ txbeg ])
            (reg/v:SI 78 [ txbeg ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 4 {subsi3}
     (nil))
(jump_insn 171 170 172 20 (set (pc)
        (if_then_else (ge (reg:SI 79 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2085 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 79 [ D.6327 ])
        (int_list:REG_BR_PROB 8688 (nil)))
 -> 181)
;;  succ:       21 [13.1%]  (FALLTHRU)
;;              22 [86.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64 78

;; basic block 21, loop depth 0, count 0, freq 256, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 [13.1%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u199(1){ }u200(7){ }u201(16){ }u202(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 64 78
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 78
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43
(note 172 171 173 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 173 172 174 21 (var_location:SI txbeg (reg/v:SI 78 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2086 -1
     (nil))
(call_insn 174 173 175 21 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2088 82 {call_value_internal}
     (nil)
    (nil))
(note 175 174 176 21 NOTE_INSN_DELETED)
(note 176 175 177 21 NOTE_INSN_DELETED)
(insn 177 176 178 21 (set (reg:SI 12 a12)
        (reg/v:SI 78 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2088 44 {movsi_internal}
     (nil))
(insn 178 177 179 21 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2088 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 179 178 180 21 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC201") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2088 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC200") [flags 0x2]  <var_decl 0x1019fc510 *.LC200>)
        (nil)))
(call_insn 180 179 4 21 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2088 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 4 180 181 21 (set (reg/v:SI 43 [ txbeg ])
        (reg/v:SI 78 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2086 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 78 [ txbeg ])
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 22, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       19 [50.0%] 
;;              20 [86.9%] 
;;              21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u214(1){ }u215(7){ }u216(16){ }u217(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 81 200
(code_label 181 4 182 22 279 "" [2 uses])
(note 182 181 183 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 183 182 184 22 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) -1
     (nil))
(insn 184 183 185 22 (set (reg/f:SI 200)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2094 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 185 184 186 22 (set (reg:SI 81 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 200)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2094 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 200)
        (nil)))
(note 186 185 187 22 NOTE_INSN_DELETED)
(note 187 186 189 22 NOTE_INSN_DELETED)
(note 189 187 190 22 NOTE_INSN_DELETED)
(jump_insn 190 189 191 22 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 81 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2094 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 81 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 214)
;;  succ:       23 [50.0%]  (FALLTHRU)
;;              28 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 23, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [50.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u225(1){ }u226(7){ }u227(16){ }u228(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64
;; lr  def 	
(note 191 190 192 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 192 191 193 23 (set (pc)
        (if_then_else (eq (reg:SI 64 [ D.6328 ])
                (const_int 0 [0]))
            (label_ref:SI 536)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2095 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 536)
;;  succ:       24 [50.0%]  (FALLTHRU)
;;              25 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 24, loop depth 0, count 0, freq 651, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 [50.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u230(1){ }u231(7){ }u232(16){ }u233(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45
(note 193 192 5 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 5 193 551 24 (set (reg:SI 45 [ D.6327 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC183") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2095 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 562500 [0x89544])
        (nil)))
(jump_insn 551 5 552 24 (set (pc)
        (label_ref 194)) 78 {jump}
     (nil)
 -> 194)
;;  succ:       26 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 55 64

(barrier 552 551 536)
;; basic block 25, loop depth 0, count 0, freq 651, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u234(1){ }u235(7){ }u236(16){ }u237(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45
(code_label 536 552 535 25 300 "" [1 uses])
(note 535 536 6 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 6 535 194 25 (set (reg:SI 45 [ D.6327 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC184") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2095 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 375000 [0x5b8d8])
        (nil)))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 55 64

;; basic block 26, loop depth 0, count 0, freq 1301, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [100.0%]  (FALLTHRU)
;;              24 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u238(1){ }u239(7){ }u240(16){ }u241(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 45
;; lr  def 	 82 83
(code_label 194 6 195 26 281 "" [1 uses])
(note 195 194 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 26 (set (reg:SI 82 [ D.6327 ])
        (plus:SI (reg/v:SI 43 [ txbeg ])
            (reg:SI 45 [ D.6327 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2095 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6327 ])
        (nil)))
(insn 197 196 198 26 (set (reg:SI 83 [ D.6327 ])
        (minus:SI (reg:SI 82 [ D.6327 ])
            (reg/v:SI 42 [ rxtime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2095 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 82 [ D.6327 ])
        (nil)))
(jump_insn 198 197 199 26 (set (pc)
        (if_then_else (ge (reg:SI 83 [ D.6327 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 214))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2094 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 83 [ D.6327 ])
        (int_list:REG_BR_PROB 4752 (nil)))
 -> 214)
;;  succ:       27 [52.5%]  (FALLTHRU)
;;              28 [47.5%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 27, loop depth 0, count 0, freq 683, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 [52.5%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u247(1){ }u248(7){ }u249(16){ }u250(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 207
(note 199 198 200 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 200 199 201 27 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2098 82 {call_value_internal}
     (nil)
    (nil))
(note 201 200 202 27 NOTE_INSN_DELETED)
(note 202 201 203 27 NOTE_INSN_DELETED)
(insn 203 202 204 27 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2098 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 204 203 205 27 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC203") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2098 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC202") [flags 0x2]  <var_decl 0x1019fc5a0 *.LC202>)
        (nil)))
(call_insn 205 204 207 27 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2098 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_UNUSED (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 207 205 208 27 NOTE_INSN_DELETED)
(insn 208 207 576 27 (set (reg:SI 11 a11)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2103 44 {movsi_internal}
     (nil))
(insn 576 208 209 27 (set (reg:SI 207)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC204") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2103 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 132500 [0x20594])
        (nil)))
(insn 209 576 210 27 (set (reg:SI 10 a10)
        (plus:SI (reg/v:SI 42 [ rxtime ])
            (reg:SI 207))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2103 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(call_insn 210 209 211 27 (call (mem:SI (symbol_ref:SI ("txDelay") [flags 0x3]  <function_decl 0x100b66d80 txDelay>) [0 txDelay S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2103 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(debug_insn 211 210 9 27 (var_location:SI txbeg (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2104 -1
     (nil))
(insn 9 211 553 27 (set (reg/v:SI 43 [ txbeg ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2104 44 {movsi_internal}
     (nil))
(jump_insn 553 9 554 27 (set (pc)
        (label_ref 387)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2105 78 {jump}
     (nil)
 -> 387)
;;  succ:       50 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

(barrier 554 553 214)
;; basic block 28, loop depth 0, count 0, freq 1919, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       22 [50.0%] 
;;              26 [47.5%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u264(1){ }u265(7){ }u266(16){ }u267(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 55
;; lr  def 	 86 87 208
(code_label 214 554 215 28 280 "" [2 uses])
(note 215 214 216 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 28 (set (reg:SI 208)
        (const_int -125 [0xffffffffffffff83])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2109 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -125 [0xffffffffffffff83])
        (nil)))
(insn 217 216 218 28 (set (reg:SI 86 [ D.6327 ])
        (minus:SI (reg:SI 208)
            (reg/v:SI 55 [ txbeg ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2109 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_EQUAL (minus:SI (const_int -125 [0xffffffffffffff83])
                (reg/v:SI 55 [ txbeg ]))
            (nil))))
(insn 218 217 219 28 (set (reg:SI 87 [ D.6327 ])
        (plus:SI (reg/v:SI 43 [ txbeg ])
            (reg:SI 86 [ D.6327 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2109 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 86 [ D.6327 ])
        (nil)))
(jump_insn 219 218 220 28 (set (pc)
        (if_then_else (ge (reg:SI 87 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 357)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2109 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6327 ])
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 357)
;;  succ:       29 [27.0%]  (FALLTHRU)
;;              45 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55 64

;; basic block 29, loop depth 0, count 0, freq 518, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 [27.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u274(1){ }u275(7){ }u276(16){ }u277(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 46 210
(note 220 219 221 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 221 220 222 29 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2111 82 {call_value_internal}
     (nil)
    (nil))
(note 222 221 223 29 NOTE_INSN_DELETED)
(note 223 222 224 29 NOTE_INSN_DELETED)
(insn 224 223 225 29 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2111 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 225 224 226 29 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC206") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2111 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC205") [flags 0x2]  <var_decl 0x1019fc630 *.LC205>)
        (nil)))
(call_insn 226 225 227 29 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2111 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_UNUSED (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(debug_insn 227 226 228 29 (var_location:SI txbeg (reg/v:SI 55 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2114 -1
     (nil))
(insn 228 227 229 29 (set (reg/f:SI 210)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2115 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 229 228 230 29 (set (reg/v:SI 46 [ txdr ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 210)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2115 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 210)
        (nil)))
(debug_insn 230 229 231 29 (var_location:QI txdr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2115 -1
     (nil))
(jump_insn 231 230 232 29 (set (pc)
        (if_then_else (eq (reg:SI 64 [ D.6328 ])
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2117 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 64 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 283)
;;  succ:       30 [50.0%]  (FALLTHRU)
;;              39 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 30, loop depth 0, count 0, freq 259, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 [50.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u289(1){ }u290(7){ }u291(16){ }u292(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 92 211
(note 232 231 233 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 30 (set (reg/f:SI 211)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2119 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 234 233 235 30 (set (reg:SI 92 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 211)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2119 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 211)
        (nil)))
(note 235 234 236 30 NOTE_INSN_DELETED)
(note 236 235 238 30 NOTE_INSN_DELETED)
(note 238 236 239 30 NOTE_INSN_DELETED)
(jump_insn 239 238 240 30 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 92 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5]))
                (const_int 0 [0]))
            (label_ref:SI 541)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2119 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 541)
;;  succ:       31 [50.0%]  (FALLTHRU)
;;              37 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 31, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 [50.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u299(1){ }u300(7){ }u301(16){ }u302(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 51 216
(note 240 239 241 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 31 (set (reg/f:SI 216)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2120 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 242 241 243 31 (set (reg/v:SI 51 [ n ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 216)
                    (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2120 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 216)
        (nil)))
(debug_insn 243 242 244 31 (var_location:QI dr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(debug_insn 244 243 555 31 (var_location:QI n (subreg:QI (reg/v:SI 51 [ n ]) 0)) -1
     (nil))
(jump_insn 555 244 556 31 (set (pc)
        (label_ref 263)) 78 {jump}
     (nil)
 -> 263)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 51 55

(barrier 556 555 270)
;; basic block 32, loop depth 1, count 0, freq 1310, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       35 [91.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u306(1){ }u307(7){ }u308(16){ }u309(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 124 125 217 218
(code_label 270 556 247 32 288 "" [1 uses])
(note 247 270 248 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(debug_insn 248 247 250 32 (var_location:QI dr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(debug_insn 250 248 251 32 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 251 250 252 32 (var_location:SI index (reg/v:SI 46 [ txdr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 252 251 253 32 (set (reg/f:SI 217)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC207") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 253 252 254 32 (set (reg/f:SI 124 [ D.6332 ])
        (plus:SI (reg/v:SI 46 [ txdr ])
            (reg/f:SI 217))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 217)
        (nil)))
(insn 254 253 255 32 (set (reg:SI 125 [ D.6333 ])
        (zero_extend:SI (mem:QI (reg/f:SI 124 [ D.6332 ]) [0 *_157+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 124 [ D.6332 ])
        (nil)))
(insn 255 254 256 32 (set (reg:SI 218)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 256 255 257 32 (set (pc)
        (if_then_else (eq (reg:SI 125 [ D.6333 ])
                (reg:SI 218))
            (label_ref 260)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg:SI 125 [ D.6333 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 260)
;;  succ:       33 [72.0%]  (FALLTHRU)
;;              34 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126

;; basic block 33, loop depth 1, count 0, freq 943, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [72.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u317(1){ }u318(7){ }u319(16){ }u320(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 46 219
(note 257 256 258 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 33 (set (reg:SI 219)
        (plus:SI (reg/v:SI 46 [ txdr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 46 [ txdr ])
        (nil)))
(insn 259 258 260 33 (set (reg/v:SI 46 [ txdr ])
        (zero_extend:SI (subreg:QI (reg:SI 219) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126

;; basic block 34, loop depth 1, count 0, freq 1310, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       32 [28.0%] 
;;              33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u323(1){ }u324(7){ }u325(16){ }u326(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 126
;; lr  def 	 51
(code_label 260 259 261 34 287 "" [1 uses])
(note 261 260 262 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 34 (set (reg/v:SI 51 [ n ])
        (reg/v:SI 126 [ n ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 126 [ n ])
        (nil)))
;;  succ:       35 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 51 55

;; basic block 35, loop depth 1, count 0, freq 1439, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 [100.0%]  (FALLTHRU,DFS_BACK)
;;              31 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u328(1){ }u329(7){ }u330(16){ }u331(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 51 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51
;; lr  def 	 126 220
(code_label 263 262 264 35 286 "" [1 uses])
(note 264 263 265 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 265 264 266 35 (var_location:QI n (subreg:QI (reg/v:SI 51 [ n ]) 0)) -1
     (nil))
(debug_insn 266 265 267 35 (var_location:QI dr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(insn 267 266 268 35 (set (reg:SI 220)
        (plus:SI (reg/v:SI 51 [ n ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 1 {addsi3}
     (nil))
(insn 268 267 269 35 (set (reg/v:SI 126 [ n ])
        (zero_extend:SI (subreg:QI (reg:SI 220) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 220)
        (nil)))
(debug_insn 269 268 271 35 (var_location:QI n (subreg:QI (reg/v:SI 126 [ n ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
(jump_insn 271 269 537 35 (set (pc)
        (if_then_else (ne (reg/v:SI 51 [ n ])
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 51 [ n ])
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 270)
;;  succ:       32 [91.0%] 
;;              36 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55 126

;; basic block 36, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 [9.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u338(1){ }u339(7){ }u340(16){ }u341(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(note 537 271 7 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 7 537 557 36 (set (reg/v:SI 44 [ ftype ])
        (const_int 192 [0xc0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2121 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 192 [0xc0])
        (nil)))
(jump_insn 557 7 558 36 (set (pc)
        (label_ref 272)) 78 {jump}
     (nil)
 -> 272)
;;  succ:       38 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 46 55

(barrier 558 557 541)
;; basic block 37, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       30 [50.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u342(1){ }u343(7){ }u344(16){ }u345(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(code_label 541 558 540 37 301 "" [1 uses])
(note 540 541 8 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 8 540 272 37 (set (reg/v:SI 44 [ ftype ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2123 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 46 55

;; basic block 38, loop depth 0, count 0, freq 259, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 [100.0%]  (FALLTHRU)
;;              36 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u346(1){ }u347(7){ }u348(16){ }u349(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 221 222
(code_label 272 8 273 38 285 "" [1 uses])
(note 273 272 274 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 274 273 275 38 (var_location:QI ftype (subreg:QI (reg/v:SI 44 [ ftype ]) 0)) -1
     (nil))
(debug_insn 275 274 276 38 (var_location:QI txdr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(insn 276 275 277 38 (set (reg:SI 10 a10)
        (reg/v:SI 44 [ ftype ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2125 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 [ ftype ])
        (nil)))
(call_insn 277 276 279 38 (call (mem:SI (symbol_ref:SI ("buildJoinRequest") [flags 0x3]  <function_decl 0x100bc3870 buildJoinRequest>) [0 buildJoinRequest S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2125 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 279 277 575 38 (set (reg:SI 222)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC208") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2126 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("jreqDone") [flags 0x3]  <function_decl 0x100bb2bd0 jreqDone>)
        (nil)))
(insn 575 279 280 38 (set (reg/f:SI 221)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2126 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 280 575 559 38 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 221)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 222)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2126 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg/f:SI 221)
            (nil))))
(jump_insn 559 280 560 38 (set (pc)
        (label_ref 314)) 78 {jump}
     (nil)
 -> 314)
;;  succ:       44 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

(barrier 560 559 283)
;; basic block 39, loop depth 0, count 0, freq 259, maybe hot
;;  prev block 38, next block 40, flags: (RTL)
;;  pred:       29 [50.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u357(1){ }u358(7){ }u359(16){ }u360(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 89 223 224
(code_label 283 560 284 39 284 "" [1 uses])
(note 284 283 285 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 39 (set (reg/f:SI 223)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2130 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 286 285 287 39 (set (reg:SI 89 [ D.6329 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 223)
                (const_int 284 [0x11c])) [0 LMIC.seqnoDn+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2130 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (nil)))
(insn 287 286 288 39 (set (reg:SI 224)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2130 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(jump_insn 288 287 289 39 (set (pc)
        (if_then_else (geu (reg:SI 224)
                (reg:SI 89 [ D.6329 ]))
            (label_ref 298)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2130 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_DEAD (reg:SI 89 [ D.6329 ])
            (int_list:REG_BR_PROB 7929 (nil))))
 -> 298)
;;  succ:       40 [20.7%]  (FALLTHRU)
;;              41 [79.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 40, loop depth 0, count 0, freq 83, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 [20.7%]  (FALLTHRU)
;;              42 [19.9%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u364(1){ }u365(7){ }u366(16){ }u367(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 289 288 290 40 291 ("reset") [1 uses])
(note 290 289 291 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(note 291 290 292 40 NOTE_INSN_DELETED)
(note 292 291 293 40 NOTE_INSN_DELETED)
(insn 293 292 294 40 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC209") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2139 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("runReset") [flags 0x3]  <function_decl 0x100b7ce58 runReset>)
        (nil)))
(insn 294 293 295 40 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC210") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2139 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 295 294 561 40 (call (mem:SI (symbol_ref:SI ("os_setCallback") [flags 0x41]  <function_decl 0x140efa1b0 os_setCallback>) [0 os_setCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2139 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(jump_insn 561 295 562 40 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2140 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 562 561 298)
;; basic block 41, loop depth 0, count 0, freq 205, maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       39 [79.3%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u373(1){ }u374(7){ }u375(16){ }u376(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 90 227 228
(code_label 298 562 299 41 290 "" [1 uses])
(note 299 298 300 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 41 (set (reg/f:SI 227)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 301 300 302 41 (set:SI (reg/f:SI 228)
        (plus:SI (reg/f:SI 227)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 227)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 302 301 303 41 (set (reg:SI 90 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 228)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 228)
        (nil)))
(jump_insn 303 302 304 41 (set (pc)
        (if_then_else (ne (reg:SI 90 [ D.6330 ])
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6330 ])
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 308)
;;  succ:       42 [71.0%]  (FALLTHRU)
;;              43 [29.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 42, loop depth 0, count 0, freq 146, maybe hot
;;  prev block 41, next block 43, flags: (RTL)
;;  pred:       41 [71.0%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u380(1){ }u381(7){ }u382(16){ }u383(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 91 229
(note 304 303 305 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 42 (set (reg/f:SI 229)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 306 305 307 42 (set (reg:SI 91 [ D.6329 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 229)
                (const_int 288 [0x120])) [0 LMIC.seqnoUp+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 229)
        (nil)))
(jump_insn 307 306 308 42 (set (pc)
        (if_then_else (eq (reg:SI 91 [ D.6329 ])
                (const_int -1 [0xffffffffffffffff]))
            (label_ref 289)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2142 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6329 ])
        (int_list:REG_BR_PROB 1991 (nil)))
 -> 289)
;;  succ:       40 [19.9%] 
;;              43 [80.1%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 43, loop depth 0, count 0, freq 176, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       41 [29.0%] 
;;              42 [80.1%]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u386(1){ }u387(7){ }u388(16){ }u389(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 230 231
(code_label 308 307 309 43 292 "" [1 uses])
(note 309 308 310 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(call_insn 310 309 312 43 (call (mem:SI (symbol_ref:SI ("buildDataFrame") [flags 0x3]  <function_decl 0x100bc3360 buildDataFrame>) [0 buildDataFrame S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2151 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 312 310 574 43 (set (reg:SI 231)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC211") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2152 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("updataDone") [flags 0x3]  <function_decl 0x100bc3288 updataDone>)
        (nil)))
(insn 574 312 313 43 (set (reg/f:SI 230)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2152 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 313 574 314 43 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 230)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 231)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2152 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/f:SI 230)
            (nil))))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55

;; basic block 44, loop depth 0, count 0, freq 435, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              38 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u393(1){ }u394(7){ }u395(16){ }u396(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46 55
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 96 97 130 133 135 137 138 232 233 234 236 245 246 248 249
(code_label 314 313 315 44 289 "" [1 uses])
(note 315 314 316 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 316 315 317 44 (var_location:QI txdr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(debug_insn 317 316 318 44 (var_location:QI dr (subreg:QI (reg/v:SI 46 [ txdr ]) 0)) -1
     (nil))
(insn 318 317 320 44 (set (reg:SI 135 [ D.6327 ])
        (plus:SI (reg/v:SI 46 [ txdr ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 1 {addsi3}
     (nil))
(debug_insn 320 318 321 44 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 321 320 322 44 (var_location:SI index (reg:SI 135 [ D.6327 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(insn 322 321 323 44 (set (reg/f:SI 232)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC207") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 323 322 324 44 (set (reg/f:SI 137 [ D.6332 ])
        (plus:SI (reg:SI 135 [ D.6327 ])
            (reg/f:SI 232))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 232)
        (expr_list:REG_DEAD (reg:SI 135 [ D.6327 ])
            (nil))))
(insn 324 323 325 44 (set (reg:SI 138 [ D.6333 ])
        (zero_extend:SI (mem:QI (reg/f:SI 137 [ D.6332 ]) [0 *_172+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 137 [ D.6332 ])
        (nil)))
(insn 325 324 326 44 (set (reg/f:SI 233)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2154 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 326 325 327 44 (set (reg:SI 96 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 233)
                    (const_int 177 [0xb1])) [0 LMIC.errcr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2154 34 {zero_extendqisi2}
     (nil))
(debug_insn 327 326 328 44 (var_location:HI params (zero_extend:HI (subreg:QI (reg:SI 138 [ D.6333 ]) 0))) -1
     (nil))
(debug_insn 328 327 329 44 (var_location:QI cr (subreg:QI (reg:SI 96 [ D.6330 ]) 0)) -1
     (nil))
(insn 329 328 330 44 (set (reg:SI 130 [ D.6327 ])
        (ashift:SI (reg:SI 96 [ D.6330 ])
            (const_int 5 [0x5]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.6330 ])
        (nil)))
(insn 330 329 332 44 (set (reg:HI 234)
        (const_int -97 [0xffffffffffffff9f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -97 [0xffffffffffffff9f])
        (nil)))
(insn 332 330 335 44 (set (reg:SI 236)
        (and:SI (reg:SI 138 [ D.6333 ])
            (subreg:SI (reg:HI 234) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 234)
        (expr_list:REG_DEAD (reg:SI 138 [ D.6333 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 138 [ D.6333 ])
                    (const_int -97 [0xffffffffffffff9f]))
                (nil)))))
(note 335 332 336 44 NOTE_INSN_DELETED)
(insn 336 335 338 44 (set (reg:SI 133 [ D.6334 ])
        (ior:SI (reg:SI 236)
            (reg:SI 130 [ D.6327 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:352 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 236)
        (expr_list:REG_DEAD (reg:SI 130 [ D.6327 ])
            (nil))))
(insn 338 336 340 44 (set (mem/j/c:HI (plus:SI (reg/f:SI 233)
                (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16])
        (subreg/s/v:HI (reg:SI 133 [ D.6334 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2154 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 133 [ D.6334 ])
        (nil)))
(insn 340 338 342 44 (set (mem/j/c:QI (plus:SI (reg/f:SI 233)
                (const_int 17 [0x11])) [0 LMIC.dndr+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 46 [ txdr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2155 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 46 [ txdr ])
        (nil)))
(insn 342 340 345 44 (set (reg:SI 97 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 233)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 33 {zero_extendhisi2}
     (nil))
(insn 345 342 346 44 (set (reg:SI 246)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC212") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -2449 [0xfffffffffffff66f])
        (nil)))
(insn 346 345 348 44 (set (reg:SI 245)
        (and:SI (reg:SI 97 [ D.6328 ])
            (reg:SI 246))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 97 [ D.6328 ])
            (nil))))
(insn 348 346 349 44 (set (reg:SI 249)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC213") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 2176 [0x880])
        (nil)))
(insn 349 348 350 44 (set (reg:SI 248)
        (ior:SI (reg:SI 245)
            (reg:SI 249))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 249)
        (expr_list:REG_DEAD (reg:SI 245)
            (nil))))
(insn 350 349 351 44 (set (mem/j/c:HI (plus:SI (reg/f:SI 233)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 248) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2156 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (nil))))
(insn 351 350 352 44 (set (reg:SI 10 a10)
        (reg/v:SI 55 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2157 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 55 [ txbeg ])
        (nil)))
(call_insn 352 351 353 44 (call (mem:SI (symbol_ref:SI ("updateTx") [flags 0x3]  <function_decl 0x100b7c798 updateTx>) [0 updateTx S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2157 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 353 352 354 44 (set (reg:SI 10 a10)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2158 44 {movsi_internal}
     (nil))
(call_insn 354 353 563 44 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2158 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(jump_insn 563 354 564 44 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2159 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 564 563 357)
;; basic block 45, loop depth 0, count 0, freq 1401, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       28 [73.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u430(1){ }u431(7){ }u432(16){ }u433(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 103 251
(code_label 357 564 358 45 283 "" [1 uses])
(note 358 357 359 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(call_insn 359 358 360 45 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2162 82 {call_value_internal}
     (nil)
    (nil))
(note 360 359 361 45 NOTE_INSN_DELETED)
(note 361 360 362 45 NOTE_INSN_DELETED)
(insn 362 361 363 45 (set (reg:SI 12 a12)
        (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2162 44 {movsi_internal}
     (nil))
(insn 363 362 364 45 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2162 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 364 363 365 45 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC215") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2162 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC214") [flags 0x2]  <var_decl 0x1019fc6c0 *.LC214>)
        (nil)))
(call_insn 365 364 366 45 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2162 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 366 365 367 45 (set (reg/f:SI 251)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2165 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 367 366 368 45 (set (reg:SI 103 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 251)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2165 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 251)
        (nil)))
(note 368 367 369 45 NOTE_INSN_DELETED)
(note 369 368 371 45 NOTE_INSN_DELETED)
(note 371 369 372 45 NOTE_INSN_DELETED)
(jump_insn 372 371 373 45 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 103 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2165 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 103 [ D.6328 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 515)
;;  succ:       62 [50.0%] 
;;              46 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 46, loop depth 0, count 0, freq 700, maybe hot
;;  prev block 45, next block 47, flags: (RTL)
;;  pred:       45 [50.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u449(1){ }u450(7){ }u451(16){ }u452(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(note 373 372 374 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 374 373 375 46 (set (pc)
        (if_then_else (ne (reg/v:SI 43 [ txbeg ])
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2168 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 387)
;;  succ:       47 [50.0%]  (FALLTHRU)
;;              50 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 47, loop depth 0, count 0, freq 350, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 [50.0%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u454(1){ }u455(7){ }u456(16){ }u457(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 43
(note 375 374 376 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 47 (set (reg/v:SI 43 [ txbeg ])
        (plus:SI (reg/v:SI 43 [ txbeg ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2169 1 {addsi3}
     (nil))
(debug_insn 377 376 565 47 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2169 -1
     (nil))
(jump_insn 565 377 566 47 (set (pc)
        (label_ref 387)) 78 {jump}
     (nil)
 -> 387)
;;  succ:       50 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

(barrier 566 565 380)
;; basic block 48, loop depth 0, count 0, freq 2602, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       11 [50.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u460(1){ }u461(7){ }u462(16){ }u463(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55 63
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 63
;; lr  def 	
(code_label 380 566 381 48 273 "" [1 uses])
(note 381 380 382 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(note 382 381 383 48 NOTE_INSN_DELETED)
(note 383 382 385 48 NOTE_INSN_DELETED)
(note 385 383 386 48 NOTE_INSN_DELETED)
(jump_insn 386 385 542 48 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 63 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref:SI 527)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2172 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6328 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 527)
;;  succ:       63 [39.0%] 
;;              49 [61.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55

;; basic block 49, loop depth 0, count 0, freq 1587, maybe hot
;;  prev block 48, next block 50, flags: (RTL)
;;  pred:       48 [61.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u469(1){ }u470(7){ }u471(16){ }u472(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(note 542 386 10 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 10 542 387 49 (set (reg/v:SI 43 [ txbeg ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2051 44 {movsi_internal}
     (nil))
;;  succ:       50 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 50, loop depth 0, count 0, freq 2970, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       46 [50.0%] 
;;              27 [100.0%] 
;;              49 [100.0%]  (FALLTHRU)
;;              47 [100.0%] 
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u473(1){ }u474(7){ }u475(16){ }u476(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 106 260
(code_label 387 10 388 50 282 ("checkrx") [3 uses])
(note 388 387 389 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(debug_insn 389 388 390 50 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) -1
     (nil))
(insn 390 389 391 50 (set (reg/f:SI 260)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2180 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 391 390 392 50 (set (reg:SI 106 [ D.6328 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 260)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2180 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 260)
        (nil)))
(note 392 391 393 50 NOTE_INSN_DELETED)
(note 393 392 395 50 NOTE_INSN_DELETED)
(note 395 393 396 50 NOTE_INSN_DELETED)
(jump_insn 396 395 397 50 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 106 [ D.6328 ])
                    (const_int 1 [0x1])
                    (const_int 9 [0x9]))
                (const_int 0 [0]))
            (label_ref 477)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2180 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 106 [ D.6328 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 477)
;;  succ:       51 [29.0%]  (FALLTHRU)
;;              57 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 51, loop depth 0, count 0, freq 861, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 [29.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u484(1){ }u485(7){ }u486(16){ }u487(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 397 396 398 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(note 398 397 399 51 NOTE_INSN_DELETED)
(note 399 398 400 51 NOTE_INSN_DELETED)
(insn 400 399 401 51 (set (reg:SI 11 a11)
        (plus:SI (reg/v:SI 55 [ txbeg ])
            (const_int 125 [0x7d]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2182 1 {addsi3}
     (nil))
(insn 401 400 402 51 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC216") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2182 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 312 [0x138])))
        (nil)))
(call_insn 402 401 403 51 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("rxschedNext") [flags 0x3]  <function_decl 0x100b66bd0 rxschedNext>) [0 rxschedNext S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2182 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 403 402 405 51 NOTE_INSN_DELETED)
(jump_insn 405 403 406 51 (set (pc)
        (if_then_else (eq (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 477)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2182 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 477)
;;  succ:       52 [50.0%]  (FALLTHRU)
;;              57 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 52, loop depth 0, count 0, freq 431, maybe hot
;;  prev block 51, next block 53, flags: (RTL)
;;  pred:       51 [50.0%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u496(1){ }u497(7){ }u498(16){ }u499(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(note 406 405 407 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 407 406 408 52 (set (pc)
        (if_then_else (eq (reg/v:SI 43 [ txbeg ])
                (const_int 0 [0]))
            (label_ref 413)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2183 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 413)
;;  succ:       53 [50.0%]  (FALLTHRU)
;;              54 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 55

;; basic block 53, loop depth 0, count 0, freq 215, maybe hot
;;  prev block 52, next block 54, flags: (RTL)
;;  pred:       52 [50.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u501(1){ }u502(7){ }u503(16){ }u504(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 109 110 268
(note 408 407 409 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 53 (set (reg/f:SI 268)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2183 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 410 409 411 53 (set (reg:SI 109 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 268)
                (const_int 320 [0x140])) [0 LMIC.ping.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2183 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 268)
        (nil)))
(insn 411 410 412 53 (set (reg:SI 110 [ D.6327 ])
        (minus:SI (reg/v:SI 43 [ txbeg ])
            (reg:SI 109 [ D.6327 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2183 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 109 [ D.6327 ])
        (nil)))
(jump_insn 412 411 413 53 (set (pc)
        (if_then_else (lt (reg:SI 110 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2183 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 110 [ D.6327 ])
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 515)
;;  succ:       62 [27.0%] 
;;              54 [73.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 55

;; basic block 54, loop depth 0, count 0, freq 373, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       52 [50.0%] 
;;              53 [73.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u509(1){ }u510(7){ }u511(16){ }u512(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 55
;; lr  def 	 111 112 113 114 115 116 140 142 143 269 270 278 281 282 284 288
(code_label 413 412 414 54 295 "" [1 uses])
(note 414 413 415 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 54 (set (reg/f:SI 269)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2185 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 416 415 417 54 (set:SI (reg/f:SI 270)
        (plus:SI (reg/f:SI 269)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2185 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 417 416 419 54 (set (reg:SI 111 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 270)
                    (const_int 59 [0x3b])) [0 LMIC.ping.rxsyms+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2185 34 {zero_extendqisi2}
     (nil))
(insn 419 417 421 54 (set (mem/j/c:QI (plus:SI (reg/f:SI 269)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (subreg/s/v:QI (reg:SI 111 [ D.6330 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2185 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ D.6330 ])
        (nil)))
(insn 421 419 423 54 (set (reg:SI 112 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 269)
                (const_int 320 [0x140])) [0 LMIC.ping.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2186 44 {movsi_internal}
     (nil))
(insn 423 421 425 54 (set (mem/j/c:SI (plus:SI (reg/f:SI 269)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (reg:SI 112 [ D.6327 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2186 44 {movsi_internal}
     (nil))
(insn 425 423 427 54 (set (reg:SI 113 [ D.6329 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 269)
                (const_int 324 [0x144])) [0 LMIC.ping.freq+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2187 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 269)
                (const_int 324 [0x144])) [0 LMIC.ping.freq+0 S4 A32])
        (nil)))
(insn 427 425 430 54 (set (mem/j/c:SI (plus:SI (reg/f:SI 269)
                (const_int 8 [0x8])) [0 LMIC.freq+0 S4 A32])
        (reg:SI 113 [ D.6329 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2187 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ D.6329 ])
        (nil)))
(insn 430 427 431 54 (set (reg:SI 114 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 270)
                    (const_int 56 [0x38])) [0 LMIC.ping.dr+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2188 34 {zero_extendqisi2}
     (nil))
(debug_insn 431 430 432 54 (var_location:QI dr (subreg:QI (reg:SI 114 [ D.6330 ]) 0)) -1
     (nil))
(debug_insn 432 431 433 54 (var_location:QI dr (subreg:QI (reg:SI 114 [ D.6330 ]) 0)) -1
     (nil))
(insn 433 432 435 54 (set (reg:SI 140 [ D.6327 ])
        (plus:SI (reg:SI 114 [ D.6330 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 114 [ D.6330 ])
        (nil)))
(debug_insn 435 433 436 54 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(debug_insn 436 435 437 54 (var_location:SI index (reg:SI 140 [ D.6327 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:365 -1
     (nil))
(insn 437 436 438 54 (set (reg/f:SI 278)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC207") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 438 437 439 54 (set (reg/f:SI 142 [ D.6332 ])
        (plus:SI (reg:SI 140 [ D.6327 ])
            (reg/f:SI 278))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 278)
        (expr_list:REG_DEAD (reg:SI 140 [ D.6327 ])
            (nil))))
(insn 439 438 440 54 (set (reg:SI 143 [ D.6333 ])
        (zero_extend:SI (mem:QI (reg/f:SI 142 [ D.6332 ]) [0 *_177+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 142 [ D.6332 ])
        (nil)))
(debug_insn 440 439 441 54 (var_location:HI params (zero_extend:HI (subreg:QI (reg:SI 143 [ D.6333 ]) 0))) -1
     (nil))
(debug_insn 441 440 442 54 (var_location:SI nocrc (const_int 1 [0x1])) -1
     (nil))
(note 442 441 444 54 NOTE_INSN_DELETED)
(insn 444 442 445 54 (set (reg:SI 281)
        (and:SI (reg:SI 143 [ D.6333 ])
            (const_int 127 [0x7f]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 143 [ D.6333 ])
        (nil)))
(insn 445 444 447 54 (set (reg:HI 282)
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 447 445 448 54 (set (reg:SI 284)
        (ior:SI (reg:SI 281)
            (subreg:SI (reg:HI 282) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 282)
        (expr_list:REG_DEAD (reg:SI 281)
            (expr_list:REG_EQUAL (ior:SI (reg:SI 281)
                    (const_int 128 [0x80]))
                (nil)))))
(note 448 447 450 54 NOTE_INSN_DELETED)
(insn 450 448 453 54 (set (mem/j/c:HI (plus:SI (reg/f:SI 269)
                (const_int 14 [0xe])) [0 LMIC.rps+0 S2 A16])
        (subreg:HI (reg:SI 284) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2188 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 284)
        (expr_list:REG_DEAD (reg/f:SI 269)
            (nil))))
(insn 453 450 454 54 (set (reg:QI 288)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2189 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 454 453 455 54 (set (mem/j/c:QI (plus:SI (reg/f:SI 270)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 288)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2189 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 288)
        (expr_list:REG_DEAD (reg/f:SI 270)
            (nil))))
(insn 455 454 456 54 (set (reg:SI 115 [ D.6327 ])
        (minus:SI (reg:SI 112 [ D.6327 ])
            (reg/v:SI 55 [ txbeg ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 112 [ D.6327 ])
        (expr_list:REG_DEAD (reg/v:SI 55 [ txbeg ])
            (nil))))
(insn 456 455 457 54 (set (reg:SI 116 [ D.6327 ])
        (plus:SI (reg:SI 115 [ D.6327 ])
            (const_int 125 [0x7d]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 115 [ D.6327 ])
        (nil)))
(jump_insn 457 456 458 54 (set (pc)
        (if_then_else (ge (reg:SI 116 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 116 [ D.6327 ])
        (int_list:REG_BR_PROB 8089 (nil)))
 -> 464)
;;  succ:       55 [19.1%]  (FALLTHRU)
;;              56 [80.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 55, loop depth 0, count 0, freq 71, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 [19.1%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u547(1){ }u548(7){ }u549(16){ }u550(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 458 457 459 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(note 459 458 460 55 NOTE_INSN_DELETED)
(note 460 459 461 55 NOTE_INSN_DELETED)
(insn 461 460 462 55 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC217") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 2190 [0x88e])
        (nil)))
(insn 462 461 463 55 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC189") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 463 462 464 55 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2190 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       56 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 56, loop depth 0, count 0, freq 373, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       54 [80.9%] 
;;              55 [100.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u556(1){ }u557(7){ }u558(16){ }u559(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 117 291
(code_label 464 463 465 56 296 "" [1 uses])
(note 465 464 466 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 56 (set (reg/f:SI 291)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 467 466 468 56 (set (reg:SI 117 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 291)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 291)
        (nil)))
(note 468 467 469 56 NOTE_INSN_DELETED)
(note 469 468 470 56 NOTE_INSN_DELETED)
(note 470 469 471 56 NOTE_INSN_DELETED)
(insn 471 470 472 56 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC218") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("startRxPing") [flags 0x3]  <function_decl 0x100bc36c0 startRxPing>)
        (nil)))
(insn 472 471 473 56 (set (reg:SI 11 a11)
        (plus:SI (reg:SI 117 [ D.6327 ])
            (const_int -125 [0xffffffffffffff83]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 117 [ D.6327 ])
        (nil)))
(insn 473 472 474 56 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC210") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 474 473 567 56 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2191 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(jump_insn 567 474 568 56 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2192 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 568 567 477)
;; basic block 57, loop depth 0, count 0, freq 2539, maybe hot
;;  prev block 56, next block 58, flags: (RTL)
;;  pred:       50 [71.0%] 
;;              51 [50.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u569(1){ }u570(7){ }u571(16){ }u572(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(code_label 477 568 478 57 294 "" [2 uses])
(note 478 477 479 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(jump_insn 479 478 480 57 (set (pc)
        (if_then_else (eq (reg/v:SI 43 [ txbeg ])
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2198 56 {*btrue}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 483)
;;  succ:       58 [71.0%]  (FALLTHRU)
;;              59 [29.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 58, loop depth 0, count 0, freq 1803, maybe hot
;;  prev block 57, next block 59, flags: (RTL)
;;  pred:       57 [71.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u574(1){ }u575(7){ }u576(16){ }u577(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  def 	 119
(note 480 479 481 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 58 (set (reg:SI 119 [ D.6327 ])
        (minus:SI (reg/v:SI 43 [ txbeg ])
            (reg/v:SI 42 [ rxtime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2198 4 {subsi3}
     (nil))
(jump_insn 482 481 483 58 (set (pc)
        (if_then_else (lt (reg:SI 119 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2198 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 119 [ D.6327 ])
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 515)
;;  succ:       62 [27.0%] 
;;              59 [73.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 55

;; basic block 59, loop depth 0, count 0, freq 2053, maybe hot
;;  prev block 58, next block 60, flags: (RTL)
;;  pred:       57 [29.0%] 
;;              58 [73.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u581(1){ }u582(7){ }u583(16){ }u584(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 55
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 120 121 122 295 296
(code_label 483 482 484 59 297 "" [1 uses])
(note 484 483 485 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(call_insn 485 484 486 59 (call (mem:SI (symbol_ref:SI ("setBcnRxParams") [flags 0x3]  <function_decl 0x100b7c948 setBcnRxParams>) [0 setBcnRxParams S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2201 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 486 485 487 59 (set (reg/f:SI 295)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2202 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 487 486 488 59 (set:SI (reg/f:SI 296)
        (plus:SI (reg/f:SI 295)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2202 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 488 487 490 59 (set (reg:SI 120 [ D.6330 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 296)
                    (const_int 141 [0x8d])) [0 LMIC.bcnRxsyms+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2202 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 296)
        (nil)))
(insn 490 488 492 59 (set (mem/j/c:QI (plus:SI (reg/f:SI 295)
                (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32])
        (subreg/s/v:QI (reg:SI 120 [ D.6330 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2202 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 120 [ D.6330 ])
        (nil)))
(insn 492 490 494 59 (set (reg:SI 121 [ D.6327 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2203 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])
        (nil)))
(insn 494 492 495 59 (set (mem/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])
        (reg:SI 121 [ D.6327 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2203 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 295)
        (expr_list:REG_DEAD (reg:SI 121 [ D.6327 ])
            (nil))))
(insn 495 494 496 59 (set (reg:SI 122 [ D.6327 ])
        (minus:SI (reg/v:SI 55 [ txbeg ])
            (reg/v:SI 42 [ rxtime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2204 4 {subsi3}
     (expr_list:REG_DEAD (reg/v:SI 55 [ txbeg ])
        (nil)))
(jump_insn 496 495 497 59 (set (pc)
        (if_then_else (lt (reg:SI 122 [ D.6327 ])
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2204 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 122 [ D.6327 ])
        (int_list:REG_BR_PROB 2699 (nil)))
 -> 505)
;;  succ:       60 [73.0%]  (FALLTHRU)
;;              61 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 60, loop depth 0, count 0, freq 1499, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       59 [73.0%]  (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u596(1){ }u597(7){ }u598(16){ }u599(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 300 301
(note 497 496 499 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 499 497 573 60 (set (reg:SI 301)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC219") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2205 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("processBeacon") [flags 0x3]  <function_decl 0x100bc3e58 processBeacon>)
        (nil)))
(insn 573 499 500 60 (set (reg/f:SI 300)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC185") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2205 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 500 573 501 60 (set (mem/f/j/c:SI (plus:SI (reg/f:SI 300)
                (const_int 28 [0x1c])) [0 LMIC.osjob.func+0 S4 A32])
        (reg:SI 301)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2205 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 301)
        (expr_list:REG_DEAD (reg/f:SI 300)
            (nil))))
(insn 501 500 502 60 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2206 44 {movsi_internal}
     (nil))
(call_insn 502 501 569 60 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2206 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(jump_insn 569 502 570 60 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2207 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 570 569 505)
;; basic block 61, loop depth 0, count 0, freq 554, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       59 [27.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u604(1){ }u605(7){ }u606(16){ }u607(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 505 570 506 61 298 "" [1 uses])
(note 506 505 507 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 507 506 508 61 NOTE_INSN_DELETED)
(note 508 507 509 61 NOTE_INSN_DELETED)
(insn 509 508 510 61 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC220") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2209 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("startRxBcn") [flags 0x3]  <function_decl 0x100bc35e8 startRxBcn>)
        (nil)))
(insn 510 509 511 61 (set (reg:SI 11 a11)
        (reg/v:SI 42 [ rxtime ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2209 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ rxtime ])
        (nil)))
(insn 511 510 512 61 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC210") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2209 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 512 511 571 61 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2209 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(jump_insn 571 512 572 61 (set (pc)
        (label_ref 527)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2210 78 {jump}
     (nil)
 -> 527)
;;  succ:       63 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 572 571 515)
;; basic block 62, loop depth 0, count 0, freq 1245, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       45 [50.0%] 
;;              53 [27.0%] 
;;              58 [27.0%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u615(1){ }u616(7){ }u617(16){ }u618(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 515 572 516 62 293 ("txdelay") [3 uses])
(note 516 515 517 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(debug_insn 517 516 518 62 (var_location:SI txbeg (reg/v:SI 43 [ txbeg ])) -1
     (nil))
(note 518 517 519 62 NOTE_INSN_DELETED)
(note 519 518 520 62 NOTE_INSN_DELETED)
(note 520 519 521 62 NOTE_INSN_DELETED)
(insn 521 520 522 62 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC221") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2218 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("runEngineUpdate") [flags 0x3]  <function_decl 0x100b7cca8 runEngineUpdate>)
        (nil)))
(insn 522 521 523 62 (set (reg:SI 11 a11)
        (plus:SI (reg/v:SI 43 [ txbeg ])
            (const_int -125 [0xffffffffffffff83]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2218 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 43 [ txbeg ])
        (nil)))
(insn 523 522 524 62 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC210") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2218 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 524 523 527 62 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2218 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       63 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 63, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 62, next block 1, flags: (RTL)
;;  pred:       62 [100.0%]  (FALLTHRU)
;;              2 [39.0%] 
;;              60 [100.0%] 
;;              5 [100.0%] 
;;              40 [100.0%] 
;;              48 [39.0%] 
;;              44 [100.0%] 
;;              56 [100.0%] 
;;              61 [100.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u628(1){ }u629(7){ }u630(16){ }u631(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 527 524 528 63 268 "" [8 uses])
(note 528 527 0 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function reportEvent (reportEvent, funcdef_no=68, decl_uid=3697, cgraph_uid=68, symbol_order=76)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


reportEvent

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10]
;;  ref usage 	r0={3d} r1={1d,4u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={2d} r9={2d} r10={3d,1u} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={1d,1u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} 
;;    total ref usage 76{65d,11u,0e} in 3{1 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_DELETED)
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 10 a10)
        (reg:SI 2 a2 [ ev ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:947 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ ev ])
        (nil)))
(call_insn 7 6 8 2 (call (mem:SI (symbol_ref:SI ("onEvent") [flags 0x41]  <function_decl 0x100b50360 onEvent>) [0 onEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:947 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(call_insn 8 7 0 2 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:948 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function onBcnRx (onBcnRx, funcdef_no=90, decl_uid=3830, cgraph_uid=90, symbol_order=98)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
scanning new insn with uid = 73.
verify found no changes in insn with uid = 73.
deleting insn with uid = 53.
scanning new insn with uid = 74.
verify found no changes in insn with uid = 74.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 52 uninteresting
Reg 53 uninteresting
Reg 42 uninteresting
Reg 54 uninteresting
Reg 56 uninteresting
Reg 58 uninteresting
Reg 45 uninteresting
Reg 59 uninteresting
Reg 60: local to bb 5 def dominates all uses has unique first use
Reg 61 uninteresting
Reg 65 uninteresting
Reg 66 uninteresting
Reg 68 uninteresting
Reg 71 uninteresting
Reg 72 uninteresting
Ignoring reg 60 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 59: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 60: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 61: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 65: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 66: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 71: (insn_list:REG_DEP_TRUE 60 (nil))

Pass 0 for finding pseudo/allocno costs

    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r72,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r71,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r65,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r61,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r59,l0) best AR_REGS, allocno AR_REGS
    r58: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r58,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r56,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r53,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r52,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r65,l0) costs: ACC_REG:4437,4437 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23664,23664 MEM:1972,1972
  a1(r72,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a2(r71,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a3(r48,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a4(r68,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a5(r66,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a6(r67,l0) costs: ACC_REG:2958,2958 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15776,15776 MEM:3944,3944
  a7(r59,l0) costs: ACC_REG:1044,1044 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5568,5568 MEM:464,464
  a8(r60,l0) costs: ACC_REG:696,696 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3712,3712 MEM:928,928
  a9(r61,l0) costs: ACC_REG:696,696 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3712,3712 MEM:928,928
  a10(r45,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a11(r54,l0) costs: ACC_REG:3510,3510 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18720,18720 MEM:1560,1560
  a12(r58,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a13(r56,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a14(r57,l0) costs: ACC_REG:2340,2340 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12480,12480 MEM:3120,3120
  a15(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a16(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a17(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 64(l0): point = 1
   Insn 63(l0): point = 3
   Insn 62(l0): point = 5
   Insn 61(l0): point = 7
   Insn 60(l0): point = 9
   Insn 56(l0): point = 11
   Insn 55(l0): point = 13
   Insn 73(l0): point = 15
   Insn 54(l0): point = 17
   Insn 52(l0): point = 19
   Insn 51(l0): point = 21
   Insn 50(l0): point = 23
   Insn 49(l0): point = 25
   Insn 71(l0): point = 28
   Insn 44(l0): point = 30
   Insn 43(l0): point = 32
   Insn 42(l0): point = 34
   Insn 41(l0): point = 36
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 32(l0): point = 48
   Insn 30(l0): point = 51
   Insn 29(l0): point = 53
   Insn 28(l0): point = 55
   Insn 69(l0): point = 58
   Insn 23(l0): point = 60
   Insn 22(l0): point = 62
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 74(l0): point = 68
   Insn 19(l0): point = 70
   Insn 16(l0): point = 72
   Insn 14(l0): point = 75
   Insn 13(l0): point = 77
   Insn 12(l0): point = 79
   Insn 11(l0): point = 81
   Insn 10(l0): point = 83
   Insn 9(l0): point = 85
   Insn 7(l0): point = 87
   Insn 6(l0): point = 89
 a0(r65): [6..19]
 a1(r72): [6..7]
 a2(r71): [8..9]
 a3(r48): [8..11]
 a4(r68): [12..13]
 a5(r66): [14..15]
 a6(r67): [14..17]
 a7(r59): [35..48]
 a8(r60): [43..46]
 a9(r61): [43..44]
 a10(r45): [52..53]
 a11(r54): [65..72]
 a12(r58): [65..66]
 a13(r56): [67..68]
 a14(r57): [67..70]
 a15(r42): [76..77]
 a16(r53): [78..79]
 a17(r52): [80..81]
Compressing live ranges: from 92 to 22 - 23%
Ranges after the compression:
 a0(r65): [0..7]
 a1(r72): [0..1]
 a2(r71): [2..3]
 a3(r48): [2..3]
 a4(r68): [4..5]
 a5(r66): [6..7]
 a6(r67): [6..7]
 a7(r59): [8..9]
 a8(r60): [8..9]
 a9(r61): [8..9]
 a10(r45): [10..11]
 a11(r54): [12..15]
 a12(r58): [12..13]
 a13(r56): [14..15]
 a14(r57): [14..15]
 a15(r42): [16..17]
 a16(r53): [18..19]
 a17(r52): [20..21]
+++Allocating 112 bytes for conflict table (uncompressed size 144)
;; a0(r65,l0) conflicts: a1(r72,l0) a2(r71,l0) a3(r48,l0) a4(r68,l0) a5(r66,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r72,l0) conflicts: a0(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r71,l0) conflicts: a0(r65,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a0(r65,l0) a2(r71,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r68,l0) conflicts: a0(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r66,l0) conflicts: a0(r65,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r67,l0) conflicts: a0(r65,l0) a5(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r59,l0) conflicts: a8(r60,l0) a9(r61,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a8(r60,l0) conflicts: a7(r59,l0) a9(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r61,l0) conflicts: a7(r59,l0) a8(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r45,l0) conflicts:;; a11(r54,l0) conflicts: a12(r58,l0) a13(r56,l0) a14(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r58,l0) conflicts: a11(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r56,l0) conflicts: a11(r54,l0) a14(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r57,l0) conflicts: a11(r54,l0) a13(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r42,l0) conflicts:;; a16(r53,l0) conflicts:;; a17(r52,l0) conflicts:  cp0:a4(r68)<->a5(r66)@61:shuffle
  cp1:a4(r68)<->a6(r67)@61:shuffle
  cp2:a3(r48)<->a4(r68)@61:shuffle
  cp3:a1(r72)<->a2(r71)@61:shuffle
  cp4:a1(r72)<->a3(r48)@61:shuffle
  cp5:a12(r58)<->a13(r56)@48:shuffle
  cp6:a12(r58)<->a14(r57)@48:shuffle
  cp7:a16(r53)<->a17(r52)@125:shuffle
  pref0:a10(r45)<-hr10@1220
  regions=1, blocks=8, points=22
    allocnos=18 (big 0), copies=8, conflicts=0, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r65 1r72 2r71 3r48 4r68 5r66 6r67 7r59 8r60 9r61 10r45 11r54 12r58 13r56 14r57 15r42 16r53 17r52
    modified regnos: 42 45 48 52 53 54 56 57 58 59 60 61 65 66 67 68 71 72
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@123464
          2:( 2-7)@928
      Allocno a0r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r59 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a8r60 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r58 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 7:a16r53-a17r52 (freq=125):
        Result (freq=4000): a16r53(2000) a17r52(2000)
      Forming thread by copy 0:a4r68-a5r66 (freq=61):
        Result (freq=1972): a4r68(986) a5r66(986)
      Forming thread by copy 2:a3r48-a4r68 (freq=61):
        Result (freq=2958): a3r48(986) a4r68(986) a5r66(986)
      Forming thread by copy 3:a1r72-a2r71 (freq=61):
        Result (freq=1972): a1r72(986) a2r71(986)
      Forming thread by copy 5:a12r58-a13r56 (freq=48):
        Result (freq=1560): a12r58(780) a13r56(780)
      Pushing a9(r61,l0)(cost 0)
      Pushing a8(r60,l0)(cost 0)
      Pushing a7(r59,l0)(cost 0)
      Pushing a14(r57,l0)(cost 0)
      Pushing a6(r67,l0)(cost 0)
      Pushing a11(r54,l0)(cost 0)
      Pushing a10(r45,l0)(cost 0)
      Pushing a0(r65,l0)(cost 0)
      Pushing a13(r56,l0)(cost 0)
      Pushing a12(r58,l0)(cost 0)
      Pushing a2(r71,l0)(cost 0)
      Pushing a1(r72,l0)(cost 0)
      Pushing a15(r42,l0)(cost 0)
      Pushing a5(r66,l0)(cost 0)
      Pushing a4(r68,l0)(cost 0)
      Pushing a3(r48,l0)(cost 0)
      Pushing a17(r52,l0)(cost 0)
      Pushing a16(r53,l0)(cost 0)
      Popping a16(r53,l0)  -- assign reg 8
      Popping a17(r52,l0)  -- assign reg 8
      Popping a3(r48,l0)  -- assign reg 8
      Popping a4(r68,l0)  -- assign reg 8
      Popping a5(r66,l0)  -- assign reg 8
      Popping a15(r42,l0)  -- assign reg 8
      Popping a1(r72,l0)  -- assign reg 8
      Popping a2(r71,l0)  -- assign reg 9
      Popping a12(r58,l0)  -- assign reg 8
      Popping a13(r56,l0)  -- assign reg 8
      Popping a0(r65,l0)  -- assign reg 10
      Popping a10(r45,l0)  -- assign reg 10
      Popping a11(r54,l0)  -- assign reg 9
      Popping a6(r67,l0)  -- assign reg 9
      Popping a14(r57,l0)  -- assign reg 10
      Popping a7(r59,l0)  -- assign reg 2
      Popping a8(r60,l0)  -- assign reg 8
      Popping a9(r61,l0)  -- assign reg 9
Disposition:
   15:r42  l0     8   10:r45  l0    10    3:r48  l0     8   17:r52  l0     8
   16:r53  l0     8   11:r54  l0     9   13:r56  l0     8   14:r57  l0    10
   12:r58  l0     8    7:r59  l0     2    8:r60  l0     8    9:r61  l0     9
    0:r65  l0    10    5:r66  l0     8    6:r67  l0     9    4:r68  l0     8
    2:r71  l0     9    1:r72  l0     8
New iteration of spill/restore move
+++Costs: overall -2440, reg -2440, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


onBcnRx

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={9d} r1={1d,15u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,7u} r8={8d} r9={8d} r10={15d,8u} r11={10d,2u} r12={9d,1u} r13={8d} r14={8d} r15={8d} r16={1d,7u} r17={1d,6u} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r42={1d,1u} r45={1d,1u} r48={1d,1u,1e} r52={1d,1u} r53={1d,1u} r54={1d,2u} r56={1d,1u} r57={1d,1u,1e} r58={1d,1u} r59={1d,2u} r60={1d,1u} r61={1d,1u} r65={1d,2u} r66={1d,1u} r67={1d,1u,1e} r68={1d,1u} r71={1d,1u} r72={1d,1u} 
;;    total ref usage 324{254d,67u,3e} in 43{35 regular + 8 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 52 53
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1748 44 {movsi_internal}
     (nil))
(call_insn 7 6 8 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1748 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 8 7 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC222") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1749 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 10 9 11 2 (call (mem:SI (symbol_ref:SI ("os_clearCallback") [flags 0x41]  <function_decl 0x140efa360 os_clearCallback>) [0 os_clearCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1749 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC223") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1750 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 12 11 13 2 (set:SI (reg/f:SI 53)
        (plus:SI (reg/f:SI 52)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1750 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 52)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 42 [ D.6344 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 53)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1750 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 53)
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:SI 42 [ D.6344 ])
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1750 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6344 ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 26)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(1){ }u13(7){ }u14(16){ }u15(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 54 56 57 58
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 19 3 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC223") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1752 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 19 16 74 3 (set (reg:HI 57 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 54)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1752 45 {movhi_internal}
     (nil))
(insn 74 19 20 3 (set (reg:HI 56)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1752 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 20 74 21 3 (set (reg:SI 58)
        (and:SI (subreg:SI (reg:HI 57 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 56) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1752 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 57 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 56)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 57 [ LMIC.opmode ]) 0)
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 21 20 22 3 (set (mem/j/c:HI (plus:SI (reg/f:SI 54)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 58) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1752 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 58)
        (expr_list:REG_DEAD (reg/f:SI 54)
            (nil))))
(insn 22 21 23 3 (set (reg:SI 10 a10)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1753 44 {movsi_internal}
     (nil))
(call_insn 23 22 69 3 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1753 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(jump_insn 69 23 70 3 (set (pc)
        (label_ref 67)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1754 78 {jump}
     (nil)
 -> 67)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 70 69 26)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(1){ }u25(7){ }u26(16){ }u27(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 45
(code_label 26 70 27 4 304 "" [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 28 27 29 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("decodeBeacon") [flags 0x3]  <function_decl 0x100b7c1b0 decodeBeacon>) [0 decodeBeacon S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1756 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 29 28 30 4 (set (reg:SI 45 [ D.6346 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1756 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (lt (reg:SI 45 [ D.6346 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 47))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1756 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 45 [ D.6346 ])
        (int_list:REG_BR_PROB 8088 (nil)))
 -> 47)
;;  succ:       5 [19.1%]  (FALLTHRU)
;;              6 [80.9%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 1166, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [19.1%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(1){ }u32(7){ }u33(16){ }u34(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 59 60 61
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 59)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC223") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1758 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 33 32 34 5 (set:SI (reg/f:SI 60)
        (plus:SI (reg/f:SI 59)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1758 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 34 33 35 5 (set (reg:QI 61)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1758 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 35 34 36 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 60)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 61)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1758 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 61)
        (expr_list:REG_DEAD (reg/f:SI 60)
            (nil))))
(insn 36 35 37 5 (set (reg:SI 10 a10)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1759 44 {movsi_internal}
     (nil))
(call_insn 37 36 38 5 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1759 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 38 37 40 5 NOTE_INSN_DELETED)
(note 40 38 41 5 NOTE_INSN_DELETED)
(insn 41 40 42 5 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC224") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1760 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("onBcnRx") [flags 0x3]  <function_decl 0x100bc3510 onBcnRx>)
        (nil)))
(insn 42 41 43 5 (set (reg:SI 11 a11)
        (mem/j/c:SI (plus:SI (reg/f:SI 59)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1760 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 59)
        (nil)))
(insn 43 42 44 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC222") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1760 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 44 43 71 5 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1760 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(jump_insn 71 44 72 5 (set (pc)
        (label_ref 67)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1761 78 {jump}
     (nil)
 -> 67)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 72 71 47)
;; basic block 6, loop depth 0, count 0, freq 4934, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4 [80.9%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(1){ }u48(7){ }u49(16){ }u50(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48 65 66 67 68 71 72
(code_label 47 72 48 6 306 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:SI 11 a11)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1766 44 {movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 10 a10)
        (const_int 13 [0xd])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1766 44 {movsi_internal}
     (nil))
(call_insn 51 50 52 6 (call (mem:SI (symbol_ref:SI ("calcBcnRxWindowFromMillis") [flags 0x3]  <function_decl 0x100b66870 calcBcnRxWindowFromMillis>) [0 calcBcnRxWindowFromMillis S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1766 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 52 51 54 6 (set (reg/f:SI 65)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC223") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1767 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 54 52 73 6 (set (reg:HI 67 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 65)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1767 45 {movhi_internal}
     (nil))
(insn 73 54 55 6 (set (reg:HI 66)
        (const_int -2 [0xfffffffffffffffe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1767 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -2 [0xfffffffffffffffe])
        (nil)))
(insn 55 73 56 6 (set (reg:SI 68)
        (and:SI (subreg:SI (reg:HI 67 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 66) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1767 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 67 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 66)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 67 [ LMIC.opmode ]) 0)
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 56 55 60 6 (set (reg:SI 48 [ D.6345 ])
        (zero_extend:SI (subreg:HI (reg:SI 68) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1767 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 68)
        (nil)))
(insn 60 56 61 6 (set (reg:HI 71)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1768 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 61 60 62 6 (set (reg:SI 72)
        (ior:SI (reg:SI 48 [ D.6345 ])
            (subreg:SI (reg:HI 71) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1768 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 71)
        (expr_list:REG_DEAD (reg:SI 48 [ D.6345 ])
            (expr_list:REG_EQUAL (ior:SI (reg:SI 48 [ D.6345 ])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 62 61 63 6 (set (mem/j/c:HI (plus:SI (reg/f:SI 65)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 72) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1768 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg/f:SI 65)
            (nil))))
(insn 63 62 64 6 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1769 44 {movsi_internal}
     (nil))
(call_insn 64 63 67 6 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1769 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(1){ }u67(7){ }u68(16){ }u69(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 67 64 68 7 303 "" [2 uses])
(note 68 67 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processBeacon (processBeacon, funcdef_no=99, decl_uid=3860, cgraph_uid=99, symbol_order=107)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 37 count 27 (    1)
scanning new insn with uid = 259.
verify found no changes in insn with uid = 259.
deleting insn with uid = 196.
scanning new insn with uid = 260.
verify found no changes in insn with uid = 260.
deleting insn with uid = 181.
scanning new insn with uid = 261.
verify found no changes in insn with uid = 261.
deleting insn with uid = 167.
scanning new insn with uid = 262.
verify found no changes in insn with uid = 262.
deleting insn with uid = 156.
scanning new insn with uid = 263.
verify found no changes in insn with uid = 263.
deleting insn with uid = 123.
scanning new insn with uid = 264.
verify found no changes in insn with uid = 264.
deleting insn with uid = 106.
scanning new insn with uid = 265.
verify found no changes in insn with uid = 265.
deleting insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 37 count 27 (    1)
Reg 102 uninteresting
Reg 45: def dominates all uses has unique first use
Reg 104 uninteresting
Reg 46: def dominates all uses has unique first use
Reg 47 uninteresting
Reg 48 uninteresting
Reg 109 uninteresting
Ignoring reg 52, has equiv memory
Reg 113 uninteresting
Reg 115 uninteresting
Reg 117 uninteresting
Reg 56 uninteresting
Reg 118 uninteresting
Reg 119 uninteresting
Reg 57 uninteresting
Reg 61: local to bb 7 def dominates all uses has unique first use
Reg 63 uninteresting
Reg 64 uninteresting
Reg 122 uninteresting
Reg 123 uninteresting
Reg 124 uninteresting
Reg 129 uninteresting
Reg 130 uninteresting
Reg 133 uninteresting
Reg 72 uninteresting
Reg 135 uninteresting
Reg 136 uninteresting
Reg 74 uninteresting
Reg 139 uninteresting
Reg 142 uninteresting
Reg 143: local to bb 13 def dominates all uses has unique first use
Reg 140 uninteresting
Reg 141 uninteresting
Reg 144 uninteresting
Reg 146 uninteresting
Reg 148 uninteresting
Reg 152 uninteresting
Reg 154 uninteresting
Reg 77 uninteresting
Reg 159 uninteresting
Reg 80: local to bb 16 def dominates all uses has unique first use
Reg 163 uninteresting
Reg 82: local to bb 16 def dominates all uses has unique first use
Ignoring reg 165, has equiv memory
Reg 83 uninteresting
Reg 169 uninteresting
Ignoring reg 170, has equiv memory
Reg 173 uninteresting
Reg 86 uninteresting
Reg 176 uninteresting
Reg 178 uninteresting
Reg 89: local to bb 16 def dominates all uses has unique first use
Reg 182 uninteresting
Reg 183 uninteresting
Reg 185 uninteresting
Reg 187 uninteresting
Reg 188 uninteresting
Reg 189 uninteresting
Reg 92: local to bb 18 def dominates all uses has unique first use
Reg 191 uninteresting
Reg 192 uninteresting
Reg 194 uninteresting
Reg 196 uninteresting
Ignoring reg 95, has equiv memory
Reg 198 uninteresting
Reg 96: local to bb 22 def dominates all uses has unique first use
Ignoring reg 98, has equiv memory
Reg 99: local to bb 22 def dominates all uses has unique first use
Reg 202 uninteresting
Reg 203 uninteresting
Reg 100 uninteresting
Reg 45 not local to one basic block
Reg 46 not local to one basic block
Examining insn 56, def for 61
  all ok
Found def insn 146 for 80 to be not moveable
Examining insn 148, def for 82
  all ok
Found def insn 174 for 89 to be not moveable
Found def insn 189 for 92 to be not moveable
Examining insn 210, def for 96
  found unusable input reg 95.
Found def insn 219 for 99 to be not moveable
Examining insn 108, def for 143
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;; 2 succs { 3 16 }
;; 3 succs { 4 16 }
;; 4 succs { 5 6 }
;; 5 succs { 23 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 14 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 15 20 }
;; 15 succs { 22 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 26 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 52: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 208 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 217 (nil))
init_insns for 102: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 117: (insn_list:REG_DEP_TRUE 49 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 123: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 124: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 129: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 265 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 264 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 107 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 112 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 118 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 263 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 144 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 147 (nil))
init_insns for 165: (insn_list:REG_DEP_TRUE 150 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 262 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 159 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 157 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 161 (nil))
init_insns for 178: (insn_list:REG_DEP_TRUE 261 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 176 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 179 (nil))
init_insns for 185: (insn_list:REG_DEP_TRUE 260 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 187 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 188 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 191 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 194 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 259 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 207 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 209 (nil))
init_insns for 202: (insn_list:REG_DEP_TRUE 221 (nil))
init_insns for 203: (insn_list:REG_DEP_TRUE 226 (nil))

Pass 0 for finding pseudo/allocno costs

    r203: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r203,l0) best AR_REGS, allocno AR_REGS
    r202: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r202,l0) best AR_REGS, allocno AR_REGS
    r198: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r198,l0) best AR_REGS, allocno AR_REGS
    r197: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r197,l0) best AR_REGS, allocno AR_REGS
    r196: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r196,l0) best AR_REGS, allocno AR_REGS
    r195: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r195,l0) best AR_REGS, allocno AR_REGS
    r194: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r194,l0) best AR_REGS, allocno AR_REGS
    r192: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r192,l0) best AR_REGS, allocno AR_REGS
    r191: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r191,l0) best AR_REGS, allocno AR_REGS
    r189: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r189,l0) best AR_REGS, allocno AR_REGS
    r188: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r188,l0) best AR_REGS, allocno AR_REGS
    r187: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r187,l0) best AR_REGS, allocno AR_REGS
    r186: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r186,l0) best AR_REGS, allocno AR_REGS
    r185: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r185,l0) best AR_REGS, allocno AR_REGS
    r183: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r183,l0) best AR_REGS, allocno AR_REGS
    r182: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r182,l0) best AR_REGS, allocno AR_REGS
    r178: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r178,l0) best AR_REGS, allocno AR_REGS
    r176: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r176,l0) best AR_REGS, allocno AR_REGS
    r173: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r173,l0) best AR_REGS, allocno AR_REGS
    r171: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r171,l0) best AR_REGS, allocno AR_REGS
    r170: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r170,l0) best AR_REGS, allocno AR_REGS
    r169: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r169,l0) best AR_REGS, allocno AR_REGS
    r165: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r165,l0) best AR_REGS, allocno AR_REGS
    r163: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r163,l0) best AR_REGS, allocno AR_REGS
    r161: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r161,l0) best AR_REGS, allocno AR_REGS
    r159: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r159,l0) best AR_REGS, allocno AR_REGS
    r154: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r154,l0) best AR_REGS, allocno AR_REGS
    r153: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r153,l0) best AR_REGS, allocno AR_REGS
    r152: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r152,l0) best AR_REGS, allocno AR_REGS
    r148: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r148,l0) best AR_REGS, allocno AR_REGS
    r146: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r146,l0) best AR_REGS, allocno AR_REGS
    r144: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r144,l0) best AR_REGS, allocno AR_REGS
    r143: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r143,l0) best AR_REGS, allocno AR_REGS
    r142: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r142,l0) best AR_REGS, allocno AR_REGS
    r141: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r141,l0) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r140,l0) best AR_REGS, allocno AR_REGS
    r139: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r139,l0) best AR_REGS, allocno AR_REGS
    r136: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r136,l0) best AR_REGS, allocno AR_REGS
    r135: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r135,l0) best AR_REGS, allocno AR_REGS
    r133: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r133,l0) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r130,l0) best AR_REGS, allocno AR_REGS
    r129: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r129,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r124,l0) best AR_REGS, allocno AR_REGS
    r123: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r123,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r122,l0) best AR_REGS, allocno AR_REGS
    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r119,l0) best AR_REGS, allocno AR_REGS
    r118: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r118,l0) best AR_REGS, allocno AR_REGS
    r117: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r117,l0) best AR_REGS, allocno AR_REGS
    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r115,l0) best AR_REGS, allocno AR_REGS
    r113: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r113,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r110,l0) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r109,l0) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r104,l0) best AR_REGS, allocno AR_REGS
    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r102,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r100,l0) best AR_REGS, allocno AR_REGS
    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r99,l0) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r98,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r96,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r95,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r92,l0) best AR_REGS, allocno AR_REGS
    r89: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r89,l0) best AR_REGS, allocno AR_REGS
    r86: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r86,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r82,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r80,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r77,l0) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r74,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r72,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r67,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r63,l0) best AR_REGS, allocno AR_REGS
    r61: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a66 (r61,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r56,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r52,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:5205,5205 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:27760,27760 MEM:6940,6940
  a1(r100,l0) costs: ACC_REG:5208,5208 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:27776,27776 MEM:6944,6944
  a2(r203,l0) costs: ACC_REG:5208,5208 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:27776,27776 MEM:0,0
  a3(r202,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:6096,6096
  a4(r99,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:6096,6096
  a5(r197,l0) costs: ACC_REG:13716,13716 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:73152,73152 MEM:12192,12192
  a6(r98,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:6096,6096
  a7(r96,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:6096,6096
  a8(r198,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:0,0
  a9(r95,l0) costs: ACC_REG:4572,4572 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:24384,24384 MEM:0,0
  a10(r192,l0) costs: ACC_REG:1179,1179 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6288,6288 MEM:524,524
  a11(r196,l0) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a12(r194,l0) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a13(r195,l0) costs: ACC_REG:786,786 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4192,4192 MEM:1048,1048
  a14(r92,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a15(r191,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a16(r189,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a17(r188,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:0,0
  a18(r183,l0) costs: ACC_REG:2853,2853 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15216,15216 MEM:1268,1268
  a19(r187,l0) costs: ACC_REG:1902,1902 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10144,10144 MEM:2536,2536
  a20(r185,l0) costs: ACC_REG:1902,1902 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10144,10144 MEM:2536,2536
  a21(r186,l0) costs: ACC_REG:1902,1902 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10144,10144 MEM:2536,2536
  a22(r89,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a23(r182,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a24(r173,l0) costs: ACC_REG:7620,7620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:40640,40640 MEM:10160,10160
  a25(r178,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:0,0
  a26(r83,l0) costs: ACC_REG:5715,5715 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30480,30480 MEM:7620,7620
  a27(r176,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a28(r86,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a29(r161,l0) costs: ACC_REG:17145,17145 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:91440,91440 MEM:17780,17780
  a30(r170,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a31(r169,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a32(r171,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:0,0
  a33(r165,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:0,0
  a34(r82,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a35(r80,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:5080,5080
  a36(r163,l0) costs: ACC_REG:3810,3810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20320,20320 MEM:0,0
  a37(r159,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a38(r77,l0) costs: ACC_REG:2331,2331 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12432,12432 MEM:3108,3108
  a39(r148,l0) costs: ACC_REG:3108,3108 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16576,16576 MEM:4144,4144
  a40(r154,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a41(r152,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a42(r153,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a43(r146,l0) costs: ACC_REG:2331,2331 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12432,12432 MEM:3108,3108
  a44(r144,l0) costs: ACC_REG:3108,3108 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16576,16576 MEM:2072,2072
  a45(r43,l0) costs: ACC_REG:2715,2715 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14480,14480 MEM:3620,3620
  a46(r141,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a47(r143,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a48(r140,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:0,0
  a49(r142,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a50(r67,l0) costs: ACC_REG:1941,1941 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10352,10352 MEM:2588,2588
  a51(r139,l0) costs: ACC_REG:384,384 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2048,2048 MEM:0,0
  a52(r44,l0) costs: ACC_REG:1845,1845 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:9840,9840 MEM:2460,2460
  a53(r74,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a54(r136,l0) costs: ACC_REG:1161,1161 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6192,6192 MEM:516,516
  a55(r135,l0) costs: ACC_REG:210,210 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1120,1120 MEM:280,280
  a56(r72,l0) costs: ACC_REG:879,879 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4688,4688 MEM:1172,1172
  a57(r133,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a58(r130,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a59(r129,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:0,0
  a60(r124,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a61(r123,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:0,0
  a62(r122,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a63(r119,l0) costs: ACC_REG:1161,1161 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6192,6192 MEM:1548,1548
  a64(r64,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a65(r63,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a66(r61,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a67(r56,l0) costs: ACC_REG:1941,1941 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10352,10352 MEM:2588,2588
  a68(r57,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:1032,1032
  a69(r118,l0) costs: ACC_REG:774,774 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4128,4128 MEM:0,0
  a70(r117,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a71(r110,l0) costs: ACC_REG:3108,3108 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16576,16576 MEM:2072,2072
  a72(r115,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a73(r113,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:2072,2072
  a74(r52,l0) costs: ACC_REG:1554,1554 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8288,8288 MEM:0,0
  a75(r45,l0) costs: ACC_REG:3777,3777 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20144,20144 MEM:5036,5036
  a76(r109,l0) costs: ACC_REG:2190,2190 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11680,11680 MEM:2920,2920
  a77(r46,l0) costs: ACC_REG:4095,4095 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:21840,21840 MEM:5460,5460
  a78(r48,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a79(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a80(r104,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a81(r102,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000

   Insn 240(l0): point = 1
   Insn 239(l0): point = 3
   Insn 236(l0): point = 6
   Insn 235(l0): point = 8
   Insn 232(l0): point = 11
   Insn 227(l0): point = 13
   Insn 226(l0): point = 15
   Insn 222(l0): point = 18
   Insn 221(l0): point = 20
   Insn 219(l0): point = 22
   Insn 217(l0): point = 24
   Insn 215(l0): point = 26
   Insn 213(l0): point = 28
   Insn 212(l0): point = 30
   Insn 211(l0): point = 32
   Insn 210(l0): point = 34
   Insn 209(l0): point = 36
   Insn 208(l0): point = 38
   Insn 207(l0): point = 40
   Insn 5(l0): point = 43
   Insn 257(l0): point = 46
   Insn 6(l0): point = 48
   Insn 255(l0): point = 51
   Insn 201(l0): point = 53
   Insn 200(l0): point = 55
   Insn 199(l0): point = 57
   Insn 198(l0): point = 59
   Insn 259(l0): point = 61
   Insn 197(l0): point = 63
   Insn 194(l0): point = 65
   Insn 192(l0): point = 68
   Insn 191(l0): point = 70
   Insn 189(l0): point = 72
   Insn 188(l0): point = 74
   Insn 187(l0): point = 76
   Insn 184(l0): point = 79
   Insn 183(l0): point = 81
   Insn 260(l0): point = 83
   Insn 182(l0): point = 85
   Insn 179(l0): point = 87
   Insn 177(l0): point = 90
   Insn 176(l0): point = 92
   Insn 174(l0): point = 94
   Insn 171(l0): point = 96
   Insn 170(l0): point = 98
   Insn 261(l0): point = 100
   Insn 169(l0): point = 102
   Insn 166(l0): point = 104
   Insn 165(l0): point = 106
   Insn 162(l0): point = 108
   Insn 161(l0): point = 110
   Insn 159(l0): point = 112
   Insn 158(l0): point = 114
   Insn 262(l0): point = 116
   Insn 157(l0): point = 118
   Insn 153(l0): point = 120
   Insn 151(l0): point = 122
   Insn 150(l0): point = 124
   Insn 148(l0): point = 126
   Insn 147(l0): point = 128
   Insn 146(l0): point = 130
   Insn 144(l0): point = 132
   Insn 253(l0): point = 135
   Insn 4(l0): point = 137
   Insn 138(l0): point = 139
   Insn 137(l0): point = 141
   Insn 136(l0): point = 143
   Insn 133(l0): point = 146
   Insn 132(l0): point = 148
   Insn 129(l0): point = 150
   Insn 126(l0): point = 152
   Insn 125(l0): point = 154
   Insn 263(l0): point = 156
   Insn 124(l0): point = 158
   Insn 120(l0): point = 160
   Insn 118(l0): point = 162
   Insn 116(l0): point = 164
   Insn 115(l0): point = 166
   Insn 113(l0): point = 168
   Insn 112(l0): point = 170
   Insn 109(l0): point = 173
   Insn 264(l0): point = 175
   Insn 265(l0): point = 177
   Insn 108(l0): point = 179
   Insn 107(l0): point = 181
   Insn 102(l0): point = 184
   Insn 101(l0): point = 186
   Insn 99(l0): point = 189
   Insn 98(l0): point = 191
   Insn 95(l0): point = 193
   Insn 94(l0): point = 195
   Insn 89(l0): point = 198
   Insn 88(l0): point = 200
   Insn 85(l0): point = 203
   Insn 83(l0): point = 205
   Insn 82(l0): point = 207
   Insn 81(l0): point = 209
   Insn 77(l0): point = 211
   Insn 76(l0): point = 213
   Insn 74(l0): point = 216
   Insn 69(l0): point = 218
   Insn 68(l0): point = 220
   Insn 67(l0): point = 222
   Insn 62(l0): point = 225
   Insn 61(l0): point = 227
   Insn 58(l0): point = 229
   Insn 57(l0): point = 231
   Insn 56(l0): point = 233
   Insn 55(l0): point = 235
   Insn 54(l0): point = 237
   Insn 53(l0): point = 239
   Insn 51(l0): point = 242
   Insn 50(l0): point = 244
   Insn 49(l0): point = 246
   Insn 46(l0): point = 248
   Insn 45(l0): point = 250
   Insn 43(l0): point = 252
   Insn 40(l0): point = 254
   Insn 39(l0): point = 256
   Insn 251(l0): point = 259
   Insn 7(l0): point = 261
   Insn 34(l0): point = 263
   Insn 33(l0): point = 265
   Insn 32(l0): point = 267
   Insn 30(l0): point = 270
   Insn 29(l0): point = 272
   Insn 24(l0): point = 275
   Insn 23(l0): point = 277
   Insn 22(l0): point = 279
   Insn 20(l0): point = 282
   Insn 19(l0): point = 284
   Insn 15(l0): point = 286
   Insn 14(l0): point = 288
   Insn 11(l0): point = 290
   Insn 10(l0): point = 292
 a0(r42): [259..261] [135..137] [46..48] [4..43]
 a1(r100): [12..13]
 a2(r203): [14..15]
 a3(r202): [19..20]
 a4(r99): [19..22]
 a5(r197): [21..40]
 a6(r98): [25..26]
 a7(r96): [27..34]
 a8(r198): [35..36]
 a9(r95): [35..38]
 a10(r192): [58..65]
 a11(r196): [58..59]
 a12(r194): [60..61]
 a13(r195): [60..63]
 a14(r92): [69..72]
 a15(r191): [69..70]
 a16(r189): [73..74]
 a17(r188): [75..76]
 a18(r183): [80..87]
 a19(r187): [80..81]
 a20(r185): [82..83]
 a21(r186): [82..85]
 a22(r89): [91..94]
 a23(r182): [91..92]
 a24(r173): [95..110]
 a25(r178): [99..100]
 a26(r83): [99..122]
 a27(r176): [105..106]
 a28(r86): [107..108]
 a29(r161): [111..132]
 a30(r170): [113..114]
 a31(r169): [115..116]
 a32(r171): [115..118]
 a33(r165): [123..124]
 a34(r82): [123..126]
 a35(r80): [127..130]
 a36(r163): [127..128]
 a37(r159): [147..148]
 a38(r77): [149..152]
 a39(r148): [151..162]
 a40(r154): [153..154]
 a41(r152): [155..156]
 a42(r153): [155..158]
 a43(r146): [161..166]
 a44(r144): [163..170]
 a45(r43): [234..248] [169..225]
 a46(r141): [174..175]
 a47(r143): [174..179]
 a48(r140): [176..177]
 a49(r142): [180..181]
 a50(r67): [180..218]
 a51(r139): [185..186]
 a52(r44): [203..205] [185..198]
 a53(r74): [190..191]
 a54(r136): [192..195]
 a55(r135): [199..200]
 a56(r72): [201..207]
 a57(r133): [208..209]
 a58(r130): [210..211]
 a59(r129): [212..213]
 a60(r124): [219..220]
 a61(r123): [221..222]
 a62(r122): [226..227]
 a63(r119): [228..237]
 a64(r64): [228..229]
 a65(r63): [230..231]
 a66(r61): [230..233]
 a67(r56): [232..244]
 a68(r57): [234..235]
 a69(r118): [238..239]
 a70(r117): [245..246]
 a71(r110): [247..256]
 a72(r115): [249..250]
 a73(r113): [251..252]
 a74(r52): [253..254]
 a75(r45): [270..290] [253..258]
 a76(r109): [271..272]
 a77(r46): [273..286]
 a78(r48): [276..277]
 a79(r47): [283..284]
 a80(r104): [285..288]
 a81(r102): [289..292]
Compressing live ranges: from 295 to 122 - 41%
Ranges after the compression:
 a0(r42): [110..111] [46..47] [0..15]
 a1(r100): [0..1]
 a2(r203): [2..3]
 a3(r202): [4..5]
 a4(r99): [4..7]
 a5(r197): [6..13]
 a6(r98): [8..9]
 a7(r96): [10..11]
 a8(r198): [12..13]
 a9(r95): [12..13]
 a10(r192): [16..19]
 a11(r196): [16..17]
 a12(r194): [18..19]
 a13(r195): [18..19]
 a14(r92): [20..21]
 a15(r191): [20..21]
 a16(r189): [22..23]
 a17(r188): [24..25]
 a18(r183): [26..29]
 a19(r187): [26..27]
 a20(r185): [28..29]
 a21(r186): [28..29]
 a22(r89): [30..31]
 a23(r182): [30..31]
 a24(r173): [32..37]
 a25(r178): [32..33]
 a26(r83): [32..41]
 a27(r176): [34..35]
 a28(r86): [36..37]
 a29(r161): [38..45]
 a30(r170): [38..39]
 a31(r169): [40..41]
 a32(r171): [40..41]
 a33(r165): [42..43]
 a34(r82): [42..43]
 a35(r80): [44..45]
 a36(r163): [44..45]
 a37(r159): [48..49]
 a38(r77): [50..51]
 a39(r148): [50..57]
 a40(r154): [52..53]
 a41(r152): [54..55]
 a42(r153): [54..55]
 a43(r146): [56..59]
 a44(r144): [58..61]
 a45(r43): [96..103] [60..87]
 a46(r141): [62..63]
 a47(r143): [62..65]
 a48(r140): [64..65]
 a49(r142): [66..67]
 a50(r67): [66..83]
 a51(r139): [68..69]
 a52(r44): [76..77] [68..73]
 a53(r74): [70..71]
 a54(r136): [72..73]
 a55(r135): [74..75]
 a56(r72): [76..77]
 a57(r133): [78..79]
 a58(r130): [80..81]
 a59(r129): [82..83]
 a60(r124): [84..85]
 a61(r123): [86..87]
 a62(r122): [88..89]
 a63(r119): [90..97]
 a64(r64): [90..91]
 a65(r63): [92..93]
 a66(r61): [92..95]
 a67(r56): [94..99]
 a68(r57): [96..97]
 a69(r118): [98..99]
 a70(r117): [100..101]
 a71(r110): [102..109]
 a72(r115): [104..105]
 a73(r113): [106..107]
 a74(r52): [108..109]
 a75(r45): [112..121] [108..109]
 a76(r109): [112..113]
 a77(r46): [114..119]
 a78(r48): [114..115]
 a79(r47): [116..117]
 a80(r104): [118..119]
 a81(r102): [120..121]
+++Allocating 768 bytes for conflict table (uncompressed size 1312)
;; a0(r42,l0) conflicts: a1(r100,l0) a2(r203,l0) a3(r202,l0) a4(r99,l0) a5(r197,l0) a6(r98,l0) a7(r96,l0) a8(r198,l0) a9(r95,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a1(r100,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r203,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r202,l0) conflicts: a0(r42,l0) a4(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r99,l0) conflicts: a0(r42,l0) a3(r202,l0) a5(r197,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r197,l0) conflicts: a0(r42,l0) a4(r99,l0) a6(r98,l0) a7(r96,l0) a8(r198,l0) a9(r95,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r98,l0) conflicts: a0(r42,l0) a5(r197,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r96,l0) conflicts: a0(r42,l0) a5(r197,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a8(r198,l0) conflicts: a0(r42,l0) a5(r197,l0) a9(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r95,l0) conflicts: a0(r42,l0) a5(r197,l0) a8(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r192,l0) conflicts: a11(r196,l0) a12(r194,l0) a13(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r196,l0) conflicts: a10(r192,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r194,l0) conflicts: a10(r192,l0) a13(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r195,l0) conflicts: a10(r192,l0) a12(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r92,l0) conflicts: a15(r191,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r191,l0) conflicts: a14(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r189,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r188,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r183,l0) conflicts: a19(r187,l0) a20(r185,l0) a21(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r187,l0) conflicts: a18(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r185,l0) conflicts: a18(r183,l0) a21(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r186,l0) conflicts: a18(r183,l0) a20(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r89,l0) conflicts: a23(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r182,l0) conflicts: a22(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r173,l0) conflicts: a25(r178,l0) a26(r83,l0) a27(r176,l0) a28(r86,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a25(r178,l0) conflicts: a24(r173,l0) a26(r83,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a26(r83,l0) conflicts: a25(r178,l0) a24(r173,l0) a27(r176,l0) a28(r86,l0) a30(r170,l0) a29(r161,l0) a31(r169,l0) a32(r171,l0)
;;     total conflict hard regs: 11
;;     conflict hard regs: 11

;; a27(r176,l0) conflicts: a24(r173,l0) a26(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r86,l0) conflicts: a24(r173,l0) a26(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r161,l0) conflicts: a26(r83,l0) a30(r170,l0) a31(r169,l0) a32(r171,l0) a33(r165,l0) a34(r82,l0) a35(r80,l0) a36(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r170,l0) conflicts: a26(r83,l0) a29(r161,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r169,l0) conflicts: a26(r83,l0) a29(r161,l0) a32(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r171,l0) conflicts: a26(r83,l0) a29(r161,l0) a31(r169,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r165,l0) conflicts: a29(r161,l0) a34(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r82,l0) conflicts: a29(r161,l0) a33(r165,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r80,l0) conflicts: a29(r161,l0) a36(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r163,l0) conflicts: a29(r161,l0) a35(r80,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r159,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r77,l0) conflicts: a39(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r148,l0) conflicts: a38(r77,l0) a40(r154,l0) a41(r152,l0) a42(r153,l0) a43(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r154,l0) conflicts: a39(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r152,l0) conflicts: a39(r148,l0) a42(r153,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r153,l0) conflicts: a39(r148,l0) a41(r152,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r146,l0) conflicts: a39(r148,l0) a44(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r144,l0) conflicts: a43(r146,l0) a45(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r43,l0) conflicts: a44(r144,l0) a46(r141,l0) a47(r143,l0) a48(r140,l0) a49(r142,l0) a50(r67,l0) a51(r139,l0) a52(r44,l0) a53(r74,l0) a54(r136,l0) a55(r135,l0) a56(r72,l0) a57(r133,l0) a58(r130,l0) a59(r129,l0) a60(r124,l0) a61(r123,l0) a63(r119,l0) a67(r56,l0) a68(r57,l0) a69(r118,l0) a70(r117,l0) a71(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r141,l0) conflicts: a45(r43,l0) a47(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r143,l0) conflicts: a45(r43,l0) a46(r141,l0) a48(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r140,l0) conflicts: a45(r43,l0) a47(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r142,l0) conflicts: a45(r43,l0) a50(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r67,l0) conflicts: a45(r43,l0) a49(r142,l0) a51(r139,l0) a52(r44,l0) a53(r74,l0) a54(r136,l0) a55(r135,l0) a56(r72,l0) a57(r133,l0) a58(r130,l0) a59(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r139,l0) conflicts: a45(r43,l0) a50(r67,l0) a52(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r44,l0) conflicts: a45(r43,l0) a50(r67,l0) a51(r139,l0) a53(r74,l0) a54(r136,l0) a56(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r74,l0) conflicts: a45(r43,l0) a50(r67,l0) a52(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r136,l0) conflicts: a45(r43,l0) a50(r67,l0) a52(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r135,l0) conflicts: a45(r43,l0) a50(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r72,l0) conflicts: a45(r43,l0) a50(r67,l0) a52(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r133,l0) conflicts: a45(r43,l0) a50(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r130,l0) conflicts: a45(r43,l0) a50(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r129,l0) conflicts: a45(r43,l0) a50(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r124,l0) conflicts: a45(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r123,l0) conflicts: a45(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r122,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r119,l0) conflicts: a45(r43,l0) a64(r64,l0) a65(r63,l0) a66(r61,l0) a67(r56,l0) a68(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r64,l0) conflicts: a63(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r63,l0) conflicts: a63(r119,l0) a66(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r61,l0) conflicts: a63(r119,l0) a65(r63,l0) a67(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r56,l0) conflicts: a45(r43,l0) a63(r119,l0) a66(r61,l0) a68(r57,l0) a69(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r57,l0) conflicts: a45(r43,l0) a63(r119,l0) a67(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r118,l0) conflicts: a45(r43,l0) a67(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r117,l0) conflicts: a45(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r110,l0) conflicts: a45(r43,l0) a72(r115,l0) a73(r113,l0) a74(r52,l0) a75(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r115,l0) conflicts: a71(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r113,l0) conflicts: a71(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r52,l0) conflicts: a71(r110,l0) a75(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r45,l0) conflicts: a71(r110,l0) a74(r52,l0) a76(r109,l0) a78(r48,l0) a77(r46,l0) a79(r47,l0) a80(r104,l0) a81(r102,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a76(r109,l0) conflicts: a75(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r46,l0) conflicts: a75(r45,l0) a78(r48,l0) a79(r47,l0) a80(r104,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a78(r48,l0) conflicts: a75(r45,l0) a77(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r47,l0) conflicts: a75(r45,l0) a77(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r104,l0) conflicts: a75(r45,l0) a77(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r102,l0) conflicts: a75(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a7(r96)<->a8(r198)@95:shuffle
  cp1:a7(r96)<->a9(r95)@95:shuffle
  cp2:a6(r98)<->a7(r96)@95:shuffle
  cp3:a3(r202)<->a5(r197)@95:shuffle
  cp4:a11(r196)<->a12(r194)@16:shuffle
  cp5:a11(r196)<->a13(r195)@16:shuffle
  cp6:a16(r189)<->a17(r188)@79:shuffle
  cp7:a19(r187)<->a20(r185)@39:shuffle
  cp8:a19(r187)<->a21(r186)@39:shuffle
  cp9:a34(r82)<->a36(r163)@79:shuffle
  cp10:a34(r82)<->a35(r80)@79:shuffle
  cp11:a26(r83)<->a33(r165)@79:shuffle
  cp12:a26(r83)<->a34(r82)@79:shuffle
  cp13:a30(r170)<->a31(r169)@79:shuffle
  cp14:a30(r170)<->a32(r171)@79:shuffle
  cp15:a24(r173)<->a29(r161)@79:shuffle
  cp16:a27(r176)<->a28(r86)@79:shuffle
  cp17:a39(r148)<->a44(r144)@32:shuffle
  cp18:a40(r154)<->a41(r152)@32:shuffle
  cp19:a40(r154)<->a42(r153)@32:shuffle
  cp20:a38(r77)<->a40(r154)@32:shuffle
  cp21:a37(r159)<->a38(r77)@32:shuffle
  cp22:a47(r143)<->a49(r142)@16:shuffle
  cp23:a47(r143)<->a50(r67)@16:shuffle
  cp24:a46(r141)<->a48(r140)@16:shuffle
  cp25:a55(r135)<->a56(r72)@4:shuffle
  cp26:a52(r44)<->a55(r135)@4:shuffle
  cp27:a57(r133)<->a58(r130)@16:shuffle
  cp28:a56(r72)<->a57(r133)@16:shuffle
  cp29:a60(r124)<->a61(r123)@32:shuffle
  cp30:a45(r43)<->a66(r61)@16:shuffle
  cp31:a66(r61)<->a68(r57)@16:shuffle
  cp32:a65(r63)<->a67(r56)@16:shuffle
  cp33:a64(r64)<->a66(r61)@16:shuffle
  cp34:a64(r64)<->a65(r63)@16:shuffle
  cp35:a62(r122)<->a63(r119)@16:shuffle
  cp36:a62(r122)<->a64(r64)@16:shuffle
  cp37:a45(r43)<->a62(r122)@16:shuffle
  cp38:a73(r113)<->a75(r45)@32:shuffle
  cp39:a73(r113)<->a74(r52)@32:shuffle
  cp40:a72(r115)<->a73(r113)@32:shuffle
  cp41:a45(r43)<->a72(r115)@32:shuffle
  cp42:a70(r117)<->a71(r110)@32:shuffle
  cp43:a76(r109)<->a77(r46)@45:shuffle
  cp44:a80(r104)<->a81(r102)@125:shuffle
  pref0:a0(r42)<-hr10@1736
  pref1:a78(r48)<-hr10@1000
  pref2:a6(r98)<-hr10@95
  pref3:a25(r178)<-hr10@79
  pref4:a26(r83)<-hr10@79
  regions=1, blocks=27, points=122
    allocnos=82 (big 0), copies=45, conflicts=3, ranges=87

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r100 2r203 3r202 4r99 5r197 6r98 7r96 8r198 9r95 10r192 11r196 12r194 13r195 14r92 15r191 16r189 17r188 18r183 19r187 20r185 21r186 22r89 23r182 24r173 25r178 26r83 27r176 28r86 29r161 30r170 31r169 32r171 33r165 34r82 35r80 36r163 37r159 38r77 39r148 40r154 41r152 42r153 43r146 44r144 45r43 46r141 47r143 48r140 49r142 50r67 51r139 52r44 53r74 54r136 55r135 56r72 57r133 58r130 59r129 60r124 61r123 62r122 63r119 64r64 65r63 66r61 67r56 68r57 69r118 70r117 71r110 72r115 73r113 74r52 75r45 76r109 77r46 78r48 79r47 80r104 81r102
    modified regnos: 42 43 44 45 46 47 48 52 56 57 61 63 64 67 72 74 77 80 82 83 86 89 92 95 96 98 99 100 102 104 109 110 113 115 117 118 119 122 123 124 129 130 133 135 136 139 140 141 142 143 144 146 148 152 153 154 159 161 163 165 169 170 171 173 176 178 182 183 185 186 187 188 189 191 192 194 195 196 197 198 202 203
    border:
    Pressure: AR_REGS=5
 Removing pref0:hr10@1736
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@403500
          2:( 2-10 12-15)@15872
            3:( 2-7)@98712
      Allocno a0r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a1r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r203 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r202 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r99 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r197 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r98 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r96 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a8r198 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r192 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r196 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r194 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r195 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r191 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r189 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r188 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r183 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r187 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r185 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r186 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r89 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r182 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r173 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a25r178 of AR_REGS(14) has 13 avail. regs  2-10 12-15, node:  2-10 12-15 (confl regs =  0 1 11 16-34)
      Allocno a26r83 of AR_REGS(14) has 13 avail. regs  2-10 12-15, node:  2-10 12-15 (confl regs =  0 1 11 16-34)
      Allocno a27r176 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r86 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r161 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r171 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r163 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r159 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r148 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r154 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r152 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r153 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r146 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r144 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r141 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r143 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r142 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r139 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r136 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r135 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r133 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r129 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r123 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a62r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a63r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r61 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a69r118 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a70r117 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a71r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r113 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r45 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a76r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r46 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a78r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a79r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a80r104 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a81r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 44:a80r104-a81r102 (freq=125):
        Result (freq=6000): a80r104(3000) a81r102(3000)
      Forming thread by copy 0:a7r96-a8r198 (freq=95):
        Result (freq=3048): a7r96(1524) a8r198(1524)
      Forming thread by copy 2:a6r98-a7r96 (freq=95):
        Result (freq=4572): a6r98(1524) a7r96(1524) a8r198(1524)
      Forming thread by copy 3:a3r202-a5r197 (freq=95):
        Result (freq=5334): a3r202(1524) a5r197(3810)
      Forming thread by copy 6:a16r189-a17r188 (freq=79):
        Result (freq=2540): a16r189(1270) a17r188(1270)
      Forming thread by copy 9:a34r82-a36r163 (freq=79):
        Result (freq=2540): a34r82(1270) a36r163(1270)
      Forming thread by copy 11:a26r83-a33r165 (freq=79):
        Result (freq=3175): a26r83(1905) a33r165(1270)
      Forming thread by copy 13:a30r170-a31r169 (freq=79):
        Result (freq=2540): a30r170(1270) a31r169(1270)
      Forming thread by copy 15:a24r173-a29r161 (freq=79):
        Result (freq=6985): a24r173(2540) a29r161(4445)
      Forming thread by copy 16:a27r176-a28r86 (freq=79):
        Result (freq=2540): a27r176(1270) a28r86(1270)
      Forming thread by copy 43:a76r109-a77r46 (freq=45):
        Result (freq=2095): a76r109(730) a77r46(1365)
      Forming thread by copy 7:a19r187-a20r185 (freq=39):
        Result (freq=1268): a19r187(634) a20r185(634)
      Forming thread by copy 17:a39r148-a44r144 (freq=32):
        Result (freq=2072): a39r148(1036) a44r144(1036)
      Forming thread by copy 18:a40r154-a41r152 (freq=32):
        Result (freq=1036): a40r154(518) a41r152(518)
      Forming thread by copy 20:a38r77-a40r154 (freq=32):
        Result (freq=1813): a38r77(777) a40r154(518) a41r152(518)
      Forming thread by copy 21:a37r159-a38r77 (freq=32):
        Result (freq=2331): a37r159(518) a38r77(777) a40r154(518) a41r152(518)
      Forming thread by copy 29:a60r124-a61r123 (freq=32):
        Result (freq=1036): a60r124(518) a61r123(518)
      Forming thread by copy 38:a73r113-a75r45 (freq=32):
        Result (freq=1777): a73r113(518) a75r45(1259)
      Forming thread by copy 40:a72r115-a73r113 (freq=32):
        Result (freq=2295): a72r115(518) a73r113(518) a75r45(1259)
      Forming thread by copy 42:a70r117-a71r110 (freq=32):
        Result (freq=1295): a70r117(518) a71r110(777)
      Forming thread by copy 4:a11r196-a12r194 (freq=16):
        Result (freq=524): a11r196(262) a12r194(262)
      Forming thread by copy 22:a47r143-a49r142 (freq=16):
        Result (freq=516): a47r143(258) a49r142(258)
      Forming thread by copy 24:a46r141-a48r140 (freq=16):
        Result (freq=516): a46r141(258) a48r140(258)
      Forming thread by copy 27:a57r133-a58r130 (freq=16):
        Result (freq=516): a57r133(258) a58r130(258)
      Forming thread by copy 28:a56r72-a57r133 (freq=16):
        Result (freq=809): a56r72(293) a57r133(258) a58r130(258)
      Forming thread by copy 31:a66r61-a68r57 (freq=16):
        Result (freq=516): a66r61(258) a68r57(258)
      Forming thread by copy 32:a65r63-a67r56 (freq=16):
        Result (freq=905): a65r63(258) a67r56(647)
      Forming thread by copy 33:a64r64-a66r61 (freq=16):
        Result (freq=774): a64r64(258) a66r61(258) a68r57(258)
      Forming thread by copy 35:a62r122-a63r119 (freq=16):
        Result (freq=645): a62r122(258) a63r119(387)
      Forming thread by copy 25:a55r135-a56r72 (freq=4):
        Result (freq=879): a55r135(70) a56r72(293) a57r133(258) a58r130(258)
      Pushing a51(r139,l0)(cost 0)
      Pushing a69(r118,l0)(cost 0)
      Pushing a59(r129,l0)(cost 0)
      Pushing a53(r74,l0)(cost 0)
      Pushing a13(r195,l0)(cost 0)
      Pushing a54(r136,l0)(cost 0)
      Pushing a10(r192,l0)(cost 0)
      Pushing a49(r142,l0)(cost 0)
      Pushing a47(r143,l0)(cost 0)
      Pushing a48(r140,l0)(cost 0)
      Pushing a46(r141,l0)(cost 0)
      Pushing a74(r52,l0)(cost 0)
      Pushing a42(r153,l0)(cost 0)
      Pushing a12(r194,l0)(cost 0)
      Pushing a11(r196,l0)(cost 0)
      Pushing a52(r44,l0)(cost 0)
      Forming thread by copy 41:a45r43-a72r115 (freq=32):
        Result (freq=3200): a45r43(905) a72r115(518) a73r113(518) a75r45(1259)
        Making a45(r43,l0) colorable
      Pushing a21(r186,l0)(cost 0)
      Pushing a62(r122,l0)(cost 0)
      Pushing a63(r119,l0)(cost 0)
      Pushing a50(r67,l0)(cost 0)
      Pushing a68(r57,l0)(cost 0)
      Pushing a66(r61,l0)(cost 0)
      Pushing a64(r64,l0)(cost 0)
      Pushing a43(r146,l0)(cost 0)
      Pushing a55(r135,l0)(cost 0)
      Pushing a58(r130,l0)(cost 0)
      Pushing a57(r133,l0)(cost 0)
      Pushing a56(r72,l0)(cost 0)
      Pushing a65(r63,l0)(cost 0)
      Pushing a67(r56,l0)(cost 0)
      Pushing a18(r183,l0)(cost 0)
      Pushing a78(r48,l0)(cost 0)
      Pushing a61(r123,l0)(cost 0)
      Pushing a60(r124,l0)(cost 0)
      Pushing a20(r185,l0)(cost 0)
      Pushing a19(r187,l0)(cost 0)
      Pushing a35(r80,l0)(cost 0)
      Pushing a32(r171,l0)(cost 0)
      Pushing a25(r178,l0)(cost 0)
      Pushing a23(r182,l0)(cost 0)
      Pushing a22(r89,l0)(cost 0)
      Pushing a15(r191,l0)(cost 0)
      Pushing a14(r92,l0)(cost 0)
      Pushing a70(r117,l0)(cost 0)
      Pushing a71(r110,l0)(cost 0)
        Making a75(r45,l0) colorable
      Pushing a9(r95,l0)(cost 0)
        Making a5(r197,l0) colorable
      Pushing a4(r99,l0)(cost 0)
      Pushing a2(r203,l0)(cost 0)
      Pushing a1(r100,l0)(cost 0)
        Making a0(r42,l0) colorable
      Pushing a0(r42,l0)(cost 10412)
      Pushing a79(r47,l0)(cost 0)
      Pushing a44(r144,l0)(cost 0)
      Pushing a39(r148,l0)(cost 0)
      Pushing a76(r109,l0)(cost 0)
      Pushing a77(r46,l0)(cost 0)
      Pushing a73(r113,l0)(cost 0)
      Pushing a72(r115,l0)(cost 0)
      Pushing a41(r152,l0)(cost 0)
      Pushing a40(r154,l0)(cost 0)
      Pushing a37(r159,l0)(cost 0)
      Pushing a38(r77,l0)(cost 0)
      Pushing a36(r163,l0)(cost 0)
      Pushing a34(r82,l0)(cost 0)
      Pushing a31(r169,l0)(cost 0)
      Pushing a30(r170,l0)(cost 0)
      Pushing a28(r86,l0)(cost 0)
      Pushing a27(r176,l0)(cost 0)
      Pushing a17(r188,l0)(cost 0)
      Pushing a16(r189,l0)(cost 0)
      Pushing a33(r165,l0)(cost 0)
      Pushing a26(r83,l0)(cost 0)
      Pushing a45(r43,l0)(cost 3620)
      Pushing a75(r45,l0)(cost 5036)
      Pushing a8(r198,l0)(cost 0)
      Pushing a6(r98,l0)(cost 0)
      Pushing a7(r96,l0)(cost 0)
      Pushing a3(r202,l0)(cost 0)
      Pushing a5(r197,l0)(cost 12192)
      Pushing a81(r102,l0)(cost 0)
      Pushing a80(r104,l0)(cost 0)
      Pushing a24(r173,l0)(cost 0)
      Pushing a29(r161,l0)(cost 0)
      Popping a29(r161,l0)  -- assign reg 8
      Popping a24(r173,l0)  -- assign reg 2
      Popping a80(r104,l0)  -- assign reg 2
      Popping a81(r102,l0)  -- assign reg 2
      Popping a5(r197,l0)  -- assign reg 2
      Popping a3(r202,l0)  -- assign reg 2
      Popping a7(r96,l0)  -- assign reg 3
      Popping a6(r98,l0)  -- assign reg 10
      Popping a8(r198,l0)  -- assign reg 3
      Popping a75(r45,l0)  -- assign reg 3
      Popping a45(r43,l0)  -- assign reg 3
      Popping a26(r83,l0)  -- assign reg 3
      Popping a33(r165,l0)  -- assign reg 2
      Popping a16(r189,l0)  -- assign reg 2
      Popping a17(r188,l0)  -- assign reg 2
      Popping a27(r176,l0)  -- assign reg 8
      Popping a28(r86,l0)  -- assign reg 8
      Popping a30(r170,l0)  -- assign reg 2
      Popping a31(r169,l0)  -- assign reg 2
      Popping a34(r82,l0)  -- assign reg 3
      Popping a36(r163,l0)  -- assign reg 2
      Popping a38(r77,l0)  -- assign reg 2
      Popping a37(r159,l0)  -- assign reg 2
      Popping a40(r154,l0)  -- assign reg 2
      Popping a41(r152,l0)  -- assign reg 2
      Popping a72(r115,l0)  -- assign reg 3
      Popping a73(r113,l0)  -- assign reg 3
      Popping a77(r46,l0)  -- assign reg 4
      Popping a76(r109,l0)  -- assign reg 4
      Popping a39(r148,l0)  -- assign reg 3
      Popping a44(r144,l0)  -- assign reg 2
      Popping a79(r47,l0)  -- assign reg 2
      Popping a0(r42,l0)  -- assign reg 4
      Popping a1(r100,l0)  -- assign reg 2
      Popping a2(r203,l0)  -- assign reg 2
      Popping a4(r99,l0)  -- assign reg 3
      Popping a9(r95,l0)  -- assign reg 10
      Popping a71(r110,l0)  -- assign reg 2
      Popping a70(r117,l0)  -- assign reg 2
      Popping a14(r92,l0)  -- assign reg 2
      Popping a15(r191,l0)  -- assign reg 3
      Popping a22(r89,l0)  -- assign reg 2
      Popping a23(r182,l0)  -- assign reg 3
      Popping a25(r178,l0)  -- assign reg 10
      Popping a32(r171,l0)  -- assign reg 4
      Popping a35(r80,l0)  -- assign reg 3
      Popping a19(r187,l0)  -- assign reg 2
      Popping a20(r185,l0)  -- assign reg 2
      Popping a60(r124,l0)  -- assign reg 2
      Popping a61(r123,l0)  -- assign reg 2
      Popping a78(r48,l0)  -- assign reg 10
      Popping a18(r183,l0)  -- assign reg 3
      Popping a67(r56,l0)  -- assign reg 2
      Popping a65(r63,l0)  -- assign reg 2
      Popping a56(r72,l0)  -- assign reg 2
      Popping a57(r133,l0)  -- assign reg 2
      Popping a58(r130,l0)  -- assign reg 2
      Popping a55(r135,l0)  -- assign reg 2
      Popping a43(r146,l0)  -- assign reg 4
      Popping a64(r64,l0)  -- assign reg 2
      Popping a66(r61,l0)  -- assign reg 3
      Popping a68(r57,l0)  -- assign reg 4
      Popping a50(r67,l0)  -- assign reg 4
      Popping a63(r119,l0)  -- assign reg 8
      Popping a62(r122,l0)  -- assign reg 2
      Popping a21(r186,l0)  -- assign reg 4
      Popping a52(r44,l0)  -- assign reg 8
      Popping a11(r196,l0)  -- assign reg 2
      Popping a12(r194,l0)  -- assign reg 2
      Popping a42(r153,l0)  -- assign reg 4
      Popping a74(r52,l0)  -- assign reg 4
      Popping a46(r141,l0)  -- assign reg 2
      Popping a48(r140,l0)  -- assign reg 2
      Popping a47(r143,l0)  -- assign reg 4
      Popping a49(r142,l0)  -- assign reg 2
      Popping a10(r192,l0)  -- assign reg 3
      Popping a54(r136,l0)  -- assign reg 2
      Popping a13(r195,l0)  -- assign reg 4
      Popping a53(r74,l0)  -- assign reg 2
      Popping a59(r129,l0)  -- assign reg 2
      Popping a69(r118,l0)  -- assign reg 4
      Popping a51(r139,l0)  -- assign reg 2
Disposition:
    0:r42  l0     4   45:r43  l0     3   52:r44  l0     8   75:r45  l0     3
   77:r46  l0     4   79:r47  l0     2   78:r48  l0    10   74:r52  l0     4
   67:r56  l0     2   68:r57  l0     4   66:r61  l0     3   65:r63  l0     2
   64:r64  l0     2   50:r67  l0     4   56:r72  l0     2   53:r74  l0     2
   38:r77  l0     2   35:r80  l0     3   34:r82  l0     3   26:r83  l0     3
   28:r86  l0     8   22:r89  l0     2   14:r92  l0     2    9:r95  l0    10
    7:r96  l0     3    6:r98  l0    10    4:r99  l0     3    1:r100 l0     2
   81:r102 l0     2   80:r104 l0     2   76:r109 l0     4   71:r110 l0     2
   73:r113 l0     3   72:r115 l0     3   70:r117 l0     2   69:r118 l0     4
   63:r119 l0     8   62:r122 l0     2   61:r123 l0     2   60:r124 l0     2
   59:r129 l0     2   58:r130 l0     2   57:r133 l0     2   55:r135 l0     2
   54:r136 l0     2   51:r139 l0     2   48:r140 l0     2   46:r141 l0     2
   49:r142 l0     2   47:r143 l0     4   44:r144 l0     2   43:r146 l0     4
   39:r148 l0     3   41:r152 l0     2   42:r153 l0     4   40:r154 l0     2
   37:r159 l0     2   29:r161 l0     8   36:r163 l0     2   33:r165 l0     2
   31:r169 l0     2   30:r170 l0     2   32:r171 l0     4   24:r173 l0     2
   27:r176 l0     8   25:r178 l0    10   23:r182 l0     3   18:r183 l0     3
   20:r185 l0     2   21:r186 l0     4   19:r187 l0     2   17:r188 l0     2
   16:r189 l0     2   15:r191 l0     3   10:r192 l0     3   12:r194 l0     2
   13:r195 l0     4   11:r196 l0     2    5:r197 l0     2    8:r198 l0     3
    3:r202 l0     2    2:r203 l0     2
New iteration of spill/restore move
+++Costs: overall -2348, reg -2348, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processBeacon

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11]
;;  ref usage 	r0={9d} r1={1d,34u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,26u} r8={8d} r9={8d} r10={15d,9u} r11={12d,4u} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,26u} r17={1d,25u} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r42={4d,3u} r43={2d,6u} r44={2d,7u} r45={1d,2u} r46={1d,2u} r47={1d,1u} r48={1d,1u} r52={1d,1u} r56={1d,2u} r57={1d,1u} r61={1d,1u} r63={1d,1u} r64={1d,1u} r67={1d,2u,1e} r72={1d,2u} r74={1d,1u} r77={1d,2u} r80={1d,1u} r82={1d,1u} r83={1d,2u} r86={1d,1u} r89={1d,1u} r92={1d,1u} r95={1d,1u} r96={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d,2u} r104={1d,2u} r109={1d,1u} r110={1d,2u,1e} r113={1d,1u} r115={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,2u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r129={1d,1u} r130={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,3u} r146={1d,2u} r148={1d,3u} r152={1d,1u} r153={1d,1u,1e} r154={1d,1u} r159={1d,1u} r161={1d,6u,3e} r163={1d,1u} r165={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u,1e} r173={1d,3u} r176={1d,1u} r178={1d,1u} r182={1d,1u} r183={1d,2u} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,2u} r194={1d,1u} r195={1d,1u,1e} r196={1d,1u} r197={1d,4u,2e} r198={1d,1u} r202={1d,1u} r203={1d,1u} 
;;    total ref usage 583{324d,248u,11e} in 147{139 regular + 8 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 46 47 102 104
(note 8 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 8 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 11 2 (set (reg/f:SI 102)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1956 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 11 10 12 2 (set (reg/v:SI 45 [ lasttx ])
        (mem/j/c:SI (plus:SI (reg/f:SI 102)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1956 44 {movsi_internal}
     (nil))
(debug_insn 12 11 14 2 (var_location:SI lasttx (reg/v:SI 45 [ lasttx ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1956 -1
     (nil))
(insn 14 12 15 2 (set:SI (reg/f:SI 104)
        (plus:SI (reg/f:SI 102)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1957 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 15 14 16 2 (set (reg/v:SI 46 [ flags ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 104)
                    (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1957 34 {zero_extendqisi2}
     (nil))
(debug_insn 16 15 19 2 (var_location:QI flags (subreg:QI (reg/v:SI 46 [ flags ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1957 -1
     (nil))
(insn 19 16 20 2 (set (reg:SI 47 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 104)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1960 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:SI 47 [ D.6347 ])
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1960 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 47 [ D.6347 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 141)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              16 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(1){ }u12(7){ }u13(16){ }u14(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 21 23 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("decodeBeacon") [flags 0x3]  <function_decl 0x100b7c1b0 decodeBeacon>) [0 decodeBeacon S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1960 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 23 22 24 3 (set (reg:SI 48 [ D.6348 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1960 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ge (reg:SI 48 [ D.6348 ])
                (const_int 1 [0x1]))
            (pc)
            (label_ref 141))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1960 57 {*bfalse}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6348 ])
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 141)
;;  succ:       4 [73.0%]  (FALLTHRU)
;;              16 [27.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46

;; basic block 4, loop depth 0, count 0, freq 3650, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [73.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 46
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 46
;; lr  def 	 109
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 27 4 (var_location:SI ev (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1961 -1
     (nil))
(note 27 26 29 4 NOTE_INSN_DELETED)
(insn 29 27 30 4 (set (reg:SI 109)
        (and:SI (reg/v:SI 46 [ flags ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1962 30 {andsi3}
     (expr_list:REG_DEAD (reg/v:SI 46 [ flags ])
        (nil)))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:SI 109)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1962 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 109)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 37)
;;  succ:       5 [29.0%]  (FALLTHRU)
;;              6 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45

;; basic block 5, loop depth 0, count 0, freq 1059, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [29.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(1){ }u26(7){ }u27(16){ }u28(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 11 a11)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1965 44 {movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:SI 10 a10)
        (const_int 13 [0xd])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1965 44 {movsi_internal}
     (nil))
(call_insn 34 33 7 5 (call (mem:SI (symbol_ref:SI ("calcBcnRxWindowFromMillis") [flags 0x3]  <function_decl 0x100b66870 calcBcnRxWindowFromMillis>) [0 calcBcnRxWindowFromMillis S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1965 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 7 34 251 5 (set (reg/v:SI 42 [ ev ])
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1961 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(jump_insn 251 7 252 5 (set (pc)
        (label_ref 223)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1966 78 {jump}
     (nil)
 -> 223)
;;  succ:       23 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 252 251 37)
;; basic block 6, loop depth 0, count 0, freq 2591, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [71.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(1){ }u33(7){ }u34(16){ }u35(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45
;; lr  def 	 43 52 56 110 113 115 117
(code_label 37 252 38 6 309 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 110)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 40 39 43 6 (set (reg:SI 52 [ D.6348 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 110)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 110)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (nil)))
(insn 43 40 45 6 (set (reg:SI 113)
        (minus:SI (reg/v:SI 45 [ lasttx ])
            (reg:SI 52 [ D.6348 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 52 [ D.6348 ])
        (expr_list:REG_DEAD (reg/v:SI 45 [ lasttx ])
            (nil))))
(insn 45 43 46 6 (set (reg:SI 115)
        (plus:SI (reg:SI 113)
            (const_int 4608 [0x1200]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 46 45 47 6 (set (reg/v:SI 43 [ drift ])
        (sign_extend:SI (subreg:HI (reg:SI 115) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(debug_insn 47 46 49 6 (var_location:HI drift (subreg:HI (reg/v:SI 43 [ drift ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1969 -1
     (nil))
(insn 49 47 50 6 (set:SI (reg/f:SI 117)
        (plus:SI (reg/f:SI 110)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1970 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 50 49 51 6 (set (reg:SI 56 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 117)
                    (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1970 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(jump_insn 51 50 52 6 (set (pc)
        (if_then_else (eq (reg:SI 56 [ D.6347 ])
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1970 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 64)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 56

;; basic block 7, loop depth 0, count 0, freq 1296, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(1){ }u46(7){ }u47(16){ }u48(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 56
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 56
;; lr  def 	 43 57 61 63 64 118 119 122
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg/f:SI 118)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 54 53 55 7 (set (reg:HI 119 [ LMIC.drift ])
        (mem/j/c:HI (plus:SI (reg/f:SI 118)
                (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 55 54 56 7 (set (reg:SI 57 [ D.6351 ])
        (sign_extend:SI (reg:HI 119 [ LMIC.drift ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 35 {extendhisi2_internal}
     (nil))
(insn 56 55 57 7 (set (reg:SI 61 [ D.6348 ])
        (minus:SI (reg/v:SI 43 [ drift ])
            (reg:SI 57 [ D.6351 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6351 ])
        (expr_list:REG_DEAD (reg/v:SI 43 [ drift ])
            (nil))))
(insn 57 56 58 7 (set (reg:SI 63 [ D.6348 ])
        (plus:SI (reg:SI 56 [ D.6347 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 56 [ D.6347 ])
        (nil)))
(insn 58 57 61 7 (set (reg:SI 64 [ D.6348 ])
        (div:SI (reg:SI 61 [ D.6348 ])
            (reg:SI 63 [ D.6348 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 17 {divsi3}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6348 ])
        (expr_list:REG_DEAD (reg:SI 61 [ D.6348 ])
            (nil))))
(insn 61 58 62 7 (set (reg:SI 122)
        (plus:SI (reg:SI 64 [ D.6348 ])
            (subreg:SI (reg:HI 119 [ LMIC.drift ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 1 {addsi3}
     (expr_list:REG_DEAD (reg:HI 119 [ LMIC.drift ])
        (expr_list:REG_DEAD (reg:SI 64 [ D.6348 ])
            (nil))))
(insn 62 61 63 7 (set (reg/v:SI 43 [ drift ])
        (sign_extend:SI (subreg:HI (reg:SI 122) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(debug_insn 63 62 64 7 (var_location:HI drift (subreg:HI (reg/v:SI 43 [ drift ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1971 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

;; basic block 8, loop depth 0, count 0, freq 2591, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(1){ }u61(7){ }u62(16){ }u63(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 67 123 124
(code_label 64 63 65 8 311 "" [1 uses])
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 66 65 67 8 (var_location:HI drift (subreg:HI (reg/v:SI 43 [ drift ]) 0)) -1
     (nil))
(insn 67 66 68 8 (set (reg/f:SI 123)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1973 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 68 67 69 8 (set:SI (reg/f:SI 124)
        (plus:SI (reg/f:SI 123)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1973 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 69 68 70 8 (set (reg:SI 67 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 124)
                    (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1973 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(note 70 69 71 8 NOTE_INSN_DELETED)
(note 71 70 73 8 NOTE_INSN_DELETED)
(note 73 71 74 8 NOTE_INSN_DELETED)
(jump_insn 74 73 75 8 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 67 [ D.6347 ])
                    (const_int 1 [0x1])
                    (const_int 2 [0x2]))
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1973 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 110)
;;  succ:       9 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 67

;; basic block 9, loop depth 0, count 0, freq 1296, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(1){ }u73(7){ }u74(16){ }u75(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 67
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 44 72 129 130 133
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (set (reg/f:SI 129)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 77 76 81 9 (set (reg:HI 130 [ LMIC.drift ])
        (mem/j/c:HI (plus:SI (reg/f:SI 129)
                (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 81 77 82 9 (set (reg:SI 133)
        (minus:SI (subreg:SI (reg:HI 130 [ LMIC.drift ]) 0)
            (reg/v:SI 43 [ drift ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 4 {subsi3}
     (expr_list:REG_DEAD (reg:HI 130 [ LMIC.drift ])
        (nil)))
(insn 82 81 83 9 (set (reg:SI 72 [ D.6350 ])
        (zero_extend:SI (subreg:HI (reg:SI 133) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 83 82 84 9 (set (reg/v:SI 44 [ diff ])
        (sign_extend:SI (subreg/v:HI (reg:SI 72 [ D.6350 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 35 {extendhisi2_internal}
     (nil))
(debug_insn 84 83 85 9 (var_location:HI diff (subreg:HI (reg/v:SI 44 [ diff ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1974 -1
     (nil))
(jump_insn 85 84 86 9 (set (pc)
        (if_then_else (ge (reg/v:SI 44 [ diff ])
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1975 56 {*btrue}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 91)
;;  succ:       10 [27.0%]  (FALLTHRU)
;;              11 [73.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 67 72

;; basic block 10, loop depth 0, count 0, freq 350, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [27.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(1){ }u84(7){ }u85(16){ }u86(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 67 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72
;; lr  def 	 44 135
(note 86 85 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 86 89 10 (set (reg:SI 135)
        (neg:SI (reg:SI 72 [ D.6350 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1975 28 {negsi2}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6350 ])
        (nil)))
(insn 89 88 90 10 (set (reg/v:SI 44 [ diff ])
        (sign_extend:SI (subreg:HI (reg:SI 135) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1975 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(debug_insn 90 89 91 10 (var_location:HI diff (subreg:HI (reg/v:SI 44 [ diff ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1975 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 67

;; basic block 11, loop depth 0, count 0, freq 1296, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9 [73.0%] 
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u90(1){ }u91(7){ }u92(16){ }u93(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 67
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 74 136
(code_label 91 90 92 11 313 "" [1 uses])
(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 93 92 94 11 (var_location:HI diff (subreg:HI (reg/v:SI 44 [ diff ]) 0)) -1
     (nil))
(insn 94 93 95 11 (set (reg/f:SI 136)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1976 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 95 94 97 11 (set (mem/j/c:HI (plus:SI (reg/f:SI 136)
                (const_int 182 [0xb6])) [0 LMIC.lastDriftDiff+0 S2 A16])
        (subreg/s/u:HI (reg/v:SI 44 [ diff ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1976 45 {movhi_internal}
     (nil))
(note 97 95 98 11 NOTE_INSN_DELETED)
(insn 98 97 99 11 (set (reg:SI 74 [ D.6351 ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 136)
                    (const_int 184 [0xb8])) [0 LMIC.maxDriftDiff+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1977 35 {extendhisi2_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(jump_insn 99 98 100 11 (set (pc)
        (if_then_else (ge (reg:SI 74 [ D.6351 ])
                (reg/v:SI 44 [ diff ]))
            (label_ref 103)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1977 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6351 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 103)
;;  succ:       12 [50.0%]  (FALLTHRU)
;;              13 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 67

;; basic block 12, loop depth 0, count 0, freq 648, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 [50.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u101(1){ }u102(7){ }u103(16){ }u104(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 44 67
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 139
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 12 (set (reg/f:SI 139)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1978 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 102 101 103 12 (set (mem/j/c:HI (plus:SI (reg/f:SI 139)
                (const_int 184 [0xb8])) [0 LMIC.maxDriftDiff+0 S2 A32])
        (subreg/s/u:HI (reg/v:SI 44 [ diff ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1978 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/v:SI 44 [ diff ])
            (nil))))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 67

;; basic block 13, loop depth 0, count 0, freq 1296, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11 [50.0%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u107(1){ }u108(7){ }u109(16){ }u110(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 67
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 67
;; lr  def 	 140 141 142 143
(code_label 103 102 104 13 314 "" [1 uses])
(note 104 103 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 104 108 13 (set (reg:QI 142)
        (const_int -9 [0xfffffffffffffff7])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1979 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -9 [0xfffffffffffffff7])
        (nil)))
(insn 108 107 265 13 (set (reg:SI 143)
        (and:SI (reg:SI 67 [ D.6347 ])
            (subreg:SI (reg:QI 142) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1979 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 142)
        (expr_list:REG_DEAD (reg:SI 67 [ D.6347 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 67 [ D.6347 ])
                    (const_int -9 [0xfffffffffffffff7]))
                (nil)))))
(insn 265 108 264 13 (set (reg/f:SI 140)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1979 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 264 265 109 13 (set:SI (reg/f:SI 141)
        (plus:SI (reg/f:SI 140)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1979 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 109 264 110 13 (set (mem/j/c:QI (plus:SI (reg/f:SI 141)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg:QI (reg:SI 143) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1979 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 141)
            (nil))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43

;; basic block 14, loop depth 0, count 0, freq 2591, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u117(1){ }u118(7){ }u119(16){ }u120(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	 77 144 146 148 152 153 154 159
(code_label 110 109 111 14 312 "" [1 uses])
(note 111 110 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 14 (set (reg/f:SI 144)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1981 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 113 112 115 14 (set (mem/j/c:HI (plus:SI (reg/f:SI 144)
                (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32])
        (subreg/s/u:HI (reg/v:SI 43 [ drift ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1981 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 [ drift ])
        (nil)))
(insn 115 113 116 14 (set (reg:QI 146)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1982 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 116 115 118 14 (set (mem/j/c:QI (plus:SI (reg/f:SI 144)
                (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16])
        (reg:QI 146)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1982 46 {movqi_internal}
     (nil))
(insn 118 116 120 14 (set:SI (reg/f:SI 148)
        (plus:SI (reg/f:SI 144)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1982 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 120 118 124 14 (set (mem/j/c:QI (plus:SI (reg/f:SI 148)
                (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8])
        (reg:QI 146)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1982 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 146)
        (nil)))
(insn 124 120 263 14 (set (reg:QI 153 [ LMIC.bcninfo.flags ])
        (mem/j/c:QI (plus:SI (reg/f:SI 148)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1983 46 {movqi_internal}
     (nil))
(insn 263 124 125 14 (set (reg:QI 152)
        (const_int -5 [0xfffffffffffffffb])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1983 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -5 [0xfffffffffffffffb])
        (nil)))
(insn 125 263 126 14 (set (reg:SI 154)
        (and:SI (subreg:SI (reg:QI 153 [ LMIC.bcninfo.flags ]) 0)
            (subreg:SI (reg:QI 152) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1983 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 153 [ LMIC.bcninfo.flags ])
        (expr_list:REG_DEAD (reg:QI 152)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:QI 153 [ LMIC.bcninfo.flags ]) 0)
                    (const_int -5 [0xfffffffffffffffb]))
                (nil)))))
(insn 126 125 129 14 (set (reg:SI 77 [ D.6347 ])
        (zero_extend:SI (subreg:QI (reg:SI 154) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1983 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 129 126 130 14 (set (mem/j/c:QI (plus:SI (reg/f:SI 148)
                (const_int 154 [0x9a])) [0 LMIC.bcninfo.flags+0 S1 A16])
        (subreg/s/v:QI (reg:SI 77 [ D.6347 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1983 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))
(note 130 129 132 14 NOTE_INSN_DELETED)
(insn 132 130 133 14 (set (reg:SI 159)
        (and:SI (reg:SI 77 [ D.6347 ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1988 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6347 ])
        (nil)))
(jump_insn 133 132 134 14 (set (pc)
        (if_then_else (ne (reg:SI 159)
                (const_int 0 [0]))
            (label_ref:SI 246)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1988 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 159)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 246)
;;  succ:       15 [29.0%]  (FALLTHRU)
;;              20 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 15, loop depth 0, count 0, freq 752, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 [29.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u138(1){ }u139(7){ }u140(16){ }u141(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(note 134 133 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 135 134 136 15 NOTE_INSN_DELETED)
(insn 136 135 137 15 (set (reg:SI 11 a11)
        (const_int 1988 [0x7c4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1988 44 {movsi_internal}
     (nil))
(insn 137 136 138 15 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC226") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1988 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 138 137 4 15 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1988 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 4 138 253 15 (set (reg/v:SI 42 [ ev ])
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1961 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(jump_insn 253 4 254 15 (set (pc)
        (label_ref 204)) 78 {jump}
     (nil)
 -> 204)
;;  succ:       22 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 254 253 141)
;; basic block 16, loop depth 0, count 0, freq 6350, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [27.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u146(1){ }u147(7){ }u148(16){ }u149(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 80 82 83 86 89 161 163 165 169 170 171 173 176 178 182
(code_label 141 254 142 16 308 "" [2 uses])
(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 143 142 144 16 (var_location:SI ev (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1990 -1
     (nil))
(insn 144 143 145 16 (set (reg/f:SI 161)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 145 144 146 16 NOTE_INSN_DELETED)
(insn 146 145 147 16 (set (reg:SI 80 [ D.6351 ])
        (sign_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 161)
                    (const_int 180 [0xb4])) [0 LMIC.drift+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 35 {extendhisi2_internal}
     (nil))
(insn 147 146 148 16 (set (reg:SI 163)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC227") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 8000000 [0x7a1200])
        (nil)))
(insn 148 147 150 16 (set (reg:SI 82 [ D.6348 ])
        (minus:SI (reg:SI 163)
            (reg:SI 80 [ D.6351 ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 80 [ D.6351 ])
            (nil))))
(insn 150 148 151 16 (set (reg:SI 165 [ LMIC.bcninfo.txtime ])
        (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (nil)))
(insn 151 150 153 16 (set (reg:SI 83 [ D.6348 ])
        (plus:SI (reg:SI 82 [ D.6348 ])
            (reg:SI 165 [ LMIC.bcninfo.txtime ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 165 [ LMIC.bcninfo.txtime ])
        (expr_list:REG_DEAD (reg:SI 82 [ D.6348 ])
            (nil))))
(insn 153 151 157 16 (set (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (reg:SI 83 [ D.6348 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1991 44 {movsi_internal}
     (nil))
(insn 157 153 262 16 (set (reg:SI 171 [ LMIC.bcninfo.time ])
        (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1992 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])
        (nil)))
(insn 262 157 158 16 (set (reg:SI 169)
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1992 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 158 262 159 16 (set (reg:SI 170 [ D.6353 ])
        (plus:SI (reg:SI 171 [ LMIC.bcninfo.time ])
            (reg:SI 169))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1992 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 171 [ LMIC.bcninfo.time ])
        (expr_list:REG_DEAD (reg:SI 169)
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 161)
                        (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])
                (expr_list:REG_EQUAL (plus:SI (reg:SI 171 [ LMIC.bcninfo.time ])
                        (const_int 128 [0x80]))
                    (nil))))))
(insn 159 158 161 16 (set (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 412 [0x19c])) [0 LMIC.bcninfo.time+0 S4 A32])
        (reg:SI 170 [ D.6353 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1992 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 170 [ D.6353 ])
        (nil)))
(insn 161 159 162 16 (set:SI (reg/f:SI 173)
        (plus:SI (reg/f:SI 161)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1993 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 162 161 165 16 (set (reg:SI 86 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 173)
                    (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1993 34 {zero_extendqisi2}
     (nil))
(insn 165 162 166 16 (set (reg:SI 176)
        (plus:SI (reg:SI 86 [ D.6347 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1993 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 86 [ D.6347 ])
        (nil)))
(insn 166 165 168 16 (set (mem/j/c:QI (plus:SI (reg/f:SI 173)
                (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8])
        (subreg:QI (reg:SI 176) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1993 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(note 168 166 169 16 NOTE_INSN_DELETED)
(insn 169 168 261 16 (set (reg:SI 11 a11)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1995 44 {movsi_internal}
     (nil))
(insn 261 169 170 16 (set (reg:SI 178)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC228") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1995 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 132500 [0x20594])
        (nil)))
(insn 170 261 171 16 (set (reg:SI 10 a10)
        (plus:SI (reg:SI 83 [ D.6348 ])
            (reg:SI 178))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1995 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 83 [ D.6348 ])
            (nil))))
(call_insn 171 170 174 16 (call (mem:SI (symbol_ref:SI ("txDelay") [flags 0x3]  <function_decl 0x100b66d80 txDelay>) [0 txDelay S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1995 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 174 171 176 16 (set (reg:SI 89 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 173)
                    (const_int 53 [0x35])) [0 LMIC.missedBcns+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1996 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 173)
        (nil)))
(insn 176 174 177 16 (set (reg:SI 182)
        (const_int 20 [0x14])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1996 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))
(jump_insn 177 176 178 16 (set (pc)
        (if_then_else (geu (reg:SI 182)
                (reg:SI 89 [ D.6347 ]))
            (label_ref 185)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1996 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 89 [ D.6347 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 185)
;;  succ:       17 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 17, loop depth 0, count 0, freq 3175, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 [50.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u179(1){ }u180(7){ }u181(16){ }u182(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 183 185 186 187
(note 178 177 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 182 17 (set (reg/f:SI 183)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1997 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 182 179 260 17 (set (reg:HI 186 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 183)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1997 45 {movhi_internal}
     (nil))
(insn 260 182 183 17 (set (reg:HI 185)
        (const_int 32 [0x20])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1997 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 32 [0x20])
        (nil)))
(insn 183 260 184 17 (set (reg:SI 187)
        (ior:SI (subreg:SI (reg:HI 186 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 185) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1997 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 186 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 185)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 186 [ LMIC.opmode ]) 0)
                    (const_int 32 [0x20]))
                (nil)))))
(insn 184 183 185 17 (set (mem/j/c:HI (plus:SI (reg/f:SI 183)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 187) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1997 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg/f:SI 183)
            (nil))))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 18, loop depth 0, count 0, freq 6350, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16 [50.0%] 
;;              17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u189(1){ }u190(7){ }u191(16){ }u192(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 92 188 189 191
(code_label 185 184 186 18 316 "" [1 uses])
(note 186 185 187 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 18 (set (reg/f:SI 188)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1998 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 188 187 189 18 (set:SI (reg/f:SI 189)
        (plus:SI (reg/f:SI 188)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1998 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 189 188 191 18 (set (reg:SI 92 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 189)
                    (const_int 141 [0x8d])) [0 LMIC.bcnRxsyms+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1998 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 189)
        (nil)))
(insn 191 189 192 18 (set (reg:SI 191)
        (const_int 100 [0x64])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1998 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 100 [0x64])
        (nil)))
(jump_insn 192 191 193 18 (set (pc)
        (if_then_else (geu (reg:SI 191)
                (reg:SI 92 [ D.6347 ]))
            (label_ref:SI 250)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1998 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_DEAD (reg:SI 92 [ D.6347 ])
            (int_list:REG_BR_PROB 7929 (nil))))
 -> 250)
;;  succ:       19 [20.7%]  (FALLTHRU)
;;              21 [79.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 19, loop depth 0, count 0, freq 1315, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 [20.7%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(1){ }u198(7){ }u199(16){ }u200(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 192 194 195 196
(note 193 192 194 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 197 19 (set (reg/f:SI 192)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1999 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 197 194 259 19 (set (reg:HI 195 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 192)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1999 45 {movhi_internal}
     (nil))
(insn 259 197 198 19 (set (reg:HI 194)
        (const_int -1571 [0xfffffffffffff9dd])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1999 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -1571 [0xfffffffffffff9dd])
        (nil)))
(insn 198 259 199 19 (set (reg:SI 196)
        (and:SI (subreg:SI (reg:HI 195 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 194) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1999 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 195 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 194)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 195 [ LMIC.opmode ]) 0)
                    (const_int -1571 [0xfffffffffffff9dd]))
                (nil)))))
(insn 199 198 200 19 (set (mem/j/c:HI (plus:SI (reg/f:SI 192)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 196) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1999 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_DEAD (reg/f:SI 192)
            (nil))))
(insn 200 199 201 19 (set (reg:SI 10 a10)
        (const_int 11 [0xb])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2000 44 {movsi_internal}
     (nil))
(call_insn 201 200 255 19 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2000 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(jump_insn 255 201 256 19 (set (pc)
        (label_ref 243)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2001 78 {jump}
     (nil)
 -> 243)
;;  succ:       26 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 256 255 246)
;; basic block 20, loop depth 0, count 0, freq 1840, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       14 [71.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u209(1){ }u210(7){ }u211(16){ }u212(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 246 256 245 20 319 "" [1 uses])
(note 245 246 6 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 6 245 257 20 (set (reg/v:SI 42 [ ev ])
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1961 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(jump_insn 257 6 258 20 (set (pc)
        (label_ref 204)) 78 {jump}
     (nil)
 -> 204)
;;  succ:       22 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 258 257 250)
;; basic block 21, loop depth 0, count 0, freq 5035, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       18 [79.3%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u213(1){ }u214(7){ }u215(16){ }u216(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 250 258 249 21 320 "" [1 uses])
(note 249 250 5 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 5 249 204 21 (set (reg/v:SI 42 [ ev ])
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1990 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 3 [0x3])
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 22, loop depth 0, count 0, freq 7626, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       15 [100.0%] 
;;              21 [100.0%]  (FALLTHRU)
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u217(1){ }u218(7){ }u219(16){ }u220(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 95 96 98 99 197 198 202
(code_label 204 5 205 22 315 "" [2 uses])
(note 205 204 206 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 206 205 207 22 (var_location:SI ev (reg/v:SI 42 [ ev ])) -1
     (nil))
(insn 207 206 208 22 (set (reg/f:SI 197)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 208 207 209 22 (set (reg:SI 95 [ D.6348 ])
        (mem/j/c:SI (plus:SI (reg/f:SI 197)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 197)
                (const_int 404 [0x194])) [0 LMIC.bcninfo.txtime+0 S4 A32])
        (nil)))
(insn 209 208 210 22 (set (reg:SI 198)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC227") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 8000000 [0x7a1200])
        (nil)))
(insn 210 209 211 22 (set (reg:SI 96 [ D.6348 ])
        (plus:SI (reg:SI 95 [ D.6348 ])
            (reg:SI 198))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 95 [ D.6348 ])
            (nil))))
(insn 211 210 212 22 (set (reg:SI 11 a11)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (nil))
(insn 212 211 213 22 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (nil))
(call_insn 213 212 214 22 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("calcRxWindow") [flags 0x3]  <function_decl 0x100b66798 calcRxWindow>) [0 calcRxWindow S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 214 213 215 22 NOTE_INSN_DELETED)
(insn 215 214 217 22 (set (reg:SI 98 [ D.6348 ])
        (minus:SI (reg:SI 96 [ D.6348 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 4 {subsi3}
     (expr_list:REG_DEAD (reg:SI 96 [ D.6348 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 197)
                        (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])
                (nil)))))
(insn 217 215 219 22 (set (mem/j/c:SI (plus:SI (reg/f:SI 197)
                (const_int 400 [0x190])) [0 LMIC.bcnRxtime+0 S4 A32])
        (reg:SI 98 [ D.6348 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2004 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ D.6348 ])
        (nil)))
(insn 219 217 221 22 (set (reg:SI 99 [ D.6347 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 197)
                    (const_int 16 [0x10])) [0 LMIC.rxsyms+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2005 34 {zero_extendqisi2}
     (nil))
(insn 221 219 222 22 (set:SI (reg/f:SI 202)
        (plus:SI (reg/f:SI 197)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2005 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 197)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 222 221 223 22 (set (mem/j/c:QI (plus:SI (reg/f:SI 202)
                (const_int 141 [0x8d])) [0 LMIC.bcnRxsyms+0 S1 A8])
        (subreg/s/v:QI (reg:SI 99 [ D.6347 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2005 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_DEAD (reg:SI 99 [ D.6347 ])
            (nil))))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 23, loop depth 0, count 0, freq 8685, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u237(1){ }u238(7){ }u239(16){ }u240(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 100 203
(code_label 223 222 224 23 310 ("rev") [1 uses])
(note 224 223 225 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 23 (var_location:SI ev (reg/v:SI 42 [ ev ])) -1
     (nil))
(insn 226 225 227 23 (set (reg/f:SI 203)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC225") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2011 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 227 226 228 23 (set (reg:SI 100 [ D.6352 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 203)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2011 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 203)
        (nil)))
(note 228 227 229 23 NOTE_INSN_DELETED)
(note 229 228 231 23 NOTE_INSN_DELETED)
(note 231 229 232 23 NOTE_INSN_DELETED)
(jump_insn 232 231 233 23 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 100 [ D.6352 ])
                    (const_int 1 [0x1])
                    (const_int 9 [0x9]))
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2011 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 100 [ D.6352 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 237)
;;  succ:       24 [29.0%]  (FALLTHRU)
;;              25 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 24, loop depth 0, count 0, freq 2519, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 [29.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u248(1){ }u249(7){ }u250(16){ }u251(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 233 232 234 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 234 233 235 24 NOTE_INSN_DELETED)
(insn 235 234 236 24 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC229") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2012 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 312 [0x138])))
        (nil)))
(call_insn 236 235 237 24 (call (mem:SI (symbol_ref:SI ("rxschedInit") [flags 0x3]  <function_decl 0x100b66a20 rxschedInit>) [0 rxschedInit S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2012 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 25, loop depth 0, count 0, freq 8685, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       23 [71.0%] 
;;              24 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u255(1){ }u256(7){ }u257(16){ }u258(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 237 236 238 25 318 "" [1 uses])
(note 238 237 239 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 25 (set (reg:SI 10 a10)
        (reg/v:SI 42 [ ev ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2014 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 [ ev ])
        (nil)))
(call_insn 240 239 243 25 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2014 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 1, flags: (RTL)
;;  pred:       25 [100.0%]  (FALLTHRU)
;;              19 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u262(1){ }u263(7){ }u264(16){ }u265(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 243 240 244 26 307 "" [1 uses])
(note 244 243 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processJoinAccept (processJoinAccept, funcdef_no=78, decl_uid=3776, cgraph_uid=78, symbol_order=86)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 61 count 48 (  1.1)
scanning new insn with uid = 375.
verify found no changes in insn with uid = 375.
deleting insn with uid = 329.
scanning new insn with uid = 376.
verify found no changes in insn with uid = 376.
deleting insn with uid = 328.
scanning new insn with uid = 377.
verify found no changes in insn with uid = 377.
deleting insn with uid = 246.
scanning new insn with uid = 378.
verify found no changes in insn with uid = 378.
deleting insn with uid = 136.
scanning new insn with uid = 379.
verify found no changes in insn with uid = 379.
deleting insn with uid = 88.
scanning new insn with uid = 380.
verify found no changes in insn with uid = 380.
deleting insn with uid = 77.
scanning new insn with uid = 381.
verify found no changes in insn with uid = 381.
deleting insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 61 count 48 (  1.1)
Reg 100 uninteresting
Reg 101: local to bb 2 def dominates all uses has unique first use
Reg 102 uninteresting
Reg 47 uninteresting
Reg 104 uninteresting
Reg 48 uninteresting
Reg 110 uninteresting
Reg 111 uninteresting
Reg 51 uninteresting
Reg 112 uninteresting
Reg 122 uninteresting
Reg 124 uninteresting
Reg 126 uninteresting
Reg 90: def dominates all uses has unique first use
Reg 129 uninteresting
Reg 131: local to bb 11 def dominates all uses has unique first use
Reg 130 uninteresting
Reg 133 uninteresting
Reg 134: local to bb 13 def dominates all uses has unique first use
Reg 132 uninteresting
Reg 93: local to bb 13 def dominates all uses has unique first use
Reg 95: def dominates all uses has unique first use
Reg 136 uninteresting
Reg 137 uninteresting
Reg 52: def dominates all uses has unique first use
Reg 54: def dominates all uses has unique first use
Reg 141: local to bb 17 def dominates all uses has unique first use
Reg 142 uninteresting
Reg 139: local to bb 17 def dominates all uses has unique first use
Reg 144 uninteresting
Reg 149 uninteresting
Reg 151 uninteresting
Reg 152 uninteresting
Reg 153 uninteresting
Reg 82 uninteresting
Reg 163 uninteresting
Ignoring reg 66, has equiv memory
Reg 166 uninteresting
Reg 167 uninteresting
Reg 168: local to bb 24 def dominates all uses has unique first use
Reg 170 uninteresting
Reg 169 uninteresting
Reg 69 uninteresting
Reg 172 uninteresting
Reg 173 uninteresting
Reg 174 uninteresting
Reg 72 uninteresting
Reg 178: local to bb 29 def dominates all uses has unique first use
Reg 75: local to bb 29 def dominates all uses has unique first use
Reg 181 uninteresting
Reg 186 uninteresting
Reg 191 uninteresting
Reg 193 uninteresting
Reg 55 uninteresting
Reg 97: local to bb 33 def dominates all uses has unique first use
Reg 194 uninteresting
Reg 195 uninteresting
Reg 196 uninteresting
Reg 98: def dominates all uses has unique first use
Reg 197 uninteresting
Reg 198: local to bb 38 def dominates all uses has unique first use
Reg 199 uninteresting
Reg 200 uninteresting
Reg 202: local to bb 38 def dominates all uses has unique first use
Reg 203 uninteresting
Reg 79 uninteresting
Reg 208 uninteresting
Reg 81 uninteresting
Reg 215: local to bb 39 def dominates all uses has unique first use
Reg 213 uninteresting
Reg 214 uninteresting
Reg 52 not local to one basic block
Reg 54 not local to one basic block
Found def insn 245 for 75 to be not moveable
Reg 90 not local to one basic block
Found def insn 93 for 93 to be not moveable
Reg 95 not local to one basic block
Found def insn 281 for 97 to be not moveable
Reg 98 not local to one basic block
Found def insn 14 for 101 to be not moveable
Examining insn 78, def for 131
  all ok
Examining insn 90, def for 134
  all ok
Examining insn 123, def for 139
  all ok
Ignoring reg 141 with equiv init insn
Examining insn 192, def for 168
  all ok
Examining insn 237, def for 178
  all ok
Ignoring reg 198 with equiv init insn
Ignoring reg 202 with equiv init insn
Ignoring reg 215 with equiv init insn
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
;;
;; Loop 2
;;  header 36, latch 35
;;  depth 1, outer 0
;;  nodes: 36 35 33 34
;;
;; Loop 1
;;  header 28, latch 26
;;  depth 1, outer 0
;;  nodes: 28 26 24 25
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 17 }
;; 7 succs { 8 13 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 42 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 42 }
;; 17 succs { 19 18 }
;; 18 succs { 19 21 }
;; 19 succs { 20 7 }
;; 20 succs { 41 }
;; 21 succs { 19 22 }
;; 22 succs { 27 23 }
;; 23 succs { 29 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 24 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 38 }
;; 32 succs { 36 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 33 37 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 66: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 102: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 112: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 65 (nil))
init_insns for 124: (insn_list:REG_DEP_TRUE 381 (nil))
init_insns for 129: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 130: (insn_list:REG_DEP_TRUE 380 (nil))
init_insns for 132: (insn_list:REG_DEP_TRUE 379 (nil))
init_insns for 133: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 112 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 113 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 121 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 122 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 378 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 142 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 143 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 171 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 177 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 184 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 191 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 193 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 232 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 377 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 258 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 266 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 279 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 282 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 300 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 304 (nil))
init_insns for 199: (insn_list:REG_DEP_TRUE 305 (nil))
init_insns for 202: (insn_list:REG_DEP_TRUE 309 (nil))
init_insns for 203: (insn_list:REG_DEP_TRUE 310 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 376 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 375 (nil))
init_insns for 215: (insn_list:REG_DEP_TRUE 330 (nil))

Pass 0 for finding pseudo/allocno costs

    r215: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r215,l0) best AR_REGS, allocno AR_REGS
    r214: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r214,l0) best AR_REGS, allocno AR_REGS
    r213: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r213,l0) best AR_REGS, allocno AR_REGS
    r208: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r208,l0) best AR_REGS, allocno AR_REGS
    r203: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r203,l0) best AR_REGS, allocno AR_REGS
    r202: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r202,l0) best AR_REGS, allocno AR_REGS
    r200: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r200,l0) best AR_REGS, allocno AR_REGS
    r199: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r199,l0) best AR_REGS, allocno AR_REGS
    r198: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r198,l0) best AR_REGS, allocno AR_REGS
    r197: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r197,l0) best AR_REGS, allocno AR_REGS
    r196: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r196,l2) best AR_REGS, allocno AR_REGS
    r195: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r195,l2) best AR_REGS, allocno AR_REGS
    r194: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r194,l2) best AR_REGS, allocno AR_REGS
    r193: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r193,l2) best AR_REGS, allocno AR_REGS
    r191: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r191,l0) best AR_REGS, allocno AR_REGS
    r186: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r186,l0) best AR_REGS, allocno AR_REGS
    r181: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r181,l0) best AR_REGS, allocno AR_REGS
    r178: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r178,l0) best AR_REGS, allocno AR_REGS
    r174: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r174,l0) best AR_REGS, allocno AR_REGS
    r173: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r173,l1) best AR_REGS, allocno AR_REGS
    r172: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a82 (r172,l1) best AR_REGS, allocno AR_REGS
    r170: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a85 (r170,l1) best AR_REGS, allocno AR_REGS
    r169: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a84 (r169,l1) best AR_REGS, allocno AR_REGS
    r168: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a86 (r168,l1) best AR_REGS, allocno AR_REGS
    r167: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a87 (r167,l1) best AR_REGS, allocno AR_REGS
    r166: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r166,l0) best AR_REGS, allocno AR_REGS
    r163: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r163,l0) best AR_REGS, allocno AR_REGS
    r161: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r161,l0) best AR_REGS, allocno AR_REGS
    r153: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r153,l0) best AR_REGS, allocno AR_REGS
    r152: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r152,l0) best AR_REGS, allocno AR_REGS
    r151: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r151,l0) best AR_REGS, allocno AR_REGS
    r149: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r149,l0) best AR_REGS, allocno AR_REGS
    r145: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r145,l0) best AR_REGS, allocno AR_REGS
    r144: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r144,l0) best AR_REGS, allocno AR_REGS
    r142: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r142,l0) best AR_REGS, allocno AR_REGS
    r141: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r141,l0) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r140,l0) best AR_REGS, allocno AR_REGS
    r139: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r139,l0) best AR_REGS, allocno AR_REGS
    r137: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r137,l0) best AR_REGS, allocno AR_REGS
    r136: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r136,l0) best AR_REGS, allocno AR_REGS
    r134: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r134,l0) best AR_REGS, allocno AR_REGS
    r133: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r133,l0) best AR_REGS, allocno AR_REGS
    r132: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r132,l0) best AR_REGS, allocno AR_REGS
    r131: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r131,l0) best AR_REGS, allocno AR_REGS
    r130: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r130,l0) best AR_REGS, allocno AR_REGS
    r129: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r129,l0) best AR_REGS, allocno AR_REGS
    r126: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r126,l0) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r125,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r124,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r122,l0) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r112,l0) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r111,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r110,l0) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r104,l0) best AR_REGS, allocno AR_REGS
    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a66 (r102,l0) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a67 (r101,l0) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r100,l0) best AR_REGS, allocno AR_REGS
    r98: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r98,l2) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r97,l2) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r95,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r93,l0) best AR_REGS, allocno AR_REGS
    r90: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r90,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r85,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r83,l2) best AR_REGS, allocno AR_REGS
    a15 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r82,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r81,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r79,l0) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r77,l2) best AR_REGS, allocno AR_REGS
    a12 (r77,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r75,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r72,l0) best AR_REGS, allocno AR_REGS
    r69: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a83 (r69,l1) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r66,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r55,l2) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r54,l0) best AR_REGS, allocno AR_REGS
    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r49,l2) best AR_REGS, allocno AR_REGS
    a14 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r43,l1) best AR_REGS, allocno AR_REGS
    a24 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r42,l1) best AR_REGS, allocno AR_REGS
    a23 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r44,l0) costs: ACC_REG:5994,5994 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31968,31968 MEM:7992,7992
  a1(r214,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a2(r215,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:40,40
  a3(r213,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:0,0
  a4(r81,l0) costs: ACC_REG:81,81 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:432,432 MEM:108,108
  a5(r202,l0) costs: ACC_REG:162,162 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:864,864 MEM:216,216
  a6(r208,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a7(r79,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a8(r203,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a9(r198,l0) costs: ACC_REG:81,81 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:432,432 MEM:36,36
  a10(r200,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a11(r199,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a12(r77,l0) costs: ACC_REG:81,81 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:432,432 MEM:108,108
  a13(r197,l0) costs: ACC_REG:30,30 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,160 MEM:0,0
  a14(r49,l0) costs: ACC_REG:30,396 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:160,2112 MEM:40,528
  a15(r83,l0) costs: ACC_REG:15,495 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80,2640 MEM:20,660
  a16(r191,l0) costs: ACC_REG:45,45 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:240,240 MEM:20,20
  a17(r186,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:0,0
  a18(r181,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a19(r75,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a20(r174,l0) costs: ACC_REG:81,81 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:432,432 MEM:36,36
  a21(r178,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a22(r72,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a23(r42,l0) costs: ACC_REG:15,231 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80,1232 MEM:20,308
  a24(r43,l0) costs: ACC_REG:15,288 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:80,1536 MEM:20,384
  a25(r51,l0) costs: ACC_REG:10629,10629 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:56688,56688 MEM:14172,14172
  a26(r166,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a27(r161,l0) costs: ACC_REG:81,81 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:432,432 MEM:36,36
  a28(r66,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:72,72
  a29(r163,l0) costs: ACC_REG:54,54 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:288,288 MEM:0,0
  a30(r54,l0) costs: ACC_REG:1602,1602 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8544,8544 MEM:2136,2136
  a31(r82,l0) costs: ACC_REG:2940,2940 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15680,15680 MEM:3920,3920
  a32(r153,l0) costs: ACC_REG:2940,2940 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15680,15680 MEM:3920,3920
  a33(r152,l0) costs: ACC_REG:2940,2940 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15680,15680 MEM:0,0
  a34(r151,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a35(r149,l0) costs: ACC_REG:1500,1500 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8000,8000 MEM:2000,2000
  a36(r52,l0) costs: ACC_REG:2250,2250 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12000,12000 MEM:3000,3000
  a37(r139,l0) costs: ACC_REG:4000,4000 RL_REGS:1000,1000 AR_REGS:1000,1000 ALL_REGS:17000,17000 MEM:5000,5000
  a38(r144,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a39(r142,l0) costs: ACC_REG:5500,5500 RL_REGS:1000,1000 AR_REGS:1000,1000 ALL_REGS:25000,25000 MEM:7000,7000
  a40(r141,l0) costs: ACC_REG:5500,5500 RL_REGS:1000,1000 AR_REGS:1000,1000 ALL_REGS:25000,25000 MEM:7000,7000
  a41(r145,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a42(r140,l0) costs: ACC_REG:4000,4000 RL_REGS:1000,1000 AR_REGS:1000,1000 ALL_REGS:17000,17000 MEM:5000,5000
  a43(r137,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a44(r136,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a45(r95,l0) costs: ACC_REG:1386,1386 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7392,7392 MEM:1848,1848
  a46(r45,l0) costs: ACC_REG:1386,1386 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7392,7392 MEM:1848,1848
  a47(r93,l0) costs: ACC_REG:2079,2079 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11088,11088 MEM:2772,2772
  a48(r132,l0) costs: ACC_REG:1386,1386 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7392,7392 MEM:0,0
  a49(r134,l0) costs: ACC_REG:1386,1386 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7392,7392 MEM:1848,1848
  a50(r133,l0) costs: ACC_REG:1386,1386 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7392,7392 MEM:1848,1848
  a51(r85,l0) costs: ACC_REG:7182,7182 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38304,38304 MEM:9576,9576
  a52(r130,l0) costs: ACC_REG:2076,2076 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11072,11072 MEM:0,0
  a53(r131,l0) costs: ACC_REG:2076,2076 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11072,11072 MEM:2768,2768
  a54(r90,l0) costs: ACC_REG:4440,4440 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:23680,23680 MEM:5920,5920
  a55(r129,l0) costs: ACC_REG:3402,3402 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18144,18144 MEM:4536,4536
  a56(r122,l0) costs: ACC_REG:6804,6804 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:36288,36288 MEM:4536,4536
  a57(r126,l0) costs: ACC_REG:3402,3402 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18144,18144 MEM:4536,4536
  a58(r124,l0) costs: ACC_REG:3402,3402 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18144,18144 MEM:4536,4536
  a59(r125,l0) costs: ACC_REG:3402,3402 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18144,18144 MEM:4536,4536
  a60(r112,l0) costs: ACC_REG:4788,4788 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25536,25536 MEM:0,0
  a61(r111,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a62(r110,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a63(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a64(r104,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a65(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a66(r102,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a67(r101,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a68(r100,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a69(r49,l2) costs: ACC_REG:366,366 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1952,1952 MEM:488,488
  a70(r77,l2) costs: ACC_REG:0,0 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a71(r83,l2) costs: ACC_REG:480,480 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2560,2560 MEM:640,640
  a72(r98,l2) costs: ACC_REG:315,315 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1680,1680 MEM:420,420
  a73(r196,l2) costs: ACC_REG:330,330 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1760,1760 MEM:440,440
  a74(r195,l2) costs: ACC_REG:216,216 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1152,1152 MEM:288,288
  a75(r194,l2) costs: ACC_REG:300,300 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1600,1600 MEM:400,400
  a76(r97,l2) costs: ACC_REG:300,300 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1600,1600 MEM:400,400
  a77(r55,l2) costs: ACC_REG:300,300 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1600,1600 MEM:400,400
  a78(r193,l2) costs: ACC_REG:300,300 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1600,1600 MEM:0,0
  a79(r42,l1) costs: ACC_REG:216,216 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1152,1152 MEM:288,288
  a80(r43,l1) costs: ACC_REG:273,273 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1456,1456 MEM:364,364
  a81(r173,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192
  a82(r172,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192
  a83(r69,l1) costs: ACC_REG:186,186 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:992,992 MEM:248,248
  a84(r169,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192
  a85(r170,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:0,0
  a86(r168,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192
  a87(r167,l1) costs: ACC_REG:144,144 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:768,768 MEM:192,192

   Insn 343(l0): point = 0
   Insn 342(l0): point = 2
   Insn 9(l0): point = 5
   Insn 373(l0): point = 8
   Insn 10(l0): point = 10
   Insn 335(l0): point = 12
   Insn 334(l0): point = 14
   Insn 331(l0): point = 17
   Insn 375(l0): point = 19
   Insn 376(l0): point = 21
   Insn 330(l0): point = 23
   Insn 326(l0): point = 26
   Insn 325(l0): point = 28
   Insn 322(l0): point = 30
   Insn 319(l0): point = 32
   Insn 318(l0): point = 34
   Insn 315(l0): point = 36
   Insn 312(l0): point = 38
   Insn 311(l0): point = 40
   Insn 310(l0): point = 42
   Insn 309(l0): point = 44
   Insn 307(l0): point = 46
   Insn 306(l0): point = 48
   Insn 305(l0): point = 50
   Insn 304(l0): point = 52
   Insn 301(l0): point = 55
   Insn 300(l0): point = 57
   Insn 371(l0): point = 60
   Insn 269(l0): point = 62
   Insn 267(l0): point = 64
   Insn 266(l0): point = 66
   Insn 264(l0): point = 69
   Insn 259(l0): point = 71
   Insn 258(l0): point = 73
   Insn 255(l0): point = 76
   Insn 254(l0): point = 78
   Insn 253(l0): point = 80
   Insn 250(l0): point = 83
   Insn 377(l0): point = 85
   Insn 245(l0): point = 87
   Insn 243(l0): point = 89
   Insn 242(l0): point = 91
   Insn 241(l0): point = 93
   Insn 240(l0): point = 95
   Insn 239(l0): point = 97
   Insn 237(l0): point = 99
   Insn 233(l0): point = 101
   Insn 232(l0): point = 103
   Insn 6(l0): point = 106
   Insn 5(l0): point = 108
   Insn 367(l0): point = 111
   Insn 185(l0): point = 114
   Insn 184(l0): point = 116
   Insn 182(l0): point = 118
   Insn 181(l0): point = 120
   Insn 180(l0): point = 122
   Insn 178(l0): point = 124
   Insn 177(l0): point = 126
   Insn 175(l0): point = 128
   Insn 174(l0): point = 130
   Insn 172(l0): point = 132
   Insn 171(l0): point = 134
   Insn 168(l0): point = 136
   Insn 167(l0): point = 138
   Insn 364(l0): point = 141
   Insn 361(l0): point = 144
   Insn 8(l0): point = 146
   Insn 107(l0): point = 148
   Insn 106(l0): point = 150
   Insn 105(l0): point = 152
   Insn 104(l0): point = 154
   Insn 4(l0): point = 157
   Insn 359(l0): point = 160
   Insn 3(l0): point = 162
   Insn 99(l0): point = 165
   Insn 97(l0): point = 167
   Insn 95(l0): point = 169
   Insn 93(l0): point = 171
   Insn 92(l0): point = 173
   Insn 91(l0): point = 175
   Insn 379(l0): point = 177
   Insn 90(l0): point = 179
   Insn 89(l0): point = 181
   Insn 357(l0): point = 184
   Insn 7(l0): point = 186
   Insn 83(l0): point = 188
   Insn 82(l0): point = 190
   Insn 79(l0): point = 193
   Insn 380(l0): point = 195
   Insn 78(l0): point = 197
   Insn 75(l0): point = 200
   Insn 74(l0): point = 202
   Insn 72(l0): point = 204
   Insn 70(l0): point = 206
   Insn 69(l0): point = 208
   Insn 381(l0): point = 210
   Insn 68(l0): point = 212
   Insn 65(l0): point = 214
   Insn 62(l0): point = 217
   Insn 61(l0): point = 219
   Insn 60(l0): point = 221
   Insn 57(l0): point = 224
   Insn 51(l0): point = 227
   Insn 46(l0): point = 229
   Insn 45(l0): point = 231
   Insn 148(l0): point = 234
   Insn 144(l0): point = 236
   Insn 143(l0): point = 238
   Insn 142(l0): point = 240
   Insn 134(l0): point = 243
   Insn 129(l0): point = 245
   Insn 126(l0): point = 247
   Insn 123(l0): point = 249
   Insn 122(l0): point = 251
   Insn 121(l0): point = 253
   Insn 120(l0): point = 255
   Insn 118(l0): point = 257
   Insn 114(l0): point = 259
   Insn 113(l0): point = 261
   Insn 112(l0): point = 263
   Insn 139(l0): point = 266
   Insn 138(l0): point = 268
   Insn 378(l0): point = 270
   Insn 164(l0): point = 273
   Insn 162(l0): point = 275
   Insn 161(l0): point = 277
   Insn 160(l0): point = 279
   Insn 158(l0): point = 281
   Insn 157(l0): point = 283
   Insn 156(l0): point = 285
   Insn 42(l0): point = 288
   Insn 41(l0): point = 290
   Insn 40(l0): point = 292
   Insn 39(l0): point = 294
   Insn 36(l0): point = 297
   Insn 35(l0): point = 299
   Insn 34(l0): point = 301
   Insn 31(l0): point = 304
   Insn 26(l0): point = 306
   Insn 25(l0): point = 308
   Insn 22(l0): point = 311
   Insn 21(l0): point = 313
   Insn 20(l0): point = 315
   Insn 17(l0): point = 318
   Insn 16(l0): point = 320
   Insn 15(l0): point = 322
   Insn 14(l0): point = 324
   Insn 13(l0): point = 326
   Insn 283(l2): point = 329
   Insn 282(l2): point = 331
   Insn 281(l2): point = 333
   Insn 280(l2): point = 335
   Insn 279(l2): point = 337
   Insn 298(l2): point = 340
   Insn 295(l2): point = 342
   Insn 294(l2): point = 344
   Insn 289(l2): point = 347
   Insn 286(l2): point = 350
   Insn 285(l2): point = 352
   Insn 200(l1): point = 355
   Insn 198(l1): point = 357
   Insn 197(l1): point = 359
   Insn 196(l1): point = 361
   Insn 194(l1): point = 363
   Insn 193(l1): point = 365
   Insn 192(l1): point = 367
   Insn 191(l1): point = 369
   Insn 229(l1): point = 372
   Insn 369(l1): point = 375
   Insn 222(l1): point = 377
   Insn 221(l1): point = 379
   Insn 219(l1): point = 381
   Insn 218(l1): point = 383
   Insn 215(l1): point = 386
   Insn 214(l1): point = 388
   Insn 213(l1): point = 390
   Insn 212(l1): point = 392
   Insn 211(l1): point = 394
   Insn 208(l1): point = 396
   Insn 207(l1): point = 398
   Insn 206(l1): point = 400
   Insn 205(l1): point = 402
   Insn 204(l1): point = 404
   Insn 203(l1): point = 406
 a0(r44): [184..186] [144..146] [8..10] [3..5]
 a1(r214): [18..19]
 a2(r215): [18..23]
 a3(r213): [20..21]
 a4(r81): [27..30]
 a5(r202): [29..44]
 a6(r208): [33..34]
 a7(r79): [35..36]
 a8(r203): [41..42]
 a9(r198): [45..52]
 a10(r200): [47..48]
 a11(r199): [49..50]
 a12(r77): [49..71]
 a13(r197): [56..57]
 a14(r49): [56..64]
 a15(r83): [60..62]
 a16(r191): [63..66]
 a17(r186): [72..73]
 a18(r181): [84..85]
 a19(r75): [84..87]
 a20(r174): [88..103]
 a21(r178): [92..99]
 a22(r72): [100..101]
 a23(r42): [106..106]
 a24(r43): [106..108]
 a25(r51): [243..290] [115..140]
 a26(r166): [115..116]
 a27(r161): [123..134]
 a28(r66): [123..124]
 a29(r163): [125..126]
 a30(r54): [280..287] [266..272] [243..257]
 a31(r82): [235..236]
 a32(r153): [237..238]
 a33(r152): [239..240]
 a34(r151): [267..268]
 a35(r149): [269..270]
 a36(r52): [269..272] [243..259]
 a37(r139): [244..249]
 a38(r144): [244..245]
 a39(r142): [246..251]
 a40(r141): [246..253]
 a41(r145): [246..247]
 a42(r140): [250..255]
 a43(r137): [260..261]
 a44(r136): [262..263]
 a45(r95): [153..167]
 a46(r45): [160..162] [155..157]
 a47(r93): [166..171]
 a48(r132): [176..177]
 a49(r134): [176..179]
 a50(r133): [180..181]
 a51(r85): [225..229] [180..183]
 a52(r130): [194..195]
 a53(r131): [194..197]
 a54(r90): [198..204]
 a55(r129): [201..202]
 a56(r122): [205..214]
 a57(r126): [207..208]
 a58(r124): [209..210]
 a59(r125): [209..212]
 a60(r112): [230..231]
 a61(r111): [291..292]
 a62(r110): [293..294]
 a63(r48): [305..306]
 a64(r104): [307..308]
 a65(r47): [319..320]
 a66(r102): [321..322]
 a67(r101): [321..324]
 a68(r100): [325..326]
 a69(r49): [353..354] [329..350]
 a70(r77): [329..354]
 a71(r83): [341..347]
 a72(r98): [348..354] [329..342]
 a73(r196): [343..344]
 a74(r195): [351..352]
 a75(r194): [330..331]
 a76(r97): [330..333]
 a77(r55): [334..335]
 a78(r193): [336..337]
 a79(r42): [380..408] [355..377]
 a80(r43): [384..408] [355..381]
 a81(r173): [378..379]
 a82(r172): [382..383]
 a83(r69): [395..408] [355..357]
 a84(r169): [362..363]
 a85(r170): [364..365]
 a86(r168): [364..367]
 a87(r167): [368..369]
 Rebuilding regno allocno list for 196
 Rebuilding regno allocno list for 195
 Rebuilding regno allocno list for 194
 Rebuilding regno allocno list for 193
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 172
 Rebuilding regno allocno list for 170
 Rebuilding regno allocno list for 169
 Rebuilding regno allocno list for 168
 Rebuilding regno allocno list for 167
 Rebuilding regno allocno list for 98
 Rebuilding regno allocno list for 97
      Moving ranges of a71r83 to a15r83:  [341..347]
      Moving ranges of a70r77 to a12r77:  [329..354]
 Rebuilding regno allocno list for 69
 Rebuilding regno allocno list for 55
      Moving ranges of a69r49 to a14r49:  [353..354] [329..350]
      Moving ranges of a80r43 to a24r43:  [384..408] [355..381]
      Moving ranges of a79r42 to a23r42:  [380..408] [355..377]
Compressing live ranges: from 409 to 136 - 33%
Ranges after the compression:
 a0(r44): [54..55] [42..43] [0..3]
 a1(r214): [4..5]
 a2(r215): [4..7]
 a3(r213): [6..7]
 a4(r81): [8..9]
 a5(r202): [8..15]
 a6(r208): [10..11]
 a7(r79): [12..13]
 a8(r203): [14..15]
 a9(r198): [16..19]
 a10(r200): [16..17]
 a11(r199): [18..19]
 a12(r77): [104..119] [18..25]
 a13(r197): [20..21]
 a14(r49): [118..119] [104..115] [20..25]
 a15(r83): [110..113] [22..23]
 a16(r191): [24..25]
 a17(r186): [26..27]
 a18(r181): [28..29]
 a19(r75): [28..29]
 a20(r174): [30..33]
 a21(r178): [30..31]
 a22(r72): [32..33]
 a23(r42): [130..135] [120..127] [34..34]
 a24(r43): [134..135] [120..131] [34..35]
 a25(r51): [74..89] [36..41]
 a26(r166): [36..37]
 a27(r161): [38..41]
 a28(r66): [38..39]
 a29(r163): [40..41]
 a30(r54): [84..89] [74..79]
 a31(r82): [68..69]
 a32(r153): [70..71]
 a33(r152): [72..73]
 a34(r151): [84..85]
 a35(r149): [86..87]
 a36(r52): [86..87] [74..79]
 a37(r139): [74..77]
 a38(r144): [74..75]
 a39(r142): [76..79]
 a40(r141): [76..79]
 a41(r145): [76..77]
 a42(r140): [78..79]
 a43(r137): [80..81]
 a44(r136): [82..83]
 a45(r95): [44..49]
 a46(r45): [44..47]
 a47(r93): [48..49]
 a48(r132): [50..51]
 a49(r134): [50..51]
 a50(r133): [52..53]
 a51(r85): [64..65] [52..53]
 a52(r130): [56..57]
 a53(r131): [56..57]
 a54(r90): [58..59]
 a55(r129): [58..59]
 a56(r122): [60..63]
 a57(r126): [60..61]
 a58(r124): [62..63]
 a59(r125): [62..63]
 a60(r112): [66..67]
 a61(r111): [90..91]
 a62(r110): [92..93]
 a63(r48): [94..95]
 a64(r104): [96..97]
 a65(r47): [98..99]
 a66(r102): [100..101]
 a67(r101): [100..101]
 a68(r100): [102..103]
 a72(r98): [114..119] [104..111]
 a73(r196): [112..113]
 a74(r195): [116..117]
 a75(r194): [104..105]
 a76(r97): [104..105]
 a77(r55): [106..107]
 a78(r193): [108..109]
 a81(r173): [128..129]
 a82(r172): [132..133]
 a83(r69): [134..135] [120..121]
 a84(r169): [122..123]
 a85(r170): [124..125]
 a86(r168): [124..125]
 a87(r167): [126..127]
+++Allocating 704 bytes for conflict table (uncompressed size 1408)
;; a0(r44,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r214,l0) conflicts: a2(r215,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r215,l0) conflicts: a1(r214,l0) a3(r213,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r213,l0) conflicts: a2(r215,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r81,l0) conflicts: a5(r202,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r202,l0) conflicts: a4(r81,l0) a6(r208,l0) a7(r79,l0) a8(r203,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a6(r208,l0) conflicts: a5(r202,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r79,l0) conflicts: a5(r202,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r203,l0) conflicts: a5(r202,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r198,l0) conflicts: a10(r200,l0) a11(r199,l0) a12(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r200,l0) conflicts: a9(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r199,l0) conflicts: a9(r198,l0) a12(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r77,l0) conflicts: a9(r198,l0) a11(r199,l0) a13(r197,l0) a14(r49,l0) a15(r83,l0) a16(r191,l0) a75(r194,l0) a76(r97,l0) a72(r98,l0) a77(r55,l0) a78(r193,l0) a73(r196,l0) a74(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r197,l0) conflicts: a12(r77,l0) a14(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r49,l0) conflicts: a12(r77,l0) a13(r197,l0) a15(r83,l0) a16(r191,l0) a75(r194,l0) a76(r97,l0) a72(r98,l0) a77(r55,l0) a78(r193,l0) a73(r196,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r83,l0) conflicts: a12(r77,l0) a14(r49,l0) a72(r98,l0) a73(r196,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r191,l0) conflicts: a12(r77,l0) a14(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r186,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r181,l0) conflicts: a19(r75,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r75,l0) conflicts: a18(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r174,l0) conflicts: a21(r178,l0) a22(r72,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a21(r178,l0) conflicts: a20(r174,l0)
;;     total conflict hard regs: 11-13
;;     conflict hard regs: 11-13

;; a22(r72,l0) conflicts: a20(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r42,l0) conflicts: a24(r43,l0) a83(r69,l0) a84(r169,l0) a85(r170,l0) a86(r168,l0) a87(r167,l0) a82(r172,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a24(r43,l0) conflicts: a23(r42,l0) a83(r69,l0) a84(r169,l0) a85(r170,l0) a86(r168,l0) a87(r167,l0) a81(r173,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a25(r51,l0) conflicts: a26(r166,l0) a28(r66,l0) a27(r161,l0) a29(r163,l0) a38(r144,l0) a37(r139,l0) a36(r52,l0) a30(r54,l0) a41(r145,l0) a39(r142,l0) a40(r141,l0) a42(r140,l0) a43(r137,l0) a44(r136,l0) a34(r151,l0) a35(r149,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a26(r166,l0) conflicts: a25(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r161,l0) conflicts: a25(r51,l0) a28(r66,l0) a29(r163,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a28(r66,l0) conflicts: a25(r51,l0) a27(r161,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r163,l0) conflicts: a25(r51,l0) a27(r161,l0)
;;     total conflict hard regs: 10
;;     conflict hard regs: 10

;; a30(r54,l0) conflicts: a25(r51,l0) a38(r144,l0) a37(r139,l0) a36(r52,l0) a41(r145,l0) a39(r142,l0) a40(r141,l0) a42(r140,l0) a34(r151,l0) a35(r149,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a31(r82,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r153,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r152,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r151,l0) conflicts: a25(r51,l0) a30(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r149,l0) conflicts: a25(r51,l0) a36(r52,l0) a30(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r52,l0) conflicts: a25(r51,l0) a38(r144,l0) a37(r139,l0) a30(r54,l0) a41(r145,l0) a39(r142,l0) a40(r141,l0) a42(r140,l0) a35(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r139,l0) conflicts: a25(r51,l0) a38(r144,l0) a36(r52,l0) a30(r54,l0) a41(r145,l0) a39(r142,l0) a40(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r144,l0) conflicts: a25(r51,l0) a37(r139,l0) a36(r52,l0) a30(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r142,l0) conflicts: a25(r51,l0) a37(r139,l0) a36(r52,l0) a30(r54,l0) a41(r145,l0) a40(r141,l0) a42(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r141,l0) conflicts: a25(r51,l0) a37(r139,l0) a36(r52,l0) a30(r54,l0) a41(r145,l0) a39(r142,l0) a42(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r145,l0) conflicts: a25(r51,l0) a37(r139,l0) a36(r52,l0) a30(r54,l0) a39(r142,l0) a40(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r140,l0) conflicts: a25(r51,l0) a36(r52,l0) a30(r54,l0) a39(r142,l0) a40(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r137,l0) conflicts: a25(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r136,l0) conflicts: a25(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r95,l0) conflicts: a46(r45,l0) a47(r93,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a46(r45,l0) conflicts: a45(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r93,l0) conflicts: a45(r95,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a48(r132,l0) conflicts: a49(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r134,l0) conflicts: a48(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r133,l0) conflicts: a51(r85,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r85,l0) conflicts: a50(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r130,l0) conflicts: a53(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r131,l0) conflicts: a52(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r90,l0) conflicts: a55(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r129,l0) conflicts: a54(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r122,l0) conflicts: a57(r126,l0) a58(r124,l0) a59(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r126,l0) conflicts: a56(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r124,l0) conflicts: a56(r122,l0) a59(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r125,l0) conflicts: a56(r122,l0) a58(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r112,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r111,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r110,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r48,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r104,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r47,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r102,l0) conflicts: a67(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r101,l0) conflicts: a66(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r100,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r98,l0) conflicts: a12(r77,l0) a14(r49,l0) a15(r83,l0) a75(r194,l0) a76(r97,l0) a77(r55,l0) a78(r193,l0) a74(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r196,l0) conflicts: a12(r77,l0) a14(r49,l0) a15(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r195,l0) conflicts: a12(r77,l0) a72(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r194,l0) conflicts: a12(r77,l0) a14(r49,l0) a76(r97,l0) a72(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r97,l0) conflicts: a12(r77,l0) a14(r49,l0) a75(r194,l0) a72(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r55,l0) conflicts: a12(r77,l0) a14(r49,l0) a72(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r193,l0) conflicts: a12(r77,l0) a14(r49,l0) a72(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r173,l0) conflicts: a24(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r172,l0) conflicts: a23(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r69,l0) conflicts: a23(r42,l0) a24(r43,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a84(r169,l0) conflicts: a23(r42,l0) a24(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r170,l0) conflicts: a23(r42,l0) a24(r43,l0) a86(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r168,l0) conflicts: a23(r42,l0) a24(r43,l0) a85(r170,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r167,l0) conflicts: a23(r42,l0) a24(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r214)<->a3(r213)@1:shuffle
  cp1:a10(r200)<->a11(r199)@1:shuffle
  cp2:a10(r200)<->a12(r77)@1:shuffle
  cp3:a5(r202)<->a9(r198)@1:shuffle
  cp4:a6(r208)<->a7(r79)@1:shuffle
  cp5:a72(r98)<->a73(r196)@6:shuffle
  cp6:a14(r49)<->a74(r195)@8:shuffle
  cp7:a77(r55)<->a78(r193)@6:shuffle
  cp8:a21(r178)<->a22(r72)@1:shuffle
  cp9:a24(r43)<->a82(r172)@6:shuffle
  cp10:a23(r42)<->a81(r173)@6:shuffle
  cp11:a86(r168)<->a87(r167)@3:shuffle
  cp12:a84(r169)<->a85(r170)@3:shuffle
  cp13:a84(r169)<->a86(r168)@3:shuffle
  cp14:a28(r66)<->a29(r163)@1:shuffle
  cp15:a32(r153)<->a33(r152)@61:shuffle
  cp16:a34(r151)<->a35(r149)@31:shuffle
  cp17:a34(r151)<->a36(r52)@31:shuffle
  cp18:a43(r137)<->a44(r136)@62:shuffle
  cp19:a37(r139)<->a42(r140)@62:shuffle
  cp20:a38(r144)<->a41(r145)@62:shuffle
  cp21:a38(r144)<->a40(r141)@62:shuffle
  cp22:a38(r144)<->a39(r142)@62:shuffle
  cp23:a49(r134)<->a50(r133)@28:shuffle
  cp24:a49(r134)<->a51(r85)@28:shuffle
  cp25:a53(r131)<->a54(r90)@43:shuffle
  cp26:a57(r126)<->a58(r124)@70:shuffle
  cp27:a57(r126)<->a59(r125)@70:shuffle
  cp28:a61(r111)<->a62(r110)@125:shuffle
  cp29:a65(r47)<->a66(r102)@125:shuffle
  cp30:a65(r47)<->a67(r101)@125:shuffle
  pref0:a0(r44)<-hr2@2000
  pref1:a30(r54)<-hr11@68
  pref2:a46(r45)<-hr12@462
  pref3:a45(r95)<-hr11@462
  pref4:a47(r93)<-hr10@462
  pref5:a83(r69)<-hr11@7
  pref7:a24(r43)<-hr10@7
  pref8:a83(r69)<-hr13@14
  pref10:a24(r43)<-hr12@7
  pref11:a83(r69)<-hr10@48
  pref12:a21(r178)<-hr10@1
  pref13:a84(r169)<-hr10@3
  pref14:a28(r66)<-hr10@1
  pref15:a45(r95)<-hr10@28
  regions=3, blocks=43, points=136
    allocnos=88 (big 0), copies=31, conflicts=0, ranges=99

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 42 41 40 39 38 37 36 35 34 33 32 31 30 29 27 28 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r44 1r214 2r215 3r213 4r81 5r202 6r208 7r79 8r203 9r198 10r200 11r199 12r77 13r197 14r49 15r83 16r191 17r186 18r181 19r75 20r174 21r178 22r72 23r42 24r43 25r51 26r166 27r161 28r66 29r163 30r54 31r82 32r153 33r152 34r151 35r149 36r52 37r139 38r144 39r142 40r141 41r145 42r140 43r137 44r136 45r95 46r45 47r93 48r132 49r134 50r133 51r85 52r130 53r131 54r90 55r129 56r122 57r126 58r124 59r125 60r112 61r111 62r110 63r48 64r104 65r47 66r102 67r101 68r100 72r98 73r196 74r195 75r194 76r97 77r55 78r193 81r173 82r172 83r69 84r169 85r170 86r168 87r167
    modified regnos: 42 43 44 45 47 48 49 51 52 54 55 66 69 72 75 77 79 81 82 83 85 90 93 95 97 98 100 101 102 104 110 111 112 122 124 125 126 129 130 131 132 133 134 136 137 139 140 141 142 144 145 149 151 152 153 161 163 166 167 168 169 170 172 173 174 178 181 186 191 193 194 195 196 197 198 199 200 202 203 208 213 214 215
    border:
    Pressure: AR_REGS=7
 Removing pref10:hr12@7
 Removing pref7:hr10@7
 Removing pref1:hr11@68
 Removing pref4:hr10@462
 Removing pref11:hr10@48
 Removing pref8:hr13@14
 Removing pref5:hr11@7
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@287640
          2:( 2-11 13-15)@5544
            3:( 2-10 14 15)@148
              4:( 2-7)@42928
      Allocno a0r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r214 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r215 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r213 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r202 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a6r208 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r203 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r198 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r200 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r199 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r197 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r191 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r186 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r181 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r174 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a21r178 of AR_REGS(14) has 11 avail. regs  2-10 14 15, node:  2-10 14 15 (confl regs =  0 1 11-13 16-34)
      Allocno a22r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a23r42 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a24r43 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a25r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a26r166 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r161 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a28r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r163 of AR_REGS(14) has 13 avail. regs  2-9 11-15, ^node:  2-15 (confl regs =  0 1 10 16-34)
      Allocno a30r54 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a31r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r153 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r152 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r151 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r149 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r139 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r144 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r142 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r141 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r145 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r137 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r136 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r95 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a46r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r93 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a48r132 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r134 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r133 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r130 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r131 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r90 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r129 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r126 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a62r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a63r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r104 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a67r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r98 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r196 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r195 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r194 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a76r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a78r193 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a81r173 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a82r172 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a83r69 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a84r169 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a85r170 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a86r168 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a87r167 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 28:a61r111-a62r110 (freq=125):
        Result (freq=4000): a61r111(2000) a62r110(2000)
      Forming thread by copy 29:a65r47-a66r102 (freq=125):
        Result (freq=4000): a65r47(2000) a66r102(2000)
      Forming thread by copy 26:a57r126-a58r124 (freq=70):
        Result (freq=2268): a57r126(1134) a58r124(1134)
      Forming thread by copy 18:a43r137-a44r136 (freq=62):
        Result (freq=2000): a43r137(1000) a44r136(1000)
      Forming thread by copy 19:a37r139-a42r140 (freq=62):
        Result (freq=2000): a37r139(1000) a42r140(1000)
      Forming thread by copy 20:a38r144-a41r145 (freq=62):
        Result (freq=2000): a38r144(1000) a41r145(1000)
      Forming thread by copy 15:a32r153-a33r152 (freq=61):
        Result (freq=1960): a32r153(980) a33r152(980)
      Forming thread by copy 25:a53r131-a54r90 (freq=43):
        Result (freq=2172): a53r131(692) a54r90(1480)
      Forming thread by copy 16:a34r151-a35r149 (freq=31):
        Result (freq=1000): a34r151(500) a35r149(500)
      Forming thread by copy 23:a49r134-a50r133 (freq=28):
        Result (freq=924): a49r134(462) a50r133(462)
      Forming thread by copy 6:a14r49-a74r195 (freq=8):
        Result (freq=204): a14r49(132) a74r195(72)
      Forming thread by copy 5:a72r98-a73r196 (freq=6):
        Result (freq=215): a72r98(105) a73r196(110)
      Forming thread by copy 7:a77r55-a78r193 (freq=6):
        Result (freq=200): a77r55(100) a78r193(100)
      Forming thread by copy 11:a86r168-a87r167 (freq=3):
        Result (freq=96): a86r168(48) a87r167(48)
      Forming thread by copy 12:a84r169-a85r170 (freq=3):
        Result (freq=96): a84r169(48) a85r170(48)
      Forming thread by copy 0:a1r214-a3r213 (freq=1):
        Result (freq=20): a1r214(10) a3r213(10)
      Forming thread by copy 1:a10r200-a11r199 (freq=1):
        Result (freq=36): a10r200(18) a11r199(18)
      Forming thread by copy 3:a5r202-a9r198 (freq=1):
        Result (freq=81): a5r202(54) a9r198(27)
      Forming thread by copy 4:a6r208-a7r79 (freq=1):
        Result (freq=36): a6r208(18) a7r79(18)
      Forming thread by copy 8:a21r178-a22r72 (freq=1):
        Result (freq=36): a21r178(18) a22r72(18)
      Forming thread by copy 14:a28r66-a29r163 (freq=1):
        Result (freq=36): a28r66(18) a29r163(18)
      Pushing a13(r197,l0)(cost 0)
      Pushing a2(r215,l0)(cost 0)
      Pushing a16(r191,l0)(cost 0)
      Pushing a26(r166,l0)(cost 0)
      Pushing a19(r75,l0)(cost 0)
      Pushing a18(r181,l0)(cost 0)
      Pushing a17(r186,l0)(cost 0)
      Pushing a8(r203,l0)(cost 0)
      Pushing a3(r213,l0)(cost 0)
      Pushing a1(r214,l0)(cost 0)
      Pushing a27(r161,l0)(cost 0)
      Pushing a20(r174,l0)(cost 0)
      Pushing a12(r77,l0)(cost 0)
      Pushing a4(r81,l0)(cost 0)
      Pushing a28(r66,l0)(cost 0)
      Pushing a29(r163,l0)(cost 0)
      Pushing a22(r72,l0)(cost 0)
      Pushing a21(r178,l0)(cost 0)
      Pushing a11(r199,l0)(cost 0)
      Pushing a10(r200,l0)(cost 0)
      Pushing a7(r79,l0)(cost 0)
      Pushing a6(r208,l0)(cost 0)
      Pushing a82(r172,l0)(cost 0)
      Pushing a81(r173,l0)(cost 0)
      Pushing a83(r69,l0)(cost 0)
      Forming thread by copy 10:a23r42-a81r173 (freq=6):
        Result (freq=125): a23r42(77) a81r173(48)
        Making a23(r42,l0) colorable
      Forming thread by copy 9:a24r43-a82r172 (freq=6):
        Result (freq=144): a24r43(96) a82r172(48)
        Making a24(r43,l0) colorable
      Pushing a9(r198,l0)(cost 0)
      Pushing a5(r202,l0)(cost 0)
      Pushing a87(r167,l0)(cost 0)
      Pushing a86(r168,l0)(cost 0)
      Pushing a85(r170,l0)(cost 0)
      Pushing a84(r169,l0)(cost 0)
      Pushing a76(r97,l0)(cost 0)
      Pushing a75(r194,l0)(cost 0)
      Pushing a23(r42,l0)(cost 308)
      Pushing a24(r43,l0)(cost 384)
      Pushing a15(r83,l0)(cost 0)
      Pushing a78(r193,l0)(cost 0)
      Pushing a77(r55,l0)(cost 0)
      Pushing a74(r195,l0)(cost 0)
      Pushing a14(r49,l0)(cost 0)
      Pushing a72(r98,l0)(cost 0)
      Pushing a73(r196,l0)(cost 0)
      Pushing a48(r132,l0)(cost 0)
      Pushing a46(r45,l0)(cost 0)
      Pushing a45(r95,l0)(cost 0)
      Pushing a52(r130,l0)(cost 0)
      Pushing a47(r93,l0)(cost 0)
      Pushing a36(r52,l0)(cost 0)
      Pushing a50(r133,l0)(cost 0)
      Pushing a49(r134,l0)(cost 0)
      Pushing a31(r82,l0)(cost 0)
      Pushing a35(r149,l0)(cost 0)
      Pushing a34(r151,l0)(cost 0)
      Pushing a59(r125,l0)(cost 0)
      Pushing a55(r129,l0)(cost 0)
      Pushing a40(r141,l0)(cost 0)
      Pushing a39(r142,l0)(cost 0)
        Making a30(r54,l0) colorable
      Pushing a30(r54,l0)(cost 2272)
      Pushing a60(r112,l0)(cost 0)
      Pushing a33(r152,l0)(cost 0)
      Pushing a32(r153,l0)(cost 0)
      Pushing a0(r44,l0)(cost 0)
      Pushing a68(r100,l0)(cost 0)
      Pushing a67(r101,l0)(cost 0)
      Pushing a64(r104,l0)(cost 0)
      Pushing a63(r48,l0)(cost 0)
      Pushing a44(r136,l0)(cost 0)
        Making a25(r51,l0) colorable
      Pushing a43(r137,l0)(cost 0)
      Pushing a41(r145,l0)(cost 0)
      Pushing a38(r144,l0)(cost 0)
      Pushing a42(r140,l0)(cost 0)
      Pushing a37(r139,l0)(cost 0)
      Pushing a53(r131,l0)(cost 0)
      Pushing a54(r90,l0)(cost 0)
      Pushing a58(r124,l0)(cost 0)
      Pushing a57(r126,l0)(cost 0)
      Pushing a56(r122,l0)(cost 0)
      Pushing a51(r85,l0)(cost 0)
      Pushing a25(r51,l0)(cost 14172)
      Pushing a66(r102,l0)(cost 0)
      Pushing a65(r47,l0)(cost 0)
      Pushing a62(r110,l0)(cost 0)
      Pushing a61(r111,l0)(cost 0)
      Popping a61(r111,l0)  -- assign reg 8
      Popping a62(r110,l0)  -- assign reg 8
      Popping a65(r47,l0)  -- assign reg 8
      Popping a66(r102,l0)  -- assign reg 8
      Popping a25(r51,l0)  -- assign reg 2
      Popping a51(r85,l0)  -- assign reg 2
      Popping a56(r122,l0)  -- assign reg 2
      Popping a57(r126,l0)  -- assign reg 8
      Popping a58(r124,l0)  -- assign reg 8
      Popping a54(r90,l0)  -- assign reg 2
      Popping a53(r131,l0)  -- assign reg 2
      Popping a37(r139,l0)  -- assign reg 8
      Popping a42(r140,l0)  -- assign reg 8
      Popping a38(r144,l0)  -- assign reg 9
      Popping a41(r145,l0)  -- assign reg 10
      Popping a43(r137,l0)  -- assign reg 8
      Popping a44(r136,l0)  -- assign reg 8
      Popping a63(r48,l0)  -- assign reg 2
      Popping a64(r104,l0)  -- assign reg 2
      Popping a67(r101,l0)  -- assign reg 2
      Popping a68(r100,l0)  -- assign reg 2
      Popping a0(r44,l0)  -- assign reg 2
      Popping a32(r153,l0)  -- assign reg 2
      Popping a33(r152,l0)  -- assign reg 2
      Popping a60(r112,l0)  -- assign reg 2
      Popping a30(r54,l0)  -- assign reg 3
      Popping a39(r142,l0)  -- assign reg 9
      Popping a40(r141,l0)  -- assign reg 11
      Popping a55(r129,l0)  -- assign reg 3
      Popping a59(r125,l0)  -- assign reg 3
      Popping a34(r151,l0)  -- assign reg 8
      Popping a35(r149,l0)  -- assign reg 8
      Popping a31(r82,l0)  -- assign reg 2
      Popping a49(r134,l0)  -- assign reg 2
      Popping a50(r133,l0)  -- assign reg 3
      Popping a36(r52,l0)  -- assign reg 12
      Popping a47(r93,l0)  -- assign reg 2
      Popping a52(r130,l0)  -- assign reg 3
      Popping a45(r95,l0)  -- assign reg 11
      Popping a46(r45,l0)  -- assign reg 12
      Popping a48(r132,l0)  -- assign reg 3
      Popping a73(r196,l0)  -- assign reg 2
      Popping a72(r98,l0)  -- assign reg 2
      Popping a14(r49,l0)  -- assign reg 3
      Popping a74(r195,l0)  -- assign reg 3
      Popping a77(r55,l0)  -- assign reg 8
      Popping a78(r193,l0)  -- assign reg 8
      Popping a15(r83,l0)  -- assign reg 8
      Popping a24(r43,l0)  -- assign reg 2
      Popping a23(r42,l0)  -- assign reg 3
      Popping a75(r194,l0)  -- assign reg 8
      Popping a76(r97,l0)  -- assign reg 9
      Popping a84(r169,l0)  -- assign reg 10
      Popping a85(r170,l0)  -- assign reg 8
      Popping a86(r168,l0)  -- assign reg 10
      Popping a87(r167,l0)  -- assign reg 10
      Popping a5(r202,l0)  -- assign reg 2
      Popping a9(r198,l0)  -- assign reg 2
      Popping a83(r69,l0)  -- assign reg 4
      Popping a81(r173,l0)  -- assign reg 3
      Popping a82(r172,l0)  -- assign reg 2
      Popping a6(r208,l0)  -- assign reg 3
      Popping a7(r79,l0)  -- assign reg 3
      Popping a10(r200,l0)  -- assign reg 3
      Popping a11(r199,l0)  -- assign reg 3
      Popping a21(r178,l0)  -- assign reg 10
      Popping a22(r72,l0)  -- assign reg 10
      Popping a29(r163,l0)  -- assign reg 3
      Popping a28(r66,l0)  -- assign reg 3
      Popping a4(r81,l0)  -- assign reg 3
      Popping a12(r77,l0)  -- assign reg 4
      Popping a20(r174,l0)  -- assign reg 2
      Popping a27(r161,l0)  -- assign reg 4
      Popping a1(r214,l0)  -- assign reg 2
      Popping a3(r213,l0)  -- assign reg 2
      Popping a8(r203,l0)  -- assign reg 3
      Popping a17(r186,l0)  -- assign reg 2
      Popping a18(r181,l0)  -- assign reg 2
      Popping a19(r75,l0)  -- assign reg 3
      Popping a26(r166,l0)  -- assign reg 3
      Popping a16(r191,l0)  -- assign reg 2
      Popping a2(r215,l0)  -- assign reg 3
      Popping a13(r197,l0)  -- assign reg 2
Assigning 10 to a28r66
Disposition:
   23:r42  l0     3   24:r43  l0     2    0:r44  l0     2   46:r45  l0    12
   65:r47  l0     8   63:r48  l0     2   14:r49  l0     3   25:r51  l0     2
   36:r52  l0    12   30:r54  l0     3   77:r55  l0     8   28:r66  l0    10
   83:r69  l0     4   22:r72  l0    10   19:r75  l0     3   12:r77  l0     4
    7:r79  l0     3    4:r81  l0     3   31:r82  l0     2   15:r83  l0     8
   51:r85  l0     2   54:r90  l0     2   47:r93  l0     2   45:r95  l0    11
   76:r97  l0     9   72:r98  l0     2   68:r100 l0     2   67:r101 l0     2
   66:r102 l0     8   64:r104 l0     2   62:r110 l0     8   61:r111 l0     8
   60:r112 l0     2   56:r122 l0     2   58:r124 l0     8   59:r125 l0     3
   57:r126 l0     8   55:r129 l0     3   52:r130 l0     3   53:r131 l0     2
   48:r132 l0     3   50:r133 l0     3   49:r134 l0     2   44:r136 l0     8
   43:r137 l0     8   37:r139 l0     8   42:r140 l0     8   40:r141 l0    11
   39:r142 l0     9   38:r144 l0     9   41:r145 l0    10   35:r149 l0     8
   34:r151 l0     8   33:r152 l0     2   32:r153 l0     2   27:r161 l0     4
   29:r163 l0     3   26:r166 l0     3   87:r167 l0    10   86:r168 l0    10
   84:r169 l0    10   85:r170 l0     8   82:r172 l0     2   81:r173 l0     3
   20:r174 l0     2   21:r178 l0    10   18:r181 l0     2   17:r186 l0     2
   16:r191 l0     2   78:r193 l0     8   75:r194 l0     8   74:r195 l0     3
   73:r196 l0     2   13:r197 l0     2    9:r198 l0     2   11:r199 l0     3
   10:r200 l0     3    5:r202 l0     2    8:r203 l0     3    6:r208 l0     3
    3:r213 l0     2    1:r214 l0     2    2:r215 l0     3
New iteration of spill/restore move
+++Costs: overall -1858, reg -1858, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processJoinAccept

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12] 13[a13]
;;  ref usage 	r0={21d} r1={1d,62u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,42u} r8={20d} r9={20d} r10={36d,24u} r11={30d,10u} r12={24d,4u} r13={23d,3u} r14={20d} r15={20d} r16={1d,42u} r17={1d,41u} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r42={2d,4u,1e} r43={2d,6u} r44={4d,1u} r45={2d,1u} r47={1d,1u} r48={1d,1u} r49={2d,7u} r51={1d,7u} r52={1d,2u} r54={1d,1u} r55={1d,1u} r66={1d,1u} r69={1d,4u} r72={1d,1u} r75={1d,1u} r77={1d,2u,1e} r79={1d,1u} r81={1d,2u} r82={1d,1u} r83={2d,4u} r85={1d,3u,1e} r90={1d,2u} r93={1d,3u} r95={1d,1u} r97={1d,1u} r98={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r122={1d,3u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u,1e} r141={1d,2u} r142={1d,2u} r144={1d,1u} r145={1d,1u,1e} r149={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r161={1d,2u,1e} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r178={1d,1u} r181={1d,1u} r186={1d,1u} r191={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r199={1d,1u} r200={1d,1u} r202={1d,5u} r203={1d,1u} r208={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} 
;;    total ref usage 1042{675d,360u,7e} in 202{182 regular + 20 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47 100 101 102
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 11 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 2 14 2 (set (reg/f:SI 100)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 101 [ LMIC+328 ])
        (mem/c:SI (plus:SI (reg/f:SI 100)
                (const_int 328 [0x148])) [0 LMIC+328 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 102)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC233") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -16711936 [0xffffffffff00ff00])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 47 [ D.6356 ])
        (and:SI (reg:SI 101 [ LMIC+328 ])
            (reg:SI 102))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_DEAD (reg:SI 101 [ LMIC+328 ])
            (nil))))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:SI 47 [ D.6356 ])
                (const_int 256 [0x100]))
            (label_ref 23)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 47 [ D.6356 ])
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 23)
;;  succ:       3 [13.7%]  (FALLTHRU)
;;              4 [86.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 1371, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [13.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(1){ }u9(7){ }u10(16){ }u11(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 19 18 20 3 NOTE_INSN_DELETED)
(insn 20 19 21 3 (set (reg:SI 11 a11)
        (const_int 1436 [0x59c])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 44 {movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC234") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 22 21 23 3 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1436 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [86.3%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 48 104
(code_label 23 22 24 4 322 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:SI 104)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 48 [ D.6357 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 104)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(note 27 26 28 4 NOTE_INSN_DELETED)
(note 28 27 30 4 NOTE_INSN_DELETED)
(note 30 28 31 4 NOTE_INSN_DELETED)
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 48 [ D.6357 ])
                    (const_int 1 [0x1])
                    (const_int 7 [0x7]))
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 48 [ D.6357 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 37)
;;  succ:       5 [29.0%]  (FALLTHRU)
;;              6 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 2900, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [29.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 33 32 34 5 NOTE_INSN_DELETED)
(insn 34 33 35 5 (set (reg:SI 11 a11)
        (const_int 1437 [0x59d])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 44 {movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC234") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 36 35 37 5 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1437 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [71.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(1){ }u35(7){ }u36(16){ }u37(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 51 110 111
(code_label 37 36 38 6 323 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 110)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1439 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 40 39 41 6 (set:SI (reg/f:SI 111)
        (plus:SI (reg/f:SI 110)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1439 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 41 40 42 6 (set (reg:SI 51 [ D.6359 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 111)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1439 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ne (reg:SI 51 [ D.6359 ])
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1439 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 110)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              17 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51

;; basic block 7, loop depth 0, count 0, freq 7989, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;;              19 [61.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(1){ }u42(7){ }u43(16){ }u44(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 85 112
(code_label 43 42 44 7 325 ("nojoinframe") [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg/f:SI 112)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1441 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 46 45 47 7 (set (reg:SI 85 [ D.6357 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 112)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1441 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(note 47 46 48 7 NOTE_INSN_DELETED)
(note 48 47 50 7 NOTE_INSN_DELETED)
(note 50 48 51 7 NOTE_INSN_DELETED)
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 85 [ D.6357 ])
                    (const_int 1 [0x1])
                    (const_int 2 [0x2]))
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1441 60 {*bittrue}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 86)
;;  succ:       8 [71.0%]  (FALLTHRU)
;;              13 [29.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 85

;; basic block 8, loop depth 0, count 0, freq 5672, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [71.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(1){ }u52(7){ }u53(16){ }u54(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 85
;; lr  def 	
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 53 52 54 8 NOTE_INSN_DELETED)
(note 54 53 56 8 NOTE_INSN_DELETED)
(note 56 54 57 8 NOTE_INSN_DELETED)
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 85 [ D.6357 ])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5]))
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1442 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 85 [ D.6357 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 63)
;;  succ:       9 [29.0%]  (FALLTHRU)
;;              10 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 9, loop depth 0, count 0, freq 1645, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 [29.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(1){ }u61(7){ }u62(16){ }u63(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 59 58 60 9 NOTE_INSN_DELETED)
(insn 60 59 61 9 (set (reg:SI 11 a11)
        (const_int 1442 [0x5a2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1442 44 {movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC234") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1442 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 62 61 63 9 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1442 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 10, loop depth 0, count 0, freq 5672, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8 [71.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(1){ }u69(7){ }u70(16){ }u71(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 90 122 124 125 126 129
(code_label 63 62 64 10 327 "" [1 uses])
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 68 10 (set (reg/f:SI 122)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1444 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 68 65 381 10 (set (reg:HI 125 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 122)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1444 45 {movhi_internal}
     (nil))
(insn 381 68 69 10 (set (reg:HI 124)
        (const_int -161 [0xffffffffffffff5f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1444 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -161 [0xffffffffffffff5f])
        (nil)))
(insn 69 381 70 10 (set (reg:SI 126)
        (and:SI (subreg:SI (reg:HI 125 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 124) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1444 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 125 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 124)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 125 [ LMIC.opmode ]) 0)
                    (const_int -161 [0xffffffffffffff5f]))
                (nil)))))
(insn 70 69 72 10 (set (mem/j/c:HI (plus:SI (reg/f:SI 122)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 126) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1444 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 72 70 74 10 (set (reg:SI 90 [ D.6359 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 122)
                    (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1445 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 74 72 75 10 (set (reg:SI 129)
        (const_int 9 [0x9])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1445 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 9 [0x9])
        (nil)))
(jump_insn 75 74 76 10 (set (pc)
        (if_then_else (ltu (reg:SI 129)
                (reg:SI 90 [ D.6359 ]))
            (label_ref 80)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1445 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 129)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 80)
;;  succ:       11 [61.0%]  (FALLTHRU)
;;              12 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 90

;; basic block 11, loop depth 0, count 0, freq 3460, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 [61.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(1){ }u82(7){ }u83(16){ }u84(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 90
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 90
;; lr  def 	 130 131
(note 76 75 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 380 11 (set (reg:SI 131)
        (plus:SI (reg:SI 90 [ D.6359 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1446 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6359 ])
        (nil)))
(insn 380 78 79 11 (set (reg/f:SI 130)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1446 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 79 380 80 11 (set (mem/j/c:QI (plus:SI (reg/f:SI 130)
                (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16])
        (subreg:QI (reg:SI 131) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1446 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 130)
            (nil))))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 12, loop depth 0, count 0, freq 5672, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10 [39.0%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u88(1){ }u89(7){ }u90(16){ }u91(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44
(code_label 80 79 81 12 328 "" [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:SI 10 a10)
        (const_int 9 [0x9])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1447 44 {movsi_internal}
     (nil))
(call_insn 83 82 7 12 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1447 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 7 83 357 12 (set (reg:SI 44 [ D.6354 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1448 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 357 7 358 12 (set (pc)
        (label_ref 336)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1448 78 {jump}
     (nil)
 -> 336)
;;  succ:       42 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

(barrier 358 357 86)
;; basic block 13, loop depth 0, count 0, freq 2317, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       7 [29.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u94(1){ }u95(7){ }u96(16){ }u97(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 85
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 85
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 93 95 132 133 134
(code_label 86 358 87 13 326 "" [1 uses])
(note 87 86 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 13 (set (reg:HI 133)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1450 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(insn 90 89 379 13 (set (reg:SI 134)
        (and:SI (reg:SI 85 [ D.6357 ])
            (subreg:SI (reg:HI 133) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1450 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 133)
        (expr_list:REG_DEAD (reg:SI 85 [ D.6357 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 85 [ D.6357 ])
                    (const_int -129 [0xffffffffffffff7f]))
                (nil)))))
(insn 379 90 91 13 (set (reg/f:SI 132)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1450 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 91 379 92 13 (set (mem/j/c:HI (plus:SI (reg/f:SI 132)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 134) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1450 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 132)
            (nil))))
(call_insn 92 91 93 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("nextJoinState") [flags 0x3]  <function_decl 0x100b7cbd0 nextJoinState>) [0 nextJoinState S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1451 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 93 92 94 13 (set (reg/v:SI 93 [ delay ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1451 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 94 93 95 13 (var_location:SI delay (reg/v:SI 93 [ delay ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1451 -1
     (nil))
(call_insn 95 94 96 13 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 82 {call_value_internal}
     (nil)
    (nil))
(note 96 95 97 13 NOTE_INSN_DELETED)
(insn 97 96 98 13 (set (reg:SI 95 [ D.6360 ])
        (plus:SI (reg/v:SI 93 [ delay ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 98 97 99 13 NOTE_INSN_DELETED)
(jump_insn 99 98 100 13 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg/v:SI 93 [ delay ])
                    (const_int 1 [0x1])
                    (const_int 0 [0]))
                (const_int 0 [0]))
            (label_ref:SI 348)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 60 {*bittrue}
     (expr_list:REG_DEAD (reg/v:SI 93 [ delay ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 348)
;;  succ:       14 [39.0%]  (FALLTHRU)
;;              15 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 95

;; basic block 14, loop depth 0, count 0, freq 904, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 [39.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u112(1){ }u113(7){ }u114(16){ }u115(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 95
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45
(note 100 99 3 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 3 100 359 14 (set (reg/f:SI 45 [ D.6355 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC230") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("onJoinFailed") [flags 0x3]  <function_decl 0x100bb2360 onJoinFailed>)
        (nil)))
(jump_insn 359 3 360 14 (set (pc)
        (label_ref 101)) 78 {jump}
     (nil)
 -> 101)
;;  succ:       16 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 95

(barrier 360 359 348)
;; basic block 15, loop depth 0, count 0, freq 1413, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13 [61.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(1){ }u117(7){ }u118(16){ }u119(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 95
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45
(code_label 348 360 347 15 343 "" [1 uses])
(note 347 348 4 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 4 347 101 15 (set (reg/f:SI 45 [ D.6355 ])
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC231") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("runEngineUpdate") [flags 0x3]  <function_decl 0x100b7cca8 runEngineUpdate>)
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 95

;; basic block 16, loop depth 0, count 0, freq 2317, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u120(1){ }u121(7){ }u122(16){ }u123(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 95
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 95
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44
(code_label 101 4 102 16 330 "" [1 uses])
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 103 102 104 16 NOTE_INSN_DELETED)
(insn 104 103 105 16 (set (reg:SI 12 a12)
        (reg/f:SI 45 [ D.6355 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 45 [ D.6355 ])
        (nil)))
(insn 105 104 106 16 (set (reg:SI 11 a11)
        (reg:SI 95 [ D.6360 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ D.6360 ])
        (nil)))
(insn 106 105 107 16 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC235") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 107 106 8 16 (call (mem:SI (symbol_ref:SI ("os_setTimedCallback") [flags 0x41]  <function_decl 0x140efa288 os_setTimedCallback>) [0 os_setTimedCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1459 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 8 107 361 16 (set (reg:SI 44 [ D.6354 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1463 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 361 8 362 16 (set (pc)
        (label_ref 336)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1463 78 {jump}
     (nil)
 -> 336)
;;  succ:       42 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

(barrier 362 361 110)
;; basic block 17, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u131(1){ }u132(7){ }u133(16){ }u134(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51
;; lr  def 	 52 54 136 137 139 140 141 142 144 145
(code_label 110 362 111 17 324 "" [1 uses])
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 17 (set (reg/f:SI 136)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1465 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 113 112 114 17 (set:SI (reg/f:SI 137)
        (plus:SI (reg/f:SI 136)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1465 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 114 113 115 17 (set (reg/v:SI 52 [ hdr ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 137)
                    (const_int 76 [0x4c])) [0 LMIC.frame+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1465 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(debug_insn 115 114 116 17 (var_location:QI hdr (subreg:QI (reg/v:SI 52 [ hdr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1465 -1
     (nil))
(debug_insn 116 115 118 17 (var_location:QI dlen (subreg:QI (reg:SI 51 [ D.6359 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1466 -1
     (nil))
(insn 118 116 119 17 (set (reg:SI 54 [ D.6360 ])
        (plus:SI (reg:SI 51 [ D.6359 ])
            (const_int -4 [0xfffffffffffffffc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1467 1 {addsi3}
     (nil))
(debug_insn 119 118 120 17 (var_location:SI mic (clobber (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1467 -1
     (nil))
(insn 120 119 121 17 (set (reg:SI 140)
        (plus:SI (reg:SI 51 [ D.6359 ])
            (const_int -17 [0xffffffffffffffef]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 1 {addsi3}
     (nil))
(insn 121 120 122 17 (set (reg:SI 141)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 122 121 123 17 (set (reg:SI 142)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 123 122 125 17 (set (reg:SI 139)
        (if_then_else:SI (ne (reg:SI 140)
                (const_int 0 [0]))
            (reg:SI 141)
            (reg:SI 142))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (ne:SI (reg:SI 140)
                (const_int 0 [0]))
            (nil))))
(note 125 123 126 17 NOTE_INSN_DELETED)
(insn 126 125 129 17 (set (reg:SI 145)
        (plus:SI (reg:SI 51 [ D.6359 ])
            (const_int -33 [0xffffffffffffffdf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 1 {addsi3}
     (nil))
(insn 129 126 131 17 (set (reg:SI 144)
        (if_then_else:SI (ne (reg:SI 145)
                (const_int 0 [0]))
            (reg:SI 141)
            (reg:SI 142))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 67 {movsicc_internal0}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 142)
            (expr_list:REG_DEAD (reg:SI 141)
                (expr_list:REG_EQUAL (ne:SI (reg:SI 145)
                        (const_int 0 [0]))
                    (nil))))))
(note 131 129 132 17 NOTE_INSN_DELETED)
(note 132 131 133 17 NOTE_INSN_DELETED)
(note 133 132 134 17 NOTE_INSN_DELETED)
(jump_insn 134 133 135 17 (set (pc)
        (if_then_else (ne (and:SI (reg:SI 144)
                    (reg:SI 139))
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1468 62 {*masktrue}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 139)
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 140)
;;  succ:       19 [50.0%] 
;;              18 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 52 54

;; basic block 18, loop depth 0, count 0, freq 2500, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 [50.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u156(1){ }u157(7){ }u158(16){ }u159(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 52 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 52
;; lr  def 	 149 151
(note 135 134 137 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 137 135 378 18 NOTE_INSN_DELETED)
(insn 378 137 138 18 (set (reg:QI 149)
        (const_int -29 [0xffffffffffffffe3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1469 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -29 [0xffffffffffffffe3])
        (nil)))
(insn 138 378 139 18 (set (reg:SI 151)
        (and:SI (reg/v:SI 52 [ hdr ])
            (subreg:SI (reg:QI 149) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1469 30 {andsi3}
     (expr_list:REG_DEAD (reg:QI 149)
        (expr_list:REG_DEAD (reg/v:SI 52 [ hdr ])
            (nil))))
(jump_insn 139 138 140 18 (set (pc)
        (if_then_else (eq (reg:SI 151)
                (const_int 32 [0x20]))
            (label_ref 152)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1469 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 151)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 152)
;;  succ:       19 [86.3%]  (FALLTHRU)
;;              21 [13.7%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 54

;; basic block 19, loop depth 0, count 0, freq 4901, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17 [50.0%] 
;;              18 [86.3%]  (FALLTHRU)
;;              21 [71.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(1){ }u166(7){ }u167(16){ }u168(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 82 152 153
(code_label 140 139 141 19 331 ("badframe") [2 uses])
(note 141 140 142 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 19 (set (reg/f:SI 152)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1475 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 143 142 144 19 (set:SI (reg/f:SI 153)
        (plus:SI (reg/f:SI 152)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1475 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 144 143 145 19 (set (reg:SI 82 [ D.6359 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 153)
                    (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1475 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(note 145 144 147 19 NOTE_INSN_DELETED)
(note 147 145 148 19 NOTE_INSN_DELETED)
(jump_insn 148 147 363 19 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 82 [ D.6359 ])
                    (const_int 1 [0x1])
                    (const_int 0 [0]))
                (const_int 0 [0]))
            (label_ref:SI 43)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1475 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 82 [ D.6359 ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 43)
;;  succ:       20 [39.0%]  (FALLTHRU)
;;              7 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 20, loop depth 0, count 0, freq 1911, maybe hot
;;  prev block 19, next block 21, flags: (NEW, RTL, MODIFIED)
;;  pred:       19 [39.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(1){ }u-1(7){ }u-1(16){ }u-1(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(note 363 148 364 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 364 363 365 20 (set (pc)
        (label_ref 352)) 78 {jump}
     (nil)
 -> 352)
;;  succ:       41 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 365 364 152)
;; basic block 21, loop depth 0, count 0, freq 343, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       18 [13.7%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u174(1){ }u175(7){ }u176(16){ }u177(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 54
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51 54
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 152 365 153 21 332 "" [1 uses])
(note 153 152 154 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 154 153 155 21 NOTE_INSN_DELETED)
(note 155 154 156 21 NOTE_INSN_DELETED)
(insn 156 155 157 21 (set (reg:SI 11 a11)
        (plus:SI (reg:SI 51 [ D.6359 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1479 1 {addsi3}
     (nil))
(insn 157 156 158 21 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC236") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1479 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 333 [0x14d])))
        (nil)))
(call_insn 158 157 159 21 (call (mem:SI (symbol_ref:SI ("aes_encrypt") [flags 0x3]  <function_decl 0x100b50948 aes_encrypt>) [0 aes_encrypt S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1479 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 159 158 160 21 NOTE_INSN_DELETED)
(insn 160 159 161 21 (set (reg:SI 11 a11)
        (reg:SI 54 [ D.6360 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1480 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 54 [ D.6360 ])
        (nil)))
(insn 161 160 162 21 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC237") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1480 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 332 [0x14c])))
        (nil)))
(call_insn 162 161 163 21 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("aes_verifyMic0") [flags 0x3]  <function_decl 0x100b50870 aes_verifyMic0>) [0 aes_verifyMic0 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1480 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(note 163 162 164 21 NOTE_INSN_DELETED)
(jump_insn 164 163 165 21 (set (pc)
        (if_then_else (eq (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1480 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 140)
;;  succ:       19 [71.0%] 
;;              22 [29.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51

;; basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 [29.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u191(1){ }u192(7){ }u193(16){ }u194(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 51
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 66 161 163 166
(note 165 164 166 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 166 165 167 22 NOTE_INSN_DELETED)
(insn 167 166 168 22 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC238") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1486 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 339 [0x153])))
        (nil)))
(call_insn/i 168 167 169 22 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1486 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 169 168 170 22 NOTE_INSN_DELETED)
(debug_insn 170 169 171 22 (var_location:SI addr (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1486 -1
     (nil))
(insn 171 170 172 22 (set (reg/f:SI 161)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1487 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 172 171 173 22 (set (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1487 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(note 173 172 174 22 NOTE_INSN_DELETED)
(insn 174 173 175 22 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC239") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1488 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 336 [0x150])))
        (nil)))
(call_insn/i 175 174 176 22 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_rlsbf4") [flags 0x3]  <function_decl 0x140efa798 os_rlsbf4>) [0 os_rlsbf4 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1488 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 176 175 177 22 NOTE_INSN_DELETED)
(insn 177 176 178 22 (set (reg:SI 163)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC240") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1488 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 16777215 [0xffffff])
        (nil)))
(insn 178 177 180 22 (set (reg:SI 66 [ D.6356 ])
        (and:SI (reg:SI 10 a10)
            (reg:SI 163))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1488 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EQUIV (mem/j/c:SI (plus:SI (reg/f:SI 161)
                        (const_int 168 [0xa8])) [0 LMIC.netid+0 S4 A32])
                (nil)))))
(insn 180 178 181 22 (set (mem/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 168 [0xa8])) [0 LMIC.netid+0 S4 A32])
        (reg:SI 66 [ D.6356 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1488 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_DEAD (reg:SI 66 [ D.6356 ])
            (nil))))
(insn 181 180 182 22 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1491 44 {movsi_internal}
     (nil))
(call_insn 182 181 184 22 (call (mem:SI (symbol_ref:SI ("initDefaultChannels") [flags 0x3]  <function_decl 0x100b7c288 initDefaultChannels>) [0 initDefaultChannels S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1491 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 184 182 185 22 (set (reg:SI 166)
        (const_int 17 [0x11])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1493 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 17 [0x11])
        (nil)))
(jump_insn 185 184 366 22 (set (pc)
        (if_then_else (ltu (reg:SI 166)
                (reg:SI 51 [ D.6359 ]))
            (label_ref:SI 356)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1493 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 51 [ D.6359 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 356)
;;  succ:       27 [50.0%] 
;;              23 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 23, loop depth 0, count 0, freq 50, maybe hot
;;  prev block 22, next block 24, flags: (NEW, RTL, MODIFIED)
;;  pred:       22 [50.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(1){ }u-1(7){ }u-1(16){ }u-1(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(note 366 185 367 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 367 366 368 23 (set (pc)
        (label_ref 230)) 78 {jump}
     (nil)
 -> 230)
;;  succ:       29 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 368 367 228)
;; basic block 24, loop depth 1, count 0, freq 248, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       28 [83.3%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u214(1){ }u215(7){ }u216(16){ }u217(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 69 167 168 169 170
(code_label 228 368 189 24 336 "" [1 uses])
(note 189 228 191 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 191 189 192 24 (set (reg:SI 167)
        (const_int 320 [0x140])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 320 [0x140])
        (nil)))
(insn 192 191 193 24 (set (reg:SI 168)
        (plus:SI (reg/v:SI 42 [ dlen ])
            (reg:SI 167))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 42 [ dlen ])
                (const_int 320 [0x140]))
            (nil))))
(insn 193 192 194 24 (set (reg/f:SI 170)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 194 193 195 24 (set (reg:SI 169)
        (plus:SI (reg:SI 168)
            (reg/f:SI 170))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_DEAD (reg:SI 168)
            (nil))))
(note 195 194 196 24 NOTE_INSN_DELETED)
(insn 196 195 197 24 (set (reg:SI 10 a10)
        (plus:SI (reg:SI 169)
            (const_int 12 [0xc]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(call_insn/i 197 196 198 24 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("convFreq") [flags 0x3]  <function_decl 0x100b7c5e8 convFreq>) [0 convFreq S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 198 197 199 24 (set (reg/v:SI 69 [ freq ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(debug_insn 199 198 200 24 (var_location:SI freq (reg/v:SI 69 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1499 -1
     (nil))
(jump_insn 200 199 201 24 (set (pc)
        (if_then_else (eq (reg/v:SI 69 [ freq ])
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1500 56 {*btrue}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 216)
;;  succ:       25 [29.0%]  (FALLTHRU)
;;              26 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 69

;; basic block 25, loop depth 1, count 0, freq 72, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 [29.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u230(1){ }u231(7){ }u232(16){ }u233(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43 69
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43 69
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 201 200 203 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 204 25 (set (reg:SI 13 a13)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1501 44 {movsi_internal}
     (nil))
(insn 204 203 205 25 (set (reg:SI 12 a12)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1501 44 {movsi_internal}
     (nil))
(insn 205 204 206 25 (set (reg:SI 11 a11)
        (reg/v:SI 69 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1501 44 {movsi_internal}
     (nil))
(insn 206 205 207 25 (set (reg:SI 10 a10)
        (reg/v:SI 43 [ chidx ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1501 44 {movsi_internal}
     (nil))
(call_insn 207 206 208 25 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("LMIC_setupChannel") [flags 0x3]  <function_decl 0x100b281b0 LMIC_setupChannel>) [0 LMIC_setupChannel S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1501 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_UNUSED (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(call_insn 208 207 209 25 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 82 {call_value_internal}
     (nil)
    (nil))
(note 209 208 210 25 NOTE_INSN_DELETED)
(note 210 209 211 25 NOTE_INSN_DELETED)
(insn 211 210 212 25 (set (reg:SI 13 a13)
        (reg/v:SI 69 [ freq ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 69 [ freq ])
        (nil)))
(insn 212 211 213 25 (set (reg:SI 12 a12)
        (reg/v:SI 43 [ chidx ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 44 {movsi_internal}
     (nil))
(insn 213 212 214 25 (set (reg:SI 11 a11)
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(insn 214 213 215 25 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC242") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC241") [flags 0x2]  <var_decl 0x101a78360 *.LC241>)
        (nil)))
(call_insn 215 214 216 25 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x140d87af8 printf>) [0 __builtin_printf S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1503 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_UNUSED (reg:SI 10 a10)
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 26, loop depth 1, count 0, freq 248, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       24 [71.0%] 
;;              25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u252(1){ }u253(7){ }u254(16){ }u255(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  def 	 42 43 172 173
(code_label 216 215 217 26 335 "" [1 uses])
(note 217 216 218 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 26 (set (reg:SI 172)
        (plus:SI (reg/v:SI 43 [ chidx ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 43 [ chidx ])
        (nil)))
(insn 219 218 220 26 (set (reg/v:SI 43 [ chidx ])
        (zero_extend:SI (subreg:QI (reg:SI 172) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(debug_insn 220 219 221 26 (var_location:QI chidx (subreg:QI (reg/v:SI 43 [ chidx ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 -1
     (nil))
(insn 221 220 222 26 (set (reg:SI 173)
        (plus:SI (reg/v:SI 42 [ dlen ])
            (const_int 3 [0x3]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 42 [ dlen ])
        (nil)))
(insn 222 221 223 26 (set (reg/v:SI 42 [ dlen ])
        (zero_extend:SI (subreg:QI (reg:SI 173) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(debug_insn 223 222 369 26 (var_location:QI dlen (subreg:QI (reg/v:SI 42 [ dlen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 -1
     (nil))
(jump_insn 369 223 370 26 (set (pc)
        (label_ref 224)) 78 {jump}
     (nil)
 -> 224)
;;  succ:       28 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

(barrier 370 369 356)
;; basic block 27, loop depth 0, count 0, freq 50, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       22 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u262(1){ }u263(7){ }u264(16){ }u265(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 43
(code_label 356 370 355 27 345 "" [1 uses])
(note 355 356 5 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 5 355 6 27 (set (reg/v:SI 43 [ chidx ])
        (const_int 3 [0x3])) 44 {movsi_internal}
     (nil))
(insn 6 5 224 27 (set (reg/v:SI 42 [ dlen ])
        (const_int 13 [0xd])) 44 {movsi_internal}
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 28, loop depth 1, count 0, freq 298, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 [100.0%]  (FALLTHRU)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u266(1){ }u267(7){ }u268(16){ }u269(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 43
;; lr  def 	
(code_label 224 6 225 28 333 "" [1 uses])
(note 225 224 226 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 226 225 227 28 (var_location:QI chidx (subreg:QI (reg/v:SI 43 [ chidx ]) 0)) -1
     (nil))
(debug_insn 227 226 229 28 (var_location:QI dlen (subreg:QI (reg/v:SI 42 [ dlen ]) 0)) -1
     (nil))
(jump_insn 229 227 230 28 (set (pc)
        (if_then_else (geu (reg/v:SI 43 [ chidx ])
                (const_int 8 [0x8]))
            (pc)
            (label_ref 228))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1498 59 {*ubfalse}
     (int_list:REG_BR_PROB 8333 (nil))
 -> 228)
;;  succ:       24 [83.3%] 
;;              29 [16.7%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42 43

;; basic block 29, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 [16.7%]  (FALLTHRU)
;;              23 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u273(1){ }u274(7){ }u275(16){ }u276(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 72 75 174 178 181
(code_label 230 229 231 29 334 "" [1 uses])
(note 231 230 232 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 29 (set (reg/f:SI 174)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 233 232 234 29 (set (reg:SI 72 [ D.6357 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 174)
                    (const_int 244 [0xf4])) [0 LMIC.devNonce+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 33 {zero_extendhisi2}
     (nil))
(note 234 233 235 29 NOTE_INSN_DELETED)
(note 235 234 236 29 NOTE_INSN_DELETED)
(note 236 235 237 29 NOTE_INSN_DELETED)
(insn 237 236 238 29 (set (reg:SI 178)
        (plus:SI (reg:SI 72 [ D.6357 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6357 ])
        (nil)))
(note 238 237 239 29 NOTE_INSN_DELETED)
(insn 239 238 240 29 (set (reg:SI 13 a13)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC243") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 262 [0x106])))
        (nil)))
(insn 240 239 241 29 (set (reg:SI 12 a12)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC244") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 246 [0xf6])))
        (nil)))
(insn 241 240 242 29 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC236") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 333 [0x14d])))
        (nil)))
(insn 242 241 243 29 (set (reg:SI 10 a10)
        (zero_extend:SI (subreg:HI (reg:SI 178) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(call_insn 243 242 245 29 (call (mem:SI (symbol_ref:SI ("aes_sessKeys") [flags 0x3]  <function_decl 0x100b50bd0 aes_sessKeys>) [0 aes_sessKeys S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1510 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 13 a13)
        (expr_list:REG_DEAD (reg:SI 12 a12)
            (expr_list:REG_DEAD (reg:SI 11 a11)
                (expr_list:REG_DEAD (reg:SI 10 a10)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (expr_list:SI (use (reg:SI 13 a13))
                    (nil))))))
(insn 245 243 247 29 (set (reg:SI 75 [ D.6357 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 174)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 174)
        (nil)))
(note 247 245 249 29 NOTE_INSN_DELETED)
(note 249 247 377 29 NOTE_INSN_DELETED)
(insn 377 249 250 29 (set (reg:HI 181)
        (const_int 36 [0x24])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 36 [0x24])
        (nil)))
(jump_insn 250 377 251 29 (set (pc)
        (if_then_else (ne (and:SI (reg:SI 75 [ D.6357 ])
                    (subreg:SI (reg:HI 181) 0))
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 181)
        (expr_list:REG_DEAD (reg:SI 75 [ D.6357 ])
            (int_list:REG_BR_PROB 7100 (nil))))
 -> 256)
;;  succ:       30 [29.0%]  (FALLTHRU)
;;              31 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 30, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 [29.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u295(1){ }u296(7){ }u297(16){ }u298(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 251 250 252 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 252 251 253 30 NOTE_INSN_DELETED)
(insn 253 252 254 30 (set (reg:SI 11 a11)
        (const_int 1526 [0x5f6])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 44 {movsi_internal}
     (nil))
(insn 254 253 255 30 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC234") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 255 254 256 30 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1526 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 31, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       29 [71.0%] 
;;              30 [100.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u303(1){ }u304(7){ }u305(16){ }u306(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 77 186
(code_label 256 255 257 31 337 "" [1 uses])
(note 257 256 258 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 31 (set (reg/f:SI 186)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1527 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 259 258 260 31 (set (reg:SI 77 [ D.6357 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 186)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1527 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 186)
        (nil)))
(note 260 259 261 31 NOTE_INSN_DELETED)
(note 261 260 263 31 NOTE_INSN_DELETED)
(note 263 261 264 31 NOTE_INSN_DELETED)
(jump_insn 264 263 265 31 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 77 [ D.6357 ])
                    (const_int 1 [0x1])
                    (const_int 5 [0x5]))
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1527 60 {*bittrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 302)
;;  succ:       32 [50.0%]  (FALLTHRU)
;;              38 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 77

;; basic block 32, loop depth 0, count 0, freq 50, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 [50.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u313(1){ }u314(7){ }u315(16){ }u316(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 77
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 49 83 191
(note 265 264 266 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 32 (set (reg/f:SI 191)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1529 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 267 266 269 32 (set (reg/v:SI 49 [ dr ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 191)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1529 34 {zero_extendqisi2}
     (nil))
(insn 269 267 270 32 (set (reg/v:SI 83 [ n ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 191)
                    (const_int 178 [0xb2])) [0 LMIC.rejoinCnt+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1529 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 191)
        (nil)))
(debug_insn 270 269 271 32 (var_location:QI dr (subreg:QI (reg/v:SI 49 [ dr ]) 0)) -1
     (nil))
(debug_insn 271 270 371 32 (var_location:QI n (subreg:QI (reg/v:SI 83 [ n ]) 0)) -1
     (nil))
(jump_insn 371 271 372 32 (set (pc)
        (label_ref 290)) 78 {jump}
     (nil)
 -> 290)
;;  succ:       36 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 83

(barrier 372 371 297)
;; basic block 33, loop depth 1, count 0, freq 503, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       36 [91.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u321(1){ }u322(7){ }u323(16){ }u324(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 55 97 193 194
(code_label 297 372 274 33 341 "" [1 uses])
(note 274 297 275 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(debug_insn 275 274 277 33 (var_location:QI dr (subreg:QI (reg/v:SI 49 [ dr ]) 0)) -1
     (nil))
(debug_insn 277 275 278 33 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 278 277 279 33 (var_location:SI index (reg/v:SI 49 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 279 278 280 33 (set (reg/f:SI 193)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC245") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 280 279 281 33 (set (reg/f:SI 55 [ D.6361 ])
        (plus:SI (reg/v:SI 49 [ dr ])
            (reg/f:SI 193))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 193)
        (nil)))
(insn 281 280 282 33 (set (reg:SI 97 [ D.6358 ])
        (zero_extend:SI (mem:QI (reg/f:SI 55 [ D.6361 ]) [0 *_31+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 55 [ D.6361 ])
        (nil)))
(insn 282 281 283 33 (set (reg:SI 194)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 283 282 284 33 (set (pc)
        (if_then_else (eq (reg:SI 97 [ D.6358 ])
                (reg:SI 194))
            (label_ref 287)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:SI 97 [ D.6358 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 287)
;;  succ:       34 [72.0%]  (FALLTHRU)
;;              35 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98

;; basic block 34, loop depth 1, count 0, freq 362, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       33 [72.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u332(1){ }u333(7){ }u334(16){ }u335(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 49 195
(note 284 283 285 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 34 (set (reg:SI 195)
        (plus:SI (reg/v:SI 49 [ dr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
        (nil)))
(insn 286 285 287 34 (set (reg/v:SI 49 [ dr ])
        (zero_extend:SI (subreg:QI (reg:SI 195) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
;;  succ:       35 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98

;; basic block 35, loop depth 1, count 0, freq 503, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       33 [28.0%] 
;;              34 [100.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u338(1){ }u339(7){ }u340(16){ }u341(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 98
;; lr  def 	 83
(code_label 287 286 288 35 340 "" [1 uses])
(note 288 287 289 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 35 (set (reg/v:SI 83 [ n ])
        (reg/v:SI 98 [ n ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 98 [ n ])
        (nil)))
;;  succ:       36 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 83

;; basic block 36, loop depth 1, count 0, freq 552, maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 [100.0%]  (FALLTHRU,DFS_BACK)
;;              32 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u343(1){ }u344(7){ }u345(16){ }u346(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  def 	 98 196
(code_label 290 289 291 36 339 "" [1 uses])
(note 291 290 292 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(debug_insn 292 291 293 36 (var_location:QI n (subreg:QI (reg/v:SI 83 [ n ]) 0)) -1
     (nil))
(debug_insn 293 292 294 36 (var_location:QI dr (subreg:QI (reg/v:SI 49 [ dr ]) 0)) -1
     (nil))
(insn 294 293 295 36 (set (reg:SI 196)
        (plus:SI (reg/v:SI 83 [ n ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 1 {addsi3}
     (nil))
(insn 295 294 296 36 (set (reg/v:SI 98 [ n ])
        (zero_extend:SI (subreg:QI (reg:SI 196) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(debug_insn 296 295 298 36 (var_location:QI n (subreg:QI (reg/v:SI 98 [ n ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
(jump_insn 298 296 299 36 (set (pc)
        (if_then_else (ne (reg/v:SI 83 [ n ])
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 83 [ n ])
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 297)
;;  succ:       33 [91.0%] 
;;              37 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77 98

;; basic block 37, loop depth 0, count 0, freq 50, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 [9.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u353(1){ }u354(7){ }u355(16){ }u356(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49 77
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 49
;; lr  def 	 197
(note 299 298 300 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 37 (set (reg/f:SI 197)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1529 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 301 300 302 37 (set (mem/j/c:QI (plus:SI (reg/f:SI 197)
                (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32])
        (subreg/s/v:QI (reg/v:SI 49 [ dr ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1529 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 197)
        (expr_list:REG_DEAD (reg/v:SI 49 [ dr ])
            (nil))))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 77

;; basic block 38, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 37, next block 39, flags: (RTL)
;;  pred:       31 [50.0%] 
;;              37 [100.0%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u359(1){ }u360(7){ }u361(16){ }u362(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 77
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 77
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 79 81 198 199 200 202 203 208
(code_label 302 301 303 38 338 "" [1 uses])
(note 303 302 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 38 (set (reg/f:SI 198)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1531 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 305 304 306 38 (set (reg:HI 199)
        (const_int -679 [0xfffffffffffffd59])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1531 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -679 [0xfffffffffffffd59])
        (nil)))
(insn 306 305 307 38 (set (reg:SI 200)
        (and:SI (reg:SI 77 [ D.6357 ])
            (subreg:SI (reg:HI 199) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1531 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 199)
        (expr_list:REG_DEAD (reg:SI 77 [ D.6357 ])
            (expr_list:REG_EQUAL (and:SI (reg:SI 77 [ D.6357 ])
                    (const_int -679 [0xfffffffffffffd59]))
                (nil)))))
(insn 307 306 309 38 (set (mem/j/c:HI (plus:SI (reg/f:SI 198)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 200) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1531 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 309 307 310 38 (set:SI (reg/f:SI 202)
        (plus:SI (reg/f:SI 198)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1532 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 310 309 311 38 (set (reg:QI 203)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1532 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 311 310 312 38 (set (mem/j/c:QI (plus:SI (reg/f:SI 202)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (reg:QI 203)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1532 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 203)
        (nil)))
(call_insn 312 311 315 38 (call (mem:SI (symbol_ref:SI ("stateJustJoined") [flags 0x3]  <function_decl 0x100b7c0d8 stateJustJoined>) [0 stateJustJoined S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1533 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 315 312 318 38 (set (reg:SI 79 [ D.6359 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 202)
                    (const_int 87 [0x57])) [0 LMIC.frame+11 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1534 34 {zero_extendqisi2}
     (nil))
(insn 318 315 319 38 (set (reg:SI 208)
        (and:SI (reg:SI 79 [ D.6359 ])
            (const_int 15 [0xf]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1534 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 79 [ D.6359 ])
        (nil)))
(insn 319 318 322 38 (set (mem/j/c:QI (plus:SI (reg/f:SI 202)
                (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8])
        (subreg:QI (reg:SI 208) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1534 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(insn 322 319 325 38 (set (reg:SI 81 [ D.6359 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 202)
                    (const_int 88 [0x58])) [0 LMIC.frame+12 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1535 34 {zero_extendqisi2}
     (nil))
(insn 325 322 326 38 (set (mem/j/c:QI (plus:SI (reg/f:SI 202)
                (const_int 39 [0x27])) [0 LMIC.rxDelay+0 S1 A8])
        (subreg/s/v:QI (reg:SI 81 [ D.6359 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1535 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 202)
        (nil)))
(jump_insn 326 325 327 38 (set (pc)
        (if_then_else (ne (reg:SI 81 [ D.6359 ])
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1536 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 81 [ D.6359 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 332)
;;  succ:       39 [50.0%]  (FALLTHRU)
;;              40 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 39, loop depth 0, count 0, freq 50, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 [50.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(1){ }u381(7){ }u382(16){ }u383(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 213 214 215
(note 327 326 330 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 330 327 376 39 (set (reg:QI 215)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1536 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 376 330 375 39 (set (reg/f:SI 213)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC232") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1536 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 375 376 331 39 (set:SI (reg/f:SI 214)
        (plus:SI (reg/f:SI 213)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1536 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 331 375 332 39 (set (mem/j/c:QI (plus:SI (reg/f:SI 214)
                (const_int 39 [0x27])) [0 LMIC.rxDelay+0 S1 A8])
        (reg:QI 215)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1536 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 215)
        (expr_list:REG_DEAD (reg/f:SI 214)
            (nil))))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 40, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       38 [50.0%] 
;;              39 [100.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u387(1){ }u388(7){ }u389(16){ }u390(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44
(code_label 332 331 333 40 342 "" [1 uses])
(note 333 332 334 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 40 (set (reg:SI 10 a10)
        (const_int 6 [0x6])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1537 44 {movsi_internal}
     (nil))
(call_insn 335 334 10 40 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1537 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 10 335 373 40 (set (reg:SI 44 [ D.6354 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1538 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 373 10 374 40 (set (pc)
        (label_ref 336)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1538 78 {jump}
     (nil)
 -> 336)
;;  succ:       42 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

(barrier 374 373 352)
;; basic block 41, loop depth 0, count 0, freq 1911, maybe hot
;;  prev block 40, next block 42, flags: (RTL)
;;  pred:       20 [100.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u393(1){ }u394(7){ }u395(16){ }u396(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(code_label 352 374 351 41 344 "" [1 uses])
(note 351 352 9 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 9 351 336 41 (set (reg:SI 44 [ D.6354 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1476 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       42 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44

;; basic block 42, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 41, next block 1, flags: (RTL)
;;  pred:       16 [100.0%] 
;;              12 [100.0%] 
;;              41 [100.0%]  (FALLTHRU)
;;              40 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u397(1){ }u398(7){ }u399(16){ }u400(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 2 [a2]
(code_label 336 9 337 42 329 "" [3 uses])
(note 337 336 342 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 342 337 343 42 (set (reg/i:SI 2 a2)
        (reg:SI 44 [ D.6354 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1539 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6354 ])
        (nil)))
(insn 343 342 0 42 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1539 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function processRx1Jacc (processRx1Jacc, funcdef_no=81, decl_uid=3797, cgraph_uid=81, symbol_order=89)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
scanning new insn with uid = 30.
verify found no changes in insn with uid = 30.
deleting insn with uid = 18.
scanning new insn with uid = 31.
verify found no changes in insn with uid = 31.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Reg 47 uninteresting
Reg 48 uninteresting
Reg 42 uninteresting
Reg 50 uninteresting
Reg 51 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 47: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 51: (insn_list:REG_DEP_TRUE 30 (nil))

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r47,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r51,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:6440,6440
  a1(r50,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:0,0
  a2(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 25(l0): point = 1
   Insn 24(l0): point = 3
   Insn 23(l0): point = 5
   Insn 22(l0): point = 7
   Insn 30(l0): point = 9
   Insn 31(l0): point = 11
   Insn 14(l0): point = 14
   Insn 11(l0): point = 16
   Insn 9(l0): point = 19
   Insn 8(l0): point = 21
   Insn 7(l0): point = 23
   Insn 6(l0): point = 25
 a0(r51): [8..9]
 a1(r50): [10..11]
 a2(r42): [20..21]
 a3(r48): [22..23]
 a4(r47): [24..25]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r51): [0..1]
 a1(r50): [2..3]
 a2(r42): [4..5]
 a3(r48): [6..7]
 a4(r47): [8..9]
+++Allocating 0 bytes for conflict table (uncompressed size 40)
;; a0(r51,l0) conflicts:;; a1(r50,l0) conflicts:;; a2(r42,l0) conflicts:;; a3(r48,l0) conflicts:;; a4(r47,l0) conflicts:  cp0:a0(r51)<->a1(r50)@100:shuffle
  cp1:a3(r48)<->a4(r47)@125:shuffle
  regions=1, blocks=6, points=10
    allocnos=5 (big 0), copies=2, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r51 1r50 2r42 3r48 4r47
    modified regnos: 42 47 48 50 51
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@44880
      Allocno a0r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a3r48-a4r47 (freq=125):
        Result (freq=4000): a3r48(2000) a4r47(2000)
      Forming thread by copy 0:a0r51-a1r50 (freq=100):
        Result (freq=3220): a0r51(1610) a1r50(1610)
      Pushing a2(r42,l0)(cost 0)
      Pushing a1(r50,l0)(cost 0)
      Pushing a0(r51,l0)(cost 0)
      Pushing a4(r47,l0)(cost 0)
      Pushing a3(r48,l0)(cost 0)
      Popping a3(r48,l0)  -- assign reg 8
      Popping a4(r47,l0)  -- assign reg 8
      Popping a0(r51,l0)  -- assign reg 8
      Popping a1(r50,l0)  -- assign reg 8
      Popping a2(r42,l0)  -- assign reg 8
Disposition:
    2:r42  l0     8    4:r47  l0     8    3:r48  l0     8    1:r50  l0     8
    0:r51  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processRx1Jacc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={3d} r1={1d,7u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r8={2d} r9={2d} r10={3d,2u} r11={3d,1u} r12={3d,1u} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={1d,4u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r42={1d,1u} r47={1d,1u} r48={1d,1u} r50={1d,1u} r51={1d,1u} 
;;    total ref usage 102{72d,30u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 47 48
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 47)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC246") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 48)
        (plus:SI (reg/f:SI 47)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 47)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6365 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 48)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:SI 42 [ D.6365 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6365 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 15)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("processJoinAccept") [flags 0x3]  <function_decl 0x100bb2438 processJoinAccept>) [0 processJoinAccept S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(note 12 11 14 3 NOTE_INSN_DELETED)
(jump_insn 14 12 15 3 (set (pc)
        (if_then_else (ne (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref:SI 28)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1556 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 28)
;;  succ:       4 [61.0%]  (FALLTHRU)
;;              5 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 8050, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 50 51
(code_label 15 14 16 4 347 "" [1 uses])
(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 19 16 20 4 NOTE_INSN_DELETED)
(note 20 19 21 4 NOTE_INSN_DELETED)
(note 21 20 31 4 NOTE_INSN_DELETED)
(insn 31 21 30 4 (set (reg/f:SI 50)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC246") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 30 31 22 4 (set:SI (reg/f:SI 51)
        (plus:SI (reg/f:SI 50)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 50)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 22 30 23 4 (set (reg:SI 12 a12)
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 51)
                    (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 51)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC247") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("setupRx2Jacc") [flags 0x3]  <function_decl 0x100bb2948 setupRx2Jacc>)
        (nil)))
(insn 24 23 25 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC248") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 375000 [0x5b8d8])
        (nil)))
(call_insn 25 24 28 4 (call (mem:SI (symbol_ref:SI ("schedRx12") [flags 0x3]  <function_decl 0x100bb2000 schedRx12>) [0 schedRx12 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1557 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [39.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(1){ }u28(7){ }u29(16){ }u30(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 28 25 29 5 346 "" [1 uses])
(note 29 28 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processRx2Jacc (processRx2Jacc, funcdef_no=79, decl_uid=3791, cgraph_uid=79, symbol_order=87)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 20.
verify found no changes in insn with uid = 20.
deleting insn with uid = 12.
scanning new insn with uid = 21.
verify found no changes in insn with uid = 21.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 44 uninteresting
Reg 45 uninteresting
Reg 42 uninteresting
Reg 48: local to bb 3 def dominates all uses has unique first use
Reg 46 uninteresting
Reg 47 uninteresting
Ignoring reg 48 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 45: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r45,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r47,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a1(r48,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a2(r46,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a3(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 17(l0): point = 0
   Insn 14(l0): point = 3
   Insn 20(l0): point = 5
   Insn 21(l0): point = 7
   Insn 13(l0): point = 9
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
 a0(r47): [4..5]
 a1(r48): [4..9]
 a2(r46): [6..7]
 a3(r42): [13..14]
 a4(r45): [15..16]
 a5(r44): [17..18]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r47): [0..1]
 a1(r48): [0..3]
 a2(r46): [2..3]
 a3(r42): [4..5]
 a4(r45): [6..7]
 a5(r44): [8..9]
+++Allocating 24 bytes for conflict table (uncompressed size 48)
;; a0(r47,l0) conflicts: a1(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r48,l0) conflicts: a0(r47,l0) a2(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a1(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r42,l0) conflicts:;; a4(r45,l0) conflicts:;; a5(r44,l0) conflicts:  cp0:a0(r47)<->a2(r46)@76:shuffle
  cp1:a4(r45)<->a5(r44)@125:shuffle
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=2, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r47 1r48 2r46 3r42 4r45 5r44
    modified regnos: 42 44 45 46 47 48
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@51520
      Allocno a0r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a4r45-a5r44 (freq=125):
        Result (freq=4000): a4r45(2000) a5r44(2000)
      Forming thread by copy 0:a0r47-a2r46 (freq=76):
        Result (freq=2440): a0r47(1220) a2r46(1220)
      Pushing a1(r48,l0)(cost 0)
      Pushing a3(r42,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Pushing a0(r47,l0)(cost 0)
      Pushing a5(r44,l0)(cost 0)
      Pushing a4(r45,l0)(cost 0)
      Popping a4(r45,l0)  -- assign reg 8
      Popping a5(r44,l0)  -- assign reg 8
      Popping a0(r47,l0)  -- assign reg 8
      Popping a2(r46,l0)  -- assign reg 8
      Popping a3(r42,l0)  -- assign reg 8
      Popping a1(r48,l0)  -- assign reg 9
Disposition:
    3:r42  l0     8    5:r44  l0     8    4:r45  l0     8    2:r46  l0     8
    0:r47  l0     8    1:r48  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processRx2Jacc

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,5u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d,3u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r42={1d,1u} r44={1d,1u} r45={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} 
;;    total ref usage 65{43d,22u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 44 45
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC249") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1543 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 45)
        (plus:SI (reg/f:SI 44)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1543 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 44)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6367 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 45)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1543 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 45)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:SI 42 [ D.6367 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1543 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6367 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 15)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              4 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46 47 48
(note 10 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 10 21 3 (set (reg:QI 48)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1544 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 21 13 20 3 (set (reg/f:SI 46)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC249") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1544 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 20 21 14 3 (set:SI (reg/f:SI 47)
        (plus:SI (reg/f:SI 46)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1544 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 14 20 15 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 47)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 48)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1544 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 48)
        (expr_list:REG_DEAD (reg/f:SI 47)
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [39.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 15 14 16 4 350 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 0 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("processJoinAccept") [flags 0x3]  <function_decl 0x100bb2438 processJoinAccept>) [0 processJoinAccept S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1545 82 {call_value_internal}
     (expr_list:REG_UNUSED (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function onJoinFailed (onJoinFailed, funcdef_no=77, decl_uid=3773, cgraph_uid=77, symbol_order=85)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


onJoinFailed

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 47{38d,9u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 10 a10)
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1431 44 {movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1431 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function startJoining (startJoining, funcdef_no=95, decl_uid=3846, cgraph_uid=95, symbol_order=103)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


startJoining

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 47{38d,9u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 10 a10)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1842 44 {movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1842 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function runEngineUpdate (runEngineUpdate, funcdef_no=67, decl_uid=3694, cgraph_uid=67, symbol_order=75)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 6(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


runEngineUpdate

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 45{37d,8u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 0 2 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:939 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processPingRx (processPingRx, funcdef_no=97, decl_uid=3852, cgraph_uid=97, symbol_order=105)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
scanning new insn with uid = 33.
verify found no changes in insn with uid = 33.
deleting insn with uid = 12.
scanning new insn with uid = 34.
verify found no changes in insn with uid = 34.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Reg 45 uninteresting
Reg 46 uninteresting
Reg 42 uninteresting
Reg 49: local to bb 3 def dominates all uses has unique first use
Reg 47 uninteresting
Reg 48 uninteresting
Ignoring reg 49 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r48,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a1(r49,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:4000,4000
  a2(r47,l0) costs: ACC_REG:3000,3000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:16000,16000 MEM:0,0
  a3(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 26(l0): point = 1
   Insn 31(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 18(l0): point = 11
   Insn 15(l0): point = 13
   Insn 14(l0): point = 15
   Insn 33(l0): point = 17
   Insn 34(l0): point = 19
   Insn 13(l0): point = 21
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
 a0(r48): [16..17]
 a1(r49): [16..21]
 a2(r47): [18..19]
 a3(r42): [25..26]
 a4(r46): [27..28]
 a5(r45): [29..30]
Compressing live ranges: from 33 to 10 - 30%
Ranges after the compression:
 a0(r48): [0..1]
 a1(r49): [0..3]
 a2(r47): [2..3]
 a3(r42): [4..5]
 a4(r46): [6..7]
 a5(r45): [8..9]
+++Allocating 24 bytes for conflict table (uncompressed size 48)
;; a0(r48,l0) conflicts: a1(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r49,l0) conflicts: a0(r48,l0) a2(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r47,l0) conflicts: a1(r49,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r42,l0) conflicts:;; a4(r46,l0) conflicts:;; a5(r45,l0) conflicts:  cp0:a0(r48)<->a2(r47)@62:shuffle
  cp1:a4(r46)<->a5(r45)@125:shuffle
  regions=1, blocks=7, points=10
    allocnos=6 (big 0), copies=2, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r48 1r49 2r47 3r42 4r46 5r45
    modified regnos: 42 45 46 47 48 49
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@48000
      Allocno a0r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a4r46-a5r45 (freq=125):
        Result (freq=4000): a4r46(2000) a5r45(2000)
      Forming thread by copy 0:a0r48-a2r47 (freq=62):
        Result (freq=2000): a0r48(1000) a2r47(1000)
      Pushing a1(r49,l0)(cost 0)
      Pushing a3(r42,l0)(cost 0)
      Pushing a2(r47,l0)(cost 0)
      Pushing a0(r48,l0)(cost 0)
      Pushing a5(r45,l0)(cost 0)
      Pushing a4(r46,l0)(cost 0)
      Popping a4(r46,l0)  -- assign reg 8
      Popping a5(r45,l0)  -- assign reg 8
      Popping a0(r48,l0)  -- assign reg 8
      Popping a2(r47,l0)  -- assign reg 8
      Popping a3(r42,l0)  -- assign reg 8
      Popping a1(r49,l0)  -- assign reg 9
Disposition:
    3:r42  l0     8    5:r45  l0     8    4:r46  l0     8    2:r47  l0     8
    0:r48  l0     8    1:r49  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processPingRx

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={4d} r1={1d,9u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,6u} r8={3d} r9={3d} r10={4d,2u} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,6u} r17={1d,5u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r42={1d,1u} r45={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} r49={1d,1u} 
;;    total ref usage 132{98d,34u,0e} in 14{11 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 45 46
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC250") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1875 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 46)
        (plus:SI (reg/f:SI 45)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1875 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 45)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6368 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 46)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1875 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:SI 42 [ D.6368 ])
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1875 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6368 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 24)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              5 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 47 48 49
(note 10 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 10 34 3 (set (reg:QI 49)
        (const_int 4 [0x4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1876 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))
(insn 34 13 33 3 (set (reg/f:SI 47)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC250") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1876 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 33 34 14 3 (set:SI (reg/f:SI 48)
        (plus:SI (reg/f:SI 47)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1876 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 47)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 14 33 15 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 48)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 49)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1876 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 49)
        (expr_list:REG_DEAD (reg/f:SI 48)
            (nil))))
(call_insn 15 14 16 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("decodeFrame") [flags 0x3]  <function_decl 0x100b7c360 decodeFrame>) [0 decodeFrame S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1877 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(note 16 15 18 3 NOTE_INSN_DELETED)
(jump_insn 18 16 19 3 (set (pc)
        (if_then_else (eq (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1877 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 7929 (nil)))
 -> 24)
;;  succ:       4 [20.7%]  (FALLTHRU)
;;              5 [79.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 1036, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [20.7%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(1){ }u18(7){ }u19(16){ }u20(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 10 a10)
        (const_int 13 [0xd])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1878 44 {movsi_internal}
     (nil))
(call_insn 21 20 31 4 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1878 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(jump_insn 31 21 32 4 (set (pc)
        (label_ref 29)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1879 78 {jump}
     (nil)
 -> 29)
;;  succ:       6 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 32 31 24)
;; basic block 5, loop depth 0, count 0, freq 8965, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       2 [50.0%] 
;;              3 [79.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(1){ }u24(7){ }u25(16){ }u26(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 24 32 25 5 355 "" [2 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 25 29 5 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1883 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(1){ }u29(7){ }u30(16){ }u31(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 29 26 30 6 354 "" [1 uses])
(note 30 29 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processDnData (processDnData, funcdef_no=98, decl_uid=3806, cgraph_uid=98, symbol_order=106)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 36 n_edges 51 count 39 (  1.1)
scanning new insn with uid = 291.
verify found no changes in insn with uid = 291.
deleting insn with uid = 227.
scanning new insn with uid = 292.
verify found no changes in insn with uid = 292.
deleting insn with uid = 226.
scanning new insn with uid = 293.
verify found no changes in insn with uid = 293.
deleting insn with uid = 159.
scanning new insn with uid = 294.
verify found no changes in insn with uid = 294.
deleting insn with uid = 139.
scanning new insn with uid = 295.
verify found no changes in insn with uid = 295.
deleting insn with uid = 122.
scanning new insn with uid = 296.
verify found no changes in insn with uid = 296.
deleting insn with uid = 121.
scanning new insn with uid = 297.
verify found no changes in insn with uid = 297.
deleting insn with uid = 108.
scanning new insn with uid = 298.
verify found no changes in insn with uid = 298.
deleting insn with uid = 107.
scanning new insn with uid = 299.
verify found no changes in insn with uid = 299.
deleting insn with uid = 100.
scanning new insn with uid = 300.
verify found no changes in insn with uid = 300.
deleting insn with uid = 99.
scanning new insn with uid = 301.
verify found no changes in insn with uid = 301.
deleting insn with uid = 90.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 36 n_edges 51 count 39 (  1.1)
Reg 85 uninteresting
Reg 43 uninteresting
Reg 91 uninteresting
Reg 92 uninteresting
Reg 46 uninteresting
Reg 93 uninteresting
Reg 94 uninteresting
Reg 50 uninteresting
Reg 95 uninteresting
Reg 51: local to bb 7 def dominates all uses has unique first use
Reg 96 uninteresting
Reg 97 uninteresting
Reg 99 uninteresting
Reg 79 uninteresting
Reg 100 uninteresting
Reg 76 uninteresting
Reg 77: local to bb 8 def dominates all uses has unique first use
Reg 101 uninteresting
Reg 102 uninteresting
Reg 103 uninteresting
Reg 78: def dominates all uses has unique first use
Reg 104: local to bb 12 def dominates all uses has unique first use
Reg 107 uninteresting
Reg 109 uninteresting
Reg 112: local to bb 13 def dominates all uses has unique first use
Reg 110 uninteresting
Reg 111 uninteresting
Reg 115: local to bb 14 def dominates all uses has unique first use
Reg 113 uninteresting
Reg 114 uninteresting
Reg 116 uninteresting
Reg 117 uninteresting
Reg 57 uninteresting
Reg 119: local to bb 15 def dominates all uses has unique first use
Reg 120 uninteresting
Reg 124: local to bb 16 def dominates all uses has unique first use
Reg 121 uninteresting
Reg 122 uninteresting
Reg 125 uninteresting
Reg 126: local to bb 17 def dominates all uses has unique first use
Reg 127 uninteresting
Reg 131 uninteresting
Reg 132 uninteresting
Reg 134 uninteresting
Reg 62 uninteresting
Reg 137 uninteresting
Reg 63 uninteresting
Reg 140 uninteresting
Reg 147 uninteresting
Reg 146: local to bb 20 def dominates all uses has unique first use
Reg 145 uninteresting
Reg 148 uninteresting
Reg 149 uninteresting
Reg 68 uninteresting
Reg 151: local to bb 21 def dominates all uses has unique first use
Reg 152 uninteresting
Reg 153 uninteresting
Reg 154 uninteresting
Reg 81 uninteresting
Reg 82: local to bb 22 def dominates all uses has unique first use
Reg 155 uninteresting
Reg 156 uninteresting
Reg 157 uninteresting
Reg 158: local to bb 24 def dominates all uses has unique first use
Reg 159 uninteresting
Reg 162: local to bb 24 def dominates all uses has unique first use
Reg 164 uninteresting
Reg 163 uninteresting
Reg 165 uninteresting
Reg 166 uninteresting
Reg 72 uninteresting
Reg 167 uninteresting
Reg 73 uninteresting
Reg 174: local to bb 27 def dominates all uses has unique first use
Reg 172 uninteresting
Reg 173 uninteresting
Reg 175 uninteresting
Reg 74: local to bb 28 def dominates all uses has unique first use
Reg 176 uninteresting
Reg 177 uninteresting
Reg 179 uninteresting
Reg 180 uninteresting
Reg 47 uninteresting
Examining insn 38, def for 51
  all ok
Examining insn 235, def for 74
  all ok
Found def insn 61 for 77 to be not moveable
Reg 78 not local to one basic block
Found def insn 185 for 82 to be not moveable
Ignoring reg 104 with equiv init insn
Ignoring reg 112 with equiv init insn
Ignoring reg 115 with equiv init insn
Examining insn 117, def for 119
  all ok
Examining insn 124, def for 124
  all ok
Ignoring reg 126 with equiv init insn
Examining insn 161, def for 146
  all ok
Examining insn 173, def for 151
  all ok
Ignoring reg 158 with equiv init insn
Found def insn 203 for 162 to be not moveable
Ignoring reg 174 with equiv init insn
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 8 9
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 30 }
;; 5 succs { 6 14 }
;; 6 succs { 7 13 }
;; 7 succs { 11 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 8 12 }
;; 12 succs { 35 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 25 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 33 }
;; 26 succs { 27 28 }
;; 27 succs { 35 }
;; 28 succs { 29 34 }
;; 29 succs { 35 }
;; 30 succs { 31 18 }
;; 31 succs { 32 5 }
;; 32 succs { 35 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 85: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 91: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 94: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 96: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 97: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 84 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 301 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 300 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 299 (nil))
init_insns for 112: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 298 (nil))
init_insns for 114: (insn_list:REG_DEP_TRUE 297 (nil))
init_insns for 115: (insn_list:REG_DEP_TRUE 109 (nil))
init_insns for 116: (insn_list:REG_DEP_TRUE 113 (nil))
init_insns for 117: (insn_list:REG_DEP_TRUE 114 (nil))
init_insns for 120: (insn_list:REG_DEP_TRUE 118 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 296 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 295 (nil))
init_insns for 125: (insn_list:REG_DEP_TRUE 128 (nil))
init_insns for 126: (insn_list:REG_DEP_TRUE 129 (nil))
init_insns for 127: (insn_list:REG_DEP_TRUE 130 (nil))
init_insns for 131: (insn_list:REG_DEP_TRUE 138 (nil))
init_insns for 132: (insn_list:REG_DEP_TRUE 294 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 146 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 293 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 160 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 169 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 170 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 174 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 177 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 183 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 186 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 197 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 198 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 199 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 204 (nil))
init_insns for 165: (insn_list:REG_DEP_TRUE 211 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 212 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 216 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 292 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 291 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 228 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 236 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 237 (nil))
init_insns for 179: (insn_list:REG_DEP_TRUE 251 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 252 (nil))

Pass 0 for finding pseudo/allocno costs

    r180: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r180,l0) best AR_REGS, allocno AR_REGS
    r179: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r179,l0) best AR_REGS, allocno AR_REGS
    r177: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r177,l0) best AR_REGS, allocno AR_REGS
    r176: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r176,l0) best AR_REGS, allocno AR_REGS
    r175: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r175,l0) best AR_REGS, allocno AR_REGS
    r174: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r174,l0) best AR_REGS, allocno AR_REGS
    r173: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r173,l0) best AR_REGS, allocno AR_REGS
    r172: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r172,l0) best AR_REGS, allocno AR_REGS
    r167: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r167,l0) best AR_REGS, allocno AR_REGS
    r166: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a14 (r166,l0) best AR_REGS, allocno AR_REGS
    r165: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a15 (r165,l0) best AR_REGS, allocno AR_REGS
    r164: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a18 (r164,l0) best AR_REGS, allocno AR_REGS
    r163: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a17 (r163,l0) best AR_REGS, allocno AR_REGS
    r162: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a19 (r162,l0) best AR_REGS, allocno AR_REGS
    r159: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a21 (r159,l0) best AR_REGS, allocno AR_REGS
    r158: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a20 (r158,l0) best AR_REGS, allocno AR_REGS
    r157: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a16 (r157,l0) best AR_REGS, allocno AR_REGS
    r156: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a23 (r156,l0) best AR_REGS, allocno AR_REGS
    r155: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a24 (r155,l0) best AR_REGS, allocno AR_REGS
    r154: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a27 (r154,l0) best AR_REGS, allocno AR_REGS
    r153: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a28 (r153,l0) best AR_REGS, allocno AR_REGS
    r152: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a30 (r152,l0) best AR_REGS, allocno AR_REGS
    r151: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a29 (r151,l0) best AR_REGS, allocno AR_REGS
    r149: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a32 (r149,l0) best AR_REGS, allocno AR_REGS
    r148: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a33 (r148,l0) best AR_REGS, allocno AR_REGS
    r147: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a36 (r147,l0) best AR_REGS, allocno AR_REGS
    r146: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a35 (r146,l0) best AR_REGS, allocno AR_REGS
    r145: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a34 (r145,l0) best AR_REGS, allocno AR_REGS
    r140: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a38 (r140,l0) best AR_REGS, allocno AR_REGS
    r137: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a40 (r137,l0) best AR_REGS, allocno AR_REGS
    r134: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a42 (r134,l0) best AR_REGS, allocno AR_REGS
    r133: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a44 (r133,l0) best AR_REGS, allocno AR_REGS
    r132: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a43 (r132,l0) best AR_REGS, allocno AR_REGS
    r131: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a41 (r131,l0) best AR_REGS, allocno AR_REGS
    r127: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a46 (r127,l0) best AR_REGS, allocno AR_REGS
    r126: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a45 (r126,l0) best AR_REGS, allocno AR_REGS
    r125: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a47 (r125,l0) best AR_REGS, allocno AR_REGS
    r124: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a49 (r124,l0) best AR_REGS, allocno AR_REGS
    r122: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a48 (r122,l0) best AR_REGS, allocno AR_REGS
    r121: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a50 (r121,l0) best AR_REGS, allocno AR_REGS
    r120: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a52 (r120,l0) best AR_REGS, allocno AR_REGS
    r119: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a53 (r119,l0) best AR_REGS, allocno AR_REGS
    r117: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a54 (r117,l0) best AR_REGS, allocno AR_REGS
    r116: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a55 (r116,l0) best AR_REGS, allocno AR_REGS
    r115: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a57 (r115,l0) best AR_REGS, allocno AR_REGS
    r114: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a56 (r114,l0) best AR_REGS, allocno AR_REGS
    r113: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a58 (r113,l0) best AR_REGS, allocno AR_REGS
    r112: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a60 (r112,l0) best AR_REGS, allocno AR_REGS
    r111: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a59 (r111,l0) best AR_REGS, allocno AR_REGS
    r110: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a61 (r110,l0) best AR_REGS, allocno AR_REGS
    r109: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a63 (r109,l0) best AR_REGS, allocno AR_REGS
    r108: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a65 (r108,l0) best AR_REGS, allocno AR_REGS
    r107: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a64 (r107,l0) best AR_REGS, allocno AR_REGS
    r104: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a62 (r104,l0) best AR_REGS, allocno AR_REGS
    r103: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a85 (r103,l1) best AR_REGS, allocno AR_REGS
    r102: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a86 (r102,l1) best AR_REGS, allocno AR_REGS
    r101: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a87 (r101,l1) best AR_REGS, allocno AR_REGS
    r100: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a90 (r100,l1) best AR_REGS, allocno AR_REGS
    r99: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a69 (r99,l0) best AR_REGS, allocno AR_REGS
    r97: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a72 (r97,l0) best AR_REGS, allocno AR_REGS
    r96: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a71 (r96,l0) best AR_REGS, allocno AR_REGS
    r95: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a73 (r95,l0) best AR_REGS, allocno AR_REGS
    r94: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a75 (r94,l0) best AR_REGS, allocno AR_REGS
    r93: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a76 (r93,l0) best AR_REGS, allocno AR_REGS
    r92: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a78 (r92,l0) best AR_REGS, allocno AR_REGS
    r91: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a79 (r91,l0) best AR_REGS, allocno AR_REGS
    r85: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a81 (r85,l0) best AR_REGS, allocno AR_REGS
    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a22 (r83,l0) best AR_REGS, allocno AR_REGS
    r82: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a25 (r82,l0) best AR_REGS, allocno AR_REGS
    r81: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a26 (r81,l0) best AR_REGS, allocno AR_REGS
    r79: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a68 (r79,l0) best AR_REGS, allocno AR_REGS
    r78: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a84 (r78,l1) best AR_REGS, allocno AR_REGS
    r77: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a88 (r77,l1) best AR_REGS, allocno AR_REGS
    r76: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a89 (r76,l1) best AR_REGS, allocno AR_REGS
    r74: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r74,l0) best AR_REGS, allocno AR_REGS
    r73: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r73,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r72,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a31 (r68,l0) best AR_REGS, allocno AR_REGS
    r64: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a83 (r64,l1) best AR_REGS, allocno AR_REGS
    a67 (r64,l0) best AR_REGS, allocno AR_REGS
    r63: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a39 (r63,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a37 (r62,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a51 (r57,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a70 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a74 (r50,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a77 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a82 (r44,l1) best AR_REGS, allocno AR_REGS
    a66 (r44,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a80 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:3453,3453 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:18416,18416 MEM:4604,4604
  a1(r47,l0) costs: ACC_REG:396,396 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2112,2112 MEM:528,528
  a2(r180,l0) costs: ACC_REG:396,396 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2112,2112 MEM:528,528
  a3(r179,l0) costs: ACC_REG:396,396 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2112,2112 MEM:0,0
  a4(r74,l0) costs: ACC_REG:1458,1458 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:7776,7776 MEM:1944,1944
  a5(r177,l0) costs: ACC_REG:972,972 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5184,5184 MEM:1296,1296
  a6(r176,l0) costs: ACC_REG:972,972 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5184,5184 MEM:0,0
  a7(r175,l0) costs: ACC_REG:972,972 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5184,5184 MEM:1296,1296
  a8(r72,l0) costs: ACC_REG:2502,2502 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:13344,13344 MEM:3336,3336
  a9(r173,l0) costs: ACC_REG:252,252 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1344,1344 MEM:336,336
  a10(r174,l0) costs: ACC_REG:252,252 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1344,1344 MEM:336,336
  a11(r172,l0) costs: ACC_REG:252,252 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1344,1344 MEM:0,0
  a12(r73,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:1640,1640
  a13(r167,l0) costs: ACC_REG:1230,1230 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6560,6560 MEM:0,0
  a14(r166,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a15(r165,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:0,0
  a16(r157,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:1344,1344
  a17(r163,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a18(r164,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:0,0
  a19(r162,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a20(r158,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a21(r159,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a22(r83,l0) costs: ACC_REG:2238,2238 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11936,11936 MEM:2984,2984
  a23(r156,l0) costs: ACC_REG:726,726 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:3872,3872 MEM:968,968
  a24(r155,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a25(r82,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a26(r81,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:1344,1344
  a27(r154,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:0,0
  a28(r153,l0) costs: ACC_REG:1008,1008 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5376,5376 MEM:0,0
  a29(r151,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a30(r152,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a31(r68,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a32(r149,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a33(r148,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:0,0
  a34(r145,l0) costs: ACC_REG:288,288 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1536,1536 MEM:0,0
  a35(r146,l0) costs: ACC_REG:288,288 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1536,1536 MEM:384,384
  a36(r147,l0) costs: ACC_REG:288,288 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1536,1536 MEM:0,0
  a37(r62,l0) costs: ACC_REG:2664,2664 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14208,14208 MEM:3552,3552
  a38(r140,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a39(r63,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a40(r137,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a41(r131,l0) costs: ACC_REG:4032,4032 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:21504,21504 MEM:2688,2688
  a42(r134,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a43(r132,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a44(r133,l0) costs: ACC_REG:2016,2016 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:10752,10752 MEM:2688,2688
  a45(r126,l0) costs: ACC_REG:2430,2430 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12960,12960 MEM:3240,3240
  a46(r127,l0) costs: ACC_REG:2430,2430 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12960,12960 MEM:3240,3240
  a47(r125,l0) costs: ACC_REG:1620,1620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8640,8640 MEM:0,0
  a48(r122,l0) costs: ACC_REG:1164,1164 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6208,6208 MEM:1552,1552
  a49(r124,l0) costs: ACC_REG:1164,1164 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6208,6208 MEM:1552,1552
  a50(r121,l0) costs: ACC_REG:1164,1164 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:6208,6208 MEM:0,0
  a51(r57,l0) costs: ACC_REG:2202,2202 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11744,11744 MEM:2936,2936
  a52(r120,l0) costs: ACC_REG:1620,1620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8640,8640 MEM:2160,2160
  a53(r119,l0) costs: ACC_REG:1620,1620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8640,8640 MEM:2160,2160
  a54(r117,l0) costs: ACC_REG:1620,1620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8640,8640 MEM:2160,2160
  a55(r116,l0) costs: ACC_REG:1620,1620 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:8640,8640 MEM:0,0
  a56(r114,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:1440,1440
  a57(r115,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:1440,1440
  a58(r113,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:0,0
  a59(r111,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a60(r112,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a61(r110,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:0,0
  a62(r104,l0) costs: ACC_REG:1080,1080 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:5760,5760 MEM:720,720
  a63(r109,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a64(r107,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a65(r108,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a66(r44,l0) costs: ACC_REG:540,7200 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,38400 MEM:720,9600
  a67(r64,l0) costs: ACC_REG:270,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:1440,48000 MEM:360,12000
  a68(r79,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a69(r99,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:0,0
  a70(r51,l0) costs: ACC_REG:810,810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4320,4320 MEM:1080,1080
  a71(r96,l0) costs: ACC_REG:810,810 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:4320,4320 MEM:360,360
  a72(r97,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a73(r95,l0) costs: ACC_REG:540,540 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:2880,2880 MEM:720,720
  a74(r50,l0) costs: ACC_REG:2970,2970 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:15840,15840 MEM:3960,3960
  a75(r94,l0) costs: ACC_REG:2160,2160 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11520,11520 MEM:2880,2880
  a76(r93,l0) costs: ACC_REG:2160,2160 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:11520,11520 MEM:0,0
  a77(r46,l0) costs: ACC_REG:2760,2760 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14720,14720 MEM:3680,3680
  a78(r92,l0) costs: ACC_REG:2760,2760 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14720,14720 MEM:3680,3680
  a79(r91,l0) costs: ACC_REG:2760,2760 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14720,14720 MEM:0,0
  a80(r43,l0) costs: ACC_REG:2760,2760 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14720,14720 MEM:3680,3680
  a81(r85,l0) costs: ACC_REG:2760,2760 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:14720,14720 MEM:0,0
  a82(r44,l1) costs: ACC_REG:6660,6660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:35520,35520 MEM:8880,8880
  a83(r64,l1) costs: ACC_REG:8730,8730 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:46560,46560 MEM:11640,11640
  a84(r78,l1) costs: ACC_REG:5730,5730 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:30560,30560 MEM:7640,7640
  a85(r103,l1) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a86(r102,l1) costs: ACC_REG:3930,3930 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:20960,20960 MEM:5240,5240
  a87(r101,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a88(r77,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a89(r76,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:7280,7280
  a90(r100,l1) costs: ACC_REG:5460,5460 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:29120,29120 MEM:0,0

   Insn 265(l0): point = 0
   Insn 264(l0): point = 2
   Insn 7(l0): point = 5
   Insn 289(l0): point = 8
   Insn 5(l0): point = 10
   Insn 287(l0): point = 13
   Insn 284(l0): point = 16
   Insn 6(l0): point = 18
   Insn 241(l0): point = 20
   Insn 239(l0): point = 23
   Insn 238(l0): point = 25
   Insn 237(l0): point = 27
   Insn 236(l0): point = 29
   Insn 235(l0): point = 31
   Insn 234(l0): point = 33
   Insn 282(l0): point = 36
   Insn 4(l0): point = 38
   Insn 229(l0): point = 40
   Insn 291(l0): point = 42
   Insn 292(l0): point = 44
   Insn 228(l0): point = 46
   Insn 225(l0): point = 48
   Insn 224(l0): point = 50
   Insn 222(l0): point = 53
   Insn 217(l0): point = 55
   Insn 216(l0): point = 57
   Insn 214(l0): point = 60
   Insn 213(l0): point = 62
   Insn 212(l0): point = 64
   Insn 211(l0): point = 66
   Insn 208(l0): point = 69
   Insn 207(l0): point = 71
   Insn 206(l0): point = 73
   Insn 205(l0): point = 75
   Insn 204(l0): point = 77
   Insn 203(l0): point = 79
   Insn 200(l0): point = 81
   Insn 199(l0): point = 83
   Insn 198(l0): point = 85
   Insn 197(l0): point = 87
   Insn 196(l0): point = 89
   Insn 195(l0): point = 91
   Insn 194(l0): point = 93
   Insn 193(l0): point = 95
   Insn 190(l0): point = 98
   Insn 189(l0): point = 100
   Insn 187(l0): point = 103
   Insn 186(l0): point = 105
   Insn 185(l0): point = 107
   Insn 184(l0): point = 109
   Insn 183(l0): point = 111
   Insn 178(l0): point = 113
   Insn 177(l0): point = 115
   Insn 175(l0): point = 118
   Insn 174(l0): point = 120
   Insn 173(l0): point = 122
   Insn 171(l0): point = 124
   Insn 170(l0): point = 126
   Insn 169(l0): point = 128
   Insn 168(l0): point = 130
   Insn 167(l0): point = 132
   Insn 164(l0): point = 135
   Insn 163(l0): point = 137
   Insn 162(l0): point = 139
   Insn 293(l0): point = 141
   Insn 161(l0): point = 143
   Insn 160(l0): point = 145
   Insn 157(l0): point = 148
   Insn 151(l0): point = 151
   Insn 150(l0): point = 153
   Insn 147(l0): point = 155
   Insn 146(l0): point = 157
   Insn 144(l0): point = 159
   Insn 142(l0): point = 161
   Insn 141(l0): point = 163
   Insn 294(l0): point = 165
   Insn 140(l0): point = 167
   Insn 138(l0): point = 169
   Insn 135(l0): point = 172
   Insn 131(l0): point = 174
   Insn 130(l0): point = 176
   Insn 129(l0): point = 178
   Insn 128(l0): point = 180
   Insn 125(l0): point = 183
   Insn 295(l0): point = 185
   Insn 296(l0): point = 187
   Insn 124(l0): point = 189
   Insn 119(l0): point = 192
   Insn 118(l0): point = 194
   Insn 117(l0): point = 196
   Insn 115(l0): point = 198
   Insn 114(l0): point = 200
   Insn 113(l0): point = 202
   Insn 110(l0): point = 205
   Insn 297(l0): point = 207
   Insn 298(l0): point = 209
   Insn 109(l0): point = 211
   Insn 280(l0): point = 214
   Insn 102(l0): point = 216
   Insn 299(l0): point = 218
   Insn 300(l0): point = 220
   Insn 101(l0): point = 222
   Insn 278(l0): point = 225
   Insn 3(l0): point = 227
   Insn 94(l0): point = 229
   Insn 93(l0): point = 231
   Insn 92(l0): point = 233
   Insn 301(l0): point = 235
   Insn 91(l0): point = 237
   Insn 87(l0): point = 239
   Insn 86(l0): point = 241
   Insn 85(l0): point = 243
   Insn 84(l0): point = 245
   Insn 83(l0): point = 247
   Insn 82(l0): point = 249
   Insn 81(l0): point = 251
   Insn 80(l0): point = 253
   Insn 276(l0): point = 256
   Insn 49(l0): point = 258
   Insn 48(l0): point = 260
   Insn 47(l0): point = 262
   Insn 43(l0): point = 264
   Insn 41(l0): point = 266
   Insn 40(l0): point = 268
   Insn 39(l0): point = 270
   Insn 38(l0): point = 272
   Insn 37(l0): point = 274
   Insn 35(l0): point = 277
   Insn 33(l0): point = 280
   Insn 32(l0): point = 282
   Insn 31(l0): point = 284
   Insn 30(l0): point = 286
   Insn 257(l0): point = 289
   Insn 253(l0): point = 291
   Insn 252(l0): point = 293
   Insn 251(l0): point = 295
   Insn 249(l0): point = 298
   Insn 247(l0): point = 300
   Insn 246(l0): point = 302
   Insn 27(l0): point = 305
   Insn 26(l0): point = 307
   Insn 25(l0): point = 309
   Insn 24(l0): point = 311
   Insn 21(l0): point = 314
   Insn 20(l0): point = 316
   Insn 19(l0): point = 318
   Insn 16(l0): point = 321
   Insn 11(l0): point = 323
   Insn 10(l0): point = 325
   Insn 63(l1): point = 328
   Insn 62(l1): point = 330
   Insn 61(l1): point = 332
   Insn 60(l1): point = 334
   Insn 59(l1): point = 336
   Insn 78(l1): point = 339
   Insn 75(l1): point = 341
   Insn 74(l1): point = 343
   Insn 69(l1): point = 346
   Insn 66(l1): point = 349
   Insn 65(l1): point = 351
 a0(r42): [289..300] [225..227] [36..38] [13..18] [8..10] [3..5]
 a1(r47): [290..291]
 a2(r180): [292..293]
 a3(r179): [294..295]
 a4(r74): [24..31]
 a5(r177): [26..27]
 a6(r176): [28..29]
 a7(r175): [32..33]
 a8(r72): [53..62] [34..35]
 a9(r173): [41..42]
 a10(r174): [41..46]
 a11(r172): [43..44]
 a12(r73): [54..55]
 a13(r167): [56..57]
 a14(r166): [63..64]
 a15(r165): [65..66]
 a16(r157): [74..87]
 a17(r163): [74..75]
 a18(r164): [76..77]
 a19(r162): [76..79]
 a20(r158): [82..85]
 a21(r159): [82..83]
 a22(r83): [101..113] [94..98]
 a23(r156): [99..100]
 a24(r155): [104..105]
 a25(r82): [104..107]
 a26(r81): [108..109]
 a27(r154): [110..111]
 a28(r153): [114..115]
 a29(r151): [119..122]
 a30(r152): [119..120]
 a31(r68): [123..124]
 a32(r149): [125..126]
 a33(r148): [127..128]
 a34(r145): [140..141]
 a35(r146): [140..143]
 a36(r147): [144..145]
 a37(r62): [144..161]
 a38(r140): [152..153]
 a39(r63): [154..155]
 a40(r137): [156..157]
 a41(r131): [158..169]
 a42(r134): [162..163]
 a43(r132): [164..165]
 a44(r133): [164..167]
 a45(r126): [173..178]
 a46(r127): [173..176]
 a47(r125): [179..180]
 a48(r122): [184..185]
 a49(r124): [184..189]
 a50(r121): [186..187]
 a51(r57): [190..198]
 a52(r120): [193..194]
 a53(r119): [193..196]
 a54(r117): [199..200]
 a55(r116): [201..202]
 a56(r114): [206..207]
 a57(r115): [206..211]
 a58(r113): [208..209]
 a59(r111): [217..218]
 a60(r112): [217..222]
 a61(r110): [219..220]
 a62(r104): [232..245]
 a63(r109): [232..233]
 a64(r107): [234..235]
 a65(r108): [234..237]
 a66(r44): [252..264]
 a67(r64): [256..258]
 a68(r79): [259..260]
 a69(r99): [261..262]
 a70(r51): [261..272]
 a71(r96): [265..270]
 a72(r97): [267..268]
 a73(r95): [273..274]
 a74(r50): [275..282]
 a75(r94): [283..284]
 a76(r93): [285..286]
 a77(r46): [306..307]
 a78(r92): [308..309]
 a79(r91): [310..311]
 a80(r43): [322..323]
 a81(r85): [324..325]
 a82(r44): [352..353] [328..349]
 a83(r64): [340..346]
 a84(r78): [347..353] [328..341]
 a85(r103): [342..343]
 a86(r102): [350..351]
 a87(r101): [329..330]
 a88(r77): [329..332]
 a89(r76): [333..334]
 a90(r100): [335..336]
 Rebuilding regno allocno list for 103
 Rebuilding regno allocno list for 102
 Rebuilding regno allocno list for 101
 Rebuilding regno allocno list for 100
 Rebuilding regno allocno list for 78
 Rebuilding regno allocno list for 77
 Rebuilding regno allocno list for 76
      Moving ranges of a83r64 to a67r64:  [340..346]
      Moving ranges of a82r44 to a66r44:  [352..353] [328..349]
Compressing live ranges: from 354 to 146 - 41%
Ranges after the compression:
 a0(r42): [114..119] [92..93] [14..15] [0..5]
 a1(r47): [114..115]
 a2(r180): [116..117]
 a3(r179): [118..119]
 a4(r74): [6..9]
 a5(r177): [6..7]
 a6(r176): [8..9]
 a7(r175): [10..11]
 a8(r72): [20..23] [12..13]
 a9(r173): [16..17]
 a10(r174): [16..19]
 a11(r172): [18..19]
 a12(r73): [20..21]
 a13(r167): [22..23]
 a14(r166): [24..25]
 a15(r165): [26..27]
 a16(r157): [28..33]
 a17(r163): [28..29]
 a18(r164): [30..31]
 a19(r162): [30..31]
 a20(r158): [32..33]
 a21(r159): [32..33]
 a22(r83): [38..43] [34..35]
 a23(r156): [36..37]
 a24(r155): [38..39]
 a25(r82): [38..39]
 a26(r81): [40..41]
 a27(r154): [42..43]
 a28(r153): [44..45]
 a29(r151): [46..47]
 a30(r152): [46..47]
 a31(r68): [48..49]
 a32(r149): [50..51]
 a33(r148): [52..53]
 a34(r145): [54..55]
 a35(r146): [54..55]
 a36(r147): [56..57]
 a37(r62): [56..65]
 a38(r140): [58..59]
 a39(r63): [60..61]
 a40(r137): [62..63]
 a41(r131): [64..69]
 a42(r134): [66..67]
 a43(r132): [68..69]
 a44(r133): [68..69]
 a45(r126): [70..71]
 a46(r127): [70..71]
 a47(r125): [72..73]
 a48(r122): [74..75]
 a49(r124): [74..77]
 a50(r121): [76..77]
 a51(r57): [78..79]
 a52(r120): [78..79]
 a53(r119): [78..79]
 a54(r117): [80..81]
 a55(r116): [82..83]
 a56(r114): [84..85]
 a57(r115): [84..87]
 a58(r113): [86..87]
 a59(r111): [88..89]
 a60(r112): [88..91]
 a61(r110): [90..91]
 a62(r104): [94..97]
 a63(r109): [94..95]
 a64(r107): [96..97]
 a65(r108): [96..97]
 a66(r44): [144..145] [130..141] [98..103]
 a67(r64): [136..139] [98..99]
 a68(r79): [100..101]
 a69(r99): [102..103]
 a70(r51): [102..105]
 a71(r96): [104..105]
 a72(r97): [104..105]
 a73(r95): [106..107]
 a74(r50): [108..109]
 a75(r94): [110..111]
 a76(r93): [112..113]
 a77(r46): [120..121]
 a78(r92): [122..123]
 a79(r91): [124..125]
 a80(r43): [126..127]
 a81(r85): [128..129]
 a84(r78): [140..145] [130..137]
 a85(r103): [138..139]
 a86(r102): [142..143]
 a87(r101): [130..131]
 a88(r77): [130..131]
 a89(r76): [132..133]
 a90(r100): [134..135]
+++Allocating 832 bytes for conflict table (uncompressed size 1456)
;; a0(r42,l0) conflicts: a1(r47,l0) a2(r180,l0) a3(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r47,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r180,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r179,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r74,l0) conflicts: a5(r177,l0) a6(r176,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r177,l0) conflicts: a4(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r176,l0) conflicts: a4(r74,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r175,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r72,l0) conflicts: a12(r73,l0) a13(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r173,l0) conflicts: a10(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r174,l0) conflicts: a9(r173,l0) a11(r172,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r172,l0) conflicts: a10(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r73,l0) conflicts: a8(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r167,l0) conflicts: a8(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r166,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r165,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r157,l0) conflicts: a17(r163,l0) a18(r164,l0) a19(r162,l0) a20(r158,l0) a21(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r163,l0) conflicts: a16(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r164,l0) conflicts: a16(r157,l0) a19(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r162,l0) conflicts: a16(r157,l0) a18(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r158,l0) conflicts: a16(r157,l0) a21(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r159,l0) conflicts: a16(r157,l0) a20(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r83,l0) conflicts: a24(r155,l0) a25(r82,l0) a26(r81,l0) a27(r154,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a23(r156,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r155,l0) conflicts: a22(r83,l0) a25(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r82,l0) conflicts: a22(r83,l0) a24(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r81,l0) conflicts: a22(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r154,l0) conflicts: a22(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r153,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r151,l0) conflicts: a30(r152,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r152,l0) conflicts: a29(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r68,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r149,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r148,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r145,l0) conflicts: a35(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r146,l0) conflicts: a34(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r147,l0) conflicts: a37(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r62,l0) conflicts: a36(r147,l0) a38(r140,l0) a39(r63,l0) a40(r137,l0) a41(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r140,l0) conflicts: a37(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r63,l0) conflicts: a37(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r137,l0) conflicts: a37(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r131,l0) conflicts: a37(r62,l0) a42(r134,l0) a43(r132,l0) a44(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r134,l0) conflicts: a41(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r132,l0) conflicts: a41(r131,l0) a44(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r133,l0) conflicts: a41(r131,l0) a43(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r126,l0) conflicts: a46(r127,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r127,l0) conflicts: a45(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r125,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r122,l0) conflicts: a49(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r124,l0) conflicts: a48(r122,l0) a50(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r121,l0) conflicts: a49(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r57,l0) conflicts: a52(r120,l0) a53(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r120,l0) conflicts: a51(r57,l0) a53(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r119,l0) conflicts: a51(r57,l0) a52(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r117,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r116,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r114,l0) conflicts: a57(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r115,l0) conflicts: a56(r114,l0) a58(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r113,l0) conflicts: a57(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r111,l0) conflicts: a60(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r112,l0) conflicts: a59(r111,l0) a61(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r110,l0) conflicts: a60(r112,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r104,l0) conflicts: a63(r109,l0) a64(r107,l0) a65(r108,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a63(r109,l0) conflicts: a62(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r107,l0) conflicts: a62(r104,l0) a65(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r108,l0) conflicts: a62(r104,l0) a64(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r44,l0) conflicts: a67(r64,l0) a68(r79,l0) a69(r99,l0) a70(r51,l0) a87(r101,l0) a88(r77,l0) a84(r78,l0) a89(r76,l0) a90(r100,l0) a85(r103,l0)
;;     total conflict hard regs: 12
;;     conflict hard regs: 12

;; a67(r64,l0) conflicts: a66(r44,l0) a84(r78,l0) a85(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r79,l0) conflicts: a66(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r99,l0) conflicts: a66(r44,l0) a70(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r51,l0) conflicts: a66(r44,l0) a69(r99,l0) a71(r96,l0) a72(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r96,l0) conflicts: a70(r51,l0) a72(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r97,l0) conflicts: a70(r51,l0) a71(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r95,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r50,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r94,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r46,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r92,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r91,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r43,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r85,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r78,l0) conflicts: a67(r64,l0) a66(r44,l0) a87(r101,l0) a88(r77,l0) a89(r76,l0) a90(r100,l0) a86(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r103,l0) conflicts: a67(r64,l0) a66(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r102,l0) conflicts: a84(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r101,l0) conflicts: a66(r44,l0) a88(r77,l0) a84(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r77,l0) conflicts: a66(r44,l0) a87(r101,l0) a84(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r76,l0) conflicts: a66(r44,l0) a84(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a90(r100,l0) conflicts: a66(r44,l0) a84(r78,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r180)<->a3(r179)@8:shuffle
  cp1:a7(r175)<->a8(r72)@20:shuffle
  cp2:a4(r74)<->a7(r175)@20:shuffle
  cp3:a5(r177)<->a6(r176)@20:shuffle
  cp4:a9(r173)<->a11(r172)@5:shuffle
  cp5:a14(r166)<->a15(r165)@42:shuffle
  cp6:a17(r163)<->a18(r164)@21:shuffle
  cp7:a17(r163)<->a19(r162)@21:shuffle
  cp8:a22(r83)<->a23(r156)@30:shuffle
  cp9:a26(r81)<->a27(r154)@21:shuffle
  cp10:a32(r149)<->a33(r148)@42:shuffle
  cp11:a29(r151)<->a31(r68)@42:shuffle
  cp12:a35(r146)<->a36(r147)@6:shuffle
  cp13:a35(r146)<->a37(r62)@6:shuffle
  cp14:a42(r134)<->a43(r132)@42:shuffle
  cp15:a42(r134)<->a44(r133)@42:shuffle
  cp16:a37(r62)<->a42(r134)@42:shuffle
  cp17:a40(r137)<->a41(r131)@42:shuffle
  cp18:a38(r140)<->a39(r63)@42:shuffle
  cp19:a45(r126)<->a47(r125)@33:shuffle
  cp20:a49(r124)<->a51(r57)@24:shuffle
  cp21:a48(r122)<->a50(r121)@24:shuffle
  cp22:a54(r117)<->a55(r116)@33:shuffle
  cp23:a56(r114)<->a58(r113)@22:shuffle
  cp24:a59(r111)<->a61(r110)@11:shuffle
  cp25:a63(r109)<->a64(r107)@11:shuffle
  cp26:a63(r109)<->a65(r108)@11:shuffle
  cp27:a84(r78)<->a85(r103)@125:shuffle
  cp28:a66(r44)<->a86(r102)@162:shuffle
  cp29:a89(r76)<->a90(r100)@113:shuffle
  cp30:a73(r95)<->a74(r50)@11:shuffle
  cp31:a70(r51)<->a73(r95)@11:shuffle
  cp32:a68(r79)<->a69(r99)@11:shuffle
  cp33:a68(r79)<->a70(r51)@11:shuffle
  cp34:a75(r94)<->a76(r93)@45:shuffle
  cp35:a78(r92)<->a79(r91)@57:shuffle
  pref0:a0(r42)<-hr2@920
  pref1:a0(r42)<-hr10@266
  pref2:a22(r83)<-hr11@336
  pref3:a66(r44)<-hr11@180
  regions=2, blocks=36, points=146
    allocnos=91 (big 0), copies=36, conflicts=4, ranges=98

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r42 1r47 2r180 3r179 4r74 5r177 6r176 7r175 8r72 9r173 10r174 11r172 12r73 13r167 14r166 15r165 16r157 17r163 18r164 19r162 20r158 21r159 22r83 23r156 24r155 25r82 26r81 27r154 28r153 29r151 30r152 31r68 32r149 33r148 34r145 35r146 36r147 37r62 38r140 39r63 40r137 41r131 42r134 43r132 44r133 45r126 46r127 47r125 48r122 49r124 50r121 51r57 52r120 53r119 54r117 55r116 56r114 57r115 58r113 59r111 60r112 61r110 62r104 63r109 64r107 65r108 66r44 67r64 68r79 69r99 70r51 71r96 72r97 73r95 74r50 75r94 76r93 77r46 78r92 79r91 80r43 81r85 84r78 85r103 86r102 87r101 88r77 89r76 90r100
    modified regnos: 42 43 44 46 47 50 51 57 62 63 64 68 72 73 74 76 77 78 79 81 82 83 85 91 92 93 94 95 96 97 99 100 101 102 103 104 107 108 109 110 111 112 113 114 115 116 117 119 120 121 122 124 125 126 127 131 132 133 134 137 140 145 146 147 148 149 151 152 153 154 155 156 157 158 159 162 163 164 165 166 167 172 173 174 175 176 177 179 180
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@334552
          2:( 2-11 13-15)@27232
            3:( 2-7)@1440
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r180 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r179 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r74 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r177 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r176 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r175 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r173 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a10r174 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a11r172 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a12r73 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a13r167 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a14r166 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a15r165 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a16r157 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a17r163 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a18r164 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a19r162 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a20r158 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a21r159 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a22r83 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a23r156 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a24r155 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a25r82 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a26r81 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a27r154 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a28r153 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a29r151 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a30r152 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a31r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a32r149 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a33r148 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a34r145 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a35r146 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a36r147 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a37r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a38r140 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a39r63 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a40r137 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a41r131 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a42r134 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a43r132 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a44r133 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a45r126 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a46r127 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a47r125 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a48r122 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a49r124 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a50r121 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a51r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a52r120 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a53r119 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a54r117 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a55r116 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a56r114 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a57r115 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a58r113 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a59r111 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a60r112 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a61r110 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a62r104 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a63r109 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a64r107 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a65r108 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a66r44 of AR_REGS(14) has 13 avail. regs  2-11 13-15, node:  2-11 13-15 (confl regs =  0 1 12 16-34)
      Allocno a67r64 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a68r79 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a69r99 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a70r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a71r96 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a72r97 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a73r95 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a74r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a75r94 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a76r93 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a77r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a78r92 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a79r91 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a80r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a81r85 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a84r78 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a85r103 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a86r102 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a87r101 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a88r77 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a89r76 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a90r100 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 28:a66r44-a86r102 (freq=162):
        Result (freq=3710): a66r44(2400) a86r102(1310)
      Forming thread by copy 27:a84r78-a85r103 (freq=125):
        Result (freq=3910): a84r78(1910) a85r103(2000)
      Forming thread by copy 29:a89r76-a90r100 (freq=113):
        Result (freq=3640): a89r76(1820) a90r100(1820)
      Forming thread by copy 35:a78r92-a79r91 (freq=57):
        Result (freq=1840): a78r92(920) a79r91(920)
      Forming thread by copy 34:a75r94-a76r93 (freq=45):
        Result (freq=1440): a75r94(720) a76r93(720)
      Forming thread by copy 5:a14r166-a15r165 (freq=42):
        Result (freq=1344): a14r166(672) a15r165(672)
      Forming thread by copy 10:a32r149-a33r148 (freq=42):
        Result (freq=1344): a32r149(672) a33r148(672)
      Forming thread by copy 11:a29r151-a31r68 (freq=42):
        Result (freq=1344): a29r151(672) a31r68(672)
      Forming thread by copy 14:a42r134-a43r132 (freq=42):
        Result (freq=1344): a42r134(672) a43r132(672)
      Forming thread by copy 16:a37r62-a42r134 (freq=42):
        Result (freq=2232): a37r62(888) a42r134(672) a43r132(672)
      Forming thread by copy 17:a40r137-a41r131 (freq=42):
        Result (freq=2016): a40r137(672) a41r131(1344)
      Forming thread by copy 18:a38r140-a39r63 (freq=42):
        Result (freq=1344): a38r140(672) a39r63(672)
      Forming thread by copy 19:a45r126-a47r125 (freq=33):
        Result (freq=1350): a45r126(810) a47r125(540)
      Forming thread by copy 22:a54r117-a55r116 (freq=33):
        Result (freq=1080): a54r117(540) a55r116(540)
      Forming thread by copy 8:a22r83-a23r156 (freq=30):
        Result (freq=988): a22r83(746) a23r156(242)
      Forming thread by copy 20:a49r124-a51r57 (freq=24):
        Result (freq=1122): a49r124(388) a51r57(734)
      Forming thread by copy 21:a48r122-a50r121 (freq=24):
        Result (freq=776): a48r122(388) a50r121(388)
      Forming thread by copy 23:a56r114-a58r113 (freq=22):
        Result (freq=720): a56r114(360) a58r113(360)
      Forming thread by copy 6:a17r163-a18r164 (freq=21):
        Result (freq=672): a17r163(336) a18r164(336)
      Forming thread by copy 9:a26r81-a27r154 (freq=21):
        Result (freq=672): a26r81(336) a27r154(336)
      Forming thread by copy 1:a7r175-a8r72 (freq=20):
        Result (freq=1158): a7r175(324) a8r72(834)
      Forming thread by copy 2:a4r74-a7r175 (freq=20):
        Result (freq=1644): a4r74(486) a7r175(324) a8r72(834)
      Forming thread by copy 3:a5r177-a6r176 (freq=20):
        Result (freq=648): a5r177(324) a6r176(324)
      Forming thread by copy 24:a59r111-a61r110 (freq=11):
        Result (freq=360): a59r111(180) a61r110(180)
      Forming thread by copy 25:a63r109-a64r107 (freq=11):
        Result (freq=360): a63r109(180) a64r107(180)
      Forming thread by copy 30:a73r95-a74r50 (freq=11):
        Result (freq=1170): a73r95(180) a74r50(990)
      Forming thread by copy 31:a70r51-a73r95 (freq=11):
        Result (freq=1440): a70r51(270) a73r95(180) a74r50(990)
      Forming thread by copy 32:a68r79-a69r99 (freq=11):
        Result (freq=360): a68r79(180) a69r99(180)
      Forming thread by copy 0:a2r180-a3r179 (freq=8):
        Result (freq=264): a2r180(132) a3r179(132)
      Forming thread by copy 12:a35r146-a36r147 (freq=6):
        Result (freq=192): a35r146(96) a36r147(96)
      Forming thread by copy 4:a9r173-a11r172 (freq=5):
        Result (freq=168): a9r173(84) a11r172(84)
      Pushing a10(r174,l0)(cost 0)
      Pushing a34(r145,l0)(cost 0)
      Pushing a1(r47,l0)(cost 0)
      Pushing a11(r172,l0)(cost 0)
      Pushing a9(r173,l0)(cost 0)
      Pushing a72(r97,l0)(cost 0)
      Pushing a65(r108,l0)(cost 0)
      Pushing a60(r112,l0)(cost 0)
      Pushing a36(r147,l0)(cost 0)
      Pushing a35(r146,l0)(cost 0)
      Pushing a3(r179,l0)(cost 0)
      Pushing a2(r180,l0)(cost 0)
      Pushing a71(r96,l0)(cost 0)
      Pushing a28(r153,l0)(cost 0)
      Pushing a25(r82,l0)(cost 0)
      Pushing a24(r155,l0)(cost 0)
      Pushing a21(r159,l0)(cost 0)
      Pushing a20(r158,l0)(cost 0)
      Pushing a19(r162,l0)(cost 0)
      Pushing a69(r99,l0)(cost 0)
      Pushing a68(r79,l0)(cost 0)
      Pushing a64(r107,l0)(cost 0)
      Pushing a63(r109,l0)(cost 0)
      Pushing a62(r104,l0)(cost 0)
      Pushing a61(r110,l0)(cost 0)
      Pushing a59(r111,l0)(cost 0)
      Pushing a57(r115,l0)(cost 0)
      Pushing a13(r167,l0)(cost 0)
      Pushing a12(r73,l0)(cost 0)
      Pushing a53(r119,l0)(cost 0)
      Pushing a52(r120,l0)(cost 0)
      Pushing a6(r176,l0)(cost 0)
      Pushing a5(r177,l0)(cost 0)
      Pushing a44(r133,l0)(cost 0)
      Pushing a30(r152,l0)(cost 0)
      Pushing a27(r154,l0)(cost 0)
      Pushing a26(r81,l0)(cost 0)
      Pushing a18(r164,l0)(cost 0)
      Pushing a17(r163,l0)(cost 0)
      Pushing a16(r157,l0)(cost 0)
      Pushing a58(r113,l0)(cost 0)
      Pushing a56(r114,l0)(cost 0)
      Pushing a50(r121,l0)(cost 0)
      Pushing a48(r122,l0)(cost 0)
      Pushing a46(r127,l0)(cost 0)
      Pushing a81(r85,l0)(cost 0)
      Pushing a80(r43,l0)(cost 0)
      Pushing a77(r46,l0)(cost 0)
      Pushing a23(r156,l0)(cost 0)
      Pushing a22(r83,l0)(cost 0)
      Pushing a55(r116,l0)(cost 0)
      Pushing a54(r117,l0)(cost 0)
      Pushing a49(r124,l0)(cost 0)
      Pushing a51(r57,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Pushing a39(r63,l0)(cost 0)
      Pushing a38(r140,l0)(cost 0)
      Pushing a33(r148,l0)(cost 0)
      Pushing a32(r149,l0)(cost 0)
      Pushing a31(r68,l0)(cost 0)
      Pushing a29(r151,l0)(cost 0)
      Pushing a15(r165,l0)(cost 0)
      Pushing a14(r166,l0)(cost 0)
      Pushing a47(r125,l0)(cost 0)
      Pushing a45(r126,l0)(cost 0)
      Pushing a76(r93,l0)(cost 0)
      Pushing a75(r94,l0)(cost 0)
      Pushing a73(r95,l0)(cost 0)
      Pushing a70(r51,l0)(cost 0)
      Pushing a74(r50,l0)(cost 0)
      Pushing a7(r175,l0)(cost 0)
      Pushing a4(r74,l0)(cost 0)
      Pushing a8(r72,l0)(cost 0)
      Pushing a88(r77,l0)(cost 0)
      Pushing a87(r101,l0)(cost 0)
      Pushing a79(r91,l0)(cost 0)
      Pushing a78(r92,l0)(cost 0)
      Pushing a40(r137,l0)(cost 0)
      Pushing a41(r131,l0)(cost 0)
      Pushing a43(r132,l0)(cost 0)
      Pushing a42(r134,l0)(cost 0)
      Pushing a37(r62,l0)(cost 0)
      Pushing a67(r64,l0)(cost 0)
      Pushing a90(r100,l0)(cost 0)
      Pushing a89(r76,l0)(cost 0)
      Pushing a86(r102,l0)(cost 0)
      Pushing a66(r44,l0)(cost 0)
      Pushing a84(r78,l0)(cost 0)
      Pushing a85(r103,l0)(cost 0)
      Popping a85(r103,l0)  -- assign reg 8
      Popping a84(r78,l0)  -- assign reg 8
      Popping a66(r44,l0)  -- assign reg 11
      Popping a86(r102,l0)  -- assign reg 11
      Popping a89(r76,l0)  -- assign reg 9
      Popping a90(r100,l0)  -- assign reg 9
      Popping a67(r64,l0)  -- assign reg 9
      Popping a37(r62,l0)  -- assign reg 8
      Popping a42(r134,l0)  -- assign reg 8
      Popping a43(r132,l0)  -- assign reg 8
      Popping a41(r131,l0)  -- assign reg 9
      Popping a40(r137,l0)  -- assign reg 9
      Popping a78(r92,l0)  -- assign reg 8
      Popping a79(r91,l0)  -- assign reg 8
      Popping a87(r101,l0)  -- assign reg 9
      Popping a88(r77,l0)  -- assign reg 10
      Popping a8(r72,l0)  -- assign reg 8
      Popping a4(r74,l0)  -- assign reg 8
      Popping a7(r175,l0)  -- assign reg 8
      Popping a74(r50,l0)  -- assign reg 8
      Popping a70(r51,l0)  -- assign reg 8
      Popping a73(r95,l0)  -- assign reg 8
      Popping a75(r94,l0)  -- assign reg 8
      Popping a76(r93,l0)  -- assign reg 8
      Popping a45(r126,l0)  -- assign reg 8
      Popping a47(r125,l0)  -- assign reg 8
      Popping a14(r166,l0)  -- assign reg 8
      Popping a15(r165,l0)  -- assign reg 8
      Popping a29(r151,l0)  -- assign reg 8
      Popping a31(r68,l0)  -- assign reg 8
      Popping a32(r149,l0)  -- assign reg 8
      Popping a33(r148,l0)  -- assign reg 8
      Popping a38(r140,l0)  -- assign reg 9
      Popping a39(r63,l0)  -- assign reg 9
      Popping a0(r42,l0)  -- assign reg 2
      Popping a51(r57,l0)  -- assign reg 2
      Popping a49(r124,l0)  -- assign reg 2
      Popping a54(r117,l0)  -- assign reg 2
      Popping a55(r116,l0)  -- assign reg 2
      Popping a22(r83,l0)  -- assign reg 11
      Popping a23(r156,l0)  -- assign reg 11
      Popping a77(r46,l0)  -- assign reg 2
      Popping a80(r43,l0)  -- assign reg 2
      Popping a81(r85,l0)  -- assign reg 2
      Popping a46(r127,l0)  -- assign reg 2
      Popping a48(r122,l0)  -- assign reg 8
      Popping a50(r121,l0)  -- assign reg 8
      Popping a56(r114,l0)  -- assign reg 2
      Popping a58(r113,l0)  -- assign reg 2
      Popping a16(r157,l0)  -- assign reg 2
      Popping a17(r163,l0)  -- assign reg 8
      Popping a18(r164,l0)  -- assign reg 8
      Popping a26(r81,l0)  -- assign reg 2
      Popping a27(r154,l0)  -- assign reg 2
      Popping a30(r152,l0)  -- assign reg 2
      Popping a44(r133,l0)  -- assign reg 2
      Popping a5(r177,l0)  -- assign reg 2
      Popping a6(r176,l0)  -- assign reg 2
      Popping a52(r120,l0)  -- assign reg 8
      Popping a53(r119,l0)  -- assign reg 9
      Popping a12(r73,l0)  -- assign reg 2
      Popping a13(r167,l0)  -- assign reg 2
      Popping a57(r115,l0)  -- assign reg 8
      Popping a59(r111,l0)  -- assign reg 2
      Popping a61(r110,l0)  -- assign reg 2
      Popping a62(r104,l0)  -- assign reg 2
      Popping a63(r109,l0)  -- assign reg 8
      Popping a64(r107,l0)  -- assign reg 8
      Popping a68(r79,l0)  -- assign reg 8
      Popping a69(r99,l0)  -- assign reg 2
      Popping a19(r162,l0)  -- assign reg 9
      Popping a20(r158,l0)  -- assign reg 8
      Popping a21(r159,l0)  -- assign reg 9
      Popping a24(r155,l0)  -- assign reg 2
      Popping a25(r82,l0)  -- assign reg 8
      Popping a28(r153,l0)  -- assign reg 2
      Popping a71(r96,l0)  -- assign reg 2
      Popping a2(r180,l0)  -- assign reg 8
      Popping a3(r179,l0)  -- assign reg 8
      Popping a35(r146,l0)  -- assign reg 8
      Popping a36(r147,l0)  -- assign reg 2
      Popping a60(r112,l0)  -- assign reg 8
      Popping a65(r108,l0)  -- assign reg 9
      Popping a72(r97,l0)  -- assign reg 9
      Popping a9(r173,l0)  -- assign reg 2
      Popping a11(r172,l0)  -- assign reg 2
      Popping a1(r47,l0)  -- assign reg 8
      Popping a34(r145,l0)  -- assign reg 2
      Popping a10(r174,l0)  -- assign reg 8
Disposition:
    0:r42  l0     2   80:r43  l0     2   66:r44  l0    11   77:r46  l0     2
    1:r47  l0     8   74:r50  l0     8   70:r51  l0     8   51:r57  l0     2
   37:r62  l0     8   39:r63  l0     9   67:r64  l0     9   31:r68  l0     8
    8:r72  l0     8   12:r73  l0     2    4:r74  l0     8   89:r76  l0     9
   88:r77  l0    10   84:r78  l0     8   68:r79  l0     8   26:r81  l0     2
   25:r82  l0     8   22:r83  l0    11   81:r85  l0     2   79:r91  l0     8
   78:r92  l0     8   76:r93  l0     8   75:r94  l0     8   73:r95  l0     8
   71:r96  l0     2   72:r97  l0     9   69:r99  l0     2   90:r100 l0     9
   87:r101 l0     9   86:r102 l0    11   85:r103 l0     8   62:r104 l0     2
   64:r107 l0     8   65:r108 l0     9   63:r109 l0     8   61:r110 l0     2
   59:r111 l0     2   60:r112 l0     8   58:r113 l0     2   56:r114 l0     2
   57:r115 l0     8   55:r116 l0     2   54:r117 l0     2   53:r119 l0     9
   52:r120 l0     8   50:r121 l0     8   48:r122 l0     8   49:r124 l0     2
   47:r125 l0     8   45:r126 l0     8   46:r127 l0     2   41:r131 l0     9
   43:r132 l0     8   44:r133 l0     2   42:r134 l0     8   40:r137 l0     9
   38:r140 l0     9   34:r145 l0     2   35:r146 l0     8   36:r147 l0     2
   33:r148 l0     8   32:r149 l0     8   29:r151 l0     8   30:r152 l0     2
   28:r153 l0     2   27:r154 l0     2   24:r155 l0     2   23:r156 l0    11
   16:r157 l0     2   20:r158 l0     8   21:r159 l0     9   19:r162 l0     9
   17:r163 l0     8   18:r164 l0     8   15:r165 l0     8   14:r166 l0     8
   13:r167 l0     2   11:r172 l0     2    9:r173 l0     2   10:r174 l0     8
    7:r175 l0     8    6:r176 l0     2    5:r177 l0     2    3:r179 l0     8
    2:r180 l0     8
New iteration of spill/restore move
+++Costs: overall -2872, reg -2872, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processDnData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={12d} r1={1d,46u} r2={2d,2u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,35u} r8={11d} r9={11d} r10={19d,9u} r11={15d,4u} r12={13d,2u} r13={11d} r14={11d} r15={11d} r16={1d,35u} r17={1d,34u} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r42={6d,2u} r43={1d,1u} r44={2d,7u} r46={1d,1u} r47={1d,1u} r50={1d,3u} r51={1d,3u} r57={1d,2u} r62={1d,3u} r63={1d,1u} r64={2d,4u} r68={1d,1u} r72={1d,2u} r73={1d,1u} r74={1d,2u} r76={1d,1u} r77={1d,1u} r78={1d,2u} r79={1d,1u} r81={1d,1u} r82={1d,1u} r83={2d,5u} r85={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,2u} r97={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,3u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,2u} r127={1d,2u} r131={1d,3u} r132={1d,1u} r133={1d,1u,1e} r134={1d,1u} r137={1d,1u} r140={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,3u} r158={1d,1u} r159={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 710{419d,289u,2e} in 173{162 regular + 11 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 4601, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 85
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/f:SI 85)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 43 [ D.6370 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 85)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (nil)))
(note 12 11 13 2 NOTE_INSN_DELETED)
(note 13 12 15 2 NOTE_INSN_DELETED)
(note 15 13 16 2 NOTE_INSN_DELETED)
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 43 [ D.6370 ])
                    (const_int 1 [0x1])
                    (const_int 7 [0x7]))
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6370 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 22)
;;  succ:       3 [29.0%]  (FALLTHRU)
;;              4 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 1334, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [29.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(1){ }u11(7){ }u12(16){ }u13(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 18 17 19 3 NOTE_INSN_DELETED)
(insn 19 18 20 3 (set (reg:SI 11 a11)
        (const_int 1889 [0x761])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 44 {movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC252") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC38") [flags 0x2]  <var_decl 0x100f251b0 *.LC38>)
        (nil)))
(call_insn 21 20 22 3 (call (mem:SI (symbol_ref:SI ("hal_failed") [flags 0x41]  <function_decl 0x140eef6c0 hal_failed>) [0 hal_failed S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1889 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 4601, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [71.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 46 91 92
(code_label 22 21 23 4 358 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:SI 91)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1891 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 25 24 26 4 (set:SI (reg/f:SI 92)
        (plus:SI (reg/f:SI 91)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1891 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 26 25 27 4 (set (reg:SI 46 [ D.6371 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 92)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1891 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ne (reg:SI 46 [ D.6371 ])
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1891 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 46 [ D.6371 ])
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 244)
;;  succ:       5 [71.0%]  (FALLTHRU)
;;              30 [29.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 3600, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [71.0%]  (FALLTHRU)
;;              31 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(1){ }u26(7){ }u27(16){ }u28(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 50 93 94
(code_label 28 27 29 5 360 ("norx") [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 93)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1893 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 31 30 32 5 (set:SI (reg/f:SI 94)
        (plus:SI (reg/f:SI 93)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1893 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 32 31 33 5 (set (reg:SI 50 [ D.6371 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 94)
                    (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1893 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:SI 50 [ D.6371 ])
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1893 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 105)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              14 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50

;; basic block 6, loop depth 0, count 0, freq 1800, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(1){ }u33(7){ }u34(16){ }u35(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (ltu (reg:SI 50 [ D.6371 ])
                (const_int 8 [0x8]))
            (pc)
            (label_ref 97))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1894 59 {*ubfalse}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 97)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              13 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(1){ }u38(7){ }u39(16){ }u40(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 50
;; lr  def 	 44 51 64 79 95 96 97 99
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:SI 95)
        (plus:SI (reg:SI 50 [ D.6371 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1895 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 50 [ D.6371 ])
        (nil)))
(insn 38 37 39 7 (set (reg:SI 51 [ D.6371 ])
        (zero_extend:SI (subreg:QI (reg:SI 95) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1895 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 39 38 40 7 (set (reg/f:SI 96)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1895 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 40 39 41 7 (set:SI (reg/f:SI 97)
        (plus:SI (reg/f:SI 96)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1895 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 41 40 43 7 (set (mem/j/c:QI (plus:SI (reg/f:SI 97)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (subreg/s/v:QI (reg:SI 51 [ D.6371 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1895 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 43 41 45 7 (set (reg/v:SI 44 [ dr ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 96)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(debug_insn 45 43 46 7 (var_location:SI table (symbol_ref:SI ("constant_table_DRADJUST") [flags 0x2]  <var_decl 0x100b69120 constant_table_DRADJUST>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 -1
     (nil))
(debug_insn 46 45 47 7 (var_location:SI index (reg:SI 51 [ D.6371 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:SI 99)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC253") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table_DRADJUST") [flags 0x2]  <var_decl 0x100b69120 constant_table_DRADJUST>)
        (nil)))
(insn 48 47 49 7 (set (reg/f:SI 79 [ D.6376 ])
        (plus:SI (reg:SI 51 [ D.6371 ])
            (reg/f:SI 99))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (expr_list:REG_DEAD (reg:SI 51 [ D.6371 ])
            (nil))))
(insn 49 48 50 7 (set (reg/v:SI 64 [ n ])
        (zero_extend:SI (mem:QI (reg/f:SI 79 [ D.6376 ]) [0 *_77+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 79 [ D.6376 ])
        (nil)))
(debug_insn 50 49 51 7 (var_location:QI dr (subreg:QI (reg/v:SI 44 [ dr ]) 0)) -1
     (nil))
(debug_insn 51 50 276 7 (var_location:QI n (subreg:QI (reg/v:SI 64 [ n ]) 0)) -1
     (nil))
(jump_insn 276 51 277 7 (set (pc)
        (label_ref 70)) 78 {jump}
     (nil)
 -> 70)
;;  succ:       11 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 64

(barrier 277 276 77)
;; basic block 8, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       11 [91.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(1){ }u54(7){ }u55(16){ }u56(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 76 77 100 101
(code_label 77 277 54 8 365 "" [1 uses])
(note 54 77 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 55 54 57 8 (var_location:QI dr (subreg:QI (reg/v:SI 44 [ dr ]) 0)) -1
     (nil))
(debug_insn 57 55 58 8 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 58 57 59 8 (var_location:SI index (reg/v:SI 44 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 59 58 60 8 (set (reg/f:SI 100)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC254") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 60 59 61 8 (set (reg/f:SI 76 [ D.6376 ])
        (plus:SI (reg/v:SI 44 [ dr ])
            (reg/f:SI 100))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 61 60 62 8 (set (reg:SI 77 [ D.6377 ])
        (zero_extend:SI (mem:QI (reg/f:SI 76 [ D.6376 ]) [0 *_72+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 76 [ D.6376 ])
        (nil)))
(insn 62 61 63 8 (set (reg:SI 101)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (eq (reg:SI 77 [ D.6377 ])
                (reg:SI 101))
            (label_ref 67)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg:SI 77 [ D.6377 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 67)
;;  succ:       9 [72.0%]  (FALLTHRU)
;;              10 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78

;; basic block 9, loop depth 1, count 0, freq 6552, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [72.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(1){ }u65(7){ }u66(16){ }u67(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 44 102
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg:SI 102)
        (plus:SI (reg/v:SI 44 [ dr ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg/v:SI 44 [ dr ])
        (nil)))
(insn 66 65 67 9 (set (reg/v:SI 44 [ dr ])
        (zero_extend:SI (subreg:QI (reg:SI 102) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78

;; basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [28.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(1){ }u71(7){ }u72(16){ }u73(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 78
;; lr  def 	 64
(code_label 67 66 68 10 364 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/v:SI 64 [ n ])
        (reg/v:SI 78 [ n ])) 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 78 [ n ])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 64

;; basic block 11, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [100.0%]  (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(1){ }u76(7){ }u77(16){ }u78(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 64
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 64
;; lr  def 	 78 103
(code_label 70 69 71 11 363 "" [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 72 71 73 11 (var_location:QI n (subreg:QI (reg/v:SI 64 [ n ]) 0)) -1
     (nil))
(debug_insn 73 72 74 11 (var_location:QI dr (subreg:QI (reg/v:SI 44 [ dr ]) 0)) -1
     (nil))
(insn 74 73 75 11 (set (reg:SI 103)
        (plus:SI (reg/v:SI 64 [ n ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 1 {addsi3}
     (nil))
(insn 75 74 76 11 (set (reg/v:SI 78 [ n ])
        (zero_extend:SI (subreg:QI (reg:SI 103) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(debug_insn 76 75 78 11 (var_location:QI n (subreg:QI (reg/v:SI 78 [ n ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 -1
     (nil))
(jump_insn 78 76 79 11 (set (pc)
        (if_then_else (ne (reg/v:SI 64 [ n ])
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:373 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 64 [ n ])
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 77)
;;  succ:       8 [91.0%] 
;;              12 [9.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44 78

;; basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 [9.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u85(1){ }u86(7){ }u87(16){ }u88(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 44
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 104 107 108 109
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg:SI 12 a12)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 44 {movsi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:SI 11 a11)
        (reg/v:SI 44 [ dr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 [ dr ])
        (nil)))
(insn 82 81 83 12 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 44 {movsi_internal}
     (nil))
(call_insn 83 82 84 12 (call (mem:SI (symbol_ref:SI ("setDrTxpow") [flags 0x3]  <function_decl 0x100b7c000 setDrTxpow>) [0 setDrTxpow S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1896 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 84 83 85 12 (set (reg/f:SI 104)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1898 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 85 84 86 12 (set (reg:SI 11 a11)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1898 44 {movsi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:SI 10 a10)
        (mem/j/c:SI (plus:SI (reg/f:SI 104)
                (const_int 4 [0x4])) [0 LMIC.rxtime+0 S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1898 44 {movsi_internal}
     (nil))
(call_insn 87 86 91 12 (call (mem:SI (symbol_ref:SI ("txDelay") [flags 0x3]  <function_decl 0x100b66d80 txDelay>) [0 txDelay S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1898 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
(insn 91 87 301 12 (set (reg:HI 108 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 104)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1899 45 {movhi_internal}
     (nil))
(insn 301 91 92 12 (set (reg:HI 107)
        (const_int -129 [0xffffffffffffff7f])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1899 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -129 [0xffffffffffffff7f])
        (nil)))
(insn 92 301 93 12 (set (reg:SI 109)
        (and:SI (subreg:SI (reg:HI 108 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 107) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1899 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 108 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 107)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 108 [ LMIC.opmode ]) 0)
                    (const_int -129 [0xffffffffffffff7f]))
                (nil)))))
(insn 93 92 94 12 (set (mem/j/c:HI (plus:SI (reg/f:SI 104)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 109) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1899 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_DEAD (reg/f:SI 104)
            (nil))))
(call_insn 94 93 3 12 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1900 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 3 94 278 12 (set (reg:SI 42 [ D.6369 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1901 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 278 3 279 12 (set (pc)
        (label_ref 258)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1901 78 {jump}
     (nil)
 -> 258)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 279 278 97)
;; basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       6 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(1){ }u106(7){ }u107(16){ }u108(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 110 111 112
(code_label 97 279 98 13 362 "" [1 uses])
(note 98 97 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 98 300 13 (set (reg:QI 112)
        (const_int 96 [0x60])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1903 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 96 [0x60])
        (nil)))
(insn 300 101 299 13 (set (reg/f:SI 110)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1903 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 299 300 102 13 (set:SI (reg/f:SI 111)
        (plus:SI (reg/f:SI 110)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1903 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 102 299 280 13 (set (mem/j/c:QI (plus:SI (reg/f:SI 111)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 112)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1903 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 112)
        (expr_list:REG_DEAD (reg/f:SI 111)
            (nil))))
(jump_insn 280 102 281 13 (set (pc)
        (label_ref 111)) 78 {jump}
     (nil)
 -> 111)
;;  succ:       15 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

(barrier 281 280 105)
;; basic block 14, loop depth 0, count 0, freq 1800, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       5 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u112(1){ }u113(7){ }u114(16){ }u115(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 113 114 115
(code_label 105 281 106 14 361 "" [1 uses])
(note 106 105 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 109 106 298 14 (set (reg:QI 115)
        (const_int 32 [0x20])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1906 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 32 [0x20])
        (nil)))
(insn 298 109 297 14 (set (reg/f:SI 113)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1906 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 297 298 110 14 (set:SI (reg/f:SI 114)
        (plus:SI (reg/f:SI 113)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1906 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 110 297 111 14 (set (mem/j/c:QI (plus:SI (reg/f:SI 114)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 115)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1906 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 115)
        (expr_list:REG_DEAD (reg/f:SI 114)
            (nil))))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 15, loop depth 0, count 0, freq 2700, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(1){ }u120(7){ }u121(16){ }u122(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 57 116 117 119 120
(code_label 111 110 112 15 367 "" [1 uses])
(note 112 111 113 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 15 (set (reg/f:SI 116)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 114 113 115 15 (set:SI (reg/f:SI 117)
        (plus:SI (reg/f:SI 116)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 115 114 117 15 (set (reg:SI 57 [ D.6374 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 117)
                    (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 117 115 118 15 (set (reg:SI 119 [ D.6374 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 57 [ D.6374 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 36 {extendqisi2_internal}
     (nil))
(insn 118 117 119 15 (set (reg:SI 120)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(jump_insn 119 118 120 15 (set (pc)
        (if_then_else (eq (reg:SI 119 [ D.6374 ])
                (reg:SI 120))
            (label_ref 126)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1908 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:SI 119 [ D.6374 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 126)
;;  succ:       16 [72.0%]  (FALLTHRU)
;;              17 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57

;; basic block 16, loop depth 0, count 0, freq 1944, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [72.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u128(1){ }u129(7){ }u130(16){ }u131(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 57
;; lr  def 	 121 122 124
(note 120 119 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 124 120 296 16 (set (reg:SI 124)
        (plus:SI (reg:SI 57 [ D.6374 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1909 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 57 [ D.6374 ])
        (nil)))
(insn 296 124 295 16 (set (reg/f:SI 121)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1909 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 295 296 125 16 (set:SI (reg/f:SI 122)
        (plus:SI (reg/f:SI 121)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1909 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 125 295 126 16 (set (mem/j/c:QI (plus:SI (reg/f:SI 122)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (subreg:QI (reg:SI 124) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1909 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg/f:SI 122)
            (nil))))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 17, loop depth 0, count 0, freq 2700, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       15 [28.0%] 
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u136(1){ }u137(7){ }u138(16){ }u139(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 125 126 127
(code_label 126 125 127 17 368 "" [1 uses])
(note 127 126 128 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 17 (set (reg/f:SI 125)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1910 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 129 128 130 17 (set:SI (reg/f:SI 126)
        (plus:SI (reg/f:SI 125)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1910 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 130 129 131 17 (set (reg:QI 127)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1910 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 131 130 135 17 (set (mem/j/c:QI (plus:SI (reg/f:SI 126)
                (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8])
        (reg:QI 127)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1910 46 {movqi_internal}
     (nil))
(insn 135 131 136 17 (set (mem/j/c:QI (plus:SI (reg/f:SI 126)
                (const_int 74 [0x4a])) [0 LMIC.dataBeg+0 S1 A16])
        (reg:QI 127)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1910 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 127)
        (expr_list:REG_DEAD (reg/f:SI 126)
            (nil))))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 18, loop depth 0, count 0, freq 3367, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              30 [50.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(1){ }u146(7){ }u147(16){ }u148(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 62 63 131 132 133 134 137 140
(code_label 136 135 137 18 369 ("txcomplete") [1 uses])
(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 140 18 (set (reg/f:SI 131)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 140 138 294 18 (set (reg:HI 133 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 131)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 45 {movhi_internal}
     (nil))
(insn 294 140 141 18 (set (reg:HI 132)
        (const_int -137 [0xffffffffffffff77])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -137 [0xffffffffffffff77])
        (nil)))
(insn 141 294 142 18 (set (reg:SI 134)
        (and:SI (subreg:SI (reg:HI 133 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 132) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 133 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 132)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 133 [ LMIC.opmode ]) 0)
                    (const_int -137 [0xffffffffffffff77]))
                (nil)))))
(insn 142 141 144 18 (set (reg:SI 62 [ D.6370 ])
        (zero_extend:SI (subreg:HI (reg:SI 134) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 144 142 146 18 (set (mem/j/c:HI (plus:SI (reg/f:SI 131)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg/s/v:HI (reg:SI 62 [ D.6370 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1912 45 {movhi_internal}
     (nil))
(insn 146 144 147 18 (set:SI (reg/f:SI 137)
        (plus:SI (reg/f:SI 131)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1913 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 147 146 148 18 (set (reg:SI 63 [ D.6371 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 137)
                    (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1913 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(note 148 147 150 18 NOTE_INSN_DELETED)
(insn 150 148 151 18 (set (reg:SI 140)
        (and:SI (reg:SI 63 [ D.6371 ])
            (const_int 7 [0x7]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1913 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6371 ])
        (nil)))
(jump_insn 151 150 152 18 (set (pc)
        (if_then_else (eq (reg:SI 140)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1913 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 140)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 165)
;;  succ:       19 [50.0%]  (FALLTHRU)
;;              21 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62

;; basic block 19, loop depth 0, count 0, freq 1684, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 [50.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(1){ }u162(7){ }u163(16){ }u164(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 153 152 154 19 NOTE_INSN_DELETED)
(note 154 153 156 19 NOTE_INSN_DELETED)
(note 156 154 157 19 NOTE_INSN_DELETED)
(jump_insn 157 156 158 19 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 62 [ D.6370 ])
                    (const_int 1 [0x1])
                    (const_int 12 [0xc]))
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1913 60 {*bittrue}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 165)
;;  succ:       20 [29.0%]  (FALLTHRU)
;;              21 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62

;; basic block 20, loop depth 0, count 0, freq 488, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 [29.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u169(1){ }u170(7){ }u171(16){ }u172(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 62
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 145 146 147
(note 158 157 160 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 160 158 161 20 (set (reg:SI 147)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC256") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1914 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int -4097 [0xffffffffffffefff])
        (nil)))
(insn 161 160 293 20 (set (reg:SI 146)
        (and:SI (reg:SI 62 [ D.6370 ])
            (reg:SI 147))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1914 30 {andsi3}
     (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg:SI 62 [ D.6370 ])
            (nil))))
(insn 293 161 162 20 (set (reg/f:SI 145)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1914 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 162 293 163 20 (set (mem/j/c:HI (plus:SI (reg/f:SI 145)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 146) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1914 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/f:SI 145)
            (nil))))
(insn 163 162 164 20 (set (reg:SI 10 a10)
        (const_int 15 [0xf])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1915 44 {movsi_internal}
     (nil))
(call_insn 164 163 165 20 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1915 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 21, loop depth 0, count 0, freq 3367, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       18 [50.0%] 
;;              19 [71.0%] 
;;              20 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u179(1){ }u180(7){ }u181(16){ }u182(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 68 148 149 151 152
(code_label 165 164 166 21 370 "" [2 uses])
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 21 (set (reg:SI 10 a10)
        (const_int 10 [0xa])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1917 44 {movsi_internal}
     (nil))
(call_insn 168 167 169 21 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1917 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 169 168 170 21 (set (reg/f:SI 148)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 170 169 171 21 (set:SI (reg/f:SI 149)
        (plus:SI (reg/f:SI 148)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 171 170 173 21 (set (reg:SI 68 [ D.6374 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 149)
                    (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (nil)))
(insn 173 171 174 21 (set (reg:SI 151 [ D.6374 ])
        (sign_extend:SI (subreg/s/v:QI (reg:SI 68 [ D.6374 ]) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6374 ])
        (nil)))
(insn 174 173 175 21 (set (reg:SI 152)
        (const_int 24 [0x18])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 24 [0x18])
        (nil)))
(jump_insn 175 174 176 21 (set (pc)
        (if_then_else (ge (reg:SI 152)
                (reg:SI 151 [ D.6374 ]))
            (label_ref 209)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1920 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 151 [ D.6374 ])
            (int_list:REG_BR_PROB 5000 (nil))))
 -> 209)
;;  succ:       22 [50.0%]  (FALLTHRU)
;;              25 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 22, loop depth 0, count 0, freq 1684, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       21 [50.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u190(1){ }u191(7){ }u192(16){ }u193(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 81 82 83 153 154 155
(note 176 175 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 22 (set (reg/f:SI 153)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 178 177 179 22 (set (reg:SI 83 [ D.6378 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 153)
                    (const_int 176 [0xb0])) [0 LMIC.datarate+0 S1 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(debug_insn 179 178 181 22 (var_location:QI dr (subreg:QI (reg:SI 83 [ D.6378 ]) 0)) -1
     (nil))
(debug_insn 181 179 182 22 (var_location:SI table (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(debug_insn 182 181 183 22 (var_location:SI index (reg:SI 83 [ D.6378 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 -1
     (nil))
(insn 183 182 184 22 (set (reg/f:SI 154)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC254") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("constant_table__DR2RPS_CRC") [flags 0x2]  <var_decl 0x140ed9750 constant_table__DR2RPS_CRC>)
        (nil)))
(insn 184 183 185 22 (set (reg/f:SI 81 [ D.6376 ])
        (plus:SI (reg:SI 83 [ D.6378 ])
            (reg/f:SI 154))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))
(insn 185 184 186 22 (set (reg:SI 82 [ D.6377 ])
        (zero_extend:SI (mem:QI (reg/f:SI 81 [ D.6376 ]) [0 *_80+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/oslmic.h:252 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 81 [ D.6376 ])
        (nil)))
(insn 186 185 187 22 (set (reg:SI 155)
        (const_int 255 [0xff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(jump_insn 187 186 188 22 (set (pc)
        (if_then_else (eq (reg:SI 82 [ D.6377 ])
                (reg:SI 155))
            (label_ref 191)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 82 [ D.6377 ])
            (int_list:REG_BR_PROB 2800 (nil))))
 -> 191)
;;  succ:       23 [72.0%]  (FALLTHRU)
;;              24 [28.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83

;; basic block 23, loop depth 0, count 0, freq 1212, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 [72.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u202(1){ }u203(7){ }u204(16){ }u205(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  def 	 83 156
(note 188 187 189 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 23 (set (reg:SI 156)
        (plus:SI (reg:SI 83 [ D.6378 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 83 [ D.6378 ])
        (nil)))
(insn 190 189 191 23 (set (reg:SI 83 [ D.6378 ])
        (zero_extend:SI (subreg:QI (reg:SI 156) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/include/lorabase.h:370 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83

;; basic block 24, loop depth 0, count 0, freq 1684, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22 [28.0%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u208(1){ }u209(7){ }u210(16){ }u211(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 83
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 157 158 159 162 163 164
(code_label 191 190 192 24 372 "" [1 uses])
(note 192 191 193 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 24 (set (reg:SI 12 a12)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 44 {movsi_internal}
     (nil))
(insn 194 193 195 24 (set (reg:SI 11 a11)
        (reg:SI 83 [ D.6378 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.6378 ])
        (nil)))
(insn 195 194 196 24 (set (reg:SI 10 a10)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 44 {movsi_internal}
     (nil))
(call_insn 196 195 197 24 (call (mem:SI (symbol_ref:SI ("setDrTxpow") [flags 0x3]  <function_decl 0x100b7c000 setDrTxpow>) [0 setDrTxpow S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1926 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(insn 197 196 198 24 (set (reg/f:SI 157)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1927 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 198 197 199 24 (set:SI (reg/f:SI 158)
        (plus:SI (reg/f:SI 157)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1927 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 199 198 200 24 (set (reg:QI 159)
        (const_int 12 [0xc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1927 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 12 [0xc])
        (nil)))
(insn 200 199 203 24 (set (mem/j/c:QI (plus:SI (reg/f:SI 158)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (reg:QI 159)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1927 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 159)
        (expr_list:REG_DEAD (reg/f:SI 158)
            (nil))))
(insn 203 200 204 24 (set (reg:HI 162 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 157)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1928 45 {movhi_internal}
     (nil))
(insn 204 203 205 24 (set (reg:SI 164)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC257") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1928 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 4128 [0x1020])
        (nil)))
(insn 205 204 206 24 (set (reg:SI 163)
        (ior:SI (subreg:SI (reg:HI 162 [ LMIC.opmode ]) 0)
            (reg:SI 164))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1928 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg:HI 162 [ LMIC.opmode ])
            (nil))))
(insn 206 205 207 24 (set (mem/j/c:HI (plus:SI (reg/f:SI 157)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 163) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1928 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (nil))))
(insn 207 206 208 24 (set (reg:SI 10 a10)
        (const_int 14 [0xe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1929 44 {movsi_internal}
     (nil))
(call_insn 208 207 209 24 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1929 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 25, loop depth 0, count 0, freq 3367, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       21 [50.0%] 
;;              24 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u227(1){ }u228(7){ }u229(16){ }u230(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 72 165 166
(code_label 209 208 210 25 371 "" [1 uses])
(note 210 209 211 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 25 (set (reg/f:SI 165)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1933 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 212 211 213 25 (set:SI (reg/f:SI 166)
        (plus:SI (reg/f:SI 165)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1933 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 213 212 214 25 (set (reg:SI 72 [ D.6371 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 166)
                    (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1933 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))
(jump_insn 214 213 215 25 (set (pc)
        (if_then_else (eq (reg:SI 72 [ D.6371 ])
                (const_int 0 [0]))
            (label_ref:SI 271)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1933 56 {*btrue}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 271)
;;  succ:       26 [61.0%]  (FALLTHRU)
;;              33 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72

;; basic block 26, loop depth 0, count 0, freq 2054, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 [61.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u234(1){ }u235(7){ }u236(16){ }u237(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 73 167
(note 215 214 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 26 (set (reg/f:SI 167)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1934 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 217 216 218 26 (set (reg:SI 73 [ D.6370 ])
        (zero_extend:SI (mem/j/c:HI (plus:SI (reg/f:SI 167)
                    (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1934 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg/f:SI 167)
        (nil)))
(note 218 217 219 26 NOTE_INSN_DELETED)
(note 219 218 221 26 NOTE_INSN_DELETED)
(note 221 219 222 26 NOTE_INSN_DELETED)
(jump_insn 222 221 223 26 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 73 [ D.6370 ])
                    (const_int 1 [0x1])
                    (const_int 1 [0x1]))
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1934 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 73 [ D.6370 ])
        (int_list:REG_BR_PROB 7929 (nil)))
 -> 232)
;;  succ:       27 [20.7%]  (FALLTHRU)
;;              28 [79.3%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72

;; basic block 27, loop depth 0, count 0, freq 425, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 [20.7%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u244(1){ }u245(7){ }u246(16){ }u247(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 172 173 174
(note 223 222 224 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 27 (set (reg:SI 10 a10)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1935 44 {movsi_internal}
     (nil))
(call_insn 225 224 228 27 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1935 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 228 225 292 27 (set (reg:QI 174)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1936 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 292 228 291 27 (set (reg/f:SI 172)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1936 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 291 292 229 27 (set:SI (reg/f:SI 173)
        (plus:SI (reg/f:SI 172)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1936 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 229 291 4 27 (set (mem/j/c:QI (plus:SI (reg/f:SI 173)
                (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16])
        (reg:QI 174)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1936 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 174)
        (expr_list:REG_DEAD (reg/f:SI 173)
            (nil))))
(insn 4 229 282 27 (set (reg:SI 42 [ D.6369 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1943 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 282 4 283 27 (set (pc)
        (label_ref 258)) 78 {jump}
     (nil)
 -> 258)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 283 282 232)
;; basic block 28, loop depth 0, count 0, freq 1629, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       26 [79.3%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u253(1){ }u254(7){ }u255(16){ }u256(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 72
;; lr  def 	 74 175 176 177
(code_label 232 283 233 28 373 "" [1 uses])
(note 233 232 234 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 28 (set (reg:SI 175)
        (plus:SI (reg:SI 72 [ D.6371 ])
            (const_int -1 [0xffffffffffffffff]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6371 ])
        (nil)))
(insn 235 234 236 28 (set (reg:SI 74 [ D.6371 ])
        (zero_extend:SI (subreg:QI (reg:SI 175) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 236 235 237 28 (set (reg/f:SI 176)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 237 236 238 28 (set:SI (reg/f:SI 177)
        (plus:SI (reg/f:SI 176)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 238 237 239 28 (set (mem/j/c:QI (plus:SI (reg/f:SI 177)
                (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16])
        (subreg/s/v:QI (reg:SI 74 [ D.6371 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 177)
        (nil)))
(jump_insn 239 238 240 28 (set (pc)
        (if_then_else (ne (reg:SI 74 [ D.6371 ])
                (const_int 0 [0]))
            (label_ref:SI 275)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1938 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6371 ])
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 275)
;;  succ:       29 [29.0%]  (FALLTHRU)
;;              34 [71.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 29, loop depth 0, count 0, freq 472, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 [29.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u263(1){ }u264(7){ }u265(16){ }u266(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(note 240 239 241 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 241 240 6 29 (call (mem:SI (symbol_ref:SI ("startScan") [flags 0x3]  <function_decl 0x100b50510 startScan>) [0 startScan S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1939 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 6 241 284 29 (set (reg:SI 42 [ D.6369 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1943 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 284 6 285 29 (set (pc)
        (label_ref 258)) 78 {jump}
     (nil)
 -> 258)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 285 284 244)
;; basic block 30, loop depth 0, count 0, freq 1334, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       4 [29.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u268(1){ }u269(7){ }u270(16){ }u271(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42
(code_label 244 285 245 30 359 "" [1 uses])
(note 245 244 246 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(call_insn 246 245 247 30 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("decodeFrame") [flags 0x3]  <function_decl 0x100b7c360 decodeFrame>) [0 decodeFrame S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1945 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 247 246 249 30 (set (reg:SI 42 [ D.6369 ])
        (reg:SI 10 a10)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1945 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(jump_insn 249 247 250 30 (set (pc)
        (if_then_else (ne (reg:SI 42 [ D.6369 ])
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1945 56 {*btrue}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 136)
;;  succ:       31 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 31, loop depth 0, count 0, freq 667, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 [50.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u275(1){ }u276(7){ }u277(16){ }u278(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47 179 180
(note 250 249 251 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 31 (set (reg/f:SI 179)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC251") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1946 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 252 251 253 31 (set:SI (reg/f:SI 180)
        (plus:SI (reg/f:SI 179)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1946 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 253 252 254 31 (set (reg:SI 47 [ D.6371 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 180)
                    (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1946 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (nil)))
(note 254 253 256 31 NOTE_INSN_DELETED)
(note 256 254 257 31 NOTE_INSN_DELETED)
(jump_insn 257 256 286 31 (set (pc)
        (if_then_else (eq (zero_extract:SI (reg:SI 47 [ D.6371 ])
                    (const_int 1 [0x1])
                    (const_int 0 [0]))
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1946 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 47 [ D.6371 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 28)
;;  succ:       32 [50.0%]  (FALLTHRU)
;;              5 [50.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 32, loop depth 0, count 0, freq 334, maybe hot
;;  prev block 31, next block 33, flags: (NEW, RTL, MODIFIED)
;;  pred:       31 [50.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(1){ }u-1(7){ }u-1(16){ }u-1(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(note 286 257 287 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 287 286 288 32 (set (pc)
        (label_ref 258)) 78 {jump}
     (nil)
 -> 258)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 288 287 271)
;; basic block 33, loop depth 0, count 0, freq 1313, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       25 [39.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(1){ }u285(7){ }u286(16){ }u287(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 271 288 270 33 374 "" [1 uses])
(note 270 271 5 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 5 270 289 33 (set (reg:SI 42 [ D.6369 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1943 44 {movsi_internal}
     (nil))
(jump_insn 289 5 290 33 (set (pc)
        (label_ref 258)) 78 {jump}
     (nil)
 -> 258)
;;  succ:       35 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 290 289 275)
;; basic block 34, loop depth 0, count 0, freq 1157, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       28 [71.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u288(1){ }u289(7){ }u290(16){ }u291(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 275 290 274 34 375 "" [1 uses])
(note 274 275 7 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 7 274 258 34 (set (reg:SI 42 [ D.6369 ])
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1943 44 {movsi_internal}
     (nil))
;;  succ:       35 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 35, loop depth 0, count 0, freq 4601, maybe hot
;;  prev block 34, next block 1, flags: (RTL)
;;  pred:       32 [100.0%] 
;;              12 [100.0%] 
;;              34 [100.0%]  (FALLTHRU)
;;              29 [100.0%] 
;;              27 [100.0%] 
;;              33 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u292(1){ }u293(7){ }u294(16){ }u295(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 258 7 259 35 366 "" [5 uses])
(note 259 258 264 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 264 259 265 35 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6369 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1951 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6369 ])
        (nil)))
(insn 265 264 0 35 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1951 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function processRx1DnData (processRx1DnData, funcdef_no=86, decl_uid=3814, cgraph_uid=86, symbol_order=94)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
scanning new insn with uid = 35.
verify found no changes in insn with uid = 35.
deleting insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Reg 53 uninteresting
Reg 54 uninteresting
Reg 42 uninteresting
Reg 56 uninteresting
Reg 57 uninteresting
Reg 44 uninteresting
Reg 46: local to bb 4 def dominates all uses has unique first use
Reg 62 uninteresting
Examining insn 20, def for 46
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 57: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 35 (nil))

Pass 0 for finding pseudo/allocno costs

    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r62,l0) best AR_REGS, allocno AR_REGS
    r57: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r57,l0) best AR_REGS, allocno AR_REGS
    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r56,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r54,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r53,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r44,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r62,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:0,0
  a1(r46,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:6440,6440
  a2(r57,l0) costs: ACC_REG:7245,7245 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:38640,38640 MEM:9660,9660
  a3(r44,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:6440,6440
  a4(r56,l0) costs: ACC_REG:4830,4830 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:25760,25760 MEM:0,0
  a5(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r54,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 30(l0): point = 1
   Insn 29(l0): point = 3
   Insn 35(l0): point = 5
   Insn 28(l0): point = 7
   Insn 27(l0): point = 9
   Insn 20(l0): point = 11
   Insn 19(l0): point = 13
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 14(l0): point = 20
   Insn 11(l0): point = 22
   Insn 9(l0): point = 25
   Insn 8(l0): point = 27
   Insn 7(l0): point = 29
   Insn 6(l0): point = 31
 a0(r62): [4..5]
 a1(r46): [4..11]
 a2(r57): [10..15]
 a3(r44): [12..13]
 a4(r56): [16..17]
 a5(r42): [26..27]
 a6(r54): [28..29]
 a7(r53): [30..31]
Compressing live ranges: from 34 to 14 - 41%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r46): [0..3]
 a2(r57): [2..5]
 a3(r44): [4..5]
 a4(r56): [6..7]
 a5(r42): [8..9]
 a6(r54): [10..11]
 a7(r53): [12..13]
+++Allocating 32 bytes for conflict table (uncompressed size 64)
;; a0(r62,l0) conflicts: a1(r46,l0)
;;     total conflict hard regs: 11 12
;;     conflict hard regs: 11 12

;; a1(r46,l0) conflicts: a0(r62,l0) a2(r57,l0)
;;     total conflict hard regs: 11 12
;;     conflict hard regs: 11 12

;; a2(r57,l0) conflicts: a1(r46,l0) a3(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r44,l0) conflicts: a2(r57,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r56,l0) conflicts:;; a5(r42,l0) conflicts:;; a6(r54,l0) conflicts:;; a7(r53,l0) conflicts:  cp0:a2(r57)<->a4(r56)@100:shuffle
  cp1:a1(r46)<->a3(r44)@100:shuffle
  cp2:a6(r54)<->a7(r53)@125:shuffle
  pref0:a0(r62)<-hr10@100
  pref1:a1(r46)<-hr10@100
  regions=1, blocks=6, points=14
    allocnos=8 (big 0), copies=3, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r62 1r46 2r57 3r44 4r56 5r42 6r54 7r53
    modified regnos: 42 44 46 53 54 56 57 62
    border:
    Pressure: AR_REGS=4
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@64200
          2:( 2-10 13-15)@13680
      Allocno a0r62 of AR_REGS(14) has 12 avail. regs  2-10 13-15, node:  2-10 13-15 (confl regs =  0 1 11 12 16-34)
      Allocno a1r46 of AR_REGS(14) has 12 avail. regs  2-10 13-15, node:  2-10 13-15 (confl regs =  0 1 11 12 16-34)
      Allocno a2r57 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 2:a6r54-a7r53 (freq=125):
        Result (freq=4000): a6r54(2000) a7r53(2000)
      Forming thread by copy 0:a2r57-a4r56 (freq=100):
        Result (freq=4025): a2r57(2415) a4r56(1610)
      Forming thread by copy 1:a1r46-a3r44 (freq=100):
        Result (freq=3220): a1r46(1610) a3r44(1610)
      Pushing a0(r62,l0)(cost 0)
      Pushing a5(r42,l0)(cost 0)
      Pushing a3(r44,l0)(cost 0)
      Pushing a1(r46,l0)(cost 0)
      Pushing a7(r53,l0)(cost 0)
      Pushing a6(r54,l0)(cost 0)
      Pushing a4(r56,l0)(cost 0)
      Pushing a2(r57,l0)(cost 0)
      Popping a2(r57,l0)  -- assign reg 8
      Popping a4(r56,l0)  -- assign reg 8
      Popping a6(r54,l0)  -- assign reg 8
      Popping a7(r53,l0)  -- assign reg 8
      Popping a1(r46,l0)  -- assign reg 9
      Popping a3(r44,l0)  -- assign reg 9
      Popping a5(r42,l0)  -- assign reg 8
      Popping a0(r62,l0)  -- assign reg 10
Disposition:
    5:r42  l0     8    3:r44  l0     9    1:r46  l0     9    7:r53  l0     8
    6:r54  l0     8    4:r56  l0     8    2:r57  l0     8    0:r62  l0    10
New iteration of spill/restore move
+++Costs: overall -200, reg -200, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processRx1DnData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={3d} r1={1d,7u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r8={2d} r9={2d} r10={3d,2u} r11={3d,1u} r12={3d,1u} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={1d,4u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r42={1d,1u} r44={1d,1u} r46={1d,1u} r53={1d,1u} r54={1d,1u} r56={1d,1u} r57={1d,2u} r62={1d,1u} 
;;    total ref usage 109{75d,34u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 53 54
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 53)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC258") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 54)
        (plus:SI (reg/f:SI 53)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 53)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6379 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 54)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:SI 42 [ D.6379 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6379 ])
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 15)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("processDnData") [flags 0x3]  <function_decl 0x100bb2ca8 processDnData>) [0 processDnData S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 82 {call_value_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(note 12 11 14 3 NOTE_INSN_DELETED)
(jump_insn 14 12 15 3 (set (pc)
        (if_then_else (ne (reg:SI 10 a10)
                (const_int 0 [0]))
            (label_ref:SI 33)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1598 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 33)
;;  succ:       4 [61.0%]  (FALLTHRU)
;;              5 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 8050, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 46 56 57 62
(code_label 15 14 16 4 377 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 56)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC258") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 18 17 19 4 (set:SI (reg/f:SI 57)
        (plus:SI (reg/f:SI 56)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 56)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 19 18 20 4 (set (reg:SI 44 [ D.6379 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 57)
                    (const_int 39 [0x27])) [0 LMIC.rxDelay+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 34 {zero_extendqisi2}
     (nil))
(insn 20 19 23 4 (set (reg:SI 46 [ D.6380 ])
        (plus:SI (reg:SI 44 [ D.6379 ])
            (const_int 1 [0x1]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6379 ])
        (nil)))
(note 23 20 24 4 NOTE_INSN_DELETED)
(note 24 23 26 4 NOTE_INSN_DELETED)
(note 26 24 27 4 NOTE_INSN_DELETED)
(insn 27 26 28 4 (set (reg:SI 12 a12)
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 57)
                    (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 57)
        (nil)))
(insn 28 27 35 4 (set (reg:SI 11 a11)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC259") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("setupRx2DnData") [flags 0x3]  <function_decl 0x100bb2e58 setupRx2DnData>)
        (nil)))
(insn 35 28 29 4 (set (reg:SI 62)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC260") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 62500 [0xf424])
        (nil)))
(insn 29 35 30 4 (set (reg:SI 10 a10)
        (mult:SI (reg:SI 46 [ D.6380 ])
            (reg:SI 62))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 9 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 62)
        (expr_list:REG_DEAD (reg:SI 46 [ D.6380 ])
            (nil))))
(call_insn 30 29 33 4 (call (mem:SI (symbol_ref:SI ("schedRx12") [flags 0x3]  <function_decl 0x100bb2000 schedRx12>) [0 schedRx12 S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1599 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [39.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(1){ }u32(7){ }u33(16){ }u34(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 33 30 34 5 376 "" [1 uses])
(note 34 33 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function processRx2DnData (processRx2DnData, funcdef_no=84, decl_uid=3808, cgraph_uid=84, symbol_order=92)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
scanning new insn with uid = 27.
verify found no changes in insn with uid = 27.
deleting insn with uid = 17.
scanning new insn with uid = 28.
verify found no changes in insn with uid = 28.
deleting insn with uid = 12.
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 46 uninteresting
Reg 47 uninteresting
Reg 42 uninteresting
Reg 50: local to bb 3 def dominates all uses has unique first use
Reg 48 uninteresting
Reg 49 uninteresting
Reg 52 uninteresting
Ignoring reg 50 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 46: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 27 (nil))

Pass 0 for finding pseudo/allocno costs

    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r52,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r50,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r46,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r52,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:0,0
  a1(r49,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a2(r50,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:3112,3112
  a3(r48,l0) costs: ACC_REG:2334,2334 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:12448,12448 MEM:0,0
  a4(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 24(l0): point = 0
   Insn 21(l0): point = 3
   Insn 20(l0): point = 5
   Insn 27(l0): point = 7
   Insn 19(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 28(l0): point = 15
   Insn 29(l0): point = 17
   Insn 13(l0): point = 19
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 6(l0): point = 28
 a0(r52): [6..7]
 a1(r49): [14..15]
 a2(r50): [14..19]
 a3(r48): [16..17]
 a4(r42): [23..24]
 a5(r47): [25..26]
 a6(r46): [27..28]
Compressing live ranges: from 31 to 12 - 38%
Ranges after the compression:
 a0(r52): [0..1]
 a1(r49): [2..3]
 a2(r50): [2..5]
 a3(r48): [4..5]
 a4(r42): [6..7]
 a5(r47): [8..9]
 a6(r46): [10..11]
+++Allocating 24 bytes for conflict table (uncompressed size 56)
;; a0(r52,l0) conflicts:;; a1(r49,l0) conflicts: a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r50,l0) conflicts: a1(r49,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a2(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r42,l0) conflicts:;; a5(r47,l0) conflicts:;; a6(r46,l0) conflicts:  cp0:a1(r49)<->a3(r48)@48:shuffle
  cp1:a5(r47)<->a6(r46)@125:shuffle
  pref0:a0(r52)<-hr10@48
  regions=1, blocks=5, points=12
    allocnos=7 (big 0), copies=2, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r52 1r49 2r50 3r48 4r42 5r47 6r46
    modified regnos: 42 46 47 48 49 50 52
    border:
    Pressure: AR_REGS=3
 Removing pref0:hr10@48
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@44448
          2:( 2-9 12-15)@192
      Allocno a0r52 of AR_REGS(14) has 12 avail. regs  2-9 12-15, node:  2-9 12-15 (confl regs =  0 1 10 11 16-34)
      Allocno a1r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a5r47-a6r46 (freq=125):
        Result (freq=4000): a5r47(2000) a6r46(2000)
      Forming thread by copy 0:a1r49-a3r48 (freq=48):
        Result (freq=1556): a1r49(778) a3r48(778)
      Pushing a2(r50,l0)(cost 0)
      Pushing a0(r52,l0)(cost 0)
      Pushing a3(r48,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Pushing a4(r42,l0)(cost 0)
      Pushing a6(r46,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Popping a5(r47,l0)  -- assign reg 8
      Popping a6(r46,l0)  -- assign reg 8
      Popping a4(r42,l0)  -- assign reg 8
      Popping a1(r49,l0)  -- assign reg 8
      Popping a3(r48,l0)  -- assign reg 8
      Popping a0(r52,l0)  -- assign reg 8
      Popping a2(r50,l0)  -- assign reg 9
Disposition:
    4:r42  l0     8    6:r46  l0     8    5:r47  l0     8    3:r48  l0     8
    1:r49  l0     8    2:r50  l0     9    0:r52  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


processRx2DnData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11]
;;  ref usage 	r0={4d} r1={1d,7u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={3d} r9={3d} r10={4d,2u} r11={4d,1u} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={1d,3u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r42={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} r49={1d,1u} r50={1d,1u} r52={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 14{11 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 46 47
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 46)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC261") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1578 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 6 8 2 (set:SI (reg/f:SI 47)
        (plus:SI (reg/f:SI 46)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1578 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 42 [ D.6382 ])
        (zero_extend:SI (mem/j/c:QI (plus:SI (reg/f:SI 47)
                    (const_int 75 [0x4b])) [0 LMIC.dataLen+0 S1 A8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1578 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg/f:SI 47)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:SI 42 [ D.6382 ])
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1578 56 {*btrue}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6382 ])
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 22)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 48 49 50 52
(note 10 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 10 29 3 (set (reg:QI 50)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1579 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 29 13 28 3 (set (reg/f:SI 48)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC261") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1579 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 28 29 14 3 (set:SI (reg/f:SI 49)
        (plus:SI (reg/f:SI 48)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1579 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 14 28 15 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 73 [0x49])) [0 LMIC.txrxFlags+0 S1 A8])
        (reg:QI 50)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1579 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 50)
        (expr_list:REG_DEAD (reg/f:SI 49)
            (nil))))
(call_insn 15 14 16 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("os_getTime") [flags 0x41]  <function_decl 0x140efa438 os_getTime>) [0 os_getTime S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1585 82 {call_value_internal}
     (nil)
    (nil))
(note 16 15 18 3 NOTE_INSN_DELETED)
(note 18 16 19 3 NOTE_INSN_DELETED)
(insn 19 18 27 3 (set (reg:SI 11 a11)
        (const_int 2 [0x2])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1585 44 {movsi_internal}
     (nil))
(insn 27 19 20 3 (set (reg:SI 52)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC262") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1585 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 187500 [0x2dc6c])
        (nil)))
(insn 20 27 21 3 (set (reg:SI 10 a10)
        (plus:SI (reg:SI 10 a10)
            (reg:SI 52))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1585 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 52)
        (nil)))
(call_insn 21 20 22 3 (call (mem:SI (symbol_ref:SI ("txDelay") [flags 0x3]  <function_decl 0x100b66d80 txDelay>) [0 txDelay S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1585 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 11 a11)
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [61.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(1){ }u23(7){ }u24(16){ }u25(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 22 21 23 4 380 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 0 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("processDnData") [flags 0x3]  <function_decl 0x100bb2ca8 processDnData>) [0 processDnData S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1587 82 {call_value_internal}
     (expr_list:REG_UNUSED (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_disableTracking (LMIC_disableTracking, funcdef_no=93, decl_uid=3357, cgraph_uid=93, symbol_order=101)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 18.
verify found no changes in insn with uid = 18.
deleting insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
Reg 50: local to bb 2 def dominates all uses has unique first use
Reg 51 uninteresting
Ignoring reg 50 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 50: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 51: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r51,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r50,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r44,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a3(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 18(l0): point = 12
   Insn 8(l0): point = 14
   Insn 5(l0): point = 16
 a0(r50): [3..6]
 a1(r51): [3..4]
 a2(r44): [7..16]
 a3(r48): [9..10]
 a4(r46): [11..12]
 a5(r47): [11..14]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r50): [0..1]
 a1(r51): [0..1]
 a2(r44): [2..5]
 a3(r48): [2..3]
 a4(r46): [4..5]
 a5(r47): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r50,l0) conflicts: a1(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r51,l0) conflicts: a0(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r44,l0) conflicts: a3(r48,l0) a4(r46,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a2(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r46,l0) conflicts: a2(r44,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r47,l0) conflicts: a2(r44,l0) a4(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a3(r48)<->a4(r46)@125:shuffle
  cp1:a3(r48)<->a5(r47)@125:shuffle
  cp2:a0(r50)<->a2(r44)@125:shuffle
  regions=1, blocks=3, points=6
    allocnos=6 (big 0), copies=3, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r50 1r51 2r44 3r48 4r46 5r47
    modified regnos: 44 46 47 48 50 51
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@96000
      Allocno a0r50 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a3r48-a4r46 (freq=125):
        Result (freq=4000): a3r48(2000) a4r46(2000)
      Forming thread by copy 2:a0r50-a2r44 (freq=125):
        Result (freq=6000): a0r50(2000) a2r44(4000)
      Pushing a5(r47,l0)(cost 0)
      Pushing a1(r51,l0)(cost 0)
      Pushing a4(r46,l0)(cost 0)
      Pushing a3(r48,l0)(cost 0)
      Pushing a0(r50,l0)(cost 0)
      Pushing a2(r44,l0)(cost 0)
      Popping a2(r44,l0)  -- assign reg 8
      Popping a0(r50,l0)  -- assign reg 8
      Popping a3(r48,l0)  -- assign reg 9
      Popping a4(r46,l0)  -- assign reg 9
      Popping a1(r51,l0)  -- assign reg 9
      Popping a5(r47,l0)  -- assign reg 10
Disposition:
    2:r44  l0     8    4:r46  l0     9    5:r47  l0    10    3:r48  l0     9
    0:r50  l0     8    1:r51  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_disableTracking

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,3u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} r50={1d,1u} r51={1d,1u} 
;;    total ref usage 60{43d,16u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 46 47 48 50 51
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC263") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1804 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 5 18 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1804 45 {movhi_internal}
     (nil))
(insn 18 8 9 2 (set (reg:HI 46)
        (const_int -4 [0xfffffffffffffffc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1804 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -4 [0xfffffffffffffffc])
        (nil)))
(insn 9 18 10 2 (set (reg:SI 48)
        (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1804 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 10 9 12 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 48) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1804 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 48)
        (nil)))
(insn 12 10 13 2 (set:SI (reg/f:SI 50)
        (plus:SI (reg/f:SI 44)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1805 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 44)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 13 12 14 2 (set (reg:QI 51)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1805 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 14 13 15 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 50)
                (const_int 54 [0x36])) [0 LMIC.bcninfoTries+0 S1 A16])
        (reg:QI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1805 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 51)
        (expr_list:REG_DEAD (reg/f:SI 50)
            (nil))))
(call_insn 15 14 0 2 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:1806 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setAdrMode (LMIC_setAdrMode, funcdef_no=103, decl_uid=3334, cgraph_uid=103, symbol_order=111)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 43 uninteresting
Reg 45 uninteresting
Reg 46 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a3(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 6(l0): point = 7
   Insn 22(l0): point = 10
   Insn 5(l0): point = 12
   Insn 9(l0): point = 15
   Insn 3(l0): point = 17
 a0(r46): [1..2]
 a1(r42): [10..12] [1..7]
 a2(r45): [3..4]
 a3(r43): [16..17]
Compressing live ranges: from 20 to 8 - 40%
Ranges after the compression:
 a0(r46): [0..1]
 a1(r42): [0..5]
 a2(r45): [2..3]
 a3(r43): [6..7]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r46,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r42,l0) conflicts: a0(r46,l0) a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r45,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r43,l0) conflicts:  cp0:a0(r46)<->a2(r45)@125:shuffle
  pref0:a3(r43)<-hr2@125
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r46 1r42 2r45 3r43
    modified regnos: 42 43 45 46
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@48500
      Allocno a0r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r46-a2r45 (freq=125):
        Result (freq=4000): a0r46(2000) a2r45(2000)
      Pushing a3(r43,l0)(cost 0)
      Pushing a1(r42,l0)(cost 0)
      Pushing a2(r45,l0)(cost 0)
      Pushing a0(r46,l0)(cost 0)
      Popping a0(r46,l0)  -- assign reg 8
      Popping a2(r45,l0)  -- assign reg 8
      Popping a1(r42,l0)  -- assign reg 9
      Popping a3(r43,l0)  -- assign reg 2
Disposition:
    1:r42  l0     9    3:r43  l0     2    2:r45  l0     8    0:r46  l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setAdrMode

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,5u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r43={1d,1u} r45={1d,1u} r46={1d,1u} 
;;    total ref usage 39{15d,24u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 43 [ enabled ])
        (zero_extend:SI (reg:QI 2 a2 [ enabled ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2222 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ enabled ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 9 4 10 2 (set (pc)
        (if_then_else (eq (reg/v:SI 43 [ enabled ])
                (const_int 0 [0]))
            (label_ref:SI 21)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 43 [ enabled ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 21)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(1){ }u8(7){ }u9(16){ }u10(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 10 9 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 10 22 3 (set (reg:SI 42 [ D.6385 ])
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(jump_insn 22 5 23 3 (set (pc)
        (label_ref 11)) 78 {jump}
     (nil)
 -> 11)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 23 22 21)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(1){ }u12(7){ }u13(16){ }u14(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 21 23 20 4 384 "" [1 uses])
(note 20 21 6 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 6 20 11 4 (set (reg:SI 42 [ D.6385 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u15(1){ }u16(7){ }u17(16){ }u18(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 45 46
(code_label 11 6 12 5 383 "" [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC264") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 14 13 15 5 (set:SI (reg/f:SI 46)
        (plus:SI (reg/f:SI 45)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 45)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 15 14 0 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 46)
                (const_int 43 [0x2b])) [0 LMIC.adrEnabled+0 S1 A8])
        (subreg/s/v:QI (reg:SI 42 [ D.6385 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2223 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 46)
        (expr_list:REG_DEAD (reg:SI 42 [ D.6385 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setDrTxpow (LMIC_setDrTxpow, funcdef_no=104, decl_uid=3332, cgraph_uid=104, symbol_order=112)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
Compressing live ranges: from 9 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setDrTxpow

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d,1u} r3={1d,1u} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={2d,1u} r11={2d,1u} r12={2d,1u} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} 
;;    total ref usage 53{40d,13u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 4 2 NOTE_INSN_DELETED)
(note 4 2 3 2 NOTE_INSN_DELETED)
(note 3 4 5 2 NOTE_INSN_DELETED)
(note 5 3 6 2 NOTE_INSN_DELETED)
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(note 9 6 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:SI 12 a12)
        (sign_extend:SI (reg:QI 3 a3 [ txpow ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2229 36 {extendqisi2_internal}
     (expr_list:REG_DEAD (reg:QI 3 a3 [ txpow ])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 11 a11)
        (zero_extend:SI (reg:QI 2 a2 [ dr ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2229 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ dr ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2229 44 {movsi_internal}
     (nil))
(call_insn 13 12 0 2 (call (mem:SI (symbol_ref:SI ("setDrTxpow") [flags 0x3]  <function_decl 0x100b7c000 setDrTxpow>) [0 setDrTxpow S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2229 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_DEAD (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_shutdown (LMIC_shutdown, funcdef_no=105, decl_uid=3338, cgraph_uid=105, symbol_order=113)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 18.
verify found no changes in insn with uid = 18.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 45 uninteresting
Reg 47 uninteresting
Reg 49 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 18 (nil))

Pass 0 for finding pseudo/allocno costs

    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r45,l0) best AR_REGS, allocno AR_REGS

  a0(r45,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 18(l0): point = 4
   Insn 13(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
 a0(r45): [1..8]
 a1(r49): [1..2]
 a2(r47): [3..4]
 a3(r48): [3..6]
Compressing live ranges: from 19 to 4 - 21%
Ranges after the compression:
 a0(r45): [0..3]
 a1(r49): [0..1]
 a2(r47): [2..3]
 a3(r48): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r45,l0) conflicts: a1(r49,l0) a2(r47,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r49,l0) conflicts: a0(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r47,l0) conflicts: a0(r45,l0) a3(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r48,l0) conflicts: a0(r45,l0) a2(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r49)<->a2(r47)@125:shuffle
  cp1:a1(r49)<->a3(r48)@125:shuffle
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r45 1r49 2r47 3r48
    modified regnos: 45 47 48 49
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@56000
      Allocno a0r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r49-a2r47 (freq=125):
        Result (freq=4000): a1r49(2000) a2r47(2000)
      Pushing a3(r48,l0)(cost 0)
      Pushing a0(r45,l0)(cost 0)
      Pushing a2(r47,l0)(cost 0)
      Pushing a1(r49,l0)(cost 0)
      Popping a1(r49,l0)  -- assign reg 8
      Popping a2(r47,l0)  -- assign reg 8
      Popping a0(r45,l0)  -- assign reg 9
      Popping a3(r48,l0)  -- assign reg 10
Disposition:
    0:r45  l0     9    2:r47  l0     8    3:r48  l0    10    1:r49  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_shutdown

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={3d} r1={1d,4u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={2d} r9={2d} r10={4d,2u} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={1d,1u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r45={1d,2u} r47={1d,1u} r48={1d,1u,1e} r49={1d,1u} 
;;    total ref usage 87{70d,16u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 45 47 48 49
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(note 5 2 6 2 NOTE_INSN_DELETED)
(insn 6 5 7 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC265") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2234 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 7 6 8 2 (call (mem:SI (symbol_ref:SI ("os_clearCallback") [flags 0x41]  <function_decl 0x140efa360 os_clearCallback>) [0 os_clearCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2234 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2235 44 {movsi_internal}
     (nil))
(call_insn 9 8 10 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2235 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 10 9 13 2 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC266") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2236 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 13 10 18 2 (set (reg:HI 48 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2236 45 {movhi_internal}
     (nil))
(insn 18 13 14 2 (set (reg:HI 47)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2236 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(insn 14 18 15 2 (set (reg:SI 49)
        (ior:SI (subreg:SI (reg:HI 48 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 47) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2236 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 48 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 47)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 48 [ LMIC.opmode ]) 0)
                    (const_int 64 [0x40]))
                (nil)))))
(insn 15 14 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 49) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2236 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 49)
        (expr_list:REG_DEAD (reg/f:SI 45)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_reset (LMIC_reset, funcdef_no=106, decl_uid=3342, cgraph_uid=106, symbol_order=114)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 51: local to bb 2 def dominates all uses has unique first use
Reg 44: local to bb 2 def dominates all uses has unique first use
Reg 59 uninteresting
Reg 62 uninteresting
Reg 66: local to bb 2 def dominates all uses has unique first use
Reg 67 uninteresting
Reg 72 uninteresting
Reg 75 uninteresting
Reg 80 uninteresting
Reg 83 uninteresting
Found def insn 21 for 44 to be not moveable
Ignoring reg 51 with equiv init insn
Ignoring reg 66 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 51: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 62: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 66: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 67: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 75: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 80: (insn_list:REG_DEP_TRUE 57 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 61 (nil))

Pass 0 for finding pseudo/allocno costs

    r83: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r83,l0) best AR_REGS, allocno AR_REGS
    r80: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r80,l0) best AR_REGS, allocno AR_REGS
    r75: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r75,l0) best AR_REGS, allocno AR_REGS
    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r72,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r66,l0) best AR_REGS, allocno AR_REGS
    r62: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r62,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r59,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r51,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r66,l0) costs: ACC_REG:18000,18000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:96000,96000 MEM:24000,24000
  a1(r83,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r80,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r51,l0) costs: ACC_REG:24000,24000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:128000,128000 MEM:24000,24000
  a4(r72,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a5(r75,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r62,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:16000,16000
  a7(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a8(r59,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a9(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 62(l0): point = 0
   Insn 61(l0): point = 2
   Insn 58(l0): point = 4
   Insn 57(l0): point = 6
   Insn 54(l0): point = 8
   Insn 51(l0): point = 10
   Insn 50(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 44(l0): point = 18
   Insn 40(l0): point = 20
   Insn 39(l0): point = 22
   Insn 38(l0): point = 24
   Insn 36(l0): point = 26
   Insn 33(l0): point = 28
   Insn 32(l0): point = 30
   Insn 30(l0): point = 32
   Insn 27(l0): point = 34
   Insn 22(l0): point = 36
   Insn 21(l0): point = 38
   Insn 18(l0): point = 40
   Insn 16(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 10(l0): point = 50
   Insn 9(l0): point = 52
   Insn 8(l0): point = 54
   Insn 6(l0): point = 56
   Insn 5(l0): point = 58
 a0(r66): [1..24]
 a1(r83): [1..2]
 a2(r80): [5..6]
 a3(r51): [9..50]
 a4(r72): [9..16]
 a5(r75): [11..12]
 a6(r62): [19..30]
 a7(r67): [21..22]
 a8(r59): [33..34]
 a9(r44): [35..38]
Compressing live ranges: from 61 to 12 - 19%
Ranges after the compression:
 a0(r66): [0..7]
 a1(r83): [0..1]
 a2(r80): [2..3]
 a3(r51): [4..11]
 a4(r72): [4..5]
 a5(r75): [4..5]
 a6(r62): [6..7]
 a7(r67): [6..7]
 a8(r59): [8..9]
 a9(r44): [10..11]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r66,l0) conflicts: a1(r83,l0) a2(r80,l0) a4(r72,l0) a5(r75,l0) a3(r51,l0) a6(r62,l0) a7(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r83,l0) conflicts: a0(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r80,l0) conflicts: a0(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r51,l0) conflicts: a0(r66,l0) a4(r72,l0) a5(r75,l0) a6(r62,l0) a7(r67,l0) a8(r59,l0) a9(r44,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a4(r72,l0) conflicts: a0(r66,l0) a5(r75,l0) a3(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r75,l0) conflicts: a0(r66,l0) a4(r72,l0) a3(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r62,l0) conflicts: a0(r66,l0) a3(r51,l0) a7(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r67,l0) conflicts: a0(r66,l0) a3(r51,l0) a6(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r59,l0) conflicts: a3(r51,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r44,l0) conflicts: a3(r51,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

  cp0:a8(r59)<->a9(r44)@125:shuffle
  pref0:a3(r51)<-hr10@1000
  pref1:a9(r44)<-hr10@125
  pref2:a8(r59)<-hr10@125
  regions=1, blocks=3, points=12
    allocnos=10 (big 0), copies=1, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r66 1r83 2r80 3r51 4r72 5r75 6r62 7r67 8r59 9r44
    modified regnos: 44 51 59 62 66 67 72 75 80 83
    border:
    Pressure: AR_REGS=4
 Removing pref0:hr10@1000
 Removing pref1:hr10@125
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@168500
          2:( 2-7)@64500
      Allocno a0r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r83 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r80 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r51 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a4r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r75 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r62 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a8r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a9r44 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Forming thread by copy 0:a8r59-a9r44 (freq=125):
        Result (freq=4000): a8r59(2000) a9r44(2000)
      Pushing a7(r67,l0)(cost 0)
      Pushing a5(r75,l0)(cost 0)
        Making a3(r51,l0) colorable
      Pushing a2(r80,l0)(cost 0)
      Pushing a1(r83,l0)(cost 0)
      Pushing a4(r72,l0)(cost 0)
      Pushing a8(r59,l0)(cost 0)
      Pushing a9(r44,l0)(cost 0)
      Pushing a6(r62,l0)(cost 0)
      Pushing a0(r66,l0)(cost 0)
      Pushing a3(r51,l0)(cost 24000)
      Popping a3(r51,l0)  -- assign reg 2
      Popping a0(r66,l0)  -- assign reg 8
      Popping a6(r62,l0)  -- assign reg 9
      Popping a9(r44,l0)  -- assign reg 3
      Popping a8(r59,l0)  -- assign reg 10
      Popping a4(r72,l0)  -- assign reg 3
      Popping a1(r83,l0)  -- assign reg 2
      Popping a2(r80,l0)  -- assign reg 2
      Popping a5(r75,l0)  -- assign reg 9
      Popping a7(r67,l0)  -- assign reg 3
Disposition:
    9:r44  l0     3    3:r51  l0     2    8:r59  l0    10    6:r62  l0     9
    0:r66  l0     8    7:r67  l0     3    4:r72  l0     3    5:r75  l0     9
    2:r80  l0     2    1:r83  l0     2
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_reset

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={6d} r1={1d,7u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={5d} r9={5d} r10={8d,5u} r11={6d,1u} r12={6d,1u} r13={5d} r14={5d} r15={5d} r16={1d,2u} r17={1d,1u} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r44={1d,1u} r51={1d,7u} r59={1d,1u} r62={1d,3u} r66={1d,5u} r67={1d,1u} r72={1d,2u} r75={1d,1u} r80={1d,1u} r83={1d,1u} 
;;    total ref usage 202{160d,42u,0e} in 30{25 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 51 59 62 66 67 72 75 80 83
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2244 44 {movsi_internal}
     (nil))
(call_insn 6 5 7 2 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2244 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(note 7 6 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC267") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2245 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 9 8 10 2 (call (mem:SI (symbol_ref:SI ("os_clearCallback") [flags 0x41]  <function_decl 0x140efa360 os_clearCallback>) [0 os_clearCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2245 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 10 9 12 2 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC268") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2247 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(note 12 10 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:SI 12 a12)
        (const_int 428 [0x1ac])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2247 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 428 [0x1ac])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 11 a11)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2247 44 {movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 10 a10)
        (reg/f:SI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2247 44 {movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(call_insn 16 15 18 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x100c87510 memset>) [0 memset S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2247 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 11 a11))
            (expr_list:SI (use (reg:SI 12 a12))
                (nil)))))
(call_insn 18 16 19 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2249 82 {call_value_internal}
     (nil)
    (nil))
(note 19 18 21 2 NOTE_INSN_DELETED)
(insn 21 19 22 2 (set (reg:SI 44 [ D.6392 ])
        (ashift:SI (reg:SI 10 a10)
            (const_int 8 [0x8]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2249 51 {ashlsi3_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil)))
(call_insn 22 21 23 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("radio_rand1") [flags 0x41]  <function_decl 0x140eef948 radio_rand1>) [0 radio_rand1 S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2249 82 {call_value_internal}
     (nil)
    (nil))
(note 23 22 27 2 NOTE_INSN_DELETED)
(insn 27 23 28 2 (set (reg:SI 59)
        (ior:SI (reg:SI 44 [ D.6392 ])
            (reg:SI 10 a10))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2249 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 44 [ D.6392 ])
        (expr_list:REG_DEAD (reg:SI 10 a10)
            (nil))))
(note 28 27 30 2 NOTE_INSN_DELETED)
(insn 30 28 32 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 51)
                (const_int 244 [0xf4])) [0 LMIC.devNonce+0 S2 A32])
        (subreg:HI (reg:SI 59) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2249 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 59)
        (nil)))
(insn 32 30 33 2 (set (reg:HI 62)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2250 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 33 32 36 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 51)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (reg:HI 62)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2250 45 {movhi_internal}
     (nil))
(insn 36 33 38 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 51)
                (const_int 177 [0xb1])) [0 LMIC.errcr+0 S1 A8])
        (subreg:QI (reg:HI 62) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2251 46 {movqi_internal}
     (nil))
(insn 38 36 39 2 (set:SI (reg/f:SI 66)
        (plus:SI (reg/f:SI 51)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2252 1 {addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 256 [0x100])))
        (nil)))
(insn 39 38 40 2 (set (reg:QI 67)
        (const_int -128 [0xffffffffffffff80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2252 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -128 [0xffffffffffffff80])
        (nil)))
(insn 40 39 44 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 43 [0x2b])) [0 LMIC.adrEnabled+0 S1 A8])
        (reg:QI 67)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2252 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 67)
        (nil)))
(insn 44 40 46 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 47 [0x2f])) [0 LMIC.dn2Dr+0 S1 A8])
        (subreg:QI (reg:HI 62) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2253 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:HI 62)
        (nil)))
(insn 46 44 47 2 (set (reg:SI 72)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC269") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2254 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 869525000 [0x33d3e608])
        (nil)))
(insn 47 46 50 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 51)
                (const_int 304 [0x130])) [0 LMIC.dn2Freq+0 S4 A32])
        (reg:SI 72)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2254 44 {movsi_internal}
     (nil))
(insn 50 47 51 2 (set (reg:QI 75)
        (const_int 1 [0x1])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2255 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 51 50 54 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 39 [0x27])) [0 LMIC.rxDelay+0 S1 A8])
        (reg:QI 75)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2255 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 75)
        (nil)))
(insn 54 51 57 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 51)
                (const_int 324 [0x144])) [0 LMIC.ping.freq+0 S4 A32])
        (reg:SI 72)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2257 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg/f:SI 51)
            (nil))))
(insn 57 54 58 2 (set (reg:QI 80)
        (const_int 3 [0x3])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2258 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 58 57 61 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 56 [0x38])) [0 LMIC.ping.dr+0 S1 A32])
        (reg:QI 80)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2258 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 80)
        (nil)))
(insn 61 58 62 2 (set (reg:QI 83)
        (const_int -1 [0xffffffffffffffff])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2259 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 62 61 0 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 66)
                (const_int 57 [0x39])) [0 LMIC.ping.intvExp+0 S1 A8])
        (reg:QI 83)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2259 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 83)
        (expr_list:REG_DEAD (reg/f:SI 66)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function runReset (runReset, funcdef_no=69, decl_uid=3700, cgraph_uid=69, symbol_order=77)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
Compressing live ranges: from 9 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: AR_REGS=1
    Hard reg set forest:
      0:( 2-15 18-34)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


runReset

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={4d} r1={1d,5u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={3d} r9={3d} r10={4d,1u} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,2u} r17={1d,1u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} 
;;    total ref usage 103{92d,11u,0e} in 4{1 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (call (mem:SI (symbol_ref:SI ("LMIC_reset") [flags 0x3]  <function_decl 0x100b28798 LMIC_reset>) [0 LMIC_reset S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:954 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 7 6 8 2 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("LMIC_startJoining") [flags 0x3]  <function_decl 0x100b28510 LMIC_startJoining>) [0 LMIC_startJoining S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:956 82 {call_value_internal}
     (expr_list:REG_UNUSED (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 8 7 9 2 (set (reg:SI 10 a10)
        (const_int 12 [0xc])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:958 44 {movsi_internal}
     (nil))
(call_insn 9 8 0 2 (call (mem:SI (symbol_ref:SI ("reportEvent") [flags 0x3]  <function_decl 0x100b7cd80 reportEvent>) [0 reportEvent S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:958 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_init (LMIC_init, funcdef_no=107, decl_uid=3340, cgraph_uid=107, symbol_order=115)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 10.
verify found no changes in insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 42 uninteresting
Ignoring reg 43 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 42: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 43: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a1(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 10(l0): point = 2
   Insn 6(l0): point = 4
 a0(r42): [1..2]
 a1(r43): [1..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r42): [0..1]
 a1(r43): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r42,l0) conflicts: a1(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r43,l0) conflicts: a0(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r42 1r43
    modified regnos: 42 43
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@16000
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a1(r43,l0)(cost 0)
      Pushing a0(r42,l0)(cost 0)
      Popping a0(r42,l0)  -- assign reg 8
      Popping a1(r43,l0)  -- assign reg 9
Disposition:
    0:r42  l0     8    1:r43  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_init

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r42={1d,1u} r43={1d,1u} 
;;    total ref usage 21{12d,9u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42 43
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 10 2 (set (reg:HI 43)
        (const_int 64 [0x40])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2277 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(insn 10 6 7 2 (set (reg/f:SI 42)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC270") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2277 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 10 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 42)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (reg:HI 43)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2277 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:HI 43)
        (expr_list:REG_DEAD (reg/f:SI 42)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_clrTxData (LMIC_clrTxData, funcdef_no=108, decl_uid=3344, cgraph_uid=108, symbol_order=116)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
scanning new insn with uid = 31.
verify found no changes in insn with uid = 31.
deleting insn with uid = 15.
scanning new insn with uid = 32.
verify found no changes in insn with uid = 32.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 45 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
Reg 43 uninteresting
Reg 51 uninteresting
Reg 52 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 51: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 52: (insn_list:REG_DEP_TRUE 31 (nil))

Pass 0 for finding pseudo/allocno costs

    r52: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r52,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r51,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r52,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r43,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a2(r45,l0) costs: ACC_REG:12000,12000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:64000,64000 MEM:8000,8000
  a3(r51,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 26(l0): point = 1
   Insn 25(l0): point = 3
   Insn 24(l0): point = 5
   Insn 23(l0): point = 7
   Insn 22(l0): point = 9
   Insn 19(l0): point = 12
   Insn 31(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 11(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 32(l0): point = 26
   Insn 7(l0): point = 28
   Insn 5(l0): point = 30
 a0(r52): [13..14]
 a1(r43): [13..22]
 a2(r45): [17..30]
 a3(r51): [17..18]
 a4(r48): [23..24]
 a5(r46): [25..26]
 a6(r47): [25..28]
Compressing live ranges: from 33 to 8 - 24%
Ranges after the compression:
 a0(r52): [0..1]
 a1(r43): [0..3]
 a2(r45): [2..7]
 a3(r51): [2..3]
 a4(r48): [4..5]
 a5(r46): [6..7]
 a6(r47): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r52,l0) conflicts: a1(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r43,l0) conflicts: a0(r52,l0) a3(r51,l0) a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r45,l0) conflicts: a1(r43,l0) a3(r51,l0) a4(r48,l0) a5(r46,l0) a6(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r51,l0) conflicts: a1(r43,l0) a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r48,l0) conflicts: a2(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r46,l0) conflicts: a2(r45,l0) a6(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r47,l0) conflicts: a2(r45,l0) a5(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r48)<->a5(r46)@125:shuffle
  cp1:a4(r48)<->a6(r47)@125:shuffle
  cp2:a1(r43)<->a4(r48)@125:shuffle
  regions=1, blocks=5, points=8
    allocnos=7 (big 0), copies=3, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r52 1r43 2r45 3r51 4r48 5r46 6r47
    modified regnos: 43 45 46 47 48 51 52
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@120000
      Allocno a0r52 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r51 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a4r48-a5r46 (freq=125):
        Result (freq=4000): a4r48(2000) a5r46(2000)
      Forming thread by copy 2:a1r43-a4r48 (freq=125):
        Result (freq=7000): a1r43(3000) a4r48(2000) a5r46(2000)
      Pushing a6(r47,l0)(cost 0)
      Pushing a3(r51,l0)(cost 0)
      Pushing a0(r52,l0)(cost 0)
      Pushing a2(r45,l0)(cost 0)
      Pushing a5(r46,l0)(cost 0)
      Pushing a4(r48,l0)(cost 0)
      Pushing a1(r43,l0)(cost 0)
      Popping a1(r43,l0)  -- assign reg 8
      Popping a4(r48,l0)  -- assign reg 8
      Popping a5(r46,l0)  -- assign reg 8
      Popping a2(r45,l0)  -- assign reg 9
      Popping a0(r52,l0)  -- assign reg 9
      Popping a3(r51,l0)  -- assign reg 10
      Popping a6(r47,l0)  -- assign reg 10
Disposition:
    1:r43  l0     8    2:r45  l0     9    5:r46  l0     8    6:r47  l0    10
    4:r48  l0     8    3:r51  l0    10    0:r52  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_clrTxData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 10[a10]
;;  ref usage 	r0={4d} r1={1d,7u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={3d} r9={3d} r10={5d,2u} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,4u} r17={1d,3u} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r43={1d,2u} r45={1d,3u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} r51={1d,1u} r52={1d,1u} 
;;    total ref usage 131{100d,30u,1e} in 15{12 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 45 46 47 48 51 52
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC271") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 5 32 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 45 {movhi_internal}
     (nil))
(insn 32 7 8 2 (set (reg:HI 46)
        (const_int -153 [0xffffffffffffff67])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -153 [0xffffffffffffff67])
        (nil)))
(insn 8 32 9 2 (set (reg:SI 48)
        (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int -153 [0xffffffffffffff67]))
                (nil)))))
(insn 9 8 11 2 (set (reg:SI 43 [ D.6397 ])
        (zero_extend:SI (subreg:HI (reg:SI 48) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 48)
        (nil)))
(insn 11 9 13 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg/s/v:HI (reg:SI 43 [ D.6397 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2282 45 {movhi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:QI 51)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2283 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 14 13 16 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 45)
                (const_int 190 [0xbe])) [0 LMIC.pendTxLen+0 S1 A16])
        (reg:QI 51)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2283 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 51)
        (expr_list:REG_DEAD (reg/f:SI 45)
            (nil))))
(note 16 14 18 2 NOTE_INSN_DELETED)
(note 18 16 31 2 NOTE_INSN_DELETED)
(insn 31 18 19 2 (set (reg:HI 52)
        (const_int 5 [0x5])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2284 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))
(jump_insn 19 31 20 2 (set (pc)
        (if_then_else (ne (and:SI (reg:SI 43 [ D.6397 ])
                    (subreg:SI (reg:HI 52) 0))
                (const_int 0 [0]))
            (label_ref:SI 29)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2284 62 {*masktrue}
     (expr_list:REG_DEAD (reg:HI 52)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6397 ])
            (int_list:REG_BR_PROB 6102 (nil))))
 -> 29)
;;  succ:       4 [61.0%] 
;;              3 [39.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3898, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 21 20 22 3 NOTE_INSN_DELETED)
(insn 22 21 23 3 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC272") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2286 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 20 [0x14])))
        (nil)))
(call_insn 23 22 24 3 (call (mem:SI (symbol_ref:SI ("os_clearCallback") [flags 0x41]  <function_decl 0x140efa360 os_clearCallback>) [0 os_clearCallback S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2286 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 24 23 25 3 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2287 44 {movsi_internal}
     (nil))
(call_insn 25 24 26 3 (call (mem:SI (symbol_ref:SI ("os_radio") [flags 0x41]  <function_decl 0x140efa5e8 os_radio>) [0 os_radio S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2287 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (nil))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(call_insn 26 25 29 3 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2288 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(1){ }u29(7){ }u30(16){ }u31(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	
(code_label 29 26 30 4 390 "" [1 uses])
(note 30 29 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setTxData (LMIC_setTxData, funcdef_no=109, decl_uid=3346, cgraph_uid=109, symbol_order=117)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
scanning new insn with uid = 27.
verify found no changes in insn with uid = 27.
deleting insn with uid = 19.
scanning new insn with uid = 28.
verify found no changes in insn with uid = 28.
deleting insn with uid = 18.
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Reg 45 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
Reg 43 uninteresting
Reg 56: local to bb 3 def dominates all uses has unique first use
Reg 54 uninteresting
Reg 55 uninteresting
Ignoring reg 56 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 54: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 55: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 56: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 0 for finding pseudo/allocno costs

    r56: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r56,l0) best AR_REGS, allocno AR_REGS
    r55: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r55,l0) best AR_REGS, allocno AR_REGS
    r54: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r54,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r55,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a1(r56,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:4880,4880
  a2(r54,l0) costs: ACC_REG:3660,3660 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:19520,19520 MEM:0,0
  a3(r43,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:12000,12000
  a4(r45,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a5(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 24(l0): point = 0
   Insn 21(l0): point = 3
   Insn 27(l0): point = 5
   Insn 28(l0): point = 7
   Insn 20(l0): point = 9
   Insn 16(l0): point = 12
   Insn 11(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 29(l0): point = 20
   Insn 7(l0): point = 22
   Insn 5(l0): point = 24
 a0(r55): [4..5]
 a1(r56): [4..9]
 a2(r54): [6..7]
 a3(r43): [13..16]
 a4(r45): [15..24]
 a5(r48): [17..18]
 a6(r46): [19..20]
 a7(r47): [19..22]
Compressing live ranges: from 27 to 10 - 37%
Ranges after the compression:
 a0(r55): [0..1]
 a1(r56): [0..3]
 a2(r54): [2..3]
 a3(r43): [4..5]
 a4(r45): [4..9]
 a5(r48): [6..7]
 a6(r46): [8..9]
 a7(r47): [8..9]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r55,l0) conflicts: a1(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r56,l0) conflicts: a0(r55,l0) a2(r54,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r54,l0) conflicts: a1(r56,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r43,l0) conflicts: a4(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r45,l0) conflicts: a3(r43,l0) a5(r48,l0) a6(r46,l0) a7(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r48,l0) conflicts: a4(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r46,l0) conflicts: a4(r45,l0) a7(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r47,l0) conflicts: a4(r45,l0) a6(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r55)<->a2(r54)@76:shuffle
  cp1:a5(r48)<->a6(r46)@125:shuffle
  cp2:a5(r48)<->a7(r47)@125:shuffle
  cp3:a3(r43)<->a5(r48)@125:shuffle
  regions=1, blocks=5, points=10
    allocnos=8 (big 0), copies=4, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r55 1r56 2r54 3r43 4r45 5r48 6r46 7r47
    modified regnos: 43 45 46 47 48 54 55 56
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@99520
      Allocno a0r55 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r56 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r54 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 1:a5r48-a6r46 (freq=125):
        Result (freq=4000): a5r48(2000) a6r46(2000)
      Forming thread by copy 3:a3r43-a5r48 (freq=125):
        Result (freq=7000): a3r43(3000) a5r48(2000) a6r46(2000)
      Forming thread by copy 0:a0r55-a2r54 (freq=76):
        Result (freq=2440): a0r55(1220) a2r54(1220)
      Pushing a1(r56,l0)(cost 0)
      Pushing a7(r47,l0)(cost 0)
      Pushing a2(r54,l0)(cost 0)
      Pushing a0(r55,l0)(cost 0)
      Pushing a4(r45,l0)(cost 0)
      Pushing a6(r46,l0)(cost 0)
      Pushing a5(r48,l0)(cost 0)
      Pushing a3(r43,l0)(cost 0)
      Popping a3(r43,l0)  -- assign reg 8
      Popping a5(r48,l0)  -- assign reg 8
      Popping a6(r46,l0)  -- assign reg 8
      Popping a4(r45,l0)  -- assign reg 9
      Popping a0(r55,l0)  -- assign reg 8
      Popping a2(r54,l0)  -- assign reg 8
      Popping a7(r47,l0)  -- assign reg 10
      Popping a1(r56,l0)  -- assign reg 9
Disposition:
    3:r43  l0     8    4:r45  l0     9    6:r46  l0     8    7:r47  l0    10
    5:r48  l0     8    2:r54  l0     8    0:r55  l0     8    1:r56  l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setTxData

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,5u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={1d,3u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r43={1d,2u} r45={1d,2u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} r54={1d,1u} r55={1d,1u} r56={1d,1u} 
;;    total ref usage 72{45d,26u,1e} in 12{11 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 45 46 47 48
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC273") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 7 5 29 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 45 {movhi_internal}
     (nil))
(insn 29 7 8 2 (set (reg:HI 46)
        (const_int 8 [0x8])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))
(insn 8 29 9 2 (set (reg:SI 48)
        (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int 8 [0x8]))
                (nil)))))
(insn 9 8 11 2 (set (reg:SI 43 [ D.6398 ])
        (zero_extend:SI (subreg:HI (reg:SI 48) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 48)
        (nil)))
(insn 11 9 12 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 45)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg/s/v:HI (reg:SI 43 [ D.6398 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2293 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 45)
        (nil)))
(note 12 11 13 2 NOTE_INSN_DELETED)
(note 13 12 15 2 NOTE_INSN_DELETED)
(note 15 13 16 2 NOTE_INSN_DELETED)
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (zero_extract:SI (reg:SI 43 [ D.6398 ])
                    (const_int 1 [0x1])
                    (const_int 2 [0x2]))
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2294 60 {*bittrue}
     (expr_list:REG_DEAD (reg:SI 43 [ D.6398 ])
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 22)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              4 [39.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(1){ }u17(7){ }u18(16){ }u19(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 54 55 56
(note 17 16 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 17 28 3 (set (reg:QI 56)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2295 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 28 20 27 3 (set (reg/f:SI 54)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC273") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2295 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 27 28 21 3 (set:SI (reg/f:SI 55)
        (plus:SI (reg/f:SI 54)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2295 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 54)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 21 27 22 3 (set (mem/j/c:QI (plus:SI (reg/f:SI 55)
                (const_int 72 [0x48])) [0 LMIC.txCnt+0 S1 A32])
        (reg:QI 56)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2295 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 56)
        (expr_list:REG_DEAD (reg/f:SI 55)
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2 [39.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(1){ }u24(7){ }u25(16){ }u26(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(code_label 22 21 23 4 393 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 24 23 0 4 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2296 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setTxData2 (LMIC_setTxData2, funcdef_no=110, decl_uid=3351, cgraph_uid=110, symbol_order=118)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 47: def dominates all uses has unique first use
Reg 45: def dominates all uses has unique first use
Reg 48 uninteresting (no unique first use)
Reg 50: def dominates all uses has unique first use
Reg 53 uninteresting
Reg 59 uninteresting
Reg 45 not local to one basic block
Reg 47 not local to one basic block
Reg 50 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 53: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 59: (insn_list:REG_DEP_TRUE 31 (nil))

Pass 0 for finding pseudo/allocno costs

    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r59,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r53,l0) best AR_REGS, allocno AR_REGS
    r50: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r50,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r45,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r59,l0) costs: ACC_REG:11520,11520 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:61440,61440 MEM:7680,7680
  a2(r48,l0) costs: ACC_REG:10890,10890 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:58080,58080 MEM:14520,14520
  a3(r45,l0) costs: ACC_REG:5880,5880 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31360,31360 MEM:7840,7840
  a4(r50,l0) costs: ACC_REG:5880,5880 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:31360,31360 MEM:7840,7840
  a5(r47,l0) costs: ACC_REG:7890,7890 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:42080,42080 MEM:10520,10520
  a6(r53,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 45(l0): point = 0
   Insn 44(l0): point = 2
   Insn 10(l0): point = 5
   Insn 51(l0): point = 8
   Insn 11(l0): point = 10
   Insn 37(l0): point = 12
   Insn 36(l0): point = 14
   Insn 34(l0): point = 16
   Insn 32(l0): point = 18
   Insn 31(l0): point = 20
   Insn 27(l0): point = 23
   Insn 26(l0): point = 25
   Insn 25(l0): point = 27
   Insn 24(l0): point = 29
   Insn 18(l0): point = 32
   Insn 16(l0): point = 35
   Insn 15(l0): point = 37
   Insn 8(l0): point = 39
   Insn 6(l0): point = 41
   Insn 3(l0): point = 43
   Insn 4(l0): point = 45
 a0(r42): [8..10] [3..5]
 a1(r59): [15..20]
 a2(r48): [15..41]
 a3(r45): [17..43]
 a4(r50): [19..39]
 a5(r47): [28..45]
 a6(r53): [36..37]
Compressing live ranges: from 48 to 8 - 16%
Ranges after the compression:
 a0(r42): [0..3]
 a1(r59): [4..5]
 a2(r48): [4..7]
 a3(r45): [4..7]
 a4(r50): [4..7]
 a5(r47): [6..7]
 a6(r53): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r42,l0) conflicts:;; a1(r59,l0) conflicts: a2(r48,l0) a3(r45,l0) a4(r50,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r48,l0) conflicts: a1(r59,l0) a3(r45,l0) a4(r50,l0) a5(r47,l0) a6(r53,l0)
;;     total conflict hard regs: 5 8-15
;;     conflict hard regs: 5 8-15

;; a3(r45,l0) conflicts: a1(r59,l0) a2(r48,l0) a4(r50,l0) a5(r47,l0) a6(r53,l0)
;;     total conflict hard regs: 4 5 8-15
;;     conflict hard regs: 4 5 8-15

;; a4(r50,l0) conflicts: a1(r59,l0) a2(r48,l0) a3(r45,l0) a5(r47,l0) a6(r53,l0)
;;     total conflict hard regs: 8-15
;;     conflict hard regs: 8-15

;; a5(r47,l0) conflicts: a2(r48,l0) a3(r45,l0) a4(r50,l0) a6(r53,l0)
;;     total conflict hard regs: 2 4 5 12
;;     conflict hard regs: 2 4 5 12

;; a6(r53,l0) conflicts: a2(r48,l0) a3(r45,l0) a4(r50,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r42)<-hr2@2000
  pref1:a2(r48)<-hr12@670
  pref2:a5(r47)<-hr11@1340
  pref3:a5(r47)<-hr3@2000
  pref4:a3(r45)<-hr2@125
  pref5:a2(r48)<-hr4@125
  pref6:a4(r50)<-hr5@125
  regions=1, blocks=8, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r42 1r59 2r48 3r45 4r50 5r47 6r53
    modified regnos: 42 45 47 48 50 53 59
    border:
    Pressure: AR_REGS=6
 Removing pref1:hr12@670
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@55360
          2:( 2-7)@16180
            3:( 2-4 6 7)@29540
              4:( 2 3 6 7)@16180
      Allocno a0r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r59 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r48 of AR_REGS(14) has 5 avail. regs  2-4 6 7, node:  2-4 6 7 (confl regs =  0 1 5 8-34)
      Allocno a3r45 of AR_REGS(14) has 4 avail. regs  2 3 6 7, node:  2 3 6 7 (confl regs =  0 1 4 5 8-34)
      Allocno a4r50 of AR_REGS(14) has 6 avail. regs  2-7, node:  2-7 (confl regs =  0 1 8-34)
      Allocno a5r47 of AR_REGS(14) has 10 avail. regs  3 6-11 13-15, ^node:  2-15 (confl regs =  0-2 4 5 12 16-34)
      Allocno a6r53 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Pushing a4(r50,l0)(cost 0)
        Making a2(r48,l0) colorable
      Pushing a6(r53,l0)(cost 0)
        Making a3(r45,l0) colorable
      Pushing a3(r45,l0)(cost 8090)
      Pushing a0(r42,l0)(cost 0)
      Pushing a5(r47,l0)(cost 0)
      Pushing a2(r48,l0)(cost 14770)
      Pushing a1(r59,l0)(cost 0)
      Popping a1(r59,l0)  -- assign reg 8
      Popping a2(r48,l0)  -- assign reg 4
      Popping a5(r47,l0)  -- assign reg 3
      Popping a0(r42,l0)  -- assign reg 2
      Popping a3(r45,l0)  -- assign reg 2
      Popping a6(r53,l0)  -- assign reg 8
      Popping a4(r50,l0)  -- assign reg 5
Disposition:
    0:r42  l0     2    3:r45  l0     2    5:r47  l0     3    2:r48  l0     4
    4:r50  l0     5    6:r53  l0     8    1:r59  l0     8
New iteration of spill/restore move
+++Costs: overall -8750, reg -8750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setTxData2

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 2 [a2] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={3d} r1={1d,9u} r2={2d,3u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d} r7={1d,7u} r8={2d} r9={2d} r10={3d,1u} r11={3d,1u} r12={3d,1u} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={1d,6u} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r42={2d,1u} r45={1d,1u} r47={1d,2u} r48={1d,3u} r50={1d,1u} r53={1d,1u} r59={1d,3u} 
;;    total ref usage 126{76d,50u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 45 47 48 50 53
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 12 4 2 NOTE_INSN_DELETED)
(insn 4 2 5 2 (set (reg/v/f:SI 47 [ data ])
        (reg:SI 3 a3 [ data ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2301 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 a3 [ data ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_DELETED)
(note 7 5 3 2 NOTE_INSN_DELETED)
(insn 3 7 6 2 (set (reg/v:SI 45 [ port ])
        (zero_extend:SI (reg:QI 2 a2 [ port ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2301 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ port ])
        (nil)))
(insn 6 3 8 2 (set (reg/v:SI 48 [ dlen ])
        (zero_extend:SI (reg:QI 4 a4 [ dlen ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2301 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 4 a4 [ dlen ])
        (nil)))
(insn 8 6 9 2 (set (reg/v:SI 50 [ confirmed ])
        (zero_extend:SI (reg:QI 5 a5 [ confirmed ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2301 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 5 a5 [ confirmed ])
        (nil)))
(note 9 8 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 9 16 2 (set (reg:SI 53)
        (const_int 52 [0x34])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2302 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 52 [0x34])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ltu (reg:SI 53)
                (reg/v:SI 48 [ dlen ]))
            (label_ref:SI 50)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2302 58 {*ubtrue}
     (expr_list:REG_DEAD (reg:SI 53)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 50)
;;  succ:       6 [4.0%] 
;;              3 [96.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 47 48 50

;; basic block 3, loop depth 0, count 0, freq 9600, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [96.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 47 48 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg/v/f:SI 47 [ data ])
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2304 56 {*btrue}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 29)
;;  succ:       4 [69.8%]  (FALLTHRU)
;;              5 [30.2%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 47 48 50

;; basic block 4, loop depth 0, count 0, freq 6704, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [69.8%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 47 48 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 48
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 20 19 24 4 NOTE_INSN_DELETED)
(insn 24 20 25 4 (set (reg:SI 12 a12)
        (reg/v:SI 48 [ dlen ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2305 44 {movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 11 a11)
        (reg/v/f:SI 47 [ data ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2305 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 47 [ data ])
        (nil)))
(insn 26 25 27 4 (set (reg:SI 10 a10)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC274") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2305 44 {movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                (const_int 191 [0xbf])))
        (nil)))
(call_insn 27 26 29 4 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2305 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 48 50

;; basic block 5, loop depth 0, count 0, freq 9600, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 [30.2%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(1){ }u30(7){ }u31(16){ }u32(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 48 50
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 45 48 50
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 42 59
(code_label 29 27 30 5 396 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 59)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC275") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2306 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 32 31 34 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 59)
                (const_int 189 [0xbd])) [0 LMIC.pendTxConf+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 50 [ confirmed ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2306 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 50 [ confirmed ])
        (nil)))
(insn 34 32 36 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 59)
                (const_int 188 [0xbc])) [0 LMIC.pendTxPort+0 S1 A32])
        (subreg/s/v:QI (reg/v:SI 45 [ port ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2307 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 45 [ port ])
        (nil)))
(insn 36 34 37 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 59)
                (const_int 190 [0xbe])) [0 LMIC.pendTxLen+0 S1 A16])
        (subreg/s/v:QI (reg/v:SI 48 [ dlen ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2308 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 59)
        (expr_list:REG_DEAD (reg/v:SI 48 [ dlen ])
            (nil))))
(call_insn 37 36 11 5 (call (mem:SI (symbol_ref:SI ("LMIC_setTxData") [flags 0x3]  <function_decl 0x100b28948 LMIC_setTxData>) [0 LMIC_setTxData S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2309 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 11 37 51 5 (set (reg:SI 42 [ D.6399 ])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2310 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 51 11 52 5 (set (pc)
        (label_ref 38)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2310 78 {jump}
     (nil)
 -> 38)
;;  succ:       7 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 52 51 50)
;; basic block 6, loop depth 0, count 0, freq 400, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       2 [4.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(1){ }u41(7){ }u42(16){ }u43(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 50 52 49 6 397 "" [1 uses])
(note 49 50 10 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 10 49 38 6 (set (reg:SI 42 [ D.6399 ])
        (const_int -2 [0xfffffffffffffffe])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2303 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int -2 [0xfffffffffffffffe])
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(1){ }u45(7){ }u46(16){ }u47(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 2 [a2]
(code_label 38 10 39 7 395 "" [1 uses])
(note 39 38 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 39 45 7 (set (reg/i:SI 2 a2)
        (reg:SI 42 [ D.6399 ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2311 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 [ D.6399 ])
        (nil)))
(insn 45 44 0 7 (use (reg/i:SI 2 a2)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2311 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_sendAlive (LMIC_sendAlive, funcdef_no=111, decl_uid=3353, cgraph_uid=111, symbol_order=119)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 14.
verify found no changes in insn with uid = 14.
deleting insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 14(l0): point = 6
   Insn 8(l0): point = 8
   Insn 5(l0): point = 10
 a0(r44): [3..10]
 a1(r48): [3..4]
 a2(r46): [5..6]
 a3(r47): [5..8]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r44): [0..3]
 a1(r48): [0..1]
 a2(r46): [2..3]
 a3(r47): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r44,l0) conflicts: a1(r48,l0) a2(r46,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r48,l0) conflicts: a0(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a0(r44,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r47,l0) conflicts: a0(r44,l0) a2(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r48)<->a2(r46)@125:shuffle
  cp1:a1(r48)<->a3(r47)@125:shuffle
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r44 1r48 2r46 3r47
    modified regnos: 44 46 47 48
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@56000
      Allocno a0r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r48-a2r46 (freq=125):
        Result (freq=4000): a1r48(2000) a2r46(2000)
      Pushing a3(r47,l0)(cost 0)
      Pushing a0(r44,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Pushing a1(r48,l0)(cost 0)
      Popping a1(r48,l0)  -- assign reg 8
      Popping a2(r46,l0)  -- assign reg 8
      Popping a0(r44,l0)  -- assign reg 9
      Popping a3(r47,l0)  -- assign reg 10
Disposition:
    0:r44  l0     9    2:r46  l0     8    3:r47  l0    10    1:r48  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_sendAlive

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,2u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} 
;;    total ref usage 55{41d,13u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 46 47 48
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC276") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2316 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 5 14 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2316 45 {movhi_internal}
     (nil))
(insn 14 8 9 2 (set (reg:HI 46)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2316 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 16 [0x10])
        (nil)))
(insn 9 14 10 2 (set (reg:SI 48)
        (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2316 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int 16 [0x10]))
                (nil)))))
(insn 10 9 11 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 48) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2316 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 48)
        (expr_list:REG_DEAD (reg/f:SI 44)
            (nil))))
(call_insn 11 10 0 2 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2317 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_tryRejoin (LMIC_tryRejoin, funcdef_no=112, decl_uid=3363, cgraph_uid=112, symbol_order=120)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 14.
verify found no changes in insn with uid = 14.
deleting insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 44 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r46,l0) best AR_REGS, allocno AR_REGS
    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r44,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a3(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000

   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 14(l0): point = 6
   Insn 8(l0): point = 8
   Insn 5(l0): point = 10
 a0(r44): [3..10]
 a1(r48): [3..4]
 a2(r46): [5..6]
 a3(r47): [5..8]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r44): [0..3]
 a1(r48): [0..1]
 a2(r46): [2..3]
 a3(r47): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r44,l0) conflicts: a1(r48,l0) a2(r46,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r48,l0) conflicts: a0(r44,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r46,l0) conflicts: a0(r44,l0) a3(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r47,l0) conflicts: a0(r44,l0) a2(r46,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r48)<->a2(r46)@125:shuffle
  cp1:a1(r48)<->a3(r47)@125:shuffle
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=2, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r44 1r48 2r46 3r47
    modified regnos: 44 46 47 48
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@56000
      Allocno a0r44 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a1r48-a2r46 (freq=125):
        Result (freq=4000): a1r48(2000) a2r46(2000)
      Pushing a3(r47,l0)(cost 0)
      Pushing a0(r44,l0)(cost 0)
      Pushing a2(r46,l0)(cost 0)
      Pushing a1(r48,l0)(cost 0)
      Popping a1(r48,l0)  -- assign reg 8
      Popping a2(r46,l0)  -- assign reg 8
      Popping a0(r44,l0)  -- assign reg 9
      Popping a3(r47,l0)  -- assign reg 10
Disposition:
    0:r44  l0     9    2:r46  l0     8    3:r47  l0    10    1:r48  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_tryRejoin

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp]
;;  ref usage 	r0={2d} r1={1d,3u} r2={1d} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d,1u} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r44={1d,2u} r46={1d,1u} r47={1d,1u,1e} r48={1d,1u} 
;;    total ref usage 55{41d,13u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 44 46 47 48
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC277") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2323 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 5 14 2 (set (reg:HI 47 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2323 45 {movhi_internal}
     (nil))
(insn 14 8 9 2 (set (reg:HI 46)
        (const_int 32 [0x20])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2323 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int 32 [0x20])
        (nil)))
(insn 9 14 10 2 (set (reg:SI 48)
        (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 46) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2323 31 {iorsi3}
     (expr_list:REG_DEAD (reg:HI 47 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 46)
            (expr_list:REG_EQUAL (ior:SI (subreg:SI (reg:HI 47 [ LMIC.opmode ]) 0)
                    (const_int 32 [0x20]))
                (nil)))))
(insn 10 9 11 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 48) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2323 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 48)
        (expr_list:REG_DEAD (reg/f:SI 44)
            (nil))))
(call_insn 11 10 0 2 (call (mem:SI (symbol_ref:SI ("engineUpdate") [flags 0x3]  <function_decl 0x100b50438 engineUpdate>) [0 engineUpdate S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2324 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setSession (LMIC_setSession, funcdef_no=113, decl_uid=3368, cgraph_uid=113, symbol_order=121)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
scanning new insn with uid = 59.
verify found no changes in insn with uid = 59.
deleting insn with uid = 46.
scanning new insn with uid = 60.
verify found no changes in insn with uid = 60.
deleting insn with uid = 32.
scanning new insn with uid = 61.
verify found no changes in insn with uid = 61.
deleting insn with uid = 31.
scanning new insn with uid = 62.
verify found no changes in insn with uid = 62.
deleting insn with uid = 17.
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Reg 47: def dominates all uses has unique first use
Reg 48: def dominates all uses has unique first use
Reg 49 uninteresting
Reg 53: local to bb 3 def dominates all uses has unique first use
Reg 51 uninteresting
Reg 59 uninteresting
Reg 60 uninteresting
Reg 65 uninteresting
Reg 66 uninteresting
Reg 68 uninteresting
Reg 43: local to bb 6 def dominates all uses has unique first use
Reg 72 uninteresting
Reg 71 uninteresting
Examining insn 49, def for 43
  all ok
Reg 47 not local to one basic block
Reg 48 not local to one basic block
Ignoring reg 53 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 49: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 51: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 53: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 59: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 60: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 65: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 66: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 53 (nil))

Pass 0 for finding pseudo/allocno costs

    r72: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r72,l0) best AR_REGS, allocno AR_REGS
    r71: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r71,l0) best AR_REGS, allocno AR_REGS
    r68: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r68,l0) best AR_REGS, allocno AR_REGS
    r67: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r67,l0) best AR_REGS, allocno AR_REGS
    r66: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r66,l0) best AR_REGS, allocno AR_REGS
    r65: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r65,l0) best AR_REGS, allocno AR_REGS
    r60: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a7 (r60,l0) best AR_REGS, allocno AR_REGS
    r59: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a8 (r59,l0) best AR_REGS, allocno AR_REGS
    r53: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a10 (r53,l0) best AR_REGS, allocno AR_REGS
    r51: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a11 (r51,l0) best AR_REGS, allocno AR_REGS
    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a13 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a9 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a12 (r47,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r43,l0) best AR_REGS, allocno AR_REGS

  a0(r65,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000
  a1(r71,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r72,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a3(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r68,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r66,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r67,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a7(r60,l0) costs: ACC_REG:5388,5388 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28736,28736 MEM:7184,7184
  a8(r59,l0) costs: ACC_REG:5388,5388 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:28736,28736 MEM:0,0
  a9(r48,l0) costs: ACC_REG:8694,8694 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:46368,46368 MEM:11592,11592
  a10(r53,l0) costs: ACC_REG:5100,5100 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:27200,27200 MEM:6800,6800
  a11(r51,l0) costs: ACC_REG:5100,5100 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:27200,27200 MEM:0,0
  a12(r47,l0) costs: ACC_REG:8550,8550 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:45600,45600 MEM:11400,11400
  a13(r49,l0) costs: ACC_REG:9000,9000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:48000,48000 MEM:4000,4000

   Insn 56(l0): point = 0
   Insn 55(l0): point = 2
   Insn 54(l0): point = 4
   Insn 53(l0): point = 6
   Insn 49(l0): point = 8
   Insn 48(l0): point = 10
   Insn 59(l0): point = 12
   Insn 47(l0): point = 14
   Insn 45(l0): point = 16
   Insn 44(l0): point = 18
   Insn 43(l0): point = 20
   Insn 39(l0): point = 23
   Insn 38(l0): point = 25
   Insn 60(l0): point = 27
   Insn 61(l0): point = 29
   Insn 37(l0): point = 31
   Insn 36(l0): point = 33
   Insn 29(l0): point = 36
   Insn 25(l0): point = 39
   Insn 24(l0): point = 41
   Insn 63(l0): point = 43
   Insn 62(l0): point = 45
   Insn 23(l0): point = 47
   Insn 22(l0): point = 49
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 10(l0): point = 56
   Insn 9(l0): point = 58
   Insn 5(l0): point = 60
   Insn 4(l0): point = 62
 a0(r65): [3..16]
 a1(r71): [3..4]
 a2(r72): [5..6]
 a3(r43): [5..8]
 a4(r68): [9..10]
 a5(r66): [11..12]
 a6(r67): [11..14]
 a7(r60): [26..27]
 a8(r59): [28..29]
 a9(r48): [32..60]
 a10(r53): [42..45]
 a11(r51): [42..43]
 a12(r47): [48..62]
 a13(r49): [55..58]
Compressing live ranges: from 65 to 16 - 24%
Ranges after the compression:
 a0(r65): [0..7]
 a1(r71): [0..1]
 a2(r72): [2..3]
 a3(r43): [2..3]
 a4(r68): [4..5]
 a5(r66): [6..7]
 a6(r67): [6..7]
 a7(r60): [8..9]
 a8(r59): [10..11]
 a9(r48): [12..15]
 a10(r53): [12..13]
 a11(r51): [12..13]
 a12(r47): [14..15]
 a13(r49): [14..15]
+++Allocating 96 bytes for conflict table (uncompressed size 112)
;; a0(r65,l0) conflicts: a1(r71,l0) a2(r72,l0) a3(r43,l0) a4(r68,l0) a5(r66,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r71,l0) conflicts: a0(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r72,l0) conflicts: a0(r65,l0) a3(r43,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r43,l0) conflicts: a0(r65,l0) a2(r72,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r68,l0) conflicts: a0(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r66,l0) conflicts: a0(r65,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r67,l0) conflicts: a0(r65,l0) a5(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r60,l0) conflicts:;; a8(r59,l0) conflicts:;; a9(r48,l0) conflicts: a10(r53,l0) a11(r51,l0) a12(r47,l0) a13(r49,l0)
;;     total conflict hard regs: 2 3 8-15
;;     conflict hard regs: 2 3 8-15

;; a10(r53,l0) conflicts: a11(r51,l0) a9(r48,l0)
;;     total conflict hard regs: 11 12
;;     conflict hard regs: 11 12

;; a11(r51,l0) conflicts: a10(r53,l0) a9(r48,l0)
;;     total conflict hard regs: 11 12
;;     conflict hard regs: 11 12

;; a12(r47,l0) conflicts: a9(r48,l0) a13(r49,l0)
;;     total conflict hard regs: 2 3 5 12
;;     conflict hard regs: 2 3 5 12

;; a13(r49,l0) conflicts: a9(r48,l0) a12(r47,l0)
;;     total conflict hard regs: 2 3
;;     conflict hard regs: 2 3

  cp0:a4(r68)<->a5(r66)@125:shuffle
  cp1:a4(r68)<->a6(r67)@125:shuffle
  cp2:a3(r43)<->a4(r68)@125:shuffle
  cp3:a1(r71)<->a2(r72)@125:shuffle
  cp4:a1(r71)<->a3(r43)@125:shuffle
  cp5:a7(r60)<->a8(r59)@112:shuffle
  pref0:a9(r48)<-hr11@1796
  pref1:a12(r47)<-hr11@1700
  pref2:a12(r47)<-hr4@2000
  pref3:a9(r48)<-hr5@2000
  pref4:a7(r60)<-hr10@112
  pref5:a10(r53)<-hr10@106
  pref6:a11(r51)<-hr10@106
  regions=1, blocks=7, points=16
    allocnos=14 (big 0), copies=6, conflicts=0, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r65 1r71 2r72 3r43 4r68 5r66 6r67 7r60 8r59 9r48 10r53 11r51 12r47 13r49
    modified regnos: 43 47 48 49 51 53 59 60 65 66 67 68 71 72
    border:
    Pressure: AR_REGS=5
 Removing pref0:hr11@1796
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@88000
          2:( 4-7)@35184
      Allocno a0r65 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r71 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r72 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r68 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r66 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r67 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a7r60 of AR_REGS(14) has 12 avail. regs  2-10 13-15, ^node:  2-15 (confl regs =  0 1 11 12 16-34)
      Allocno a8r59 of AR_REGS(14) has 12 avail. regs  2-10 13-15, ^node:  2-15 (confl regs =  0 1 11 12 16-34)
      Allocno a9r48 of AR_REGS(14) has 4 avail. regs  4-7, node:  4-7 (confl regs =  0-3 8-34)
      Allocno a10r53 of AR_REGS(14) has 12 avail. regs  2-10 13-15, ^node:  2-15 (confl regs =  0 1 11 12 16-34)
      Allocno a11r51 of AR_REGS(14) has 12 avail. regs  2-10 13-15, ^node:  2-15 (confl regs =  0 1 11 12 16-34)
      Allocno a12r47 of AR_REGS(14) has 10 avail. regs  4 6-11 13-15, ^node:  2-15 (confl regs =  0-3 5 12 16-34)
      Allocno a13r49 of AR_REGS(14) has 12 avail. regs  4-15, ^node:  2-15 (confl regs =  0-3 16-34)
      Forming thread by copy 0:a4r68-a5r66 (freq=125):
        Result (freq=4000): a4r68(2000) a5r66(2000)
      Forming thread by copy 2:a3r43-a4r68 (freq=125):
        Result (freq=6000): a3r43(2000) a4r68(2000) a5r66(2000)
      Forming thread by copy 3:a1r71-a2r72 (freq=125):
        Result (freq=4000): a1r71(2000) a2r72(2000)
      Forming thread by copy 5:a7r60-a8r59 (freq=112):
        Result (freq=3592): a7r60(1796) a8r59(1796)
      Pushing a11(r51,l0)(cost 0)
        Making a9(r48,l0) colorable
      Pushing a10(r53,l0)(cost 0)
      Pushing a6(r67,l0)(cost 0)
      Pushing a12(r47,l0)(cost 0)
      Pushing a9(r48,l0)(cost 15592)
      Pushing a13(r49,l0)(cost 0)
      Pushing a0(r65,l0)(cost 0)
      Pushing a8(r59,l0)(cost 0)
      Pushing a7(r60,l0)(cost 0)
      Pushing a2(r72,l0)(cost 0)
      Pushing a1(r71,l0)(cost 0)
      Pushing a5(r66,l0)(cost 0)
      Pushing a4(r68,l0)(cost 0)
      Pushing a3(r43,l0)(cost 0)
      Popping a3(r43,l0)  -- assign reg 8
      Popping a4(r68,l0)  -- assign reg 8
      Popping a5(r66,l0)  -- assign reg 8
      Popping a1(r71,l0)  -- assign reg 8
      Popping a2(r72,l0)  -- assign reg 9
      Popping a7(r60,l0)  -- assign reg 10
      Popping a8(r59,l0)  -- assign reg 10
      Popping a0(r65,l0)  -- assign reg 10
      Popping a13(r49,l0)  -- assign reg 8
      Popping a9(r48,l0)  -- assign reg 5
      Popping a12(r47,l0)  -- assign reg 4
      Popping a6(r67,l0)  -- assign reg 4
      Popping a10(r53,l0)  -- assign reg 4
      Popping a11(r51,l0)  -- assign reg 10
Disposition:
    3:r43  l0     8   12:r47  l0     4    9:r48  l0     5   13:r49  l0     8
   11:r51  l0    10   10:r53  l0     4    8:r59  l0    10    7:r60  l0    10
    0:r65  l0    10    5:r66  l0     8    6:r67  l0     4    4:r68  l0     8
    1:r71  l0     8    2:r72  l0     9
New iteration of spill/restore move
+++Costs: overall -8436, reg -8436, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setSession

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 1[sp] 2[a2] 3[a3] 4[a4] 5[a5] 10[a10] 11[a11] 12[a12]
;;  ref usage 	r0={5d} r1={1d,10u} r2={1d,1u} r3={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d} r7={1d,6u} r8={4d} r9={4d} r10={7d,3u} r11={6d,2u} r12={6d,2u} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={1d,5u} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r43={1d,1u} r47={1d,2u} r48={1d,2u} r49={1d,2u} r51={1d,1u} r53={1d,1u} r59={1d,1u} r60={1d,1u} r65={1d,2u} r66={1d,1u} r67={1d,1u,1e} r68={1d,1u} r71={1d,1u} r72={1d,1u} 
;;    total ref usage 196{139d,56u,1e} in 30{26 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 47 48 49
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(insn 4 3 5 2 (set (reg/v/f:SI 47 [ nwkKey ])
        (reg:SI 4 a4 [ nwkKey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2341 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 a4 [ nwkKey ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:SI 48 [ artKey ])
        (reg:SI 5 a5 [ artKey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2341 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 a5 [ artKey ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 49)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC278") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2342 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 10 9 12 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 49)
                (const_int 168 [0xa8])) [0 LMIC.netid+0 S4 A32])
        (reg:SI 2 a2 [ netid ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2342 44 {movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 a2 [ netid ])
        (nil)))
(insn 12 10 13 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 49)
                (const_int 280 [0x118])) [0 LMIC.devaddr+0 S4 A32])
        (reg:SI 3 a3 [ devaddr ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2343 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 49)
        (expr_list:REG_DEAD (reg:SI 3 a3 [ devaddr ])
            (nil))))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg/v/f:SI 47 [ nwkKey ])
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2344 56 {*btrue}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 27)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              4 [15.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 48

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(1){ }u14(7){ }u15(16){ }u16(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 47
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 51 53
(note 14 13 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 18 14 21 3 NOTE_INSN_DELETED)
(note 21 18 22 3 NOTE_INSN_DELETED)
(insn 22 21 23 3 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 23 22 62 3 (set (reg:SI 11 a11)
        (reg/v/f:SI 47 [ nwkKey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 47 [ nwkKey ])
        (nil)))
(insn 62 23 63 3 (set (reg:SI 53)
        (const_int 246 [0xf6])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 246 [0xf6])
        (nil)))
(insn 63 62 24 3 (set (reg/f:SI 51)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC278") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 24 63 25 3 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 51)
            (reg:SI 53))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 1 {addsi3}
     (expr_list:REG_DEAD (reg:SI 53)
        (expr_list:REG_DEAD (reg/f:SI 51)
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                        (const_int 246 [0xf6])))
                (nil)))))
(call_insn 25 24 27 3 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2345 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [15.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(1){ }u27(7){ }u28(16){ }u29(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	
(code_label 27 25 28 4 401 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg/v/f:SI 48 [ artKey ])
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2346 56 {*btrue}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 41)
;;  succ:       5 [89.9%]  (FALLTHRU)
;;              6 [10.1%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48

;; basic block 5, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [89.9%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(1){ }u32(7){ }u33(16){ }u34(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 48
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 59 60
(note 30 29 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 33 30 35 5 NOTE_INSN_DELETED)
(note 35 33 36 5 NOTE_INSN_DELETED)
(insn 36 35 37 5 (set (reg:SI 12 a12)
        (const_int 16 [0x10])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 37 36 61 5 (set (reg:SI 11 a11)
        (reg/v/f:SI 48 [ artKey ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 44 {movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 48 [ artKey ])
        (nil)))
(insn 61 37 60 5 (set (reg/f:SI 59)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC278") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 60 61 38 5 (set:SI (reg/f:SI 60)
        (plus:SI (reg/f:SI 59)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 59)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 38 60 39 5 (set (reg:SI 10 a10)
        (plus:SI (reg/f:SI 60)
            (const_int 6 [0x6]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 60)
        (nil)))
(call_insn 39 38 41 5 (set (reg:SI 10 a10)
        (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0x100bc3a20 memcpy>) [0 memcpy S4 A32])
            (const_int 0 [0]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2347 82 {call_value_internal}
     (expr_list:REG_DEAD (reg:SI 12 a12)
        (expr_list:REG_DEAD (reg:SI 11 a11)
            (expr_list:REG_UNUSED (reg:SI 10 a10)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (set (reg:SI 10 a10)
            (reg:SI 10 a10))
        (expr_list:SI (use (reg:SI 10 a10))
            (expr_list:SI (use (reg:SI 11 a11))
                (expr_list:SI (use (reg:SI 12 a12))
                    (nil))))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 [10.1%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(1){ }u45(7){ }u46(16){ }u47(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc] 43 65 66 67 68 71 72
(code_label 41 39 42 6 402 "" [1 uses])
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:SI 10 a10)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2350 44 {movsi_internal}
     (nil))
(call_insn 44 43 45 6 (call (mem:SI (symbol_ref:SI ("initDefaultChannels") [flags 0x3]  <function_decl 0x100b7c288 initDefaultChannels>) [0 initDefaultChannels S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2350 81 {call_internal}
     (expr_list:REG_DEAD (reg:SI 10 a10)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 10 a10))
        (nil)))
(insn 45 44 47 6 (set (reg/f:SI 65)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC278") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2353 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 47 45 59 6 (set (reg:HI 67 [ LMIC.opmode ])
        (mem/j/c:HI (plus:SI (reg/f:SI 65)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2353 45 {movhi_internal}
     (nil))
(insn 59 47 48 6 (set (reg:HI 66)
        (const_int -679 [0xfffffffffffffd59])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2353 45 {movhi_internal}
     (expr_list:REG_EQUIV (const_int -679 [0xfffffffffffffd59])
        (nil)))
(insn 48 59 49 6 (set (reg:SI 68)
        (and:SI (subreg:SI (reg:HI 67 [ LMIC.opmode ]) 0)
            (subreg:SI (reg:HI 66) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2353 30 {andsi3}
     (expr_list:REG_DEAD (reg:HI 67 [ LMIC.opmode ])
        (expr_list:REG_DEAD (reg:HI 66)
            (expr_list:REG_EQUAL (and:SI (subreg:SI (reg:HI 67 [ LMIC.opmode ]) 0)
                    (const_int -679 [0xfffffffffffffd59]))
                (nil)))))
(insn 49 48 53 6 (set (reg:SI 43 [ D.6409 ])
        (zero_extend:SI (subreg:HI (reg:SI 68) 0))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2353 33 {zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 68)
        (nil)))
(insn 53 49 54 6 (set (reg:SI 72)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC279") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2354 44 {movsi_internal}
     (expr_list:REG_EQUIV (const_int 2048 [0x800])
        (nil)))
(insn 54 53 55 6 (set (reg:SI 71)
        (ior:SI (reg:SI 43 [ D.6409 ])
            (reg:SI 72))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2354 31 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg:SI 43 [ D.6409 ])
            (nil))))
(insn 55 54 56 6 (set (mem/j/c:HI (plus:SI (reg/f:SI 65)
                (const_int 172 [0xac])) [0 LMIC.opmode+0 S2 A32])
        (subreg:HI (reg:SI 71) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2354 45 {movhi_internal}
     (expr_list:REG_DEAD (reg:SI 71)
        (expr_list:REG_DEAD (reg/f:SI 65)
            (nil))))
(call_insn 56 55 0 6 (call (mem:SI (symbol_ref:SI ("stateJustJoined") [flags 0x3]  <function_decl 0x100b7c0d8 stateJustJoined>) [0 stateJustJoined S4 A32])
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2355 81 {call_internal}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setLinkCheckMode (LMIC_setLinkCheckMode, funcdef_no=114, decl_uid=3370, cgraph_uid=114, symbol_order=122)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
scanning new insn with uid = 28.
verify found no changes in insn with uid = 28.
deleting insn with uid = 10.
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Reg 43: local to bb 2 def dominates all uses has unique first use
Reg 47: local to bb 2 def dominates all uses has unique first use
Reg 45 uninteresting
Reg 46 uninteresting
Reg 48 uninteresting
Reg 49 uninteresting
Found def insn 3 for 43 to be not moveable
Ignoring reg 47 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 45: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 46: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 47: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 48: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 49: (insn_list:REG_DEP_TRUE 18 (nil))

Pass 0 for finding pseudo/allocno costs

    r49: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r49,l0) best AR_REGS, allocno AR_REGS
    r48: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a2 (r48,l0) best AR_REGS, allocno AR_REGS
    r47: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a5 (r47,l0) best AR_REGS, allocno AR_REGS
    r46: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a4 (r46,l0) best AR_REGS, allocno AR_REGS
    r45: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a6 (r45,l0) best AR_REGS, allocno AR_REGS
    r43: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a3 (r43,l0) best AR_REGS, allocno AR_REGS
    r42: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a1 (r42,l0) best AR_REGS, allocno AR_REGS

  a0(r49,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a1(r42,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a2(r48,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0
  a3(r43,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a4(r46,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a5(r47,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:8000,8000
  a6(r45,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 17(l0): point = 4
   Insn 6(l0): point = 7
   Insn 26(l0): point = 10
   Insn 5(l0): point = 12
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 28(l0): point = 19
   Insn 29(l0): point = 21
   Insn 11(l0): point = 23
   Insn 3(l0): point = 25
 a0(r49): [1..2]
 a1(r42): [10..12] [1..7]
 a2(r48): [3..4]
 a3(r43): [16..25]
 a4(r46): [18..19]
 a5(r47): [18..23]
 a6(r45): [20..21]
Compressing live ranges: from 28 to 10 - 35%
Ranges after the compression:
 a0(r49): [0..1]
 a1(r42): [0..5]
 a2(r48): [2..3]
 a3(r43): [6..9]
 a4(r46): [6..7]
 a5(r47): [6..9]
 a6(r45): [8..9]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r49,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r42,l0) conflicts: a0(r49,l0) a2(r48,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r48,l0) conflicts: a1(r42,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r43,l0) conflicts: a4(r46,l0) a5(r47,l0) a6(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r46,l0) conflicts: a3(r43,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r47,l0) conflicts: a4(r46,l0) a3(r43,l0) a6(r45,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r45,l0) conflicts: a3(r43,l0) a5(r47,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r49)<->a2(r48)@125:shuffle
  cp1:a4(r46)<->a6(r45)@125:shuffle
  pref0:a3(r43)<-hr2@125
  regions=1, blocks=6, points=10
    allocnos=7 (big 0), copies=2, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r49 1r42 2r48 3r43 4r46 5r47 6r45
    modified regnos: 42 43 45 46 47 48 49
    border:
    Pressure: AR_REGS=3
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 2-15)@80500
      Allocno a0r49 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a1r42 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a2r48 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a3r43 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a4r46 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a5r47 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Allocno a6r45 of AR_REGS(14) has 14 avail. regs  2-15, node:  2-15 (confl regs =  0 1 16-34)
      Forming thread by copy 0:a0r49-a2r48 (freq=125):
        Result (freq=4000): a0r49(2000) a2r48(2000)
      Forming thread by copy 1:a4r46-a6r45 (freq=125):
        Result (freq=4000): a4r46(2000) a6r45(2000)
      Pushing a5(r47,l0)(cost 0)
      Pushing a3(r43,l0)(cost 0)
      Pushing a1(r42,l0)(cost 0)
      Pushing a6(r45,l0)(cost 0)
      Pushing a4(r46,l0)(cost 0)
      Pushing a2(r48,l0)(cost 0)
      Pushing a0(r49,l0)(cost 0)
      Popping a0(r49,l0)  -- assign reg 8
      Popping a2(r48,l0)  -- assign reg 8
      Popping a4(r46,l0)  -- assign reg 8
      Popping a6(r45,l0)  -- assign reg 8
      Popping a1(r42,l0)  -- assign reg 9
      Popping a3(r43,l0)  -- assign reg 2
      Popping a5(r47,l0)  -- assign reg 9
Disposition:
    1:r42  l0     9    3:r43  l0     2    6:r45  l0     8    4:r46  l0     8
    5:r47  l0     9    2:r48  l0     8    0:r49  l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setLinkCheckMode

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,5u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,5u} r16={1d,5u} r17={1d,4u} r42={2d,1u} r43={1d,1u} r45={1d,1u} r46={1d,1u} r47={1d,1u} r48={1d,1u} r49={1d,1u} 
;;    total ref usage 45{18d,27u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 43 45 46 47
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_DELETED)
(insn 3 2 4 2 (set (reg/v:SI 43 [ enabled ])
        (zero_extend:SI (reg:QI 2 a2 [ enabled ]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2372 34 {zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 2 a2 [ enabled ])
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 29 2 (set (reg:QI 47)
        (const_int 0 [0])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2373 46 {movqi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 29 11 28 2 (set (reg/f:SI 45)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC280") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2373 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 28 29 12 2 (set:SI (reg/f:SI 46)
        (plus:SI (reg/f:SI 45)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2373 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 45)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 12 28 13 2 (set (mem/j/c:QI (plus:SI (reg/f:SI 46)
                (const_int 38 [0x26])) [0 LMIC.adrChanged+0 S1 A16])
        (reg:QI 47)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2373 46 {movqi_internal}
     (expr_list:REG_DEAD (reg:QI 47)
        (expr_list:REG_DEAD (reg/f:SI 46)
            (nil))))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg/v:SI 43 [ enabled ])
                (const_int 0 [0]))
            (label_ref:SI 25)
            (pc))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 56 {*btrue}
     (expr_list:REG_DEAD (reg/v:SI 43 [ enabled ])
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 25)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(1){ }u11(7){ }u12(16){ }u13(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(note 14 13 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 14 26 3 (set (reg:SI 42 [ D.6416 ])
        (const_int 244 [0xf4])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 244 [0xf4])
        (nil)))
(jump_insn 26 5 27 3 (set (pc)
        (label_ref 15)) 78 {jump}
     (nil)
 -> 15)
;;  succ:       5 [100.0%] 
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

(barrier 27 26 25)
;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(1){ }u15(7){ }u16(16){ }u17(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 42
(code_label 25 27 24 4 405 "" [1 uses])
(note 24 25 6 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 6 24 15 4 (set (reg:SI 42 [ D.6416 ])
        (const_int 128 [0x80])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 44 {movsi_internal}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(1){ }u19(7){ }u20(16){ }u21(17){ }}
;; lr  in  	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  use 	 1 [sp] 7 [a7] 16 [fp] 17 [argp] 42
;; lr  def 	 48 49
(code_label 15 6 16 5 404 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 48)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC280") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 18 17 19 5 (set:SI (reg/f:SI 49)
        (plus:SI (reg/f:SI 48)
            (const_int 256 [0x100]))) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 1 {addsi3}
     (expr_list:REG_DEAD (reg/f:SI 48)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
                    (const_int 256 [0x100])))
            (nil))))
(insn 19 18 0 5 (set (mem/j/c:QI (plus:SI (reg/f:SI 49)
                (const_int 37 [0x25])) [0 LMIC.adrAckReq+0 S1 A8])
        (subreg/s/v:QI (reg:SI 42 [ D.6416 ]) 0)) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2374 46 {movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 49)
        (expr_list:REG_DEAD (reg:SI 42 [ D.6416 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]


;; Function LMIC_setClockError (LMIC_setClockError, funcdef_no=115, decl_uid=3372, cgraph_uid=115, symbol_order=123)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 44 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 44: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    r44: preferred AR_REGS, alternative NO_REGS, allocno AR_REGS
    a0 (r44,l0) best AR_REGS, allocno AR_REGS

  a0(r44,l0) costs: ACC_REG:6000,6000 RL_REGS:0,0 AR_REGS:0,0 ALL_REGS:32000,32000 MEM:0,0

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
 a0(r44): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r44): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r44,l0) conflicts:  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r44
    modified regnos: 44
    border:
    Pressure: AR_REGS=2
    Hard reg set forest:
      0:( 2-15 18-34)@0
        1:( 3-15)@0
      Allocno a0r44 of AR_REGS(14) has 13 avail. regs  3-15, node:  3-15 (confl regs =  0-2 16-34)
      Pushing a0(r44,l0)(cost 0)
      Popping a0(r44,l0)  -- assign reg 8
Disposition:
    0:r44  l0     8
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


LMIC_setClockError

Dataflow summary:
;;  invalidated by call 	 0 [a0] 8 [a8] 9 [a9] 10 [a10] 11 [a11] 12 [a12] 13 [a13] 14 [a14] 15 [a15] 18 [b0] 19 [f0] 20 [f1] 21 [f2] 22 [f3] 23 [f4] 24 [f5] 25 [f6] 26 [f7] 27 [f8] 28 [f9] 29 [f10] 30 [f11] 31 [f12] 32 [f13] 33 [f14] 34 [f15] 35 [acc]
;;  hardware regs used 	 1 [sp] 16 [fp] 17 [argp]
;;  regular block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  eh block artificial uses 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]
;;  entry block defs 	 0 [a0] 1 [sp] 2 [a2] 3 [a3] 4 [a4] 5 [a5] 6 [a6] 7 [a7] 16 [fp] 17 [argp]
;;  exit block uses 	 1 [sp] 7 [a7] 16 [fp]
;;  regs ever live 	 2[a2]
;;  ref usage 	r0={1d} r1={1d,2u} r2={1d,1u} r3={1d} r4={1d} r5={1d} r6={1d} r7={1d,2u} r16={1d,2u} r17={1d,1u} r44={1d,1u} 
;;    total ref usage 20{11d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(1){ }u1(7){ }u2(16){ }u3(17){ }}
;; lr  in  	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  use 	 1 [sp] 2 [a2] 7 [a7] 16 [fp] 17 [argp]
;; lr  def 	 44
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 44)
        (mem/u/c:SI (symbol_ref/u:SI ("*.LC281") [flags 0x2]) [0  S4 A32])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2381 44 {movsi_internal}
     (expr_list:REG_EQUIV (symbol_ref:SI ("LMIC")  <var_decl 0x140ed97e0 LMIC>)
        (nil)))
(insn 8 7 0 2 (set (mem/j/c:HI (plus:SI (reg/f:SI 44)
                (const_int 186 [0xba])) [0 LMIC.clockError+0 S2 A16])
        (reg:HI 2 a2 [ error ])) /Users/martinschmidli/esp/projects/atas-node2-lora/components/lmic/./lmic.c:2381 45 {movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 44)
        (expr_list:REG_DEAD (reg:HI 2 a2 [ error ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 1 [sp] 7 [a7] 16 [fp] 17 [argp]

